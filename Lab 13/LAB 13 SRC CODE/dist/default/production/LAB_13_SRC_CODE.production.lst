

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu May 12 19:11:05 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	text113,global,reloc=2,class=CODE,delta=1
   132                           	psect	text114,global,reloc=2,class=CODE,delta=1
   133                           	psect	text115,global,reloc=2,class=CODE,delta=1
   134                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   135                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   142                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   143  0000                     
   144                           	psect	idataCOMRAM
   145  003DA2                     __pidataCOMRAM:
   146                           	opt stack 0
   147                           
   148                           ;initializer for _heater_set_temp
   149  003DA2  4B                 	db	75
   150                           
   151                           ;initializer for _tempSecond
   152  003DA3  FF                 	db	255
   153                           
   154                           	psect	idataBANK0
   155  0031EE                     __pidataBANK0:
   156                           	opt stack 0
   157                           
   158                           ;initializer for _wrap
   159  0031EE  01                 	db	1
   160                           
   161                           ;initializer for _alarm_time
   162  0031EF  30                 	db	48
   163  0031F0  30                 	db	48
   164  0031F1  3A                 	db	58
   165  0031F2  30                 	db	48
   166  0031F3  30                 	db	48
   167  0031F4  3A                 	db	58
   168  0031F5  30                 	db	48
   169  0031F6  30                 	db	48
   170  0031F7  00                 	db	0
   171                           
   172                           ;initializer for _date
   173  0031F8  30                 	db	48
   174  0031F9  30                 	db	48
   175  0031FA  2F                 	db	47
   176  0031FB  30                 	db	48
   177  0031FC  30                 	db	48
   178  0031FD  2F                 	db	47
   179  0031FE  30                 	db	48
   180  0031FF  30                 	db	48
   181  003200  00                 	db	0
   182                           
   183                           ;initializer for _setup_alarm_time
   184  003201  30                 	db	48
   185  003202  30                 	db	48
   186  003203  3A                 	db	58
   187  003204  30                 	db	48
   188  003205  30                 	db	48
   189  003206  3A                 	db	58
   190  003207  30                 	db	48
   191  003208  30                 	db	48
   192  003209  00                 	db	0
   193                           
   194                           ;initializer for _setup_date
   195  00320A  30                 	db	48
   196  00320B  31                 	db	49
   197  00320C  2F                 	db	47
   198  00320D  30                 	db	48
   199  00320E  31                 	db	49
   200  00320F  2F                 	db	47
   201  003210  30                 	db	48
   202  003211  30                 	db	48
   203  003212  00                 	db	0
   204                           
   205                           ;initializer for _setup_time
   206  003213  30                 	db	48
   207  003214  30                 	db	48
   208  003215  3A                 	db	58
   209  003216  30                 	db	48
   210  003217  30                 	db	48
   211  003218  3A                 	db	58
   212  003219  30                 	db	48
   213  00321A  30                 	db	48
   214  00321B  00                 	db	0
   215                           
   216                           ;initializer for _time
   217  00321C  30                 	db	48
   218  00321D  30                 	db	48
   219  00321E  3A                 	db	58
   220  00321F  30                 	db	48
   221  003220  30                 	db	48
   222  003221  3A                 	db	58
   223  003222  30                 	db	48
   224  003223  30                 	db	48
   225  003224  00                 	db	0
   226                           
   227                           ;initializer for _Volt_Txt
   228  003225  30                 	db	48
   229  003226  2E                 	db	46
   230  003227  30                 	db	48
   231  003228  30                 	db	48
   232  003229  56                 	db	86
   233  00322A  00                 	db	0
   234                           
   235                           ;initializer for _Heater_Set_Temp_Txt
   236  00322B  30                 	db	48
   237  00322C  37                 	db	55
   238  00322D  35                 	db	53
   239  00322E  46                 	db	70
   240  00322F  00                 	db	0
   241                           
   242                           ;initializer for _RPM_Txt
   243  003230  30                 	db	48
   244  003231  30                 	db	48
   245  003232  30                 	db	48
   246  003233  30                 	db	48
   247  003234  00                 	db	0
   248                           
   249                           ;initializer for _setup_heater_set_text
   250  003235  30                 	db	48
   251  003236  37                 	db	55
   252  003237  35                 	db	53
   253  003238  46                 	db	70
   254  003239  00                 	db	0
   255                           
   256                           ;initializer for _Alarm_SW_Txt
   257  00323A  4F                 	db	79
   258  00323B  46                 	db	70
   259  00323C  46                 	db	70
   260  00323D  00                 	db	0
   261                           
   262                           ;initializer for _DC_Txt
   263  00323E  30                 	db	48
   264  00323F  30                 	db	48
   265  003240  30                 	db	48
   266  003241  00                 	db	0
   267                           
   268                           ;initializer for _Heater_SW_Txt
   269  003242  4F                 	db	79
   270  003243  46                 	db	70
   271  003244  46                 	db	70
   272  003245  00                 	db	0
   273                           
   274                           ;initializer for _tempC
   275  003246  2B                 	db	43
   276  003247  32                 	db	50
   277  003248  35                 	db	53
   278  003249  00                 	db	0
   279                           
   280                           ;initializer for _tempF
   281  00324A  2B                 	db	43
   282  00324B  37                 	db	55
   283  00324C  37                 	db	55
   284  00324D  00                 	db	0
   285                           
   286                           ;initializer for _RTC_ALARM_Txt
   287  00324E  30                 	db	48
   288  00324F  00                 	db	0
   289                           
   290                           	psect	idataBANK1
   291  0033B0                     __pidataBANK1:
   292                           	opt stack 0
   293                           
   294                           ;initializer for _buffer
   295  0033B0  20                 	db	32
   296  0033B1  45                 	db	69
   297  0033B2  43                 	db	67
   298  0033B3  45                 	db	69
   299  0033B4  33                 	db	51
   300  0033B5  33                 	db	51
   301  0033B6  30                 	db	48
   302  0033B7  31                 	db	49
   303  0033B8  4C                 	db	76
   304  0033B9  20                 	db	32
   305  0033BA  53                 	db	83
   306  0033BB  70                 	db	112
   307  0033BC  27                 	db	39
   308  0033BD  32                 	db	50
   309  0033BE  32                 	db	50
   310  0033BF  20                 	db	32
   311  0033C0  53                 	db	83
   312  0033C1  33                 	db	51
   313  0033C2  20                 	db	32
   314  0033C3  00                 	db	0
   315  0033C4  00                 	db	0
   316  0033C5  00                 	db	0
   317  0033C6  00                 	db	0
   318  0033C7  00                 	db	0
   319  0033C8  00                 	db	0
   320  0033C9  00                 	db	0
   321  0033CA  00                 	db	0
   322  0033CB  00                 	db	0
   323  0033CC  00                 	db	0
   324  0033CD  00                 	db	0
   325  0033CE  00                 	db	0
   326                           
   327                           ;initializer for _array1
   328  0033CF  A2                 	db	162
   329  0033D0  62                 	db	98
   330  0033D1  E2                 	db	226
   331  0033D2  22                 	db	34
   332  0033D3  02                 	db	2
   333  0033D4  C2                 	db	194
   334  0033D5  E0                 	db	224
   335  0033D6  A8                 	db	168
   336  0033D7  90                 	db	144
   337  0033D8  68                 	db	104
   338  0033D9  98                 	db	152
   339  0033DA  B0                 	db	176
   340  0033DB  30                 	db	48
   341  0033DC  18                 	db	24
   342  0033DD  7A                 	db	122
   343  0033DE  10                 	db	16
   344  0033DF  38                 	db	56
   345  0033E0  5A                 	db	90
   346  0033E1  42                 	db	66
   347  0033E2  4A                 	db	74
   348  0033E3  52                 	db	82
   349                           
   350                           ;initializer for Set_RGB_Color@F4248
   351  0033E4  0000               	dw	0
   352  0033E6  0001               	dw	1
   353  0033E8  0002               	dw	2
   354  0033EA  0003               	dw	3
   355  0033EC  0004               	dw	4
   356  0033EE  0005               	dw	5
   357  0033F0  0006               	dw	6
   358  0033F2  0007               	dw	7
   359                           
   360                           ;initializer for _D1
   361  0033F4  00                 	db	0
   362  0033F5  01                 	db	1
   363  0033F6  02                 	db	2
   364  0033F7  03                 	db	3
   365  0033F8  04                 	db	4
   366  0033F9  05                 	db	5
   367  0033FA  06                 	db	6
   368  0033FB  07                 	db	7
   369                           
   370                           ;initializer for _D2
   371  0033FC  01                 	db	1
   372  0033FD  03                 	db	3
   373  0033FE  02                 	db	2
   374  0033FF  04                 	db	4
   375  003400  05                 	db	5
   376  003401  06                 	db	6
   377  003402  07                 	db	7
   378                           
   379                           	psect	mediumconst
   380  00FCC4                     __pmediumconst:
   381                           	opt stack 0
   382  00FCC4  00                 	db	0
   383  00FCC5                     _font:
   384                           	opt stack 0
   385  00FCC5  00                 	db	0
   386  00FCC6  00                 	db	0
   387  00FCC7  00                 	db	0
   388  00FCC8  00                 	db	0
   389  00FCC9  00                 	db	0
   390  00FCCA  00                 	db	0
   391  00FCCB  00                 	db	0
   392  00FCCC  5F                 	db	95
   393  00FCCD  00                 	db	0
   394  00FCCE  00                 	db	0
   395  00FCCF  00                 	db	0
   396  00FCD0  07                 	db	7
   397  00FCD1  00                 	db	0
   398  00FCD2  07                 	db	7
   399  00FCD3  00                 	db	0
   400  00FCD4  14                 	db	20
   401  00FCD5  7F                 	db	127
   402  00FCD6  14                 	db	20
   403  00FCD7  7F                 	db	127
   404  00FCD8  14                 	db	20
   405  00FCD9  24                 	db	36
   406  00FCDA  2A                 	db	42
   407  00FCDB  7F                 	db	127
   408  00FCDC  2A                 	db	42
   409  00FCDD  12                 	db	18
   410  00FCDE  23                 	db	35
   411  00FCDF  13                 	db	19
   412  00FCE0  08                 	db	8
   413  00FCE1  64                 	db	100
   414  00FCE2  62                 	db	98
   415  00FCE3  36                 	db	54
   416  00FCE4  49                 	db	73
   417  00FCE5  56                 	db	86
   418  00FCE6  20                 	db	32
   419  00FCE7  50                 	db	80
   420  00FCE8  00                 	db	0
   421  00FCE9  08                 	db	8
   422  00FCEA  07                 	db	7
   423  00FCEB  03                 	db	3
   424  00FCEC  00                 	db	0
   425  00FCED  00                 	db	0
   426  00FCEE  1C                 	db	28
   427  00FCEF  22                 	db	34
   428  00FCF0  41                 	db	65
   429  00FCF1  00                 	db	0
   430  00FCF2  00                 	db	0
   431  00FCF3  41                 	db	65
   432  00FCF4  22                 	db	34
   433  00FCF5  1C                 	db	28
   434  00FCF6  00                 	db	0
   435  00FCF7  2A                 	db	42
   436  00FCF8  1C                 	db	28
   437  00FCF9  7F                 	db	127
   438  00FCFA  1C                 	db	28
   439  00FCFB  2A                 	db	42
   440  00FCFC  08                 	db	8
   441  00FCFD  08                 	db	8
   442  00FCFE  3E                 	db	62
   443  00FCFF  08                 	db	8
   444  00FD00  08                 	db	8
   445  00FD01  00                 	db	0
   446  00FD02  80                 	db	128
   447  00FD03  70                 	db	112
   448  00FD04  30                 	db	48
   449  00FD05  00                 	db	0
   450  00FD06  08                 	db	8
   451  00FD07  08                 	db	8
   452  00FD08  08                 	db	8
   453  00FD09  08                 	db	8
   454  00FD0A  08                 	db	8
   455  00FD0B  00                 	db	0
   456  00FD0C  00                 	db	0
   457  00FD0D  60                 	db	96
   458  00FD0E  60                 	db	96
   459  00FD0F  00                 	db	0
   460  00FD10  20                 	db	32
   461  00FD11  10                 	db	16
   462  00FD12  08                 	db	8
   463  00FD13  04                 	db	4
   464  00FD14  02                 	db	2
   465  00FD15  3E                 	db	62
   466  00FD16  51                 	db	81
   467  00FD17  49                 	db	73
   468  00FD18  45                 	db	69
   469  00FD19  3E                 	db	62
   470  00FD1A  00                 	db	0
   471  00FD1B  42                 	db	66
   472  00FD1C  7F                 	db	127
   473  00FD1D  40                 	db	64
   474  00FD1E  00                 	db	0
   475  00FD1F  72                 	db	114
   476  00FD20  49                 	db	73
   477  00FD21  49                 	db	73
   478  00FD22  49                 	db	73
   479  00FD23  46                 	db	70
   480  00FD24  21                 	db	33
   481  00FD25  41                 	db	65
   482  00FD26  49                 	db	73
   483  00FD27  4D                 	db	77
   484  00FD28  33                 	db	51
   485  00FD29  18                 	db	24
   486  00FD2A  14                 	db	20
   487  00FD2B  12                 	db	18
   488  00FD2C  7F                 	db	127
   489  00FD2D  10                 	db	16
   490  00FD2E  27                 	db	39
   491  00FD2F  45                 	db	69
   492  00FD30  45                 	db	69
   493  00FD31  45                 	db	69
   494  00FD32  39                 	db	57
   495  00FD33  3C                 	db	60
   496  00FD34  4A                 	db	74
   497  00FD35  49                 	db	73
   498  00FD36  49                 	db	73
   499  00FD37  31                 	db	49
   500  00FD38  41                 	db	65
   501  00FD39  21                 	db	33
   502  00FD3A  11                 	db	17
   503  00FD3B  09                 	db	9
   504  00FD3C  07                 	db	7
   505  00FD3D  36                 	db	54
   506  00FD3E  49                 	db	73
   507  00FD3F  49                 	db	73
   508  00FD40  49                 	db	73
   509  00FD41  36                 	db	54
   510  00FD42  46                 	db	70
   511  00FD43  49                 	db	73
   512  00FD44  49                 	db	73
   513  00FD45  29                 	db	41
   514  00FD46  1E                 	db	30
   515  00FD47  00                 	db	0
   516  00FD48  00                 	db	0
   517  00FD49  14                 	db	20
   518  00FD4A  00                 	db	0
   519  00FD4B  00                 	db	0
   520  00FD4C  00                 	db	0
   521  00FD4D  40                 	db	64
   522  00FD4E  34                 	db	52
   523  00FD4F  00                 	db	0
   524  00FD50  00                 	db	0
   525  00FD51  00                 	db	0
   526  00FD52  08                 	db	8
   527  00FD53  14                 	db	20
   528  00FD54  22                 	db	34
   529  00FD55  41                 	db	65
   530  00FD56  14                 	db	20
   531  00FD57  14                 	db	20
   532  00FD58  14                 	db	20
   533  00FD59  14                 	db	20
   534  00FD5A  14                 	db	20
   535  00FD5B  00                 	db	0
   536  00FD5C  41                 	db	65
   537  00FD5D  22                 	db	34
   538  00FD5E  14                 	db	20
   539  00FD5F  08                 	db	8
   540  00FD60  02                 	db	2
   541  00FD61  01                 	db	1
   542  00FD62  59                 	db	89
   543  00FD63  09                 	db	9
   544  00FD64  06                 	db	6
   545  00FD65  3E                 	db	62
   546  00FD66  41                 	db	65
   547  00FD67  5D                 	db	93
   548  00FD68  59                 	db	89
   549  00FD69  4E                 	db	78
   550  00FD6A  7C                 	db	124
   551  00FD6B  12                 	db	18
   552  00FD6C  11                 	db	17
   553  00FD6D  12                 	db	18
   554  00FD6E  7C                 	db	124
   555  00FD6F  7F                 	db	127
   556  00FD70  49                 	db	73
   557  00FD71  49                 	db	73
   558  00FD72  49                 	db	73
   559  00FD73  36                 	db	54
   560  00FD74  3E                 	db	62
   561  00FD75  41                 	db	65
   562  00FD76  41                 	db	65
   563  00FD77  41                 	db	65
   564  00FD78  22                 	db	34
   565  00FD79  7F                 	db	127
   566  00FD7A  41                 	db	65
   567  00FD7B  41                 	db	65
   568  00FD7C  41                 	db	65
   569  00FD7D  3E                 	db	62
   570  00FD7E  7F                 	db	127
   571  00FD7F  49                 	db	73
   572  00FD80  49                 	db	73
   573  00FD81  49                 	db	73
   574  00FD82  41                 	db	65
   575  00FD83  7F                 	db	127
   576  00FD84  09                 	db	9
   577  00FD85  09                 	db	9
   578  00FD86  09                 	db	9
   579  00FD87  01                 	db	1
   580  00FD88  3E                 	db	62
   581  00FD89  41                 	db	65
   582  00FD8A  41                 	db	65
   583  00FD8B  51                 	db	81
   584  00FD8C  73                 	db	115
   585  00FD8D  7F                 	db	127
   586  00FD8E  08                 	db	8
   587  00FD8F  08                 	db	8
   588  00FD90  08                 	db	8
   589  00FD91  7F                 	db	127
   590  00FD92  00                 	db	0
   591  00FD93  41                 	db	65
   592  00FD94  7F                 	db	127
   593  00FD95  41                 	db	65
   594  00FD96  00                 	db	0
   595  00FD97  20                 	db	32
   596  00FD98  40                 	db	64
   597  00FD99  41                 	db	65
   598  00FD9A  3F                 	db	63
   599  00FD9B  01                 	db	1
   600  00FD9C  7F                 	db	127
   601  00FD9D  08                 	db	8
   602  00FD9E  14                 	db	20
   603  00FD9F  22                 	db	34
   604  00FDA0  41                 	db	65
   605  00FDA1  7F                 	db	127
   606  00FDA2  40                 	db	64
   607  00FDA3  40                 	db	64
   608  00FDA4  40                 	db	64
   609  00FDA5  40                 	db	64
   610  00FDA6  7F                 	db	127
   611  00FDA7  02                 	db	2
   612  00FDA8  1C                 	db	28
   613  00FDA9  02                 	db	2
   614  00FDAA  7F                 	db	127
   615  00FDAB  7F                 	db	127
   616  00FDAC  04                 	db	4
   617  00FDAD  08                 	db	8
   618  00FDAE  10                 	db	16
   619  00FDAF  7F                 	db	127
   620  00FDB0  3E                 	db	62
   621  00FDB1  41                 	db	65
   622  00FDB2  41                 	db	65
   623  00FDB3  41                 	db	65
   624  00FDB4  3E                 	db	62
   625  00FDB5  7F                 	db	127
   626  00FDB6  09                 	db	9
   627  00FDB7  09                 	db	9
   628  00FDB8  09                 	db	9
   629  00FDB9  06                 	db	6
   630  00FDBA  3E                 	db	62
   631  00FDBB  41                 	db	65
   632  00FDBC  51                 	db	81
   633  00FDBD  21                 	db	33
   634  00FDBE  5E                 	db	94
   635  00FDBF  7F                 	db	127
   636  00FDC0  09                 	db	9
   637  00FDC1  19                 	db	25
   638  00FDC2  29                 	db	41
   639  00FDC3  46                 	db	70
   640  00FDC4                     __end_of_font:
   641                           	opt stack 0
   642  00FDC4                     _font2:
   643                           	opt stack 0
   644  00FDC4  26                 	db	38
   645  00FDC5  49                 	db	73
   646  00FDC6  49                 	db	73
   647  00FDC7  49                 	db	73
   648  00FDC8  32                 	db	50
   649  00FDC9  03                 	db	3
   650  00FDCA  01                 	db	1
   651  00FDCB  7F                 	db	127
   652  00FDCC  01                 	db	1
   653  00FDCD  03                 	db	3
   654  00FDCE  3F                 	db	63
   655  00FDCF  40                 	db	64
   656  00FDD0  40                 	db	64
   657  00FDD1  40                 	db	64
   658  00FDD2  3F                 	db	63
   659  00FDD3  1F                 	db	31
   660  00FDD4  20                 	db	32
   661  00FDD5  40                 	db	64
   662  00FDD6  20                 	db	32
   663  00FDD7  1F                 	db	31
   664  00FDD8  3F                 	db	63
   665  00FDD9  40                 	db	64
   666  00FDDA  38                 	db	56
   667  00FDDB  40                 	db	64
   668  00FDDC  3F                 	db	63
   669  00FDDD  63                 	db	99
   670  00FDDE  14                 	db	20
   671  00FDDF  08                 	db	8
   672  00FDE0  14                 	db	20
   673  00FDE1  63                 	db	99
   674  00FDE2  03                 	db	3
   675  00FDE3  04                 	db	4
   676  00FDE4  78                 	db	120
   677  00FDE5  04                 	db	4
   678  00FDE6  03                 	db	3
   679  00FDE7  61                 	db	97
   680  00FDE8  59                 	db	89
   681  00FDE9  49                 	db	73
   682  00FDEA  4D                 	db	77
   683  00FDEB  43                 	db	67
   684  00FDEC  00                 	db	0
   685  00FDED  7F                 	db	127
   686  00FDEE  41                 	db	65
   687  00FDEF  41                 	db	65
   688  00FDF0  41                 	db	65
   689  00FDF1  02                 	db	2
   690  00FDF2  04                 	db	4
   691  00FDF3  08                 	db	8
   692  00FDF4  10                 	db	16
   693  00FDF5  20                 	db	32
   694  00FDF6  00                 	db	0
   695  00FDF7  41                 	db	65
   696  00FDF8  41                 	db	65
   697  00FDF9  41                 	db	65
   698  00FDFA  7F                 	db	127
   699  00FDFB  04                 	db	4
   700  00FDFC  02                 	db	2
   701  00FDFD  01                 	db	1
   702  00FDFE  02                 	db	2
   703  00FDFF  04                 	db	4
   704  00FE00  40                 	db	64
   705  00FE01  40                 	db	64
   706  00FE02  40                 	db	64
   707  00FE03  40                 	db	64
   708  00FE04  40                 	db	64
   709  00FE05  00                 	db	0
   710  00FE06  03                 	db	3
   711  00FE07  07                 	db	7
   712  00FE08  08                 	db	8
   713  00FE09  00                 	db	0
   714  00FE0A  20                 	db	32
   715  00FE0B  54                 	db	84
   716  00FE0C  54                 	db	84
   717  00FE0D  78                 	db	120
   718  00FE0E  40                 	db	64
   719  00FE0F  7F                 	db	127
   720  00FE10  28                 	db	40
   721  00FE11  44                 	db	68
   722  00FE12  44                 	db	68
   723  00FE13  38                 	db	56
   724  00FE14  38                 	db	56
   725  00FE15  44                 	db	68
   726  00FE16  44                 	db	68
   727  00FE17  44                 	db	68
   728  00FE18  28                 	db	40
   729  00FE19  38                 	db	56
   730  00FE1A  44                 	db	68
   731  00FE1B  44                 	db	68
   732  00FE1C  28                 	db	40
   733  00FE1D  7F                 	db	127
   734  00FE1E  38                 	db	56
   735  00FE1F  54                 	db	84
   736  00FE20  54                 	db	84
   737  00FE21  54                 	db	84
   738  00FE22  18                 	db	24
   739  00FE23  00                 	db	0
   740  00FE24  08                 	db	8
   741  00FE25  7E                 	db	126
   742  00FE26  09                 	db	9
   743  00FE27  02                 	db	2
   744  00FE28  18                 	db	24
   745  00FE29  A4                 	db	164
   746  00FE2A  A4                 	db	164
   747  00FE2B  9C                 	db	156
   748  00FE2C  78                 	db	120
   749  00FE2D  7F                 	db	127
   750  00FE2E  08                 	db	8
   751  00FE2F  04                 	db	4
   752  00FE30  04                 	db	4
   753  00FE31  78                 	db	120
   754  00FE32  00                 	db	0
   755  00FE33  44                 	db	68
   756  00FE34  7D                 	db	125
   757  00FE35  40                 	db	64
   758  00FE36  00                 	db	0
   759  00FE37  20                 	db	32
   760  00FE38  40                 	db	64
   761  00FE39  40                 	db	64
   762  00FE3A  3D                 	db	61
   763  00FE3B  00                 	db	0
   764  00FE3C  7F                 	db	127
   765  00FE3D  10                 	db	16
   766  00FE3E  28                 	db	40
   767  00FE3F  44                 	db	68
   768  00FE40  00                 	db	0
   769  00FE41  00                 	db	0
   770  00FE42  41                 	db	65
   771  00FE43  7F                 	db	127
   772  00FE44  40                 	db	64
   773  00FE45  00                 	db	0
   774  00FE46  7C                 	db	124
   775  00FE47  04                 	db	4
   776  00FE48  78                 	db	120
   777  00FE49  04                 	db	4
   778  00FE4A  78                 	db	120
   779  00FE4B  7C                 	db	124
   780  00FE4C  08                 	db	8
   781  00FE4D  04                 	db	4
   782  00FE4E  04                 	db	4
   783  00FE4F  78                 	db	120
   784  00FE50  38                 	db	56
   785  00FE51  44                 	db	68
   786  00FE52  44                 	db	68
   787  00FE53  44                 	db	68
   788  00FE54  38                 	db	56
   789  00FE55  FC                 	db	252
   790  00FE56  18                 	db	24
   791  00FE57  24                 	db	36
   792  00FE58  24                 	db	36
   793  00FE59  18                 	db	24
   794  00FE5A  18                 	db	24
   795  00FE5B  24                 	db	36
   796  00FE5C  24                 	db	36
   797  00FE5D  18                 	db	24
   798  00FE5E  FC                 	db	252
   799  00FE5F  7C                 	db	124
   800  00FE60  08                 	db	8
   801  00FE61  04                 	db	4
   802  00FE62  04                 	db	4
   803  00FE63  08                 	db	8
   804  00FE64  48                 	db	72
   805  00FE65  54                 	db	84
   806  00FE66  54                 	db	84
   807  00FE67  54                 	db	84
   808  00FE68  24                 	db	36
   809  00FE69  04                 	db	4
   810  00FE6A  04                 	db	4
   811  00FE6B  3F                 	db	63
   812  00FE6C  44                 	db	68
   813  00FE6D  24                 	db	36
   814  00FE6E  3C                 	db	60
   815  00FE6F  40                 	db	64
   816  00FE70  40                 	db	64
   817  00FE71  20                 	db	32
   818  00FE72  7C                 	db	124
   819  00FE73  1C                 	db	28
   820  00FE74  20                 	db	32
   821  00FE75  40                 	db	64
   822  00FE76  20                 	db	32
   823  00FE77  1C                 	db	28
   824  00FE78  3C                 	db	60
   825  00FE79  40                 	db	64
   826  00FE7A  30                 	db	48
   827  00FE7B  40                 	db	64
   828  00FE7C  3C                 	db	60
   829  00FE7D  44                 	db	68
   830  00FE7E  28                 	db	40
   831  00FE7F  10                 	db	16
   832  00FE80  28                 	db	40
   833  00FE81  44                 	db	68
   834  00FE82  4C                 	db	76
   835  00FE83  90                 	db	144
   836  00FE84  90                 	db	144
   837  00FE85  90                 	db	144
   838  00FE86  7C                 	db	124
   839  00FE87  44                 	db	68
   840  00FE88  64                 	db	100
   841  00FE89  54                 	db	84
   842  00FE8A  4C                 	db	76
   843  00FE8B  44                 	db	68
   844  00FE8C  00                 	db	0
   845  00FE8D  08                 	db	8
   846  00FE8E  36                 	db	54
   847  00FE8F  41                 	db	65
   848  00FE90  00                 	db	0
   849  00FE91  00                 	db	0
   850  00FE92  00                 	db	0
   851  00FE93  77                 	db	119
   852  00FE94  00                 	db	0
   853  00FE95  00                 	db	0
   854  00FE96  00                 	db	0
   855  00FE97  41                 	db	65
   856  00FE98  36                 	db	54
   857  00FE99  08                 	db	8
   858  00FE9A  00                 	db	0
   859  00FE9B  02                 	db	2
   860  00FE9C  01                 	db	1
   861  00FE9D  02                 	db	2
   862  00FE9E  04                 	db	4
   863  00FE9F  02                 	db	2
   864  00FEA0                     __end_of_font2:
   865                           	opt stack 0
   866  00FEA0                     _dpowers:
   867                           	opt stack 0
   868  00FEA0  0001               	dw	1
   869  00FEA2  000A               	dw	10
   870  00FEA4  0064               	dw	100
   871  00FEA6  03E8               	dw	1000
   872  00FEA8  2710               	dw	10000
   873  00FEAA                     __end_of_dpowers:
   874                           	opt stack 0
   875  00FEAA                     _hexpowers:
   876                           	opt stack 0
   877  00FEAA  0001               	dw	1
   878  00FEAC  0010               	dw	16
   879  00FEAE  0100               	dw	256
   880  00FEB0  1000               	dw	4096
   881  00FEB2                     __end_of_hexpowers:
   882                           	opt stack 0
   883  0000                     _ADCON0	set	4034
   884  0000                     _ADCON0bits	set	4034
   885  0000                     _ADCON1	set	4033
   886  0000                     _ADCON2	set	4032
   887  0000                     _ADRESH	set	4036
   888  0000                     _ADRESL	set	4035
   889  0000                     _CCP1CON	set	4029
   890  0000                     _CCP2CON	set	4026
   891  0000                     _CCPR1L	set	4030
   892  0000                     _CCPR2L	set	4027
   893  0000                     _INTCON2bits	set	4081
   894  0000                     _INTCON3bits	set	4080
   895  0000                     _INTCONbits	set	4082
   896  0000                     _OSCCON	set	4051
   897  0000                     _PIE1bits	set	3997
   898  0000                     _PIR1bits	set	3998
   899  0000                     _PORTA	set	3968
   900  0000                     _PORTAbits	set	3968
   901  0000                     _PORTBbits	set	3969
   902  0000                     _PORTD	set	3971
   903  0000                     _PORTDbits	set	3971
   904  0000                     _PORTE	set	3972
   905  0000                     _PR2	set	4043
   906  0000                     _RCSTA	set	4011
   907  0000                     _RCSTAbits	set	4011
   908  0000                     _SPBRG	set	4015
   909  0000                     _SPBRGH	set	4016
   910  0000                     _SSPBUF	set	4041
   911  0000                     _SSPCON1	set	4038
   912  0000                     _SSPSTAT	set	4039
   913  0000                     _SSPSTATbits	set	4039
   914  0000                     _T0CON	set	4053
   915  0000                     _T0CONbits	set	4053
   916  0000                     _T1CON	set	4045
   917  0000                     _T1CONbits	set	4045
   918  0000                     _T2CON	set	4042
   919  0000                     _T3CON	set	4017
   920  0000                     _TMR0H	set	4055
   921  0000                     _TMR0L	set	4054
   922  0000                     _TMR1H	set	4047
   923  0000                     _TMR1L	set	4046
   924  0000                     _TMR3L	set	4018
   925  0000                     _TRISA	set	3986
   926  0000                     _TRISB	set	3987
   927  0000                     _TRISBbits	set	3987
   928  0000                     _TRISC	set	3988
   929  0000                     _TRISCbits	set	3988
   930  0000                     _TRISD	set	3989
   931  0000                     _TRISDbits	set	3989
   932  0000                     _TRISE	set	3990
   933  0000                     _TXREG	set	4013
   934  0000                     _TXSTA	set	4012
   935  0000                     _TXSTAbits	set	4012
   936  0000                     _RBPU	set	32655
   937  0000                     _TRMT	set	32097
   938  00FEB2                     STR_1:
   939  00FEB2  25                 	db	37
   940  00FEB3  30                 	db	48	;'0'
   941  00FEB4  32                 	db	50	;'2'
   942  00FEB5  78                 	db	120	;'x'
   943  00FEB6  3A                 	db	58	;':'
   944  00FEB7  25                 	db	37
   945  00FEB8  30                 	db	48	;'0'
   946  00FEB9  32                 	db	50	;'2'
   947  00FEBA  78                 	db	120	;'x'
   948  00FEBB  3A                 	db	58	;':'
   949  00FEBC  25                 	db	37
   950  00FEBD  30                 	db	48	;'0'
   951  00FEBE  32                 	db	50	;'2'
   952  00FEBF  78                 	db	120	;'x'
   953  00FEC0  20                 	db	32
   954  00FEC1  25                 	db	37
   955  00FEC2  30                 	db	48	;'0'
   956  00FEC3  32                 	db	50	;'2'
   957  00FEC4  78                 	db	120	;'x'
   958  00FEC5  2F                 	db	47
   959  00FEC6  25                 	db	37
   960  00FEC7  30                 	db	48	;'0'
   961  00FEC8  32                 	db	50	;'2'
   962  00FEC9  78                 	db	120	;'x'
   963  00FECA  2F                 	db	47
   964  00FECB  25                 	db	37
   965  00FECC  30                 	db	48	;'0'
   966  00FECD  32                 	db	50	;'2'
   967  00FECE  78                 	db	120	;'x'
   968  00FECF  00                 	db	0
   969  00FED0                     STR_3:
   970  00FED0  61                 	db	97	;'a'
   971  00FED1  6C                 	db	108	;'l'
   972  00FED2  61                 	db	97	;'a'
   973  00FED3  72                 	db	114	;'r'
   974  00FED4  6D                 	db	109	;'m'
   975  00FED5  20                 	db	32
   976  00FED6  3D                 	db	61	;'='
   977  00FED7  20                 	db	32
   978  00FED8  25                 	db	37
   979  00FED9  64                 	db	100	;'d'
   980  00FEDA  20                 	db	32
   981  00FEDB  48                 	db	72	;'H'
   982  00FEDC  65                 	db	101	;'e'
   983  00FEDD  61                 	db	97	;'a'
   984  00FEDE  74                 	db	116	;'t'
   985  00FEDF  65                 	db	101	;'e'
   986  00FEE0  72                 	db	114	;'r'
   987  00FEE1  20                 	db	32
   988  00FEE2  3D                 	db	61	;'='
   989  00FEE3  20                 	db	32
   990  00FEE4  25                 	db	37
   991  00FEE5  64                 	db	100	;'d'
   992  00FEE6  20                 	db	32
   993  00FEE7  00                 	db	0
   994  00FEE8                     STR_36:
   995  00FEE8  43                 	db	67	;'C'
   996  00FEE9  61                 	db	97	;'a'
   997  00FEEA  6E                 	db	110	;'n'
   998  00FEEB  6E                 	db	110	;'n'
   999  00FEEC  6F                 	db	111	;'o'
  1000  00FEED  74                 	db	116	;'t'
  1001  00FEEE  20                 	db	32
  1002  00FEEF  66                 	db	102	;'f'
  1003  00FEF0  69                 	db	105	;'i'
  1004  00FEF1  6E                 	db	110	;'n'
  1005  00FEF2  64                 	db	100	;'d'
  1006  00FEF3  20                 	db	32
  1007  00FEF4  62                 	db	98	;'b'
  1008  00FEF5  75                 	db	117	;'u'
  1009  00FEF6  74                 	db	116	;'t'
  1010  00FEF7  74                 	db	116	;'t'
  1011  00FEF8  6F                 	db	111	;'o'
  1012  00FEF9  6E                 	db	110	;'n'
  1013  00FEFA  20                 	db	32
  1014  00FEFB  0D                 	db	13
  1015  00FEFC  0A                 	db	10
  1016  00FEFD  00                 	db	0
  1017  00FEFE                     STR_2:
  1018  00FEFE  20                 	db	32
  1019  00FEFF  54                 	db	84	;'T'
  1020  00FF00  65                 	db	101	;'e'
  1021  00FF01  6D                 	db	109	;'m'
  1022  00FF02  70                 	db	112	;'p'
  1023  00FF03  20                 	db	32
  1024  00FF04  3D                 	db	61	;'='
  1025  00FF05  20                 	db	32
  1026  00FF06  25                 	db	37
  1027  00FF07  64                 	db	100	;'d'
  1028  00FF08  20                 	db	32
  1029  00FF09  43                 	db	67	;'C'
  1030  00FF0A  20                 	db	32
  1031  00FF0B  3D                 	db	61	;'='
  1032  00FF0C  20                 	db	32
  1033  00FF0D  25                 	db	37
  1034  00FF0E  64                 	db	100	;'d'
  1035  00FF0F  20                 	db	32
  1036  00FF10  46                 	db	70	;'F'
  1037  00FF11  20                 	db	32
  1038  00FF12  00                 	db	0
  1039  00FF13                     STR_5:
  1040  00FF13  20                 	db	32
  1041  00FF14  45                 	db	69	;'E'
  1042  00FF15  43                 	db	67	;'C'
  1043  00FF16  45                 	db	69	;'E'
  1044  00FF17  33                 	db	51	;'3'
  1045  00FF18  33                 	db	51	;'3'
  1046  00FF19  30                 	db	48	;'0'
  1047  00FF1A  31                 	db	49	;'1'
  1048  00FF1B  4C                 	db	76	;'L'
  1049  00FF1C  20                 	db	32
  1050  00FF1D  53                 	db	83	;'S'
  1051  00FF1E  70                 	db	112	;'p'
  1052  00FF1F  27                 	db	39
  1053  00FF20  32                 	db	50	;'2'
  1054  00FF21  32                 	db	50	;'2'
  1055  00FF22  20                 	db	32
  1056  00FF23  53                 	db	83	;'S'
  1057  00FF24  33                 	db	51	;'3'
  1058  00FF25  00                 	db	0
  1059  00FF26  00                 	db	0
  1060  00FF27                     STR_4:
  1061  00FF27  52                 	db	82	;'R'
  1062  00FF28  50                 	db	80	;'P'
  1063  00FF29  4D                 	db	77	;'M'
  1064  00FF2A  20                 	db	32
  1065  00FF2B  3D                 	db	61	;'='
  1066  00FF2C  20                 	db	32
  1067  00FF2D  25                 	db	37
  1068  00FF2E  64                 	db	100	;'d'
  1069  00FF2F  20                 	db	32
  1070  00FF30  20                 	db	32
  1071  00FF31  64                 	db	100	;'d'
  1072  00FF32  63                 	db	99	;'c'
  1073  00FF33  20                 	db	32
  1074  00FF34  3D                 	db	61	;'='
  1075  00FF35  20                 	db	32
  1076  00FF36  25                 	db	37
  1077  00FF37  64                 	db	100	;'d'
  1078  00FF38  0D                 	db	13
  1079  00FF39  0A                 	db	10
  1080  00FF3A  00                 	db	0
  1081  00FF3B                     STR_23:
  1082  00FF3B  45                 	db	69	;'E'
  1083  00FF3C  43                 	db	67	;'C'
  1084  00FF3D  45                 	db	69	;'E'
  1085  00FF3E  33                 	db	51	;'3'
  1086  00FF3F  33                 	db	51	;'3'
  1087  00FF40  30                 	db	48	;'0'
  1088  00FF41  31                 	db	49	;'1'
  1089  00FF42  4C                 	db	76	;'L'
  1090  00FF43  20                 	db	32
  1091  00FF44  53                 	db	83	;'S'
  1092  00FF45  70                 	db	112	;'p'
  1093  00FF46  27                 	db	39
  1094  00FF47  32                 	db	50	;'2'
  1095  00FF48  32                 	db	50	;'2'
  1096  00FF49  20                 	db	32
  1097  00FF4A  53                 	db	83	;'S'
  1098  00FF4B  33                 	db	51	;'3'
  1099  00FF4C  00                 	db	0
  1100  00FF4D                     STR_37:
  1101  00FF4D  30                 	db	48	;'0'
  1102  00FF4E  31                 	db	49	;'1'
  1103  00FF4F  32                 	db	50	;'2'
  1104  00FF50  33                 	db	51	;'3'
  1105  00FF51  34                 	db	52	;'4'
  1106  00FF52  35                 	db	53	;'5'
  1107  00FF53  36                 	db	54	;'6'
  1108  00FF54  37                 	db	55	;'7'
  1109  00FF55  38                 	db	56	;'8'
  1110  00FF56  39                 	db	57	;'9'
  1111  00FF57  61                 	db	97	;'a'
  1112  00FF58  62                 	db	98	;'b'
  1113  00FF59  63                 	db	99	;'c'
  1114  00FF5A  64                 	db	100	;'d'
  1115  00FF5B  65                 	db	101	;'e'
  1116  00FF5C  66                 	db	102	;'f'
  1117  00FF5D  00                 	db	0
  1118  00FF5E                     STR_31:
  1119  00FF5E  53                 	db	83	;'S'
  1120  00FF5F  65                 	db	101	;'e'
  1121  00FF60  74                 	db	116	;'t'
  1122  00FF61  20                 	db	32
  1123  00FF62  48                 	db	72	;'H'
  1124  00FF63  65                 	db	101	;'e'
  1125  00FF64  61                 	db	97	;'a'
  1126  00FF65  74                 	db	116	;'t'
  1127  00FF66  65                 	db	101	;'e'
  1128  00FF67  72                 	db	114	;'r'
  1129  00FF68  20                 	db	32
  1130  00FF69  54                 	db	84	;'T'
  1131  00FF6A  65                 	db	101	;'e'
  1132  00FF6B  6D                 	db	109	;'m'
  1133  00FF6C  70                 	db	112	;'p'
  1134  00FF6D  00                 	db	0
  1135  00FF6E                     STR_6:
  1136  00FF6E  54                 	db	84	;'T'
  1137  00FF6F  65                 	db	101	;'e'
  1138  00FF70  6D                 	db	109	;'m'
  1139  00FF71  70                 	db	112	;'p'
  1140  00FF72  65                 	db	101	;'e'
  1141  00FF73  72                 	db	114	;'r'
  1142  00FF74  61                 	db	97	;'a'
  1143  00FF75  74                 	db	116	;'t'
  1144  00FF76  75                 	db	117	;'u'
  1145  00FF77  72                 	db	114	;'r'
  1146  00FF78  65                 	db	101	;'e'
  1147  00FF79  3A                 	db	58	;':'
  1148  00FF7A  00                 	db	0
  1149  00FF7B                     STR_13:
  1150  00FF7B  48                 	db	72	;'H'
  1151  00FF7C  54                 	db	84	;'T'
  1152  00FF7D  52                 	db	82	;'R'
  1153  00FF7E  20                 	db	32
  1154  00FF7F  53                 	db	83	;'S'
  1155  00FF80  65                 	db	101	;'e'
  1156  00FF81  74                 	db	116	;'t'
  1157  00FF82  20                 	db	32
  1158  00FF83  54                 	db	84	;'T'
  1159  00FF84  65                 	db	101	;'e'
  1160  00FF85  6D                 	db	109	;'m'
  1161  00FF86  70                 	db	112	;'p'
  1162  00FF87  00                 	db	0
  1163  00FF88                     STR_33:
  1164  00FF88  54                 	db	84	;'T'
  1165  00FF89  69                 	db	105	;'i'
  1166  00FF8A  6D                 	db	109	;'m'
  1167  00FF8B  65                 	db	101	;'e'
  1168  00FF8C  20                 	db	32
  1169  00FF8D  53                 	db	83	;'S'
  1170  00FF8E  65                 	db	101	;'e'
  1171  00FF8F  74                 	db	116	;'t'
  1172  00FF90  75                 	db	117	;'u'
  1173  00FF91  70                 	db	112	;'p'
  1174  00FF92  00                 	db	0
  1175  00FF93  00                 	db	0
  1176  00FF94                     STR_29:
  1177  00FF94  20                 	db	32
  1178  00FF95  20                 	db	32
  1179  00FF96  48                 	db	72	;'H'
  1180  00FF97  65                 	db	101	;'e'
  1181  00FF98  61                 	db	97	;'a'
  1182  00FF99  74                 	db	116	;'t'
  1183  00FF9A  65                 	db	101	;'e'
  1184  00FF9B  72                 	db	114	;'r'
  1185  00FF9C  00                 	db	0
  1186  00FF9D  20                 	db	32
  1187  00FF9E  00                 	db	0
  1188  00FF9F                     STR_27:
  1189  00FF9F  25                 	db	37
  1190  00FFA0  78                 	db	120	;'x'
  1191  00FFA1  3A                 	db	58	;':'
  1192  00FFA2  25                 	db	37
  1193  00FFA3  78                 	db	120	;'x'
  1194  00FFA4  3A                 	db	58	;':'
  1195  00FFA5  25                 	db	37
  1196  00FFA6  78                 	db	120	;'x'
  1197  00FFA7  0D                 	db	13
  1198  00FFA8  0A                 	db	10
  1199  00FFA9  00                 	db	0
  1200  00FFAA                     STR_11:
  1201  00FFAA  41                 	db	65	;'A'
  1202  00FFAB  6C                 	db	108	;'l'
  1203  00FFAC  61                 	db	97	;'a'
  1204  00FFAD  72                 	db	114	;'r'
  1205  00FFAE  6D                 	db	109	;'m'
  1206  00FFAF  20                 	db	32
  1207  00FFB0  54                 	db	84	;'T'
  1208  00FFB1  69                 	db	105	;'i'
  1209  00FFB2  6D                 	db	109	;'m'
  1210  00FFB3  65                 	db	101	;'e'
  1211  00FFB4  00                 	db	0
  1212  00FFB5                     STR_30:
  1213  00FFB5  20                 	db	32
  1214  00FFB6  20                 	db	32
  1215  00FFB7  53                 	db	83	;'S'
  1216  00FFB8  65                 	db	101	;'e'
  1217  00FFB9  74                 	db	116	;'t'
  1218  00FFBA  75                 	db	117	;'u'
  1219  00FFBB  70                 	db	112	;'p'
  1220  00FFBC  00                 	db	0
  1221  00FFBD  20                 	db	32
  1222  00FFBE  00                 	db	0
  1223  00FFBF                     STR_12:
  1224  00FFBF  41                 	db	65	;'A'
  1225  00FFC0  6C                 	db	108	;'l'
  1226  00FFC1  61                 	db	97	;'a'
  1227  00FFC2  72                 	db	114	;'r'
  1228  00FFC3  6D                 	db	109	;'m'
  1229  00FFC4  20                 	db	32
  1230  00FFC5  53                 	db	83	;'S'
  1231  00FFC6  57                 	db	87	;'W'
  1232  00FFC7  00                 	db	0
  1233  00FFC8                     STR_24:
  1234  00FFC8  20                 	db	32
  1235  00FFC9  20                 	db	32
  1236  00FFCA  41                 	db	65	;'A'
  1237  00FFCB  6C                 	db	108	;'l'
  1238  00FFCC  61                 	db	97	;'a'
  1239  00FFCD  72                 	db	114	;'r'
  1240  00FFCE  6D                 	db	109	;'m'
  1241  00FFCF  00                 	db	0
  1242  00FFD0                     STR_25:
  1243  00FFD0  20                 	db	32
  1244  00FFD1  20                 	db	32
  1245  00FFD2  53                 	db	83	;'S'
  1246  00FFD3  65                 	db	101	;'e'
  1247  00FFD4  74                 	db	116	;'t'
  1248  00FFD5  75                 	db	117	;'u'
  1249  00FFD6  70                 	db	112	;'p'
  1250  00FFD7  00                 	db	0
  1251  00FFD8                     STR_14:
  1252  00FFD8  48                 	db	72	;'H'
  1253  00FFD9  54                 	db	84	;'T'
  1254  00FFDA  52                 	db	82	;'R'
  1255  00FFDB  20                 	db	32
  1256  00FFDC  53                 	db	83	;'S'
  1257  00FFDD  57                 	db	87	;'W'
  1258  00FFDE  00                 	db	0
  1259  00FFDF                     STR_10:
  1260  00FFDF  44                 	db	68	;'D'
  1261  00FFE0  61                 	db	97	;'a'
  1262  00FFE1  74                 	db	116	;'t'
  1263  00FFE2  65                 	db	101	;'e'
  1264  00FFE3  00                 	db	0
  1265  00FFE4                     STR_17:
  1266  00FFE4  56                 	db	86	;'V'
  1267  00FFE5  6F                 	db	111	;'o'
  1268  00FFE6  6C                 	db	108	;'l'
  1269  00FFE7  74                 	db	116	;'t'
  1270  00FFE8  00                 	db	0
  1271  00FFE9                     STR_19:
  1272  00FFE9  4F                 	db	79	;'O'
  1273  00FFEA  4E                 	db	78	;'N'
  1274  00FFEB  20                 	db	32
  1275  00FFEC  00                 	db	0
  1276  00FFED                     STR_20:
  1277  00FFED  4F                 	db	79	;'O'
  1278  00FFEE  46                 	db	70	;'F'
  1279  00FFEF  46                 	db	70	;'F'
  1280  00FFF0  00                 	db	0
  1281  00FFF1                     STR_18:
  1282  00FFF1  52                 	db	82	;'R'
  1283  00FFF2  50                 	db	80	;'P'
  1284  00FFF3  4D                 	db	77	;'M'
  1285  00FFF4  00                 	db	0
  1286  00FFF5                     STR_7:
  1287  00FFF5  43                 	db	67	;'C'
  1288  00FFF6  2F                 	db	47
  1289  00FFF7  00                 	db	0
  1290  00FFF8                     STR_15:
  1291  00FFF8  44                 	db	68	;'D'
  1292  00FFF9  43                 	db	67	;'C'
  1293  00FFFA  00                 	db	0
  1294  00FFFB                     STR_16:
  1295  00FFFB  52                 	db	82	;'R'
  1296  00FFFC  4D                 	db	77	;'M'
  1297  00FFFD  00                 	db	0
  1298  0000                     
  1299                           ; #config settings
  1300  00FFFE  00                 	db	0	; dummy byte at the end
  1301  0000                     
  1302                           	psect	cinit
  1303  003038                     __pcinit:
  1304                           	opt stack 0
  1305  003038                     start_initialization:
  1306                           	opt stack 0
  1307  003038                     __initialization:
  1308                           	opt stack 0
  1309                           
  1310                           ; Clear objects allocated to BANK0 (27 bytes)
  1311  003038  EE00  F0E2         	lfsr	0,__pbssBANK0
  1312  00303C  0E1B               	movlw	27
  1313  00303E                     clear_0:
  1314  00303E  6AEE               	clrf	postinc0,c
  1315  003040  06E8               	decf	wreg,f,c
  1316  003042  E1FD               	bnz	clear_0
  1317                           
  1318                           ; Clear objects allocated to COMRAM (42 bytes)
  1319  003044  EE00  F044         	lfsr	0,__pbssCOMRAM
  1320  003048  0E2A               	movlw	42
  1321  00304A                     clear_1:
  1322  00304A  6AEE               	clrf	postinc0,c
  1323  00304C  06E8               	decf	wreg,f,c
  1324  00304E  E1FD               	bnz	clear_1
  1325                           
  1326                           ; Initialize objects allocated to BANK1 (83 bytes)
  1327                           ; load TBLPTR registers with __pidataBANK1
  1328  003050  0EB0               	movlw	low __pidataBANK1
  1329  003052  6EF6               	movwf	tblptrl,c
  1330  003054  0E33               	movlw	high __pidataBANK1
  1331  003056  6EF7               	movwf	tblptrh,c
  1332  003058  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1333  00305A  6EF8               	movwf	tblptru,c
  1334  00305C  EE01  F000         	lfsr	0,__pdataBANK1
  1335  003060  EE10 F053          	lfsr	1,83
  1336  003064                     copy_data0:
  1337  003064  0009               	tblrd		*+
  1338  003066  CFF5 FFEE          	movff	tablat,postinc0
  1339  00306A  50E5               	movf	postdec1,w,c
  1340  00306C  50E1               	movf	fsr1l,w,c
  1341  00306E  E1FA               	bnz	copy_data0
  1342                           
  1343                           ; Initialize objects allocated to BANK0 (98 bytes)
  1344                           ; load TBLPTR registers with __pidataBANK0
  1345  003070  0EEE               	movlw	low __pidataBANK0
  1346  003072  6EF6               	movwf	tblptrl,c
  1347  003074  0E31               	movlw	high __pidataBANK0
  1348  003076  6EF7               	movwf	tblptrh,c
  1349  003078  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1350  00307A  6EF8               	movwf	tblptru,c
  1351  00307C  EE00  F080         	lfsr	0,__pdataBANK0
  1352  003080  EE10 F062          	lfsr	1,98
  1353  003084                     copy_data1:
  1354  003084  0009               	tblrd		*+
  1355  003086  CFF5 FFEE          	movff	tablat,postinc0
  1356  00308A  50E5               	movf	postdec1,w,c
  1357  00308C  50E1               	movf	fsr1l,w,c
  1358  00308E  E1FA               	bnz	copy_data1
  1359                           
  1360                           ; Initialize objects allocated to COMRAM (2 bytes)
  1361                           ; load TBLPTR registers with __pidataCOMRAM
  1362  003090  0EA2               	movlw	low __pidataCOMRAM
  1363  003092  6EF6               	movwf	tblptrl,c
  1364  003094  0E3D               	movlw	high __pidataCOMRAM
  1365  003096  6EF7               	movwf	tblptrh,c
  1366  003098  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1367  00309A  6EF8               	movwf	tblptru,c
  1368  00309C  0009               	tblrd		*+	;fetch initializer
  1369  00309E  CFF5 F06E          	movff	tablat,__pdataCOMRAM
  1370  0030A2  0009               	tblrd		*+	;fetch initializer
  1371  0030A4  CFF5 F06F          	movff	tablat,__pdataCOMRAM+1
  1372  0030A8                     end_of_initialization:
  1373                           	opt stack 0
  1374  0030A8                     __end_of__initialization:
  1375                           	opt stack 0
  1376  0030A8  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1377  0030AA  6EF8               	movwf	tblptru,c
  1378  0030AC  0100               	movlb	0
  1379  0030AE  EFB0  F006         	goto	_main	;jump to C main() function
  1380                           tblptru	equ	0xFF8
  1381                           tblptrh	equ	0xFF7
  1382                           tblptrl	equ	0xFF6
  1383                           tablat	equ	0xFF5
  1384                           postinc0	equ	0xFEE
  1385                           wreg	equ	0xFE8
  1386                           postdec1	equ	0xFE5
  1387                           fsr1l	equ	0xFE1
  1388                           
  1389                           	psect	bssCOMRAM
  1390  000044                     __pbssCOMRAM:
  1391                           	opt stack 0
  1392  000044                     _ALARMEN:
  1393                           	opt stack 0
  1394  000044                     	ds	2
  1395  000046                     _DS1621_tempC:
  1396                           	opt stack 0
  1397  000046                     	ds	2
  1398  000048                     _DS1621_tempF:
  1399                           	opt stack 0
  1400  000048                     	ds	2
  1401  00004A                     _Time_Elapsed:
  1402                           	opt stack 0
  1403  00004A                     	ds	2
  1404  00004C                     _rpm:
  1405                           	opt stack 0
  1406  00004C                     	ds	2
  1407  00004E                     _txt:
  1408                           	opt stack 0
  1409  00004E                     	ds	2
  1410  000050                     _HEATER:
  1411                           	opt stack 0
  1412  000050                     	ds	1
  1413  000051                     _Nec_state:
  1414                           	opt stack 0
  1415  000051                     	ds	1
  1416  000052                     _Select_Alarm_Field:
  1417                           	opt stack 0
  1418  000052                     	ds	1
  1419  000053                     _Select_Field:
  1420                           	opt stack 0
  1421  000053                     	ds	1
  1422  000054                     __tft_type:
  1423                           	opt stack 0
  1424  000054                     	ds	1
  1425  000055                     _alarm_date:
  1426                           	opt stack 0
  1427  000055                     	ds	1
  1428  000056                     _alarm_hour:
  1429                           	opt stack 0
  1430  000056                     	ds	1
  1431  000057                     _alarm_minute:
  1432                           	opt stack 0
  1433  000057                     	ds	1
  1434  000058                     _alarm_second:
  1435                           	opt stack 0
  1436  000058                     	ds	1
  1437  000059                     _colstart:
  1438                           	opt stack 0
  1439  000059                     	ds	1
  1440  00005A                     _day:
  1441                           	opt stack 0
  1442  00005A                     	ds	1
  1443  00005B                     _dow:
  1444                           	opt stack 0
  1445  00005B                     	ds	1
  1446  00005C                     _duty_cycle:
  1447                           	opt stack 0
  1448  00005C                     	ds	1
  1449  00005D                     _found:
  1450                           	opt stack 0
  1451  00005D                     	ds	1
  1452  00005E                     _hour:
  1453                           	opt stack 0
  1454  00005E                     	ds	1
  1455  00005F                     _minute:
  1456                           	opt stack 0
  1457  00005F                     	ds	1
  1458  000060                     _month:
  1459                           	opt stack 0
  1460  000060                     	ds	1
  1461  000061                     _rowstart:
  1462                           	opt stack 0
  1463  000061                     	ds	1
  1464  000062                     _second:
  1465                           	opt stack 0
  1466  000062                     	ds	1
  1467  000063                     _setup_alarm_hour:
  1468                           	opt stack 0
  1469  000063                     	ds	1
  1470  000064                     _setup_alarm_minute:
  1471                           	opt stack 0
  1472  000064                     	ds	1
  1473  000065                     _setup_alarm_second:
  1474                           	opt stack 0
  1475  000065                     	ds	1
  1476  000066                     _setup_day:
  1477                           	opt stack 0
  1478  000066                     	ds	1
  1479  000067                     _setup_heater_set_temp:
  1480                           	opt stack 0
  1481  000067                     	ds	1
  1482  000068                     _setup_hour:
  1483                           	opt stack 0
  1484  000068                     	ds	1
  1485  000069                     _setup_minute:
  1486                           	opt stack 0
  1487  000069                     	ds	1
  1488  00006A                     _setup_month:
  1489                           	opt stack 0
  1490  00006A                     	ds	1
  1491  00006B                     _setup_second:
  1492                           	opt stack 0
  1493  00006B                     	ds	1
  1494  00006C                     _setup_year:
  1495                           	opt stack 0
  1496  00006C                     	ds	1
  1497  00006D                     _year:
  1498                           	opt stack 0
  1499  00006D                     	ds	1
  1500                           tblptru	equ	0xFF8
  1501                           tblptrh	equ	0xFF7
  1502                           tblptrl	equ	0xFF6
  1503                           tablat	equ	0xFF5
  1504                           postinc0	equ	0xFEE
  1505                           wreg	equ	0xFE8
  1506                           postdec1	equ	0xFE5
  1507                           fsr1l	equ	0xFE1
  1508                           
  1509                           	psect	dataCOMRAM
  1510  00006E                     __pdataCOMRAM:
  1511                           	opt stack 0
  1512  00006E                     _heater_set_temp:
  1513                           	opt stack 0
  1514  00006E                     	ds	1
  1515  00006F                     _tempSecond:
  1516                           	opt stack 0
  1517  00006F                     	ds	1
  1518                           tblptru	equ	0xFF8
  1519                           tblptrh	equ	0xFF7
  1520                           tblptrl	equ	0xFF6
  1521                           tablat	equ	0xFF5
  1522                           postinc0	equ	0xFEE
  1523                           wreg	equ	0xFE8
  1524                           postdec1	equ	0xFE5
  1525                           fsr1l	equ	0xFE1
  1526                           
  1527                           	psect	bssBANK0
  1528  0000E2                     __pbssBANK0:
  1529                           	opt stack 0
  1530  0000E2                     _Nec_code:
  1531                           	opt stack 0
  1532  0000E2                     	ds	4
  1533  0000E6                     _volt:
  1534                           	opt stack 0
  1535  0000E6                     	ds	3
  1536  0000E9                     _MATCHED:
  1537                           	opt stack 0
  1538  0000E9                     	ds	2
  1539  0000EB                     _alarm_mode:
  1540                           	opt stack 0
  1541  0000EB                     	ds	2
  1542  0000ED                     _color:
  1543                           	opt stack 0
  1544  0000ED                     	ds	2
  1545  0000EF                     _nbr:
  1546                           	opt stack 0
  1547  0000EF                     	ds	2
  1548  0000F1                     _nec_ok:
  1549                           	opt stack 0
  1550  0000F1                     	ds	2
  1551  0000F3                     _rps:
  1552                           	opt stack 0
  1553  0000F3                     	ds	2
  1554  0000F5                     _INT1_flag:
  1555                           	opt stack 0
  1556  0000F5                     	ds	1
  1557  0000F6                     _INT2_flag:
  1558                           	opt stack 0
  1559  0000F6                     	ds	1
  1560  0000F7                     _In_Alarm_Time_Setup:
  1561                           	opt stack 0
  1562  0000F7                     	ds	1
  1563  0000F8                     _In_Heater_Temp_Setup:
  1564                           	opt stack 0
  1565  0000F8                     	ds	1
  1566  0000F9                     _In_Time_Setup:
  1567                           	opt stack 0
  1568  0000F9                     	ds	1
  1569  0000FA                     _Nec_code1:
  1570                           	opt stack 0
  1571  0000FA                     	ds	1
  1572  0000FB                     _Select_Heater_Temp_Field:
  1573                           	opt stack 0
  1574  0000FB                     	ds	1
  1575  0000FC                     _bit_count:
  1576                           	opt stack 0
  1577  0000FC                     	ds	1
  1578                           tblptru	equ	0xFF8
  1579                           tblptrh	equ	0xFF7
  1580                           tblptrl	equ	0xFF6
  1581                           tablat	equ	0xFF5
  1582                           postinc0	equ	0xFEE
  1583                           wreg	equ	0xFE8
  1584                           postdec1	equ	0xFE5
  1585                           fsr1l	equ	0xFE1
  1586                           
  1587                           	psect	dataBANK0
  1588  000080                     __pdataBANK0:
  1589                           	opt stack 0
  1590  000080                     _wrap:
  1591                           	opt stack 0
  1592  000080                     	ds	1
  1593  000081                     _alarm_time:
  1594                           	opt stack 0
  1595  000081                     	ds	9
  1596  00008A                     _date:
  1597                           	opt stack 0
  1598  00008A                     	ds	9
  1599  000093                     _setup_alarm_time:
  1600                           	opt stack 0
  1601  000093                     	ds	9
  1602  00009C                     _setup_date:
  1603                           	opt stack 0
  1604  00009C                     	ds	9
  1605  0000A5                     _setup_time:
  1606                           	opt stack 0
  1607  0000A5                     	ds	9
  1608  0000AE                     _time:
  1609                           	opt stack 0
  1610  0000AE                     	ds	9
  1611  0000B7                     _Volt_Txt:
  1612                           	opt stack 0
  1613  0000B7                     	ds	6
  1614  0000BD                     _Heater_Set_Temp_Txt:
  1615                           	opt stack 0
  1616  0000BD                     	ds	5
  1617  0000C2                     _RPM_Txt:
  1618                           	opt stack 0
  1619  0000C2                     	ds	5
  1620  0000C7                     _setup_heater_set_text:
  1621                           	opt stack 0
  1622  0000C7                     	ds	5
  1623  0000CC                     _Alarm_SW_Txt:
  1624                           	opt stack 0
  1625  0000CC                     	ds	4
  1626  0000D0                     _DC_Txt:
  1627                           	opt stack 0
  1628  0000D0                     	ds	4
  1629  0000D4                     _Heater_SW_Txt:
  1630                           	opt stack 0
  1631  0000D4                     	ds	4
  1632  0000D8                     _tempC:
  1633                           	opt stack 0
  1634  0000D8                     	ds	4
  1635  0000DC                     _tempF:
  1636                           	opt stack 0
  1637  0000DC                     	ds	4
  1638  0000E0                     _RTC_ALARM_Txt:
  1639                           	opt stack 0
  1640  0000E0                     	ds	2
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           postinc0	equ	0xFEE
  1646                           wreg	equ	0xFE8
  1647                           postdec1	equ	0xFE5
  1648                           fsr1l	equ	0xFE1
  1649                           
  1650                           	psect	dataBANK1
  1651  000100                     __pdataBANK1:
  1652                           	opt stack 0
  1653  000100                     _buffer:
  1654                           	opt stack 0
  1655  000100                     	ds	31
  1656  00011F                     _array1:
  1657                           	opt stack 0
  1658  00011F                     	ds	21
  1659  000134                     Set_RGB_Color@F4248:
  1660                           	opt stack 0
  1661  000134                     	ds	16
  1662  000144                     _D1:
  1663                           	opt stack 0
  1664  000144                     	ds	8
  1665  00014C                     _D2:
  1666                           	opt stack 0
  1667  00014C                     	ds	7
  1668                           tblptru	equ	0xFF8
  1669                           tblptrh	equ	0xFF7
  1670                           tblptrl	equ	0xFF6
  1671                           tablat	equ	0xFF5
  1672                           postinc0	equ	0xFEE
  1673                           wreg	equ	0xFE8
  1674                           postdec1	equ	0xFE5
  1675                           fsr1l	equ	0xFE1
  1676                           
  1677                           	psect	cstackBANK1
  1678  000153                     __pcstackBANK1:
  1679                           	opt stack 0
  1680  000153                     ?___awdiv:
  1681                           	opt stack 0
  1682  000153                     drawtext@x:
  1683                           	opt stack 0
  1684  000153                     ___awdiv@dividend:
  1685                           	opt stack 0
  1686                           
  1687                           ; 2 bytes @ 0x0
  1688  000153                     	ds	1
  1689  000154                     drawtext@textsize:
  1690                           	opt stack 0
  1691                           
  1692                           ; 2 bytes @ 0x1
  1693  000154                     	ds	1
  1694  000155                     ___awdiv@divisor:
  1695                           	opt stack 0
  1696                           
  1697                           ; 2 bytes @ 0x2
  1698  000155                     	ds	1
  1699  000156                     drawtext@i:
  1700                           	opt stack 0
  1701                           
  1702                           ; 2 bytes @ 0x3
  1703  000156                     	ds	1
  1704  000157                     ___awdiv@counter:
  1705                           	opt stack 0
  1706                           
  1707                           ; 1 bytes @ 0x4
  1708  000157                     	ds	1
  1709  000158                     drawtext@cursor_y:
  1710                           	opt stack 0
  1711  000158                     ___awdiv@sign:
  1712                           	opt stack 0
  1713                           
  1714                           ; 1 bytes @ 0x5
  1715  000158                     	ds	1
  1716  000159                     drawtext@cursor_x:
  1717                           	opt stack 0
  1718  000159                     ___awdiv@quotient:
  1719                           	opt stack 0
  1720                           
  1721                           ; 2 bytes @ 0x6
  1722  000159                     	ds	2
  1723  00015B                     ??_Do_Setup_Heater_Temp:
  1724  00015B                     Update_Screen@neg_tempF:
  1725                           	opt stack 0
  1726  00015B                     dec_2_bcd@bcd:
  1727                           	opt stack 0
  1728                           
  1729                           ; 2 bytes @ 0x8
  1730  00015B                     	ds	2
  1731  00015D                     Update_Screen@neg_DS1621_tempC:
  1732                           	opt stack 0
  1733  00015D                     dec_2_bcd@dec:
  1734                           	opt stack 0
  1735                           
  1736                           ; 1 bytes @ 0xA
  1737  00015D                     	ds	1
  1738  00015E                     DS3231_Write_Time@Device:
  1739                           	opt stack 0
  1740  00015E                     DS3231_Write_Alarm_Time@Device:
  1741                           	opt stack 0
  1742                           
  1743                           ; 1 bytes @ 0xB
  1744  00015E                     	ds	1
  1745  00015F                     DS3231_Write_Time@Address:
  1746                           	opt stack 0
  1747  00015F                     DS3231_Write_Alarm_Time@Address:
  1748                           	opt stack 0
  1749                           
  1750                           ; 1 bytes @ 0xC
  1751  00015F                     	ds	1
  1752  000160                     ??_main:
  1753                           
  1754                           ; 0 bytes @ 0xD
  1755  000160                     	ds	2
  1756                           tblptru	equ	0xFF8
  1757                           tblptrh	equ	0xFF7
  1758                           tblptrl	equ	0xFF6
  1759                           tablat	equ	0xFF5
  1760                           postinc0	equ	0xFEE
  1761                           wreg	equ	0xFE8
  1762                           postdec1	equ	0xFE5
  1763                           fsr1l	equ	0xFE1
  1764                           
  1765                           	psect	cstackBANK0
  1766  0000FD                     __pcstackBANK0:
  1767                           	opt stack 0
  1768  0000FD                     ??_Monitor_Heater:
  1769  0000FD                     ??_Update_Screen:
  1770  0000FD                     ??_dec_2_bcd:
  1771  0000FD                     Update_Setup_Heater_Screen@dc_char1:
  1772                           	opt stack 0
  1773  0000FD                     get_RPM@RPS:
  1774                           	opt stack 0
  1775                           
  1776                           ; 2 bytes @ 0x0
  1777  0000FD                     	ds	1
  1778  0000FE                     Update_Setup_Heater_Screen@dc_char2:
  1779                           	opt stack 0
  1780                           
  1781                           ; 1 bytes @ 0x1
  1782  0000FE                     	ds	1
  1783  0000FF                     Update_Setup_Heater_Screen@dc_char3:
  1784                           	opt stack 0
  1785                           
  1786                           ; 1 bytes @ 0x2
  1787  0000FF                     	ds	1
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           postdec1	equ	0xFE5
  1795                           fsr1l	equ	0xFE1
  1796                           
  1797                           	psect	cstackCOMRAM
  1798  000001                     __pcstackCOMRAM:
  1799                           	opt stack 0
  1800  000001                     ??_INT0_isr:
  1801  000001                     
  1802                           ; 2 bytes @ 0x0
  1803  000001                     	ds	2
  1804  000003                     ??_chkisr:
  1805                           
  1806                           ; 0 bytes @ 0x2
  1807  000003                     	ds	14
  1808  000011                     ??_bcd_2_dec:
  1809  000011                     ??_isdigit:
  1810  000011                     ?_strlen:
  1811                           	opt stack 0
  1812  000011                     ?_get_full_ADC:
  1813                           	opt stack 0
  1814  000011                     ?_get_duty_cycle:
  1815                           	opt stack 0
  1816  000011                     ?___wmul:
  1817                           	opt stack 0
  1818  000011                     ?___lwdiv:
  1819                           	opt stack 0
  1820  000011                     ?___ftpack:
  1821                           	opt stack 0
  1822  000011                     putch@c:
  1823                           	opt stack 0
  1824  000011                     spiwrite@x:
  1825                           	opt stack 0
  1826  000011                     I2C_Read@ack:
  1827                           	opt stack 0
  1828  000011                     I2C_Write@outByte:
  1829                           	opt stack 0
  1830  000011                     Wait_One_Sec@k:
  1831                           	opt stack 0
  1832  000011                     get_duty_cycle@temp:
  1833                           	opt stack 0
  1834  000011                     OpenUSART@spbrg:
  1835                           	opt stack 0
  1836  000011                     ___wmul@multiplier:
  1837                           	opt stack 0
  1838  000011                     ___lwdiv@dividend:
  1839                           	opt stack 0
  1840  000011                     strcpy@to:
  1841                           	opt stack 0
  1842  000011                     strlen@s:
  1843                           	opt stack 0
  1844  000011                     ___ftpack@arg:
  1845                           	opt stack 0
  1846  000011                     ___ftge@ff1:
  1847                           	opt stack 0
  1848  000011                     I2C_Init@c:
  1849                           	opt stack 0
  1850                           
  1851                           ; 4 bytes @ 0x10
  1852  000011                     	ds	1
  1853  000012                     spiwrite@spidata:
  1854                           	opt stack 0
  1855  000012                     I2C_Read@n:
  1856                           	opt stack 0
  1857  000012                     I2C_Write@n:
  1858                           	opt stack 0
  1859  000012                     _isdigit$2828:
  1860                           	opt stack 0
  1861                           
  1862                           ; 1 bytes @ 0x11
  1863  000012                     	ds	1
  1864  000013                     ??_strlen:
  1865  000013                     ??_get_full_ADC:
  1866  000013                     write_command@cmd_:
  1867                           	opt stack 0
  1868  000013                     write_data@data_:
  1869                           	opt stack 0
  1870  000013                     I2C_Read@inByte:
  1871                           	opt stack 0
  1872  000013                     I2C_Write_Address_Write_One_Byte@Address:
  1873                           	opt stack 0
  1874  000013                     I2C_Write_Cmd_Only@Cmd:
  1875                           	opt stack 0
  1876  000013                     I2C_Write_Cmd_Write_Data@Cmd:
  1877                           	opt stack 0
  1878  000013                     OpenUSART@config:
  1879                           	opt stack 0
  1880  000013                     isdigit@c:
  1881                           	opt stack 0
  1882  000013                     bcd_2_dec@dec:
  1883                           	opt stack 0
  1884  000013                     get_duty_cycle@set_temp:
  1885                           	opt stack 0
  1886  000013                     ___wmul@multiplicand:
  1887                           	opt stack 0
  1888  000013                     ___lwdiv@divisor:
  1889                           	opt stack 0
  1890  000013                     strcpy@from:
  1891                           	opt stack 0
  1892  000013                     Set_RGB_Color@D3:
  1893                           	opt stack 0
  1894                           
  1895                           ; 16 bytes @ 0x12
  1896  000013                     	ds	1
  1897  000014                     ?_DS1621_Read_Temp:
  1898                           	opt stack 0
  1899  000014                     setAddrWindow@y0:
  1900                           	opt stack 0
  1901  000014                     I2C_Write_Address_Read_One_Byte@Address:
  1902                           	opt stack 0
  1903  000014                     I2C_Write_Address_Write_One_Byte@Data_Out:
  1904                           	opt stack 0
  1905  000014                     I2C_Write_Cmd_Only@Device:
  1906                           	opt stack 0
  1907  000014                     I2C_Write_Cmd_Write_Data@Data_Out:
  1908                           	opt stack 0
  1909  000014                     DS3231_Read_Time@Address:
  1910                           	opt stack 0
  1911  000014                     DS3231_Read_Alarm_Time@Address:
  1912                           	opt stack 0
  1913  000014                     ___ftpack@exp:
  1914                           	opt stack 0
  1915  000014                     ___ftge@ff2:
  1916                           	opt stack 0
  1917                           
  1918                           ; 3 bytes @ 0x13
  1919  000014                     	ds	1
  1920  000015                     ??_get_duty_cycle:
  1921  000015                     setAddrWindow@x1:
  1922                           	opt stack 0
  1923  000015                     bcd_2_dec@bcd:
  1924                           	opt stack 0
  1925  000015                     I2C_Write_Address_Read_One_Byte@Data_Ret:
  1926                           	opt stack 0
  1927  000015                     I2C_Write_Address_Write_One_Byte@Device:
  1928                           	opt stack 0
  1929  000015                     I2C_Write_Cmd_Write_Data@Device:
  1930                           	opt stack 0
  1931  000015                     DS3231_Read_Time@Device:
  1932                           	opt stack 0
  1933  000015                     DS3231_Read_Alarm_Time@Device:
  1934                           	opt stack 0
  1935  000015                     ___ftpack@sign:
  1936                           	opt stack 0
  1937  000015                     get_full_ADC@result:
  1938                           	opt stack 0
  1939  000015                     ___wmul@product:
  1940                           	opt stack 0
  1941  000015                     ___lwdiv@quotient:
  1942                           	opt stack 0
  1943  000015                     strcpy@cp:
  1944                           	opt stack 0
  1945  000015                     strlen@cp:
  1946                           	opt stack 0
  1947                           
  1948                           ; 2 bytes @ 0x14
  1949  000015                     	ds	1
  1950  000016                     ??___ftpack:
  1951  000016                     setAddrWindow@y1:
  1952                           	opt stack 0
  1953  000016                     I2C_Write_Address_Read_One_Byte@Device:
  1954                           	opt stack 0
  1955  000016                     DS1621_Init@Device:
  1956                           	opt stack 0
  1957  000016                     DS1621_Read_Temp@Cmd:
  1958                           	opt stack 0
  1959                           
  1960                           ; 1 bytes @ 0x15
  1961  000016                     	ds	1
  1962  000017                     ??___ftge:
  1963  000017                     setAddrWindow@x0:
  1964                           	opt stack 0
  1965  000017                     DS1621_Read_Temp@Data_Ret:
  1966                           	opt stack 0
  1967  000017                     DS3231_Init@Address_7:
  1968                           	opt stack 0
  1969  000017                     ___lwdiv@counter:
  1970                           	opt stack 0
  1971  000017                     delay_ms@ms:
  1972                           	opt stack 0
  1973  000017                     get_duty_cycle@diff:
  1974                           	opt stack 0
  1975                           
  1976                           ; 2 bytes @ 0x16
  1977  000017                     	ds	1
  1978  000018                     ?___lwmod:
  1979                           	opt stack 0
  1980  000018                     drawPixel@y:
  1981                           	opt stack 0
  1982  000018                     drawFastVLine@y:
  1983                           	opt stack 0
  1984  000018                     fillRectangle@y:
  1985                           	opt stack 0
  1986  000018                     DS1621_Read_Temp@Device:
  1987                           	opt stack 0
  1988  000018                     DS3231_Init@Address_E:
  1989                           	opt stack 0
  1990  000018                     ___lwmod@dividend:
  1991                           	opt stack 0
  1992                           
  1993                           ; 2 bytes @ 0x17
  1994  000018                     	ds	1
  1995  000019                     ??_delay_ms:
  1996  000019                     ?___lbtoft:
  1997                           	opt stack 0
  1998  000019                     ?___lwtoft:
  1999                           	opt stack 0
  2000  000019                     drawFastVLine@h:
  2001                           	opt stack 0
  2002  000019                     fillRectangle@w:
  2003                           	opt stack 0
  2004  000019                     DS3231_Init@control_E:
  2005                           	opt stack 0
  2006  000019                     drawPixel@color:
  2007                           	opt stack 0
  2008  000019                     ___lwtoft@c:
  2009                           	opt stack 0
  2010                           
  2011                           ; 2 bytes @ 0x18
  2012  000019                     	ds	1
  2013  00001A                     fillRectangle@h:
  2014                           	opt stack 0
  2015  00001A                     DS3231_Init@Device:
  2016                           	opt stack 0
  2017  00001A                     drawFastVLine@color:
  2018                           	opt stack 0
  2019  00001A                     ___lwmod@divisor:
  2020                           	opt stack 0
  2021                           
  2022                           ; 2 bytes @ 0x19
  2023  00001A                     	ds	1
  2024  00001B                     drawPixel@x:
  2025                           	opt stack 0
  2026  00001B                     DS3231_Turn_Off_Alarm@Address_E:
  2027                           	opt stack 0
  2028  00001B                     DS3231_Turn_On_Alarm@Address_E:
  2029                           	opt stack 0
  2030  00001B                     delay_ms@count:
  2031                           	opt stack 0
  2032  00001B                     fillRectangle@color:
  2033                           	opt stack 0
  2034                           
  2035                           ; 2 bytes @ 0x1A
  2036  00001B                     	ds	1
  2037  00001C                     ??_drawFastVLine:
  2038  00001C                     DS3231_Turn_Off_Alarm@Address_F:
  2039                           	opt stack 0
  2040  00001C                     DS3231_Turn_On_Alarm@Address_F:
  2041                           	opt stack 0
  2042  00001C                     ___lbtoft@c:
  2043                           	opt stack 0
  2044  00001C                     ___lwmod@counter:
  2045                           	opt stack 0
  2046  00001C                     drawCircle@x0:
  2047                           	opt stack 0
  2048                           
  2049                           ; 2 bytes @ 0x1B
  2050  00001C                     	ds	1
  2051  00001D                     ??_fillRectangle:
  2052  00001D                     ?_printf:
  2053                           	opt stack 0
  2054  00001D                     ?___ftmul:
  2055                           	opt stack 0
  2056  00001D                     DS3231_Turn_Off_Alarm@control_E:
  2057                           	opt stack 0
  2058  00001D                     DS3231_Turn_On_Alarm@control_E:
  2059                           	opt stack 0
  2060  00001D                     printf@f:
  2061                           	opt stack 0
  2062  00001D                     ___ftmul@f1:
  2063                           	opt stack 0
  2064                           
  2065                           ; 3 bytes @ 0x1C
  2066  00001D                     	ds	1
  2067  00001E                     DS3231_Turn_Off_Alarm@control_F:
  2068                           	opt stack 0
  2069  00001E                     DS3231_Turn_On_Alarm@control_F:
  2070                           	opt stack 0
  2071  00001E                     drawCircle@y0:
  2072                           	opt stack 0
  2073                           
  2074                           ; 2 bytes @ 0x1D
  2075  00001E                     	ds	1
  2076  00001F                     DS3231_Turn_Off_Alarm@Device:
  2077                           	opt stack 0
  2078  00001F                     DS3231_Turn_On_Alarm@Device:
  2079                           	opt stack 0
  2080                           
  2081                           ; 1 bytes @ 0x1E
  2082  00001F                     	ds	1
  2083  000020                     drawFastVLine@hi:
  2084                           	opt stack 0
  2085  000020                     drawCircle@r:
  2086                           	opt stack 0
  2087  000020                     ___ftmul@f2:
  2088                           	opt stack 0
  2089                           
  2090                           ; 3 bytes @ 0x1F
  2091  000020                     	ds	1
  2092  000021                     drawFastVLine@lo:
  2093                           	opt stack 0
  2094  000021                     fillRectangle@hi:
  2095                           	opt stack 0
  2096                           
  2097                           ; 1 bytes @ 0x20
  2098  000021                     	ds	1
  2099  000022                     drawFastVLine@x:
  2100                           	opt stack 0
  2101  000022                     fillRectangle@lo:
  2102                           	opt stack 0
  2103  000022                     drawCircle@color:
  2104                           	opt stack 0
  2105                           
  2106                           ; 2 bytes @ 0x21
  2107  000022                     	ds	1
  2108  000023                     ??___ftmul:
  2109  000023                     fillRect@y:
  2110                           	opt stack 0
  2111  000023                     fillRectangle@x:
  2112                           	opt stack 0
  2113  000023                     Set_RGB_Color@color:
  2114                           	opt stack 0
  2115                           
  2116                           ; 1 bytes @ 0x22
  2117  000023                     	ds	1
  2118  000024                     ??_drawCircle:
  2119  000024                     fillRect@w:
  2120                           	opt stack 0
  2121  000024                     fillScreen@color:
  2122                           	opt stack 0
  2123                           
  2124                           ; 2 bytes @ 0x23
  2125  000024                     	ds	1
  2126  000025                     fillRect@h:
  2127                           	opt stack 0
  2128                           
  2129                           ; 1 bytes @ 0x24
  2130  000025                     	ds	1
  2131  000026                     ___ftmul@exp:
  2132                           	opt stack 0
  2133  000026                     fillRect@color:
  2134                           	opt stack 0
  2135  000026                     drawCircle@ddF_x:
  2136                           	opt stack 0
  2137                           
  2138                           ; 2 bytes @ 0x25
  2139  000026                     	ds	1
  2140  000027                     ___ftmul@f3_as_product:
  2141                           	opt stack 0
  2142                           
  2143                           ; 3 bytes @ 0x26
  2144  000027                     	ds	1
  2145  000028                     ??_fillRect:
  2146  000028                     drawCircle@ddF_y:
  2147                           	opt stack 0
  2148                           
  2149                           ; 2 bytes @ 0x27
  2150  000028                     	ds	2
  2151  00002A                     ___ftmul@cntr:
  2152                           	opt stack 0
  2153  00002A                     drawCircle@f:
  2154                           	opt stack 0
  2155                           
  2156                           ; 2 bytes @ 0x29
  2157  00002A                     	ds	1
  2158  00002B                     ??_printf:
  2159  00002B                     fillRect@x:
  2160                           	opt stack 0
  2161  00002B                     ___ftmul@sign:
  2162                           	opt stack 0
  2163                           
  2164                           ; 1 bytes @ 0x2A
  2165  00002B                     	ds	1
  2166  00002C                     ?_read_volt:
  2167                           	opt stack 0
  2168  00002C                     ?___ftdiv:
  2169                           	opt stack 0
  2170  00002C                     ?___fttol:
  2171                           	opt stack 0
  2172  00002C                     fillRect@i:
  2173                           	opt stack 0
  2174  00002C                     drawCircle@x:
  2175                           	opt stack 0
  2176  00002C                     ___ftdiv@f1:
  2177                           	opt stack 0
  2178  00002C                     ___fttol@f1:
  2179                           	opt stack 0
  2180                           
  2181                           ; 3 bytes @ 0x2B
  2182  00002C                     	ds	2
  2183  00002E                     Update_Setup_Screen_Cursor_Forward@field:
  2184                           	opt stack 0
  2185  00002E                     Update_Setup_Screen_Cursor_Backward@field:
  2186                           	opt stack 0
  2187  00002E                     drawChar@y:
  2188                           	opt stack 0
  2189  00002E                     drawCircle@y:
  2190                           	opt stack 0
  2191                           
  2192                           ; 2 bytes @ 0x2D
  2193  00002E                     	ds	1
  2194  00002F                     Update_Setup_Screen_Cursor_Forward@yinc:
  2195                           	opt stack 0
  2196  00002F                     Update_Setup_Screen_Cursor_Backward@yinc:
  2197                           	opt stack 0
  2198  00002F                     drawChar@c:
  2199                           	opt stack 0
  2200  00002F                     printf@idx:
  2201                           	opt stack 0
  2202  00002F                     read_volt@num_step:
  2203                           	opt stack 0
  2204  00002F                     ___ftdiv@f2:
  2205                           	opt stack 0
  2206                           
  2207                           ; 3 bytes @ 0x2E
  2208  00002F                     	ds	1
  2209  000030                     ??___fttol:
  2210  000030                     Update_Setup_Screen_Cursor_Forward@xinc:
  2211                           	opt stack 0
  2212  000030                     Update_Setup_Screen_Cursor_Backward@xinc:
  2213                           	opt stack 0
  2214  000030                     drawChar@color:
  2215                           	opt stack 0
  2216  000030                     printf@ap:
  2217                           	opt stack 0
  2218                           
  2219                           ; 2 bytes @ 0x2F
  2220  000030                     	ds	1
  2221  000031                     
  2222                           ; 0 bytes @ 0x30
  2223  000031                     	ds	1
  2224  000032                     ??___ftdiv:
  2225  000032                     printf@prec:
  2226                           	opt stack 0
  2227  000032                     drawChar@bg:
  2228                           	opt stack 0
  2229  000032                     read_volt@voltage_v:
  2230                           	opt stack 0
  2231                           
  2232                           ; 3 bytes @ 0x31
  2233  000032                     	ds	1
  2234  000033                     printf@val:
  2235                           	opt stack 0
  2236                           
  2237                           ; 2 bytes @ 0x32
  2238  000033                     	ds	1
  2239  000034                     drawChar@size:
  2240                           	opt stack 0
  2241                           
  2242                           ; 1 bytes @ 0x33
  2243  000034                     	ds	1
  2244  000035                     drawChar@line:
  2245                           	opt stack 0
  2246  000035                     printf@flag:
  2247                           	opt stack 0
  2248  000035                     ___ftdiv@cntr:
  2249                           	opt stack 0
  2250  000035                     ___fttol@sign1:
  2251                           	opt stack 0
  2252                           
  2253                           ; 1 bytes @ 0x34
  2254  000035                     	ds	1
  2255  000036                     drawChar@x:
  2256                           	opt stack 0
  2257  000036                     printf@width:
  2258                           	opt stack 0
  2259  000036                     ___ftdiv@f3:
  2260                           	opt stack 0
  2261  000036                     ___fttol@lval:
  2262                           	opt stack 0
  2263                           
  2264                           ; 4 bytes @ 0x35
  2265  000036                     	ds	1
  2266  000037                     drawChar@j:
  2267                           	opt stack 0
  2268                           
  2269                           ; 1 bytes @ 0x36
  2270  000037                     	ds	1
  2271  000038                     drawChar@i:
  2272                           	opt stack 0
  2273  000038                     printf@c:
  2274                           	opt stack 0
  2275                           
  2276                           ; 1 bytes @ 0x37
  2277  000038                     	ds	1
  2278  000039                     drawtext@y:
  2279                           	opt stack 0
  2280  000039                     ___ftdiv@exp:
  2281                           	opt stack 0
  2282                           
  2283                           ; 1 bytes @ 0x38
  2284  000039                     	ds	1
  2285  00003A                     ___ftdiv@sign:
  2286                           	opt stack 0
  2287  00003A                     ___fttol@exp1:
  2288                           	opt stack 0
  2289  00003A                     drawtext@_text:
  2290                           	opt stack 0
  2291  00003A                     check_for_button_input@j:
  2292                           	opt stack 0
  2293                           
  2294                           ; 2 bytes @ 0x39
  2295  00003A                     	ds	1
  2296  00003B                     ??_do_update_pwm:
  2297  00003B                     ?___awmod:
  2298                           	opt stack 0
  2299  00003B                     ___awmod@dividend:
  2300                           	opt stack 0
  2301                           
  2302                           ; 2 bytes @ 0x3A
  2303  00003B                     	ds	1
  2304  00003C                     drawtext@color:
  2305                           	opt stack 0
  2306                           
  2307                           ; 2 bytes @ 0x3B
  2308  00003C                     	ds	1
  2309  00003D                     ___awmod@divisor:
  2310                           	opt stack 0
  2311                           
  2312                           ; 2 bytes @ 0x3C
  2313  00003D                     	ds	1
  2314  00003E                     drawtext@bg:
  2315                           	opt stack 0
  2316  00003E                     do_update_pwm@dc_f:
  2317                           	opt stack 0
  2318                           
  2319                           ; 3 bytes @ 0x3D
  2320  00003E                     	ds	1
  2321  00003F                     ___awmod@counter:
  2322                           	opt stack 0
  2323                           
  2324                           ; 1 bytes @ 0x3E
  2325  00003F                     	ds	1
  2326  000040                     drawtext@size:
  2327                           	opt stack 0
  2328  000040                     ___awmod@sign:
  2329                           	opt stack 0
  2330                           
  2331                           ; 1 bytes @ 0x3F
  2332  000040                     	ds	1
  2333  000041                     ??_drawtext:
  2334  000041                     ?_get_RPM:
  2335                           	opt stack 0
  2336  000041                     ?_dec_2_bcd:
  2337                           	opt stack 0
  2338  000041                     do_update_pwm@duty_cycle:
  2339                           	opt stack 0
  2340                           
  2341                           ; 1 bytes @ 0x40
  2342  000041                     	ds	1
  2343  000042                     do_update_pwm@dc_I:
  2344                           	opt stack 0
  2345                           
  2346                           ; 2 bytes @ 0x41
  2347  000042                     	ds	1
  2348  000043                     
  2349                           ; 0 bytes @ 0x42
  2350  000043                     	ds	1
  2351  000044                     tblptru	equ	0xFF8
  2352                           tblptrh	equ	0xFF7
  2353                           tblptrl	equ	0xFF6
  2354                           tablat	equ	0xFF5
  2355                           postinc0	equ	0xFEE
  2356                           wreg	equ	0xFE8
  2357                           postdec1	equ	0xFE5
  2358                           fsr1l	equ	0xFE1
  2359                           
  2360                           ; 0 bytes @ 0x43
  2361 ;;
  2362 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2363 ;;
  2364 ;; *************** function _main *****************
  2365 ;; Defined at:
  2366 ;;		line 120 in file "../ECE3301L_Spring22_Final_Lab_Sample/Main.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;		None               void
  2373 ;; Registers used:
  2374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;Total ram usage:        2 bytes
  2385 ;; Hardware stack levels required when called:   13
  2386 ;; This function calls:
  2387 ;;		_DS1621_Read_Temp
  2388 ;;		_DS3231_Read_Alarm_Time
  2389 ;;		_DS3231_Read_Time
  2390 ;;		_DS3231_Turn_Off_Alarm
  2391 ;;		_Do_Beep_Bad
  2392 ;;		_Do_Beep_Good
  2393 ;;		_Do_Init
  2394 ;;		_Do_Setup_Alarm_Time
  2395 ;;		_Do_Setup_Heater_Temp
  2396 ;;		_Do_Setup_Time
  2397 ;;		_Initialize_Screen
  2398 ;;		_Monitor_Heater
  2399 ;;		_Test_Alarm
  2400 ;;		_Toggle_Heater
  2401 ;;		_Update_Screen
  2402 ;;		___awdiv
  2403 ;;		___wmul
  2404 ;;		_check_for_button_input
  2405 ;;		_get_RPM
  2406 ;;		_printf
  2407 ;;		_read_volt
  2408 ;; This function is called by:
  2409 ;;		Startup code after reset
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text0
  2414  000D60                     __ptext0:
  2415                           	opt stack 0
  2416  000D60                     _main:
  2417                           	opt stack 18
  2418                           
  2419                           ;Main.c: 122: Do_Init();
  2420                           
  2421                           ;incstack = 0
  2422  000D60  EC56  F019         	call	_Do_Init	;wreg free
  2423                           
  2424                           ;Main.c: 123: Initialize_Screen();
  2425  000D64  EC43  F003         	call	_Initialize_Screen	;wreg free
  2426                           
  2427                           ;Main.c: 124: DS3231_Turn_Off_Alarm();
  2428  000D68  EC2B  F01A         	call	_DS3231_Turn_Off_Alarm	;wreg free
  2429                           
  2430                           ;Main.c: 125: DS3231_Read_Alarm_Time();
  2431  000D6C  ECF2  F01A         	call	_DS3231_Read_Alarm_Time	;wreg free
  2432                           
  2433                           ;Main.c: 127: tempSecond = 0xff;
  2434  000D70  686F               	setf	_tempSecond,c
  2435  000D72  D000               	goto	l10044
  2436  000D74                     l10044:
  2437                           
  2438                           ;Main.c: 129: {
  2439                           ;Main.c: 130: DS3231_Read_Time();
  2440  000D74  ECC5  F018         	call	_DS3231_Read_Time	;wreg free
  2441                           
  2442                           ;Main.c: 132: if(tempSecond != second)
  2443  000D78  5062               	movf	_second,w,c
  2444  000D7A  186F               	xorwf	_tempSecond,w,c
  2445  000D7C  B4D8               	btfsc	status,2,c
  2446  000D7E  D0A1               	goto	l10076
  2447                           
  2448                           ;Main.c: 133: {
  2449                           ;Main.c: 134: tempSecond = second;
  2450  000D80  C062  F06F         	movff	_second,_tempSecond
  2451                           
  2452                           ;Main.c: 135: rpm = get_RPM();
  2453  000D84  EC87  F01B         	call	_get_RPM	;wreg free
  2454  000D88  C041  F04C         	movff	?_get_RPM,_rpm
  2455  000D8C  C042  F04D         	movff	?_get_RPM+1,_rpm+1
  2456                           
  2457                           ;Main.c: 136: volt = read_volt();
  2458  000D90  EC84  F019         	call	_read_volt	;wreg free
  2459  000D94  C02C  F0E6         	movff	?_read_volt,_volt
  2460  000D98  C02D  F0E7         	movff	?_read_volt+1,_volt+1
  2461  000D9C  C02E  F0E8         	movff	?_read_volt+2,_volt+2
  2462                           
  2463                           ;Main.c: 137: DS1621_tempC = DS1621_Read_Temp();
  2464  000DA0  EC05  F01C         	call	_DS1621_Read_Temp	;wreg free
  2465  000DA4  C014  F046         	movff	?_DS1621_Read_Temp,_DS1621_tempC
  2466  000DA8  C015  F047         	movff	?_DS1621_Read_Temp+1,_DS1621_tempC+1
  2467                           
  2468                           ;Main.c: 138: if ((DS1621_tempC & 0x80) == 0x80) DS1621_tempC = - (0x80 - DS1621_tempC &
      +                           0x7f);
  2469  000DAC  AE46               	btfss	_DS1621_tempC,7,c
  2470  000DAE  D01D               	goto	l10060
  2471  000DB0  C046  F160         	movff	_DS1621_tempC,??_main
  2472  000DB4  C047  F161         	movff	_DS1621_tempC+1,??_main+1
  2473  000DB8  0101               	movlb	1	; () banked
  2474  000DBA  1F60               	comf	??_main& (0+255),f,b
  2475  000DBC  1F61               	comf	(??_main+1)& (0+255),f,b
  2476  000DBE  4B60               	infsnz	??_main& (0+255),f,b
  2477  000DC0  2B61               	incf	(??_main+1)& (0+255),f,b
  2478  000DC2  0E80               	movlw	128
  2479  000DC4  0101               	movlb	1	; () banked
  2480  000DC6  2760               	addwf	??_main& (0+255),f,b
  2481  000DC8  0E00               	movlw	0
  2482  000DCA  2361               	addwfc	(??_main+1)& (0+255),f,b
  2483  000DCC  0E7F               	movlw	127
  2484  000DCE  0101               	movlb	1	; () banked
  2485  000DD0  1760               	andwf	??_main& (0+255),f,b
  2486  000DD2  0E00               	movlw	0
  2487  000DD4  1761               	andwf	(??_main+1)& (0+255),f,b
  2488  000DD6  0101               	movlb	1	; () banked
  2489  000DD8  1F60               	comf	??_main& (0+255),f,b
  2490  000DDA  1F61               	comf	(??_main+1)& (0+255),f,b
  2491  000DDC  4B60               	infsnz	??_main& (0+255),f,b
  2492  000DDE  2B61               	incf	(??_main+1)& (0+255),f,b
  2493  000DE0  C160  F046         	movff	??_main,_DS1621_tempC
  2494  000DE4  C161  F047         	movff	??_main+1,_DS1621_tempC+1
  2495  000DE8  D000               	goto	l10060
  2496  000DEA                     l10060:
  2497                           
  2498                           ;Main.c: 139: DS1621_tempF = (DS1621_tempC * 9 / 5) + 32;
  2499  000DEA  C046  F011         	movff	_DS1621_tempC,___wmul@multiplier
  2500  000DEE  C047  F012         	movff	_DS1621_tempC+1,___wmul@multiplier+1
  2501  000DF2  0E00               	movlw	0
  2502  000DF4  6E14               	movwf	___wmul@multiplicand+1,c
  2503  000DF6  0E09               	movlw	9
  2504  000DF8  6E13               	movwf	___wmul@multiplicand,c
  2505  000DFA  ECAE  F01C         	call	___wmul	;wreg free
  2506  000DFE  C011  F153         	movff	?___wmul,___awdiv@dividend
  2507  000E02  C012  F154         	movff	?___wmul+1,___awdiv@dividend+1
  2508  000E06  0E00               	movlw	0
  2509  000E08  0101               	movlb	1	; () banked
  2510  000E0A  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  2511  000E0C  0E05               	movlw	5
  2512  000E0E  6F55               	movwf	___awdiv@divisor& (0+255),b
  2513  000E10  ECB4  F012         	call	___awdiv	;wreg free
  2514  000E14  0E20               	movlw	32
  2515  000E16  0101               	movlb	1	; () banked
  2516  000E18  2553               	addwf	?___awdiv& (0+255),w,b
  2517  000E1A  6E48               	movwf	_DS1621_tempF,c
  2518  000E1C  0E00               	movlw	0
  2519  000E1E  0101               	movlb	1	; () banked
  2520  000E20  2154               	addwfc	(?___awdiv+1)& (0+255),w,b
  2521  000E22  6E49               	movwf	_DS1621_tempF+1,c
  2522                           
  2523                           ; BSR set to: 1
  2524                           ;Main.c: 141: printf ("%02x:%02x:%02x %02x/%02x/%02x",hour,minute,second,month,day,year)
      +                          ;
  2525  000E24  0EB2               	movlw	low STR_1
  2526  000E26  6E1D               	movwf	printf@f,c
  2527  000E28  0EFE               	movlw	high STR_1
  2528  000E2A  6E1E               	movwf	printf@f+1,c
  2529  000E2C  C05E  F01F         	movff	_hour,?_printf+2
  2530  000E30  6A20               	clrf	?_printf+3,c
  2531  000E32  C05F  F021         	movff	_minute,?_printf+4
  2532  000E36  6A22               	clrf	?_printf+5,c
  2533  000E38  C062  F023         	movff	_second,?_printf+6
  2534  000E3C  6A24               	clrf	?_printf+7,c
  2535  000E3E  C060  F025         	movff	_month,?_printf+8
  2536  000E42  6A26               	clrf	?_printf+9,c
  2537  000E44  C05A  F027         	movff	_day,?_printf+10
  2538  000E48  6A28               	clrf	?_printf+11,c
  2539  000E4A  C06D  F029         	movff	_year,?_printf+12
  2540  000E4E  6A2A               	clrf	?_printf+13,c
  2541  000E50  EC03  F005         	call	_printf	;wreg free
  2542                           
  2543                           ;Main.c: 142: printf (" Temp = %d C = %d F ", DS1621_tempC, DS1621_tempF);
  2544  000E54  0EFE               	movlw	low STR_2
  2545  000E56  6E1D               	movwf	printf@f,c
  2546  000E58  0EFE               	movlw	high STR_2
  2547  000E5A  6E1E               	movwf	printf@f+1,c
  2548  000E5C  C046  F01F         	movff	_DS1621_tempC,?_printf+2
  2549  000E60  C047  F020         	movff	_DS1621_tempC+1,?_printf+3
  2550  000E64  C048  F021         	movff	_DS1621_tempF,?_printf+4
  2551  000E68  C049  F022         	movff	_DS1621_tempF+1,?_printf+5
  2552  000E6C  EC03  F005         	call	_printf	;wreg free
  2553                           
  2554                           ;Main.c: 143: printf ("alarm = %d Heater = %d ", PORTAbits.RA4, HEATER);
  2555  000E70  0ED0               	movlw	low STR_3
  2556  000E72  6E1D               	movwf	printf@f,c
  2557  000E74  0EFE               	movlw	high STR_3
  2558  000E76  6E1E               	movwf	printf@f+1,c
  2559  000E78  A880               	btfss	3968,4,c	;volatile
  2560  000E7A  D004               	goto	u7470
  2561  000E7C  0101               	movlb	1	; () banked
  2562  000E7E  6B60               	clrf	??_main& (0+255),b
  2563  000E80  2B60               	incf	??_main& (0+255),f,b
  2564  000E82  D002               	goto	u7478
  2565  000E84                     u7470:
  2566  000E84  0101               	movlb	1	; () banked
  2567  000E86  6B60               	clrf	??_main& (0+255),b
  2568  000E88                     u7478:
  2569  000E88  0101               	movlb	1	; () banked
  2570  000E8A  5160               	movf	??_main& (0+255),w,b
  2571  000E8C  6E1F               	movwf	?_printf+2,c
  2572  000E8E  6A20               	clrf	?_printf+3,c
  2573  000E90  C050  F021         	movff	_HEATER,?_printf+4
  2574  000E94  6A22               	clrf	?_printf+5,c
  2575  000E96  EC03  F005         	call	_printf	;wreg free
  2576                           
  2577                           ;Main.c: 144: printf ("RPM = %d  dc = %d\r\n", rpm, duty_cycle);
  2578  000E9A  0E27               	movlw	low STR_4
  2579  000E9C  6E1D               	movwf	printf@f,c
  2580  000E9E  0EFF               	movlw	high STR_4
  2581  000EA0  6E1E               	movwf	printf@f+1,c
  2582  000EA2  C04C  F01F         	movff	_rpm,?_printf+2
  2583  000EA6  C04D  F020         	movff	_rpm+1,?_printf+3
  2584  000EAA  C05C  F021         	movff	_duty_cycle,?_printf+4
  2585  000EAE  6A22               	clrf	?_printf+5,c
  2586  000EB0  EC03  F005         	call	_printf	;wreg free
  2587                           
  2588                           ;Main.c: 146: Monitor_Heater();
  2589  000EB4  ECAE  F019         	call	_Monitor_Heater	;wreg free
  2590                           
  2591                           ;Main.c: 147: Test_Alarm();
  2592  000EB8  EC8F  F00E         	call	_Test_Alarm	;wreg free
  2593                           
  2594                           ;Main.c: 148: Update_Screen();
  2595  000EBC  EC0E  F000         	call	_Update_Screen	;wreg free
  2596  000EC0  D000               	goto	l10076
  2597  000EC2                     l10076:
  2598                           
  2599                           ;Main.c: 149: }
  2600                           ;Main.c: 151: if (check_for_button_input() == 1)
  2601  000EC2  EC9D  F017         	call	_check_for_button_input	;wreg free
  2602  000EC6  06E8               	decf	wreg,f,c
  2603  000EC8  A4D8               	btfss	status,2,c
  2604  000ECA  D02C               	goto	l10100
  2605                           
  2606                           ;Main.c: 152: {
  2607                           ;Main.c: 154: nec_ok = 0;
  2608  000ECC  0E00               	movlw	0
  2609  000ECE  0100               	movlb	0	; () banked
  2610  000ED0  6FF2               	movwf	(_nec_ok+1)& (0+255),b
  2611  000ED2  0E00               	movlw	0
  2612  000ED4  6FF1               	movwf	_nec_ok& (0+255),b
  2613                           
  2614                           ;Main.c: 155: switch (found)
  2615  000ED6  D017               	goto	l10098
  2616  000ED8                     l10080:
  2617                           
  2618                           ;Main.c: 158: Do_Beep_Good();
  2619  000ED8  ECB2  F01D         	call	_Do_Beep_Good	;wreg free
  2620                           
  2621                           ;Main.c: 159: Do_Setup_Time();
  2622  000EDC  EC1C  F013         	call	_Do_Setup_Time	;wreg free
  2623                           
  2624                           ;Main.c: 160: break;
  2625  000EE0  D021               	goto	l10100
  2626  000EE2                     l10084:
  2627                           
  2628                           ;Main.c: 163: Do_Beep_Good();
  2629  000EE2  ECB2  F01D         	call	_Do_Beep_Good	;wreg free
  2630                           
  2631                           ;Main.c: 164: Do_Setup_Alarm_Time();
  2632  000EE6  ECE4  F013         	call	_Do_Setup_Alarm_Time	;wreg free
  2633                           
  2634                           ;Main.c: 165: break;
  2635  000EEA  D01C               	goto	l10100
  2636  000EEC                     l10088:
  2637                           
  2638                           ;Main.c: 168: Do_Beep_Good();
  2639  000EEC  ECB2  F01D         	call	_Do_Beep_Good	;wreg free
  2640                           
  2641                           ;Main.c: 169: Do_Setup_Heater_Temp();
  2642  000EF0  EC3D  F016         	call	_Do_Setup_Heater_Temp	;wreg free
  2643                           
  2644                           ;Main.c: 170: break;
  2645  000EF4  D017               	goto	l10100
  2646  000EF6                     l10092:
  2647                           
  2648                           ;Main.c: 173: Do_Beep_Good();
  2649  000EF6  ECB2  F01D         	call	_Do_Beep_Good	;wreg free
  2650                           
  2651                           ;Main.c: 174: Toggle_Heater();
  2652  000EFA  EC11  F01E         	call	_Toggle_Heater	;wreg free
  2653                           
  2654                           ;Main.c: 175: break;
  2655  000EFE  D012               	goto	l10100
  2656  000F00                     l10094:
  2657                           
  2658                           ;Main.c: 178: Do_Beep_Bad();
  2659  000F00  ECBE  F01D         	call	_Do_Beep_Bad	;wreg free
  2660                           
  2661                           ;Main.c: 180: }
  2662                           
  2663                           ;Main.c: 179: break;
  2664  000F04  D00F               	goto	l10100
  2665  000F06                     l10098:
  2666  000F06  505D               	movf	_found,w,c
  2667                           
  2668                           ; Switch size 1, requested type "space"
  2669                           ; Number of cases is 4, Range of values is 0 to 5
  2670                           ; switch strategies available:
  2671                           ; Name         Instructions Cycles
  2672                           ; simple_byte           13     7 (average)
  2673                           ;	Chosen strategy is simple_byte
  2674  000F08  0A00               	xorlw	0	; case 0
  2675  000F0A  B4D8               	btfsc	status,2,c
  2676  000F0C  D7E5               	goto	l10080
  2677  000F0E  0A01               	xorlw	1	; case 1
  2678  000F10  B4D8               	btfsc	status,2,c
  2679  000F12  D7E7               	goto	l10084
  2680  000F14  0A03               	xorlw	3	; case 2
  2681  000F16  B4D8               	btfsc	status,2,c
  2682  000F18  D7E9               	goto	l10088
  2683  000F1A  0A07               	xorlw	7	; case 5
  2684  000F1C  B4D8               	btfsc	status,2,c
  2685  000F1E  D7EB               	goto	l10092
  2686  000F20  D7EF               	goto	l10094
  2687  000F22  D000               	goto	l10100
  2688  000F24                     l10100:
  2689                           
  2690                           ;Main.c: 181: }
  2691                           ;Main.c: 185: if (INT1_flag == 1)
  2692  000F24  0100               	movlb	0	; () banked
  2693  000F26  05F5               	decf	_INT1_flag& (0+255),w,b
  2694  000F28  A4D8               	btfss	status,2,c
  2695  000F2A  D004               	goto	l10104
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;Main.c: 186: {
  2699                           ;Main.c: 188: INT1_flag = 0;
  2700  000F2C  0E00               	movlw	0
  2701  000F2E  0100               	movlb	0	; () banked
  2702  000F30  6FF5               	movwf	_INT1_flag& (0+255),b
  2703  000F32  D000               	goto	l10104
  2704  000F34                     l10104:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;Main.c: 189: }
  2708                           ;Main.c: 191: if (INT2_flag == 1)
  2709  000F34  0100               	movlb	0	; () banked
  2710  000F36  05F6               	decf	_INT2_flag& (0+255),w,b
  2711  000F38  A4D8               	btfss	status,2,c
  2712  000F3A  D71C               	goto	l10044
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;Main.c: 192: {
  2716                           ;Main.c: 193: ALARMEN = !ALARMEN;
  2717  000F3C  5044               	movf	_ALARMEN,w,c
  2718  000F3E  1045               	iorwf	_ALARMEN+1,w,c
  2719  000F40  A4D8               	btfss	status,2,c
  2720  000F42  D002               	goto	u7510
  2721  000F44  0E01               	movlw	1
  2722  000F46  D001               	goto	u7520
  2723  000F48                     u7510:
  2724  000F48  0E00               	movlw	0
  2725  000F4A                     u7520:
  2726  000F4A  6E44               	movwf	_ALARMEN,c
  2727  000F4C  6A45               	clrf	_ALARMEN+1,c
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;Main.c: 194: INT2_flag = 0;
  2731  000F4E  0E00               	movlw	0
  2732  000F50  0100               	movlb	0	; () banked
  2733  000F52  6FF6               	movwf	_INT2_flag& (0+255),b
  2734                           
  2735                           ; BSR set to: 0
  2736                           
  2737                           ; BSR set to: 0
  2738  000F54  D70F               	goto	l10044
  2739                           
  2740                           ; BSR set to: 0
  2741                           
  2742                           ; BSR set to: 0
  2743  000F56  EF0C  F000         	goto	start
  2744  000F5A                     __end_of_main:
  2745                           	opt stack 0
  2746                           tblptru	equ	0xFF8
  2747                           tblptrh	equ	0xFF7
  2748                           tblptrl	equ	0xFF6
  2749                           tablat	equ	0xFF5
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           postdec1	equ	0xFE5
  2753                           fsr1l	equ	0xFE1
  2754                           status	equ	0xFD8
  2755                           
  2756 ;; *************** function _read_volt *****************
  2757 ;; Defined at:
  2758 ;;		line 148 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  voltage_v       3   49[COMRAM] float 
  2763 ;;  num_step        3   46[COMRAM] float 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  3   43[COMRAM] float 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2773 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;Total ram usage:        9 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    5
  2780 ;; This function calls:
  2781 ;;		___ftmul
  2782 ;;		___lwtoft
  2783 ;;		_get_full_ADC
  2784 ;; This function is called by:
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text1
  2790  003308                     __ptext1:
  2791                           	opt stack 0
  2792  003308                     _read_volt:
  2793                           	opt stack 25
  2794                           
  2795                           ;utils.c: 150: float num_step = get_full_ADC();
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;incstack = 0
  2799  003308  ECC2  F01C         	call	_get_full_ADC	;wreg free
  2800  00330C  C011  F019         	movff	?_get_full_ADC,___lwtoft@c
  2801  003310  C012  F01A         	movff	?_get_full_ADC+1,___lwtoft@c+1
  2802  003314  ECD5  F01C         	call	___lwtoft	;wreg free
  2803  003318  C019  F02F         	movff	?___lwtoft,read_volt@num_step
  2804  00331C  C01A  F030         	movff	?___lwtoft+1,read_volt@num_step+1
  2805  003320  C01B  F031         	movff	?___lwtoft+2,read_volt@num_step+2
  2806                           
  2807                           ;utils.c: 151: float voltage_v = num_step*0.00488;
  2808  003324  C02F  F01D         	movff	read_volt@num_step,___ftmul@f1
  2809  003328  C030  F01E         	movff	read_volt@num_step+1,___ftmul@f1+1
  2810  00332C  C031  F01F         	movff	read_volt@num_step+2,___ftmul@f1+2
  2811  003330  0EE8               	movlw	232
  2812  003332  6E20               	movwf	___ftmul@f2,c
  2813  003334  0E9F               	movlw	159
  2814  003336  6E21               	movwf	___ftmul@f2+1,c
  2815  003338  0E3B               	movlw	59
  2816  00333A  6E22               	movwf	___ftmul@f2+2,c
  2817  00333C  EC13  F00F         	call	___ftmul	;wreg free
  2818  003340  C01D  F032         	movff	?___ftmul,read_volt@voltage_v
  2819  003344  C01E  F033         	movff	?___ftmul+1,read_volt@voltage_v+1
  2820  003348  C01F  F034         	movff	?___ftmul+2,read_volt@voltage_v+2
  2821                           
  2822                           ;utils.c: 152: return voltage_v;
  2823  00334C  C032  F02C         	movff	read_volt@voltage_v,?_read_volt
  2824  003350  C033  F02D         	movff	read_volt@voltage_v+1,?_read_volt+1
  2825  003354  C034  F02E         	movff	read_volt@voltage_v+2,?_read_volt+2
  2826  003358  D000               	goto	l1055
  2827  00335A                     l1055:
  2828  00335A  0012               	return		;funcret
  2829  00335C                     __end_of_read_volt:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           postdec1	equ	0xFE5
  2838                           fsr1l	equ	0xFE1
  2839                           status	equ	0xFD8
  2840                           
  2841 ;; *************** function _get_full_ADC *****************
  2842 ;; Defined at:
  2843 ;;		line 155 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  result          2   20[COMRAM] int 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  2   16[COMRAM] unsigned int 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;Total ram usage:        6 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    3
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_read_volt
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text2
  2872  003984                     __ptext2:
  2873                           	opt stack 0
  2874  003984                     _get_full_ADC:
  2875                           	opt stack 26
  2876                           
  2877                           ;utils.c: 156: int result;
  2878                           ;utils.c: 157: ADCON0bits.GO=1;
  2879                           
  2880                           ;incstack = 0
  2881  003984  82C2               	bsf	4034,1,c	;volatile
  2882                           
  2883                           ;utils.c: 159: while(ADCON0bits.DONE==1);
  2884  003986  D000               	goto	l1058
  2885  003988                     l1058:
  2886  003988  B2C2               	btfsc	4034,1,c	;volatile
  2887  00398A  D7FE               	goto	l1058
  2888                           
  2889                           ;utils.c: 161: result = (ADRESH * 0x100) + ADRESL;
  2890  00398C  50C4               	movf	4036,w,c	;volatile
  2891  00398E  6E14               	movwf	(??_get_full_ADC+1)& (0+255),c
  2892  003990  6A13               	clrf	??_get_full_ADC& (0+255),c
  2893  003992  50C3               	movf	4035,w,c	;volatile
  2894  003994  2413               	addwf	??_get_full_ADC,w,c
  2895  003996  6E15               	movwf	get_full_ADC@result,c
  2896  003998  0E00               	movlw	0
  2897  00399A  2014               	addwfc	??_get_full_ADC+1,w,c
  2898  00399C  6E16               	movwf	get_full_ADC@result+1,c
  2899                           
  2900                           ;utils.c: 164: return result;
  2901  00399E  C015  F011         	movff	get_full_ADC@result,?_get_full_ADC
  2902  0039A2  C016  F012         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  2903  0039A6  D000               	goto	l1061
  2904  0039A8                     l1061:
  2905  0039A8  0012               	return		;funcret
  2906  0039AA                     __end_of_get_full_ADC:
  2907                           	opt stack 0
  2908                           tblptru	equ	0xFF8
  2909                           tblptrh	equ	0xFF7
  2910                           tblptrl	equ	0xFF6
  2911                           tablat	equ	0xFF5
  2912                           postinc0	equ	0xFEE
  2913                           wreg	equ	0xFE8
  2914                           postdec1	equ	0xFE5
  2915                           fsr1l	equ	0xFE1
  2916                           status	equ	0xFD8
  2917                           
  2918 ;; *************** function ___lwtoft *****************
  2919 ;; Defined at:
  2920 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  c               2   24[COMRAM] unsigned int 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  3   24[COMRAM] float 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2934 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;Total ram usage:        3 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    4
  2941 ;; This function calls:
  2942 ;;		___ftpack
  2943 ;; This function is called by:
  2944 ;;		_read_volt
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text3
  2949  0039AA                     __ptext3:
  2950                           	opt stack 0
  2951  0039AA                     ___lwtoft:
  2952                           	opt stack 25
  2953                           
  2954                           ;incstack = 0
  2955  0039AA  C019  F011         	movff	___lwtoft@c,___ftpack@arg
  2956  0039AE  C01A  F012         	movff	___lwtoft@c+1,___ftpack@arg+1
  2957  0039B2  6A13               	clrf	___ftpack@arg+2,c
  2958  0039B4  0E8E               	movlw	142
  2959  0039B6  6E14               	movwf	___ftpack@exp,c
  2960  0039B8  0E00               	movlw	0
  2961  0039BA  6E15               	movwf	___ftpack@sign,c
  2962  0039BC  EC81  F013         	call	___ftpack	;wreg free
  2963  0039C0  C011  F019         	movff	?___ftpack,?___lwtoft
  2964  0039C4  C012  F01A         	movff	?___ftpack+1,?___lwtoft+1
  2965  0039C8  C013  F01B         	movff	?___ftpack+2,?___lwtoft+2
  2966  0039CC  D000               	goto	l2064
  2967  0039CE                     l2064:
  2968  0039CE  0012               	return		;funcret
  2969  0039D0                     __end_of___lwtoft:
  2970                           	opt stack 0
  2971                           tblptru	equ	0xFF8
  2972                           tblptrh	equ	0xFF7
  2973                           tblptrl	equ	0xFF6
  2974                           tablat	equ	0xFF5
  2975                           postinc0	equ	0xFEE
  2976                           wreg	equ	0xFE8
  2977                           postdec1	equ	0xFE5
  2978                           fsr1l	equ	0xFE1
  2979                           status	equ	0xFD8
  2980                           
  2981 ;; *************** function _get_RPM *****************
  2982 ;; Defined at:
  2983 ;;		line 42 in file "../ECE3301L_Spring22_Final_Lab_Sample/Fan_Support.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  RPS             2    0[BANK0 ] int 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  2   64[COMRAM] int 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;Total ram usage:        4 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    4
  3004 ;; This function calls:
  3005 ;;		___awdiv
  3006 ;;		___wmul
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text4
  3013  00370E                     __ptext4:
  3014                           	opt stack 0
  3015  00370E                     _get_RPM:
  3016                           	opt stack 26
  3017                           
  3018                           ;Fan_Support.c: 44: int RPS = TMR3L / 2;
  3019                           
  3020                           ;incstack = 0
  3021  00370E  CFB2 F153          	movff	4018,___awdiv@dividend	;volatile
  3022  003712  0101               	movlb	1	; () banked
  3023  003714  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
  3024  003716  0E00               	movlw	0
  3025  003718  0101               	movlb	1	; () banked
  3026  00371A  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3027  00371C  0E02               	movlw	2
  3028  00371E  6F55               	movwf	___awdiv@divisor& (0+255),b
  3029  003720  ECB4  F012         	call	___awdiv	;wreg free
  3030  003724  C153  F0FD         	movff	?___awdiv,get_RPM@RPS
  3031  003728  C154  F0FE         	movff	?___awdiv+1,get_RPM@RPS+1
  3032                           
  3033                           ;Fan_Support.c: 46: TMR3L = 0;
  3034  00372C  0E00               	movlw	0
  3035  00372E  6EB2               	movwf	4018,c	;volatile
  3036                           
  3037                           ;Fan_Support.c: 47: return (RPS * 60);
  3038  003730  C0FD  F011         	movff	get_RPM@RPS,___wmul@multiplier
  3039  003734  C0FE  F012         	movff	get_RPM@RPS+1,___wmul@multiplier+1
  3040  003738  0E00               	movlw	0
  3041  00373A  6E14               	movwf	___wmul@multiplicand+1,c
  3042  00373C  0E3C               	movlw	60
  3043  00373E  6E13               	movwf	___wmul@multiplicand,c
  3044  003740  ECAE  F01C         	call	___wmul	;wreg free
  3045  003744  C011  F041         	movff	?___wmul,?_get_RPM
  3046  003748  C012  F042         	movff	?___wmul+1,?_get_RPM+1
  3047  00374C  D000               	goto	l1384
  3048  00374E                     l1384:
  3049  00374E  0012               	return		;funcret
  3050  003750                     __end_of_get_RPM:
  3051                           	opt stack 0
  3052                           tblptru	equ	0xFF8
  3053                           tblptrh	equ	0xFF7
  3054                           tblptrl	equ	0xFF6
  3055                           tablat	equ	0xFF5
  3056                           postinc0	equ	0xFEE
  3057                           wreg	equ	0xFE8
  3058                           postdec1	equ	0xFE5
  3059                           fsr1l	equ	0xFE1
  3060                           status	equ	0xFD8
  3061                           
  3062 ;; *************** function _Update_Screen *****************
  3063 ;; Defined at:
  3064 ;;		line 77 in file "../ECE3301L_Spring22_Final_Lab_Sample/Main_Screen.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  neg_tempF       2    8[BANK1 ] int 
  3069 ;;  neg_DS1621_t    1   10[BANK1 ] unsigned char 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  2   62[None  ] int 
  3072 ;; Registers used:
  3073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;      Totals:         0       2       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;Total ram usage:        5 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:   10
  3086 ;; This function calls:
  3087 ;;		___awdiv
  3088 ;;		___awmod
  3089 ;;		___ftmul
  3090 ;;		___fttol
  3091 ;;		_drawtext
  3092 ;;		_strcpy
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text5
  3099  00001C                     __ptext5:
  3100                           	opt stack 0
  3101  00001C                     _Update_Screen:
  3102                           	opt stack 20
  3103                           
  3104                           ;Main_Screen.c: 79: if ((DS1621_tempC & 0x80) == 0x80)
  3105                           
  3106                           ;incstack = 0
  3107  00001C  AE46               	btfss	_DS1621_tempC,7,c
  3108  00001E  D023               	goto	l9678
  3109                           
  3110                           ;Main_Screen.c: 80: {
  3111                           ;Main_Screen.c: 81: tempC[0] = '-';
  3112  000020  0E2D               	movlw	45
  3113  000022  0100               	movlb	0	; () banked
  3114  000024  6FD8               	movwf	_tempC& (0+255),b
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;Main_Screen.c: 82: char neg_DS1621_tempC = 0x80 - (DS1621_tempC & 0x7f);
  3118  000026  5046               	movf	_DS1621_tempC,w,c
  3119  000028  0B7F               	andlw	127
  3120  00002A  0800               	sublw	0
  3121  00002C  0F80               	addlw	128
  3122  00002E  0101               	movlb	1	; () banked
  3123  000030  6F5D               	movwf	Update_Screen@neg_DS1621_tempC& (0+255),b
  3124                           
  3125                           ; BSR set to: 1
  3126                           ;Main_Screen.c: 83: tempC[1] = (neg_DS1621_tempC)/10 + '0';
  3127  000032  C15D  F153         	movff	Update_Screen@neg_DS1621_tempC,___awdiv@dividend
  3128  000036  0101               	movlb	1	; () banked
  3129  000038  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
  3130  00003A  0E00               	movlw	0
  3131  00003C  0101               	movlb	1	; () banked
  3132  00003E  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3133  000040  0E0A               	movlw	10
  3134  000042  6F55               	movwf	___awdiv@divisor& (0+255),b
  3135  000044  ECB4  F012         	call	___awdiv	;wreg free
  3136  000048  0101               	movlb	1	; () banked
  3137  00004A  5153               	movf	?___awdiv& (0+255),w,b
  3138  00004C  0F30               	addlw	48
  3139  00004E  0100               	movlb	0	; () banked
  3140  000050  6FD9               	movwf	(_tempC+1)& (0+255),b
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;Main_Screen.c: 84: tempC[2] = (neg_DS1621_tempC)%10 + '0';
  3144  000052  C15D  F03B         	movff	Update_Screen@neg_DS1621_tempC,___awmod@dividend
  3145  000056  6A3C               	clrf	___awmod@dividend+1,c
  3146  000058  0E00               	movlw	0
  3147  00005A  6E3E               	movwf	___awmod@divisor+1,c
  3148  00005C  0E0A               	movlw	10
  3149  00005E  6E3D               	movwf	___awmod@divisor,c
  3150  000060  EC5C  F017         	call	___awmod	;wreg free
  3151  000064  D01D               	goto	L1
  3152  000066                     l9678:
  3153                           
  3154                           ;Main_Screen.c: 86: else
  3155                           ;Main_Screen.c: 87: {
  3156                           ;Main_Screen.c: 88: tempC[0] = '+';
  3157  000066  0E2B               	movlw	43
  3158  000068  0100               	movlb	0	; () banked
  3159  00006A  6FD8               	movwf	_tempC& (0+255),b
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;Main_Screen.c: 89: tempC[1] = DS1621_tempC/10 + '0';
  3163  00006C  C046  F153         	movff	_DS1621_tempC,___awdiv@dividend
  3164  000070  C047  F154         	movff	_DS1621_tempC+1,___awdiv@dividend+1
  3165  000074  0E00               	movlw	0
  3166  000076  0101               	movlb	1	; () banked
  3167  000078  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3168  00007A  0E0A               	movlw	10
  3169  00007C  6F55               	movwf	___awdiv@divisor& (0+255),b
  3170  00007E  ECB4  F012         	call	___awdiv	;wreg free
  3171  000082  0101               	movlb	1	; () banked
  3172  000084  5153               	movf	?___awdiv& (0+255),w,b
  3173  000086  0F30               	addlw	48
  3174  000088  0100               	movlb	0	; () banked
  3175  00008A  6FD9               	movwf	(_tempC+1)& (0+255),b
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;Main_Screen.c: 90: tempC[2] = DS1621_tempC%10 + '0';
  3179  00008C  C046  F03B         	movff	_DS1621_tempC,___awmod@dividend
  3180  000090  C047  F03C         	movff	_DS1621_tempC+1,___awmod@dividend+1
  3181  000094  0E00               	movlw	0
  3182  000096  6E3E               	movwf	___awmod@divisor+1,c
  3183  000098  0E0A               	movlw	10
  3184  00009A  6E3D               	movwf	___awmod@divisor,c
  3185  00009C  EC5C  F017         	call	___awmod	;wreg free
  3186  0000A0                     L1:
  3187  0000A0  503B               	movf	?___awmod,w,c
  3188  0000A2  0F30               	addlw	48
  3189  0000A4  0100               	movlb	0	; () banked
  3190  0000A6  6FDA               	movwf	(_tempC+2)& (0+255),b
  3191  0000A8  D000               	goto	l9684
  3192  0000AA                     l9684:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;Main_Screen.c: 91: }
  3196                           ;Main_Screen.c: 93: if (DS1621_tempF < 0)
  3197  0000AA  AE49               	btfss	_DS1621_tempF+1,7,c
  3198  0000AC  D035               	goto	l9694
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;Main_Screen.c: 94: {
  3202                           ;Main_Screen.c: 95: tempF[0] = '-';
  3203  0000AE  0E2D               	movlw	45
  3204  0000B0  0100               	movlb	0	; () banked
  3205  0000B2  6FDC               	movwf	_tempF& (0+255),b
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;Main_Screen.c: 96: int neg_tempF = 0x80 - (DS1621_tempF & 0x7f);
  3209  0000B4  0E7F               	movlw	127
  3210  0000B6  1448               	andwf	_DS1621_tempF,w,c
  3211  0000B8  0100               	movlb	0	; () banked
  3212  0000BA  6FFD               	movwf	??_Update_Screen& (0+255),b
  3213  0000BC  0E00               	movlw	0
  3214  0000BE  1449               	andwf	_DS1621_tempF+1,w,c
  3215  0000C0  0100               	movlb	0	; () banked
  3216  0000C2  6FFE               	movwf	(??_Update_Screen+1)& (0+255),b
  3217  0000C4  0100               	movlb	0	; () banked
  3218  0000C6  1FFD               	comf	??_Update_Screen& (0+255),f,b
  3219  0000C8  1FFE               	comf	(??_Update_Screen+1)& (0+255),f,b
  3220  0000CA  4BFD               	infsnz	??_Update_Screen& (0+255),f,b
  3221  0000CC  2BFE               	incf	(??_Update_Screen+1)& (0+255),f,b
  3222  0000CE  0E80               	movlw	128
  3223  0000D0  0100               	movlb	0	; () banked
  3224  0000D2  25FD               	addwf	??_Update_Screen& (0+255),w,b
  3225  0000D4  0101               	movlb	1	; () banked
  3226  0000D6  6F5B               	movwf	Update_Screen@neg_tempF& (0+255),b
  3227  0000D8  0E00               	movlw	0
  3228  0000DA  0100               	movlb	0	; () banked
  3229  0000DC  21FE               	addwfc	(??_Update_Screen+1)& (0+255),w,b
  3230  0000DE  0101               	movlb	1	; () banked
  3231  0000E0  6F5C               	movwf	(Update_Screen@neg_tempF+1)& (0+255),b
  3232                           
  3233                           ; BSR set to: 1
  3234                           ;Main_Screen.c: 97: tempF[1] = neg_tempF/10 + '0';
  3235  0000E2  C15B  F153         	movff	Update_Screen@neg_tempF,___awdiv@dividend
  3236  0000E6  C15C  F154         	movff	Update_Screen@neg_tempF+1,___awdiv@dividend+1
  3237  0000EA  0E00               	movlw	0
  3238  0000EC  0101               	movlb	1	; () banked
  3239  0000EE  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3240  0000F0  0E0A               	movlw	10
  3241  0000F2  6F55               	movwf	___awdiv@divisor& (0+255),b
  3242  0000F4  ECB4  F012         	call	___awdiv	;wreg free
  3243  0000F8  0101               	movlb	1	; () banked
  3244  0000FA  5153               	movf	?___awdiv& (0+255),w,b
  3245  0000FC  0F30               	addlw	48
  3246  0000FE  0100               	movlb	0	; () banked
  3247  000100  6FDD               	movwf	(_tempF+1)& (0+255),b
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;Main_Screen.c: 98: tempF[2] = neg_tempF%10 + '0';
  3251  000102  C15B  F03B         	movff	Update_Screen@neg_tempF,___awmod@dividend
  3252  000106  C15C  F03C         	movff	Update_Screen@neg_tempF+1,___awmod@dividend+1
  3253  00010A  0E00               	movlw	0
  3254  00010C  6E3E               	movwf	___awmod@divisor+1,c
  3255  00010E  0E0A               	movlw	10
  3256  000110  6E3D               	movwf	___awmod@divisor,c
  3257  000112  EC5C  F017         	call	___awmod	;wreg free
  3258  000116  D01D               	goto	L2
  3259  000118                     l9694:
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;Main_Screen.c: 100: else
  3263                           ;Main_Screen.c: 101: {
  3264                           ;Main_Screen.c: 102: tempF[0] = '+';
  3265  000118  0E2B               	movlw	43
  3266  00011A  0100               	movlb	0	; () banked
  3267  00011C  6FDC               	movwf	_tempF& (0+255),b
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;Main_Screen.c: 103: tempF[1] = DS1621_tempF/10 + '0';
  3271  00011E  C048  F153         	movff	_DS1621_tempF,___awdiv@dividend
  3272  000122  C049  F154         	movff	_DS1621_tempF+1,___awdiv@dividend+1
  3273  000126  0E00               	movlw	0
  3274  000128  0101               	movlb	1	; () banked
  3275  00012A  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3276  00012C  0E0A               	movlw	10
  3277  00012E  6F55               	movwf	___awdiv@divisor& (0+255),b
  3278  000130  ECB4  F012         	call	___awdiv	;wreg free
  3279  000134  0101               	movlb	1	; () banked
  3280  000136  5153               	movf	?___awdiv& (0+255),w,b
  3281  000138  0F30               	addlw	48
  3282  00013A  0100               	movlb	0	; () banked
  3283  00013C  6FDD               	movwf	(_tempF+1)& (0+255),b
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;Main_Screen.c: 104: tempF[2] = DS1621_tempF%10 + '0';
  3287  00013E  C048  F03B         	movff	_DS1621_tempF,___awmod@dividend
  3288  000142  C049  F03C         	movff	_DS1621_tempF+1,___awmod@dividend+1
  3289  000146  0E00               	movlw	0
  3290  000148  6E3E               	movwf	___awmod@divisor+1,c
  3291  00014A  0E0A               	movlw	10
  3292  00014C  6E3D               	movwf	___awmod@divisor,c
  3293  00014E  EC5C  F017         	call	___awmod	;wreg free
  3294  000152                     L2:
  3295  000152  503B               	movf	?___awmod,w,c
  3296  000154  0F30               	addlw	48
  3297  000156  0100               	movlb	0	; () banked
  3298  000158  6FDE               	movwf	(_tempF+2)& (0+255),b
  3299  00015A  D000               	goto	l9700
  3300  00015C                     l9700:
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;Main_Screen.c: 105: }
  3304                           ;Main_Screen.c: 107: time[0] = (hour>>4) + '0';
  3305  00015C  385E               	swapf	_hour,w,c
  3306  00015E  0B0F               	andlw	15
  3307  000160  0F30               	addlw	48
  3308  000162  0100               	movlb	0	; () banked
  3309  000164  6FAE               	movwf	_time& (0+255),b
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;Main_Screen.c: 108: time[1] = (hour & 0x0f)+ '0';
  3313  000166  505E               	movf	_hour,w,c
  3314  000168  0B0F               	andlw	15
  3315  00016A  0F30               	addlw	48
  3316  00016C  0100               	movlb	0	; () banked
  3317  00016E  6FAF               	movwf	(_time+1)& (0+255),b
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;Main_Screen.c: 109: time[3] = (minute>>4)+ '0';
  3321  000170  385F               	swapf	_minute,w,c
  3322  000172  0B0F               	andlw	15
  3323  000174  0F30               	addlw	48
  3324  000176  0100               	movlb	0	; () banked
  3325  000178  6FB1               	movwf	(_time+3)& (0+255),b
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;Main_Screen.c: 110: time[4] = (minute & 0x0f) + '0';
  3329  00017A  505F               	movf	_minute,w,c
  3330  00017C  0B0F               	andlw	15
  3331  00017E  0F30               	addlw	48
  3332  000180  0100               	movlb	0	; () banked
  3333  000182  6FB2               	movwf	(_time+4)& (0+255),b
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;Main_Screen.c: 111: time[6] = (second>>4) + '0';
  3337  000184  3862               	swapf	_second,w,c
  3338  000186  0B0F               	andlw	15
  3339  000188  0F30               	addlw	48
  3340  00018A  0100               	movlb	0	; () banked
  3341  00018C  6FB4               	movwf	(_time+6)& (0+255),b
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;Main_Screen.c: 112: time[7] = (second & 0x0f) + '0';
  3345  00018E  5062               	movf	_second,w,c
  3346  000190  0B0F               	andlw	15
  3347  000192  0F30               	addlw	48
  3348  000194  0100               	movlb	0	; () banked
  3349  000196  6FB5               	movwf	(_time+7)& (0+255),b
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;Main_Screen.c: 113: date[0] = (month>>4) +'0';
  3353  000198  3860               	swapf	_month,w,c
  3354  00019A  0B0F               	andlw	15
  3355  00019C  0F30               	addlw	48
  3356  00019E  0100               	movlb	0	; () banked
  3357  0001A0  6F8A               	movwf	_date& (0+255),b
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;Main_Screen.c: 114: date[1] = (month & 0x0f) + '0';
  3361  0001A2  5060               	movf	_month,w,c
  3362  0001A4  0B0F               	andlw	15
  3363  0001A6  0F30               	addlw	48
  3364  0001A8  0100               	movlb	0	; () banked
  3365  0001AA  6F8B               	movwf	(_date+1)& (0+255),b
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;Main_Screen.c: 115: date[3] = (day>>4) + '0';
  3369  0001AC  385A               	swapf	_day,w,c
  3370  0001AE  0B0F               	andlw	15
  3371  0001B0  0F30               	addlw	48
  3372  0001B2  0100               	movlb	0	; () banked
  3373  0001B4  6F8D               	movwf	(_date+3)& (0+255),b
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;Main_Screen.c: 116: date[4] = (day & 0x0f) + '0';
  3377  0001B6  505A               	movf	_day,w,c
  3378  0001B8  0B0F               	andlw	15
  3379  0001BA  0F30               	addlw	48
  3380  0001BC  0100               	movlb	0	; () banked
  3381  0001BE  6F8E               	movwf	(_date+4)& (0+255),b
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;Main_Screen.c: 117: date[6] = (year>>4) + '0';
  3385  0001C0  386D               	swapf	_year,w,c
  3386  0001C2  0B0F               	andlw	15
  3387  0001C4  0F30               	addlw	48
  3388  0001C6  0100               	movlb	0	; () banked
  3389  0001C8  6F90               	movwf	(_date+6)& (0+255),b
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;Main_Screen.c: 118: date[7] = (year & 0x0f) + '0';
  3393  0001CA  506D               	movf	_year,w,c
  3394  0001CC  0B0F               	andlw	15
  3395  0001CE  0F30               	addlw	48
  3396  0001D0  0100               	movlb	0	; () banked
  3397  0001D2  6F91               	movwf	(_date+7)& (0+255),b
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;Main_Screen.c: 119: alarm_time[0] = (alarm_hour>>4) + '0';
  3401  0001D4  3856               	swapf	_alarm_hour,w,c
  3402  0001D6  0B0F               	andlw	15
  3403  0001D8  0F30               	addlw	48
  3404  0001DA  0100               	movlb	0	; () banked
  3405  0001DC  6F81               	movwf	_alarm_time& (0+255),b
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;Main_Screen.c: 120: alarm_time[1] = (alarm_hour & 0x0f)+ '0';
  3409  0001DE  5056               	movf	_alarm_hour,w,c
  3410  0001E0  0B0F               	andlw	15
  3411  0001E2  0F30               	addlw	48
  3412  0001E4  0100               	movlb	0	; () banked
  3413  0001E6  6F82               	movwf	(_alarm_time+1)& (0+255),b
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;Main_Screen.c: 121: alarm_time[3] = (alarm_minute>>4) + '0';
  3417  0001E8  3857               	swapf	_alarm_minute,w,c
  3418  0001EA  0B0F               	andlw	15
  3419  0001EC  0F30               	addlw	48
  3420  0001EE  0100               	movlb	0	; () banked
  3421  0001F0  6F84               	movwf	(_alarm_time+3)& (0+255),b
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;Main_Screen.c: 122: alarm_time[4] = (alarm_minute & 0x0f) + '0';
  3425  0001F2  5057               	movf	_alarm_minute,w,c
  3426  0001F4  0B0F               	andlw	15
  3427  0001F6  0F30               	addlw	48
  3428  0001F8  0100               	movlb	0	; () banked
  3429  0001FA  6F85               	movwf	(_alarm_time+4)& (0+255),b
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;Main_Screen.c: 123: alarm_time[6] = (alarm_second>>4) + '0';
  3433  0001FC  3858               	swapf	_alarm_second,w,c
  3434  0001FE  0B0F               	andlw	15
  3435  000200  0F30               	addlw	48
  3436  000202  0100               	movlb	0	; () banked
  3437  000204  6F87               	movwf	(_alarm_time+6)& (0+255),b
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;Main_Screen.c: 124: alarm_time[7] = (alarm_second & 0x0f) + '0';
  3441  000206  5058               	movf	_alarm_second,w,c
  3442  000208  0B0F               	andlw	15
  3443  00020A  0F30               	addlw	48
  3444  00020C  0100               	movlb	0	; () banked
  3445  00020E  6F88               	movwf	(_alarm_time+7)& (0+255),b
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;Main_Screen.c: 126: if (ALARMEN == 1)
  3449  000210  0444               	decf	_ALARMEN,w,c
  3450  000212  1045               	iorwf	_ALARMEN+1,w,c
  3451  000214  A4D8               	btfss	status,2,c
  3452  000216  D00B               	goto	l9740
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;Main_Screen.c: 127: {
  3456                           ;Main_Screen.c: 128: strcpy(Alarm_SW_Txt, "ON ");
  3457  000218  0ECC               	movlw	low _Alarm_SW_Txt
  3458  00021A  6E11               	movwf	strcpy@to,c
  3459  00021C  0E00               	movlw	high _Alarm_SW_Txt
  3460  00021E  6E12               	movwf	strcpy@to+1,c
  3461  000220  0EE9               	movlw	low STR_19
  3462  000222  6E13               	movwf	strcpy@from,c
  3463  000224  0EFF               	movlw	high STR_19
  3464  000226  6E14               	movwf	strcpy@from+1,c
  3465  000228  EC3C  F01C         	call	_strcpy	;wreg free
  3466                           
  3467                           ;Main_Screen.c: 129: }
  3468  00022C  D00B               	goto	l9742
  3469  00022E                     l9740:
  3470                           
  3471                           ;Main_Screen.c: 130: else
  3472                           ;Main_Screen.c: 131: {
  3473                           ;Main_Screen.c: 132: strcpy(Alarm_SW_Txt, "OFF");
  3474  00022E  0ECC               	movlw	low _Alarm_SW_Txt
  3475  000230  6E11               	movwf	strcpy@to,c
  3476  000232  0E00               	movlw	high _Alarm_SW_Txt
  3477  000234  6E12               	movwf	strcpy@to+1,c
  3478  000236  0EED               	movlw	low STR_20
  3479  000238  6E13               	movwf	strcpy@from,c
  3480  00023A  0EFF               	movlw	high STR_20
  3481  00023C  6E14               	movwf	strcpy@from+1,c
  3482  00023E  EC3C  F01C         	call	_strcpy	;wreg free
  3483  000242  D000               	goto	l9742
  3484  000244                     l9742:
  3485                           
  3486                           ;Main_Screen.c: 133: }
  3487                           ;Main_Screen.c: 135: Heater_Set_Temp_Txt[0] = heater_set_temp/100 + '0';
  3488  000244  C06E  F153         	movff	_heater_set_temp,___awdiv@dividend
  3489  000248  0101               	movlb	1	; () banked
  3490  00024A  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
  3491  00024C  0E00               	movlw	0
  3492  00024E  0101               	movlb	1	; () banked
  3493  000250  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3494  000252  0E64               	movlw	100
  3495  000254  6F55               	movwf	___awdiv@divisor& (0+255),b
  3496  000256  ECB4  F012         	call	___awdiv	;wreg free
  3497  00025A  0101               	movlb	1	; () banked
  3498  00025C  5153               	movf	?___awdiv& (0+255),w,b
  3499  00025E  0F30               	addlw	48
  3500  000260  0100               	movlb	0	; () banked
  3501  000262  6FBD               	movwf	_Heater_Set_Temp_Txt& (0+255),b
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;Main_Screen.c: 136: Heater_Set_Temp_Txt[1] = (heater_set_temp%100)/10 + '0';
  3505  000264  0E00               	movlw	0
  3506  000266  6E3E               	movwf	___awmod@divisor+1,c
  3507  000268  0E64               	movlw	100
  3508  00026A  6E3D               	movwf	___awmod@divisor,c
  3509  00026C  C06E  F03B         	movff	_heater_set_temp,___awmod@dividend
  3510  000270  6A3C               	clrf	___awmod@dividend+1,c
  3511  000272  EC5C  F017         	call	___awmod	;wreg free
  3512  000276  C03B  F153         	movff	?___awmod,___awdiv@dividend
  3513  00027A  C03C  F154         	movff	?___awmod+1,___awdiv@dividend+1
  3514  00027E  0E00               	movlw	0
  3515  000280  0101               	movlb	1	; () banked
  3516  000282  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3517  000284  0E0A               	movlw	10
  3518  000286  6F55               	movwf	___awdiv@divisor& (0+255),b
  3519  000288  ECB4  F012         	call	___awdiv	;wreg free
  3520  00028C  0101               	movlb	1	; () banked
  3521  00028E  5153               	movf	?___awdiv& (0+255),w,b
  3522  000290  0F30               	addlw	48
  3523  000292  0100               	movlb	0	; () banked
  3524  000294  6FBE               	movwf	(_Heater_Set_Temp_Txt+1)& (0+255),b
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;Main_Screen.c: 137: Heater_Set_Temp_Txt[2] = (heater_set_temp%10) + '0';
  3528  000296  C06E  F03B         	movff	_heater_set_temp,___awmod@dividend
  3529  00029A  6A3C               	clrf	___awmod@dividend+1,c
  3530  00029C  0E00               	movlw	0
  3531  00029E  6E3E               	movwf	___awmod@divisor+1,c
  3532  0002A0  0E0A               	movlw	10
  3533  0002A2  6E3D               	movwf	___awmod@divisor,c
  3534  0002A4  EC5C  F017         	call	___awmod	;wreg free
  3535  0002A8  503B               	movf	?___awmod,w,c
  3536  0002AA  0F30               	addlw	48
  3537  0002AC  0100               	movlb	0	; () banked
  3538  0002AE  6FBF               	movwf	(_Heater_Set_Temp_Txt+2)& (0+255),b
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;Main_Screen.c: 139: if (HEATER == 1)
  3542  0002B0  0450               	decf	_HEATER,w,c
  3543  0002B2  A4D8               	btfss	status,2,c
  3544  0002B4  D00B               	goto	l9752
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;Main_Screen.c: 140: {
  3548                           ;Main_Screen.c: 141: strcpy(Heater_SW_Txt, "ON ");
  3549  0002B6  0ED4               	movlw	low _Heater_SW_Txt
  3550  0002B8  6E11               	movwf	strcpy@to,c
  3551  0002BA  0E00               	movlw	high _Heater_SW_Txt
  3552  0002BC  6E12               	movwf	strcpy@to+1,c
  3553  0002BE  0EE9               	movlw	low STR_19
  3554  0002C0  6E13               	movwf	strcpy@from,c
  3555  0002C2  0EFF               	movlw	high STR_19
  3556  0002C4  6E14               	movwf	strcpy@from+1,c
  3557  0002C6  EC3C  F01C         	call	_strcpy	;wreg free
  3558                           
  3559                           ;Main_Screen.c: 142: }
  3560  0002CA  D00B               	goto	l9754
  3561  0002CC                     l9752:
  3562                           
  3563                           ;Main_Screen.c: 143: else
  3564                           ;Main_Screen.c: 144: {
  3565                           ;Main_Screen.c: 145: strcpy(Heater_SW_Txt, "OFF");
  3566  0002CC  0ED4               	movlw	low _Heater_SW_Txt
  3567  0002CE  6E11               	movwf	strcpy@to,c
  3568  0002D0  0E00               	movlw	high _Heater_SW_Txt
  3569  0002D2  6E12               	movwf	strcpy@to+1,c
  3570  0002D4  0EED               	movlw	low STR_20
  3571  0002D6  6E13               	movwf	strcpy@from,c
  3572  0002D8  0EFF               	movlw	high STR_20
  3573  0002DA  6E14               	movwf	strcpy@from+1,c
  3574  0002DC  EC3C  F01C         	call	_strcpy	;wreg free
  3575  0002E0  D000               	goto	l9754
  3576  0002E2                     l9754:
  3577                           
  3578                           ;Main_Screen.c: 146: }
  3579                           ;Main_Screen.c: 148: if (PORTAbits.RA4 == 0) RTC_ALARM_Txt[0] = '1';
  3580  0002E2  B880               	btfsc	3968,4,c	;volatile
  3581  0002E4  D002               	goto	l9758
  3582  0002E6  0E31               	movlw	49
  3583  0002E8  D001               	goto	L3
  3584  0002EA                     l9758:
  3585                           
  3586                           ;Main_Screen.c: 149: else RTC_ALARM_Txt[0] = '0';
  3587  0002EA  0E30               	movlw	48
  3588  0002EC                     L3:
  3589  0002EC  0100               	movlb	0	; () banked
  3590  0002EE  6FE0               	movwf	_RTC_ALARM_Txt& (0+255),b
  3591  0002F0  D000               	goto	l9760
  3592  0002F2                     l9760:
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;Main_Screen.c: 152: DC_Txt[0] = duty_cycle/100 + '0';
  3596  0002F2  C05C  F153         	movff	_duty_cycle,___awdiv@dividend
  3597  0002F6  0101               	movlb	1	; () banked
  3598  0002F8  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
  3599  0002FA  0E00               	movlw	0
  3600  0002FC  0101               	movlb	1	; () banked
  3601  0002FE  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3602  000300  0E64               	movlw	100
  3603  000302  6F55               	movwf	___awdiv@divisor& (0+255),b
  3604  000304  ECB4  F012         	call	___awdiv	;wreg free
  3605  000308  0101               	movlb	1	; () banked
  3606  00030A  5153               	movf	?___awdiv& (0+255),w,b
  3607  00030C  0F30               	addlw	48
  3608  00030E  0100               	movlb	0	; () banked
  3609  000310  6FD0               	movwf	_DC_Txt& (0+255),b
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;Main_Screen.c: 153: DC_Txt[1] = (duty_cycle%100)/10 + '0';
  3613  000312  0E00               	movlw	0
  3614  000314  6E3E               	movwf	___awmod@divisor+1,c
  3615  000316  0E64               	movlw	100
  3616  000318  6E3D               	movwf	___awmod@divisor,c
  3617  00031A  C05C  F03B         	movff	_duty_cycle,___awmod@dividend
  3618  00031E  6A3C               	clrf	___awmod@dividend+1,c
  3619  000320  EC5C  F017         	call	___awmod	;wreg free
  3620  000324  C03B  F153         	movff	?___awmod,___awdiv@dividend
  3621  000328  C03C  F154         	movff	?___awmod+1,___awdiv@dividend+1
  3622  00032C  0E00               	movlw	0
  3623  00032E  0101               	movlb	1	; () banked
  3624  000330  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3625  000332  0E0A               	movlw	10
  3626  000334  6F55               	movwf	___awdiv@divisor& (0+255),b
  3627  000336  ECB4  F012         	call	___awdiv	;wreg free
  3628  00033A  0101               	movlb	1	; () banked
  3629  00033C  5153               	movf	?___awdiv& (0+255),w,b
  3630  00033E  0F30               	addlw	48
  3631  000340  0100               	movlb	0	; () banked
  3632  000342  6FD1               	movwf	(_DC_Txt+1)& (0+255),b
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;Main_Screen.c: 154: DC_Txt[2] = (duty_cycle%10) + '0';
  3636  000344  C05C  F03B         	movff	_duty_cycle,___awmod@dividend
  3637  000348  6A3C               	clrf	___awmod@dividend+1,c
  3638  00034A  0E00               	movlw	0
  3639  00034C  6E3E               	movwf	___awmod@divisor+1,c
  3640  00034E  0E0A               	movlw	10
  3641  000350  6E3D               	movwf	___awmod@divisor,c
  3642  000352  EC5C  F017         	call	___awmod	;wreg free
  3643  000356  503B               	movf	?___awmod,w,c
  3644  000358  0F30               	addlw	48
  3645  00035A  0100               	movlb	0	; () banked
  3646  00035C  6FD2               	movwf	(_DC_Txt+2)& (0+255),b
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;Main_Screen.c: 156: Volt_Txt[0] = ((int)volt) + '0';
  3650  00035E  C0E6  F02C         	movff	_volt,___fttol@f1
  3651  000362  C0E7  F02D         	movff	_volt+1,___fttol@f1+1
  3652  000366  C0E8  F02E         	movff	_volt+2,___fttol@f1+2
  3653  00036A  ECFA  F010         	call	___fttol	;wreg free
  3654  00036E  502C               	movf	?___fttol,w,c
  3655  000370  0F30               	addlw	48
  3656  000372  0100               	movlb	0	; () banked
  3657  000374  6FB7               	movwf	_Volt_Txt& (0+255),b
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;Main_Screen.c: 157: Volt_Txt[2] = ((((int)(volt*100))%100)/10) + '0';
  3661  000376  0E00               	movlw	0
  3662  000378  6E3E               	movwf	___awmod@divisor+1,c
  3663  00037A  0E64               	movlw	100
  3664  00037C  6E3D               	movwf	___awmod@divisor,c
  3665  00037E  0E00               	movlw	0
  3666  000380  6E20               	movwf	___ftmul@f2,c
  3667  000382  0EC8               	movlw	200
  3668  000384  6E21               	movwf	___ftmul@f2+1,c
  3669  000386  0E42               	movlw	66
  3670  000388  6E22               	movwf	___ftmul@f2+2,c
  3671  00038A  C0E6  F01D         	movff	_volt,___ftmul@f1
  3672  00038E  C0E7  F01E         	movff	_volt+1,___ftmul@f1+1
  3673  000392  C0E8  F01F         	movff	_volt+2,___ftmul@f1+2
  3674  000396  EC13  F00F         	call	___ftmul	;wreg free
  3675  00039A  C01D  F02C         	movff	?___ftmul,___fttol@f1
  3676  00039E  C01E  F02D         	movff	?___ftmul+1,___fttol@f1+1
  3677  0003A2  C01F  F02E         	movff	?___ftmul+2,___fttol@f1+2
  3678  0003A6  ECFA  F010         	call	___fttol	;wreg free
  3679  0003AA  C02C  F03B         	movff	?___fttol,___awmod@dividend
  3680  0003AE  C02D  F03C         	movff	?___fttol+1,___awmod@dividend+1
  3681  0003B2  EC5C  F017         	call	___awmod	;wreg free
  3682  0003B6  C03B  F153         	movff	?___awmod,___awdiv@dividend
  3683  0003BA  C03C  F154         	movff	?___awmod+1,___awdiv@dividend+1
  3684  0003BE  0E00               	movlw	0
  3685  0003C0  0101               	movlb	1	; () banked
  3686  0003C2  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3687  0003C4  0E0A               	movlw	10
  3688  0003C6  6F55               	movwf	___awdiv@divisor& (0+255),b
  3689  0003C8  ECB4  F012         	call	___awdiv	;wreg free
  3690  0003CC  0101               	movlb	1	; () banked
  3691  0003CE  5153               	movf	?___awdiv& (0+255),w,b
  3692  0003D0  0F30               	addlw	48
  3693  0003D2  0100               	movlb	0	; () banked
  3694  0003D4  6FB9               	movwf	(_Volt_Txt+2)& (0+255),b
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;Main_Screen.c: 158: Volt_Txt[3] = (((int)(volt*100))%10) + '0';
  3698  0003D6  0E00               	movlw	0
  3699  0003D8  6E20               	movwf	___ftmul@f2,c
  3700  0003DA  0EC8               	movlw	200
  3701  0003DC  6E21               	movwf	___ftmul@f2+1,c
  3702  0003DE  0E42               	movlw	66
  3703  0003E0  6E22               	movwf	___ftmul@f2+2,c
  3704  0003E2  C0E6  F01D         	movff	_volt,___ftmul@f1
  3705  0003E6  C0E7  F01E         	movff	_volt+1,___ftmul@f1+1
  3706  0003EA  C0E8  F01F         	movff	_volt+2,___ftmul@f1+2
  3707  0003EE  EC13  F00F         	call	___ftmul	;wreg free
  3708  0003F2  C01D  F02C         	movff	?___ftmul,___fttol@f1
  3709  0003F6  C01E  F02D         	movff	?___ftmul+1,___fttol@f1+1
  3710  0003FA  C01F  F02E         	movff	?___ftmul+2,___fttol@f1+2
  3711  0003FE  ECFA  F010         	call	___fttol	;wreg free
  3712  000402  C02C  F03B         	movff	?___fttol,___awmod@dividend
  3713  000406  C02D  F03C         	movff	?___fttol+1,___awmod@dividend+1
  3714  00040A  0E00               	movlw	0
  3715  00040C  6E3E               	movwf	___awmod@divisor+1,c
  3716  00040E  0E0A               	movlw	10
  3717  000410  6E3D               	movwf	___awmod@divisor,c
  3718  000412  EC5C  F017         	call	___awmod	;wreg free
  3719  000416  503B               	movf	?___awmod,w,c
  3720  000418  0F30               	addlw	48
  3721  00041A  0100               	movlb	0	; () banked
  3722  00041C  6FBA               	movwf	(_Volt_Txt+3)& (0+255),b
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;Main_Screen.c: 160: RPM_Txt[0] = rpm/1000 + '0';
  3726  00041E  C04C  F153         	movff	_rpm,___awdiv@dividend
  3727  000422  C04D  F154         	movff	_rpm+1,___awdiv@dividend+1
  3728  000426  0E03               	movlw	3
  3729  000428  0101               	movlb	1	; () banked
  3730  00042A  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3731  00042C  0EE8               	movlw	232
  3732  00042E  6F55               	movwf	___awdiv@divisor& (0+255),b
  3733  000430  ECB4  F012         	call	___awdiv	;wreg free
  3734  000434  0101               	movlb	1	; () banked
  3735  000436  5153               	movf	?___awdiv& (0+255),w,b
  3736  000438  0F30               	addlw	48
  3737  00043A  0100               	movlb	0	; () banked
  3738  00043C  6FC2               	movwf	_RPM_Txt& (0+255),b
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;Main_Screen.c: 161: RPM_Txt[1] = (rpm%1000)/100 + '0';
  3742  00043E  0E03               	movlw	3
  3743  000440  6E3E               	movwf	___awmod@divisor+1,c
  3744  000442  0EE8               	movlw	232
  3745  000444  6E3D               	movwf	___awmod@divisor,c
  3746  000446  C04C  F03B         	movff	_rpm,___awmod@dividend
  3747  00044A  C04D  F03C         	movff	_rpm+1,___awmod@dividend+1
  3748  00044E  EC5C  F017         	call	___awmod	;wreg free
  3749  000452  C03B  F153         	movff	?___awmod,___awdiv@dividend
  3750  000456  C03C  F154         	movff	?___awmod+1,___awdiv@dividend+1
  3751  00045A  0E00               	movlw	0
  3752  00045C  0101               	movlb	1	; () banked
  3753  00045E  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3754  000460  0E64               	movlw	100
  3755  000462  6F55               	movwf	___awdiv@divisor& (0+255),b
  3756  000464  ECB4  F012         	call	___awdiv	;wreg free
  3757  000468  0101               	movlb	1	; () banked
  3758  00046A  5153               	movf	?___awdiv& (0+255),w,b
  3759  00046C  0F30               	addlw	48
  3760  00046E  0100               	movlb	0	; () banked
  3761  000470  6FC3               	movwf	(_RPM_Txt+1)& (0+255),b
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;Main_Screen.c: 162: RPM_Txt[2] = (rpm%100)/10 +'0';
  3765  000472  0E00               	movlw	0
  3766  000474  6E3E               	movwf	___awmod@divisor+1,c
  3767  000476  0E64               	movlw	100
  3768  000478  6E3D               	movwf	___awmod@divisor,c
  3769  00047A  C04C  F03B         	movff	_rpm,___awmod@dividend
  3770  00047E  C04D  F03C         	movff	_rpm+1,___awmod@dividend+1
  3771  000482  EC5C  F017         	call	___awmod	;wreg free
  3772  000486  C03B  F153         	movff	?___awmod,___awdiv@dividend
  3773  00048A  C03C  F154         	movff	?___awmod+1,___awdiv@dividend+1
  3774  00048E  0E00               	movlw	0
  3775  000490  0101               	movlb	1	; () banked
  3776  000492  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  3777  000494  0E0A               	movlw	10
  3778  000496  6F55               	movwf	___awdiv@divisor& (0+255),b
  3779  000498  ECB4  F012         	call	___awdiv	;wreg free
  3780  00049C  0101               	movlb	1	; () banked
  3781  00049E  5153               	movf	?___awdiv& (0+255),w,b
  3782  0004A0  0F30               	addlw	48
  3783  0004A2  0100               	movlb	0	; () banked
  3784  0004A4  6FC4               	movwf	(_RPM_Txt+2)& (0+255),b
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;Main_Screen.c: 163: RPM_Txt[3] = rpm%10 + '0';
  3788  0004A6  C04C  F03B         	movff	_rpm,___awmod@dividend
  3789  0004AA  C04D  F03C         	movff	_rpm+1,___awmod@dividend+1
  3790  0004AE  0E00               	movlw	0
  3791  0004B0  6E3E               	movwf	___awmod@divisor+1,c
  3792  0004B2  0E0A               	movlw	10
  3793  0004B4  6E3D               	movwf	___awmod@divisor,c
  3794  0004B6  EC5C  F017         	call	___awmod	;wreg free
  3795  0004BA  503B               	movf	?___awmod,w,c
  3796  0004BC  0F30               	addlw	48
  3797  0004BE  0100               	movlb	0	; () banked
  3798  0004C0  6FC5               	movwf	(_RPM_Txt+3)& (0+255),b
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;Main_Screen.c: 165: drawtext(1, 23, tempC , 0xFFE0 , 0x0000 , 2);
  3802  0004C2  0E17               	movlw	23
  3803  0004C4  6E39               	movwf	drawtext@y,c
  3804  0004C6  0ED8               	movlw	low _tempC
  3805  0004C8  6E3A               	movwf	drawtext@_text,c
  3806  0004CA  0E00               	movlw	high _tempC
  3807  0004CC  6E3B               	movwf	drawtext@_text+1,c
  3808  0004CE  0EFF               	movlw	255
  3809  0004D0  6E3D               	movwf	drawtext@color+1,c
  3810  0004D2  0EE0               	movlw	224
  3811  0004D4  6E3C               	movwf	drawtext@color,c
  3812  0004D6  0E00               	movlw	0
  3813  0004D8  6E3F               	movwf	drawtext@bg+1,c
  3814  0004DA  0E00               	movlw	0
  3815  0004DC  6E3E               	movwf	drawtext@bg,c
  3816  0004DE  0E02               	movlw	2
  3817  0004E0  6E40               	movwf	drawtext@size,c
  3818  0004E2  0E01               	movlw	1
  3819  0004E4  ECFC  F00C         	call	_drawtext
  3820                           
  3821                           ;Main_Screen.c: 166: drawtext(70, 23, tempF , 0xFFE0 , 0x0000 , 2);
  3822  0004E8  0E17               	movlw	23
  3823  0004EA  6E39               	movwf	drawtext@y,c
  3824  0004EC  0EDC               	movlw	low _tempF
  3825  0004EE  6E3A               	movwf	drawtext@_text,c
  3826  0004F0  0E00               	movlw	high _tempF
  3827  0004F2  6E3B               	movwf	drawtext@_text+1,c
  3828  0004F4  0EFF               	movlw	255
  3829  0004F6  6E3D               	movwf	drawtext@color+1,c
  3830  0004F8  0EE0               	movlw	224
  3831  0004FA  6E3C               	movwf	drawtext@color,c
  3832  0004FC  0E00               	movlw	0
  3833  0004FE  6E3F               	movwf	drawtext@bg+1,c
  3834  000500  0E00               	movlw	0
  3835  000502  6E3E               	movwf	drawtext@bg,c
  3836  000504  0E02               	movlw	2
  3837  000506  6E40               	movwf	drawtext@size,c
  3838  000508  0E46               	movlw	70
  3839  00050A  ECFC  F00C         	call	_drawtext
  3840                           
  3841                           ;Main_Screen.c: 167: drawtext(15 , 52 , time , 0x07FF , 0x0000 , 2);
  3842  00050E  0E34               	movlw	52
  3843  000510  6E39               	movwf	drawtext@y,c
  3844  000512  0EAE               	movlw	low _time
  3845  000514  6E3A               	movwf	drawtext@_text,c
  3846  000516  0E00               	movlw	high _time
  3847  000518  6E3B               	movwf	drawtext@_text+1,c
  3848  00051A  0E07               	movlw	7
  3849  00051C  6E3D               	movwf	drawtext@color+1,c
  3850  00051E  683C               	setf	drawtext@color,c
  3851  000520  0E00               	movlw	0
  3852  000522  6E3F               	movwf	drawtext@bg+1,c
  3853  000524  0E00               	movlw	0
  3854  000526  6E3E               	movwf	drawtext@bg,c
  3855  000528  0E02               	movlw	2
  3856  00052A  6E40               	movwf	drawtext@size,c
  3857  00052C  0E0F               	movlw	15
  3858  00052E  ECFC  F00C         	call	_drawtext
  3859                           
  3860                           ;Main_Screen.c: 168: drawtext(15 , 82 , date , 0x07E0 , 0x0000 , 2);
  3861  000532  0E52               	movlw	82
  3862  000534  6E39               	movwf	drawtext@y,c
  3863  000536  0E8A               	movlw	low _date
  3864  000538  6E3A               	movwf	drawtext@_text,c
  3865  00053A  0E00               	movlw	high _date
  3866  00053C  6E3B               	movwf	drawtext@_text+1,c
  3867  00053E  0E07               	movlw	7
  3868  000540  6E3D               	movwf	drawtext@color+1,c
  3869  000542  0EE0               	movlw	224
  3870  000544  6E3C               	movwf	drawtext@color,c
  3871  000546  0E00               	movlw	0
  3872  000548  6E3F               	movwf	drawtext@bg+1,c
  3873  00054A  0E00               	movlw	0
  3874  00054C  6E3E               	movwf	drawtext@bg,c
  3875  00054E  0E02               	movlw	2
  3876  000550  6E40               	movwf	drawtext@size,c
  3877  000552  0E0F               	movlw	15
  3878  000554  ECFC  F00C         	call	_drawtext
  3879                           
  3880                           ;Main_Screen.c: 169: drawtext(10 , 110 , alarm_time , 0x07FF , 0x0000 , 1);
  3881  000558  0E6E               	movlw	110
  3882  00055A  6E39               	movwf	drawtext@y,c
  3883  00055C  0E81               	movlw	low _alarm_time
  3884  00055E  6E3A               	movwf	drawtext@_text,c
  3885  000560  0E00               	movlw	high _alarm_time
  3886  000562  6E3B               	movwf	drawtext@_text+1,c
  3887  000564  0E07               	movlw	7
  3888  000566  6E3D               	movwf	drawtext@color+1,c
  3889  000568  683C               	setf	drawtext@color,c
  3890  00056A  0E00               	movlw	0
  3891  00056C  6E3F               	movwf	drawtext@bg+1,c
  3892  00056E  0E00               	movlw	0
  3893  000570  6E3E               	movwf	drawtext@bg,c
  3894  000572  0E01               	movlw	1
  3895  000574  6E40               	movwf	drawtext@size,c
  3896  000576  0E0A               	movlw	10
  3897  000578  ECFC  F00C         	call	_drawtext
  3898                           
  3899                           ;Main_Screen.c: 170: drawtext(95 , 110 , Alarm_SW_Txt , 0x07FF , 0x0000 , 1);
  3900  00057C  0E6E               	movlw	110
  3901  00057E  6E39               	movwf	drawtext@y,c
  3902  000580  0ECC               	movlw	low _Alarm_SW_Txt
  3903  000582  6E3A               	movwf	drawtext@_text,c
  3904  000584  0E00               	movlw	high _Alarm_SW_Txt
  3905  000586  6E3B               	movwf	drawtext@_text+1,c
  3906  000588  0E07               	movlw	7
  3907  00058A  6E3D               	movwf	drawtext@color+1,c
  3908  00058C  683C               	setf	drawtext@color,c
  3909  00058E  0E00               	movlw	0
  3910  000590  6E3F               	movwf	drawtext@bg+1,c
  3911  000592  0E00               	movlw	0
  3912  000594  6E3E               	movwf	drawtext@bg,c
  3913  000596  0E01               	movlw	1
  3914  000598  6E40               	movwf	drawtext@size,c
  3915  00059A  0E5F               	movlw	95
  3916  00059C  ECFC  F00C         	call	_drawtext
  3917                           
  3918                           ;Main_Screen.c: 171: drawtext(35, 130 ,Heater_Set_Temp_Txt, 0xF800, 0x0000, 1);
  3919  0005A0  0E82               	movlw	130
  3920  0005A2  6E39               	movwf	drawtext@y,c
  3921  0005A4  0EBD               	movlw	low _Heater_Set_Temp_Txt
  3922  0005A6  6E3A               	movwf	drawtext@_text,c
  3923  0005A8  0E00               	movlw	high _Heater_Set_Temp_Txt
  3924  0005AA  6E3B               	movwf	drawtext@_text+1,c
  3925  0005AC  0EF8               	movlw	248
  3926  0005AE  6E3D               	movwf	drawtext@color+1,c
  3927  0005B0  0E00               	movlw	0
  3928  0005B2  6E3C               	movwf	drawtext@color,c
  3929  0005B4  0E00               	movlw	0
  3930  0005B6  6E3F               	movwf	drawtext@bg+1,c
  3931  0005B8  0E00               	movlw	0
  3932  0005BA  6E3E               	movwf	drawtext@bg,c
  3933  0005BC  0E01               	movlw	1
  3934  0005BE  6E40               	movwf	drawtext@size,c
  3935  0005C0  0E23               	movlw	35
  3936  0005C2  ECFC  F00C         	call	_drawtext
  3937                           
  3938                           ;Main_Screen.c: 172: drawtext(95, 130, Heater_SW_Txt, 0xF800 , 0x0000 , 1);
  3939  0005C6  0E82               	movlw	130
  3940  0005C8  6E39               	movwf	drawtext@y,c
  3941  0005CA  0ED4               	movlw	low _Heater_SW_Txt
  3942  0005CC  6E3A               	movwf	drawtext@_text,c
  3943  0005CE  0E00               	movlw	high _Heater_SW_Txt
  3944  0005D0  6E3B               	movwf	drawtext@_text+1,c
  3945  0005D2  0EF8               	movlw	248
  3946  0005D4  6E3D               	movwf	drawtext@color+1,c
  3947  0005D6  0E00               	movlw	0
  3948  0005D8  6E3C               	movwf	drawtext@color,c
  3949  0005DA  0E00               	movlw	0
  3950  0005DC  6E3F               	movwf	drawtext@bg+1,c
  3951  0005DE  0E00               	movlw	0
  3952  0005E0  6E3E               	movwf	drawtext@bg,c
  3953  0005E2  0E01               	movlw	1
  3954  0005E4  6E40               	movwf	drawtext@size,c
  3955  0005E6  0E5F               	movlw	95
  3956  0005E8  ECFC  F00C         	call	_drawtext
  3957                           
  3958                           ;Main_Screen.c: 173: drawtext(10, 150, DC_Txt, 0x07E0, 0x0000, 1);
  3959  0005EC  0E96               	movlw	150
  3960  0005EE  6E39               	movwf	drawtext@y,c
  3961  0005F0  0ED0               	movlw	low _DC_Txt
  3962  0005F2  6E3A               	movwf	drawtext@_text,c
  3963  0005F4  0E00               	movlw	high _DC_Txt
  3964  0005F6  6E3B               	movwf	drawtext@_text+1,c
  3965  0005F8  0E07               	movlw	7
  3966  0005FA  6E3D               	movwf	drawtext@color+1,c
  3967  0005FC  0EE0               	movlw	224
  3968  0005FE  6E3C               	movwf	drawtext@color,c
  3969  000600  0E00               	movlw	0
  3970  000602  6E3F               	movwf	drawtext@bg+1,c
  3971  000604  0E00               	movlw	0
  3972  000606  6E3E               	movwf	drawtext@bg,c
  3973  000608  0E01               	movlw	1
  3974  00060A  6E40               	movwf	drawtext@size,c
  3975  00060C  0E0A               	movlw	10
  3976  00060E  ECFC  F00C         	call	_drawtext
  3977                           
  3978                           ;Main_Screen.c: 174: drawtext(35, 150, RTC_ALARM_Txt, 0x07E0, 0x0000, 1);
  3979  000612  0E96               	movlw	150
  3980  000614  6E39               	movwf	drawtext@y,c
  3981  000616  0EE0               	movlw	low _RTC_ALARM_Txt
  3982  000618  6E3A               	movwf	drawtext@_text,c
  3983  00061A  0E00               	movlw	high _RTC_ALARM_Txt
  3984  00061C  6E3B               	movwf	drawtext@_text+1,c
  3985  00061E  0E07               	movlw	7
  3986  000620  6E3D               	movwf	drawtext@color+1,c
  3987  000622  0EE0               	movlw	224
  3988  000624  6E3C               	movwf	drawtext@color,c
  3989  000626  0E00               	movlw	0
  3990  000628  6E3F               	movwf	drawtext@bg+1,c
  3991  00062A  0E00               	movlw	0
  3992  00062C  6E3E               	movwf	drawtext@bg,c
  3993  00062E  0E01               	movlw	1
  3994  000630  6E40               	movwf	drawtext@size,c
  3995  000632  0E23               	movlw	35
  3996  000634  ECFC  F00C         	call	_drawtext
  3997                           
  3998                           ;Main_Screen.c: 175: drawtext(50, 150, Volt_Txt, 0x07E0, 0x0000, 1);
  3999  000638  0E96               	movlw	150
  4000  00063A  6E39               	movwf	drawtext@y,c
  4001  00063C  0EB7               	movlw	low _Volt_Txt
  4002  00063E  6E3A               	movwf	drawtext@_text,c
  4003  000640  0E00               	movlw	high _Volt_Txt
  4004  000642  6E3B               	movwf	drawtext@_text+1,c
  4005  000644  0E07               	movlw	7
  4006  000646  6E3D               	movwf	drawtext@color+1,c
  4007  000648  0EE0               	movlw	224
  4008  00064A  6E3C               	movwf	drawtext@color,c
  4009  00064C  0E00               	movlw	0
  4010  00064E  6E3F               	movwf	drawtext@bg+1,c
  4011  000650  0E00               	movlw	0
  4012  000652  6E3E               	movwf	drawtext@bg,c
  4013  000654  0E01               	movlw	1
  4014  000656  6E40               	movwf	drawtext@size,c
  4015  000658  0E32               	movlw	50
  4016  00065A  ECFC  F00C         	call	_drawtext
  4017                           
  4018                           ;Main_Screen.c: 176: drawtext(93, 150, RPM_Txt, 0x07E0, 0x0000, 1);
  4019  00065E  0E96               	movlw	150
  4020  000660  6E39               	movwf	drawtext@y,c
  4021  000662  0EC2               	movlw	low _RPM_Txt
  4022  000664  6E3A               	movwf	drawtext@_text,c
  4023  000666  0E00               	movlw	high _RPM_Txt
  4024  000668  6E3B               	movwf	drawtext@_text+1,c
  4025  00066A  0E07               	movlw	7
  4026  00066C  6E3D               	movwf	drawtext@color+1,c
  4027  00066E  0EE0               	movlw	224
  4028  000670  6E3C               	movwf	drawtext@color,c
  4029  000672  0E00               	movlw	0
  4030  000674  6E3F               	movwf	drawtext@bg+1,c
  4031  000676  0E00               	movlw	0
  4032  000678  6E3E               	movwf	drawtext@bg,c
  4033  00067A  0E01               	movlw	1
  4034  00067C  6E40               	movwf	drawtext@size,c
  4035  00067E  0E5D               	movlw	93
  4036  000680  ECFC  F00C         	call	_drawtext
  4037  000684  0012               	return		;funcret
  4038  000686                     __end_of_Update_Screen:
  4039                           	opt stack 0
  4040                           tblptru	equ	0xFF8
  4041                           tblptrh	equ	0xFF7
  4042                           tblptrl	equ	0xFF6
  4043                           tablat	equ	0xFF5
  4044                           postinc0	equ	0xFEE
  4045                           wreg	equ	0xFE8
  4046                           postdec1	equ	0xFE5
  4047                           fsr1l	equ	0xFE1
  4048                           status	equ	0xFD8
  4049                           
  4050 ;; *************** function _Toggle_Heater *****************
  4051 ;; Defined at:
  4052 ;;		line 36 in file "../ECE3301L_Spring22_Final_Lab_Sample/Fan_Support.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;		None               void
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    7
  4073 ;; This function calls:
  4074 ;;		_Turn_Off_Fan
  4075 ;;		_Turn_On_Fan
  4076 ;; This function is called by:
  4077 ;;		_main
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text6
  4082  003C22                     __ptext6:
  4083                           	opt stack 0
  4084  003C22                     _Toggle_Heater:
  4085                           	opt stack 23
  4086                           
  4087                           ;Fan_Support.c: 38: if(PORTBbits.RB5==0) Turn_On_Fan();
  4088                           
  4089                           ;incstack = 0
  4090  003C22  BA81               	btfsc	3969,5,c	;volatile
  4091  003C24  D003               	goto	l9966
  4092  003C26  EC59  F01E         	call	_Turn_On_Fan	;wreg free
  4093  003C2A  D003               	goto	l1381
  4094  003C2C                     l9966:
  4095                           
  4096                           ;Fan_Support.c: 39: else Turn_Off_Fan();
  4097  003C2C  ECA3  F01E         	call	_Turn_Off_Fan	;wreg free
  4098  003C30  D000               	goto	l1381
  4099  003C32                     l1381:
  4100  003C32  0012               	return		;funcret
  4101  003C34                     __end_of_Toggle_Heater:
  4102                           	opt stack 0
  4103                           tblptru	equ	0xFF8
  4104                           tblptrh	equ	0xFF7
  4105                           tblptrl	equ	0xFF6
  4106                           tablat	equ	0xFF5
  4107                           postinc0	equ	0xFEE
  4108                           wreg	equ	0xFE8
  4109                           postdec1	equ	0xFE5
  4110                           fsr1l	equ	0xFE1
  4111                           status	equ	0xFD8
  4112                           
  4113 ;; *************** function _Test_Alarm *****************
  4114 ;; Defined at:
  4115 ;;		line 200 in file "../ECE3301L_Spring22_Final_Lab_Sample/Main.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;		None               void
  4122 ;; Registers used:
  4123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;Total ram usage:        0 bytes
  4134 ;; Hardware stack levels used:    1
  4135 ;; Hardware stack levels required when called:    9
  4136 ;; This function calls:
  4137 ;;		_Activate_Buzzer
  4138 ;;		_DS3231_Turn_Off_Alarm
  4139 ;;		_DS3231_Turn_On_Alarm
  4140 ;;		_Deactivate_Buzzer
  4141 ;;		_Set_RGB_Color
  4142 ;;		___ftge
  4143 ;;		_do_update_pwm
  4144 ;; This function is called by:
  4145 ;;		_main
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text7
  4150  001D1E                     __ptext7:
  4151                           	opt stack 0
  4152  001D1E                     _Test_Alarm:
  4153                           	opt stack 21
  4154                           
  4155                           ;Main.c: 202: if(!alarm_mode && ALARMEN){
  4156                           
  4157                           ;incstack = 0
  4158  001D1E  0100               	movlb	0	; () banked
  4159  001D20  51EB               	movf	_alarm_mode& (0+255),w,b
  4160  001D22  0100               	movlb	0	; () banked
  4161  001D24  11EC               	iorwf	(_alarm_mode+1)& (0+255),w,b
  4162  001D26  A4D8               	btfss	status,2,c
  4163  001D28  D00B               	goto	l9624
  4164                           
  4165                           ; BSR set to: 0
  4166  001D2A  5044               	movf	_ALARMEN,w,c
  4167  001D2C  1045               	iorwf	_ALARMEN+1,w,c
  4168  001D2E  B4D8               	btfsc	status,2,c
  4169  001D30  D007               	goto	l9624
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;Main.c: 203: DS3231_Turn_On_Alarm();
  4173  001D32  EC02  F01A         	call	_DS3231_Turn_On_Alarm	;wreg free
  4174                           
  4175                           ;Main.c: 204: alarm_mode = 1;
  4176  001D36  0E00               	movlw	0
  4177  001D38  0100               	movlb	0	; () banked
  4178  001D3A  6FEC               	movwf	(_alarm_mode+1)& (0+255),b
  4179  001D3C  0E01               	movlw	1
  4180  001D3E  D070               	goto	L4
  4181  001D40                     l9624:
  4182                           
  4183                           ; BSR set to: 0
  4184  001D40  0100               	movlb	0	; () banked
  4185  001D42  51EB               	movf	_alarm_mode& (0+255),w,b
  4186  001D44  0100               	movlb	0	; () banked
  4187  001D46  11EC               	iorwf	(_alarm_mode+1)& (0+255),w,b
  4188  001D48  B4D8               	btfsc	status,2,c
  4189  001D4A  D011               	goto	l9636
  4190                           
  4191                           ; BSR set to: 0
  4192  001D4C  5044               	movf	_ALARMEN,w,c
  4193  001D4E  1045               	iorwf	_ALARMEN+1,w,c
  4194  001D50  A4D8               	btfss	status,2,c
  4195  001D52  D00D               	goto	l9636
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;Main.c: 206: DS3231_Turn_Off_Alarm();
  4199  001D54  EC2B  F01A         	call	_DS3231_Turn_Off_Alarm	;wreg free
  4200                           
  4201                           ;Main.c: 207: alarm_mode = 0;
  4202  001D58  0E00               	movlw	0
  4203  001D5A  0100               	movlb	0	; () banked
  4204  001D5C  6FEC               	movwf	(_alarm_mode+1)& (0+255),b
  4205  001D5E  0E00               	movlw	0
  4206  001D60  6FEB               	movwf	_alarm_mode& (0+255),b
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;Main.c: 208: Set_RGB_Color(0x00);
  4210  001D62  0E00               	movlw	0
  4211  001D64  EC6D  F01C         	call	_Set_RGB_Color
  4212                           
  4213                           ;Main.c: 209: Deactivate_Buzzer();
  4214  001D68  ECC1  F01E         	call	_Deactivate_Buzzer	;wreg free
  4215                           
  4216                           ;Main.c: 210: }else if (alarm_mode == 1 && ALARMEN ==1)
  4217  001D6C  D05B               	goto	l246
  4218  001D6E                     l9636:
  4219  001D6E  0100               	movlb	0	; () banked
  4220  001D70  05EB               	decf	_alarm_mode& (0+255),w,b
  4221  001D72  0100               	movlb	0	; () banked
  4222  001D74  11EC               	iorwf	(_alarm_mode+1)& (0+255),w,b
  4223  001D76  A4D8               	btfss	status,2,c
  4224  001D78  D055               	goto	l246
  4225                           
  4226                           ; BSR set to: 0
  4227  001D7A  0444               	decf	_ALARMEN,w,c
  4228  001D7C  1045               	iorwf	_ALARMEN+1,w,c
  4229  001D7E  A4D8               	btfss	status,2,c
  4230  001D80  D051               	goto	l246
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;Main.c: 211: {
  4234                           ;Main.c: 212: if(PORTAbits.RA4 == 0)
  4235  001D82  B880               	btfsc	3968,4,c	;volatile
  4236  001D84  D008               	goto	l9646
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;Main.c: 213: {
  4240                           ;Main.c: 214: MATCHED = 1;
  4241  001D86  0E00               	movlw	0
  4242  001D88  0100               	movlb	0	; () banked
  4243  001D8A  6FEA               	movwf	(_MATCHED+1)& (0+255),b
  4244  001D8C  0E01               	movlw	1
  4245  001D8E  6FE9               	movwf	_MATCHED& (0+255),b
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;Main.c: 215: Activate_Buzzer();
  4249  001D90  EC1A  F01E         	call	_Activate_Buzzer	;wreg free
  4250  001D94  D000               	goto	l9646
  4251  001D96                     l9646:
  4252                           
  4253                           ;Main.c: 216: }
  4254                           ;Main.c: 218: if (MATCHED == 1)
  4255  001D96  0100               	movlb	0	; () banked
  4256  001D98  05E9               	decf	_MATCHED& (0+255),w,b
  4257  001D9A  0100               	movlb	0	; () banked
  4258  001D9C  11EA               	iorwf	(_MATCHED+1)& (0+255),w,b
  4259  001D9E  A4D8               	btfss	status,2,c
  4260  001DA0  D041               	goto	l246
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;Main.c: 219: {
  4264                           ;Main.c: 220: Set_RGB_Color(color++);
  4265  001DA2  0100               	movlb	0	; () banked
  4266  001DA4  51ED               	movf	_color& (0+255),w,b
  4267  001DA6  EC6D  F01C         	call	_Set_RGB_Color
  4268  001DAA  0100               	movlb	0	; () banked
  4269  001DAC  4BED               	infsnz	_color& (0+255),f,b
  4270  001DAE  2BEE               	incf	(_color+1)& (0+255),f,b
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;Main.c: 221: if(color>7)color =0;
  4274  001DB0  0100               	movlb	0	; () banked
  4275  001DB2  BFEE               	btfsc	(_color+1)& (0+255),7,b
  4276  001DB4  D00E               	goto	l9656
  4277  001DB6  0100               	movlb	0	; () banked
  4278  001DB8  51EE               	movf	(_color+1)& (0+255),w,b
  4279  001DBA  E105               	bnz	u7010
  4280  001DBC  0E08               	movlw	8
  4281  001DBE  0100               	movlb	0	; () banked
  4282  001DC0  5DED               	subwf	_color& (0+255),w,b
  4283  001DC2  A0D8               	btfss	status,0,c
  4284  001DC4  D006               	goto	l9656
  4285  001DC6                     u7010:
  4286                           
  4287                           ; BSR set to: 0
  4288  001DC6  0E00               	movlw	0
  4289  001DC8  0100               	movlb	0	; () banked
  4290  001DCA  6FEE               	movwf	(_color+1)& (0+255),b
  4291  001DCC  0E00               	movlw	0
  4292  001DCE  6FED               	movwf	_color& (0+255),b
  4293  001DD0  D000               	goto	l9656
  4294  001DD2                     l9656:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;Main.c: 223: if (volt > 3.0)
  4298  001DD2  0E00               	movlw	0
  4299  001DD4  6E11               	movwf	___ftge@ff1,c
  4300  001DD6  0E40               	movlw	64
  4301  001DD8  6E12               	movwf	___ftge@ff1+1,c
  4302  001DDA  0E40               	movlw	64
  4303  001DDC  6E13               	movwf	___ftge@ff1+2,c
  4304  001DDE  C0E6  F014         	movff	_volt,___ftge@ff2
  4305  001DE2  C0E7  F015         	movff	_volt+1,___ftge@ff2+1
  4306  001DE6  C0E8  F016         	movff	_volt+2,___ftge@ff2+2
  4307  001DEA  ECF2  F015         	call	___ftge	;wreg free
  4308  001DEE  B0D8               	btfsc	status,0,c
  4309  001DF0  D019               	goto	l246
  4310                           
  4311                           ;Main.c: 224: {
  4312                           ;Main.c: 225: MATCHED = 0;
  4313  001DF2  0E00               	movlw	0
  4314  001DF4  0100               	movlb	0	; () banked
  4315  001DF6  6FEA               	movwf	(_MATCHED+1)& (0+255),b
  4316  001DF8  0E00               	movlw	0
  4317  001DFA  6FE9               	movwf	_MATCHED& (0+255),b
  4318                           
  4319                           ;Main.c: 226: color =0;
  4320  001DFC  0E00               	movlw	0
  4321  001DFE  0100               	movlb	0	; () banked
  4322  001E00  6FEE               	movwf	(_color+1)& (0+255),b
  4323  001E02  0E00               	movlw	0
  4324  001E04  6FED               	movwf	_color& (0+255),b
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;Main.c: 227: Set_RGB_Color(color);
  4328  001E06  0100               	movlb	0	; () banked
  4329  001E08  51ED               	movf	_color& (0+255),w,b
  4330  001E0A  EC6D  F01C         	call	_Set_RGB_Color
  4331                           
  4332                           ;Main.c: 228: Deactivate_Buzzer();
  4333  001E0E  ECC1  F01E         	call	_Deactivate_Buzzer	;wreg free
  4334                           
  4335                           ;Main.c: 229: do_update_pwm(duty_cycle);
  4336  001E12  505C               	movf	_duty_cycle,w,c
  4337  001E14  EC9F  F014         	call	_do_update_pwm
  4338                           
  4339                           ;Main.c: 230: alarm_mode = 0;
  4340  001E18  0E00               	movlw	0
  4341  001E1A  0100               	movlb	0	; () banked
  4342  001E1C  6FEC               	movwf	(_alarm_mode+1)& (0+255),b
  4343  001E1E  0E00               	movlw	0
  4344  001E20                     L4:
  4345  001E20  6FEB               	movwf	_alarm_mode& (0+255),b
  4346                           
  4347                           ; BSR set to: 0
  4348                           
  4349                           ; BSR set to: 0
  4350                           
  4351                           ; BSR set to: 0
  4352                           
  4353                           ; BSR set to: 0
  4354  001E22  D000               	goto	l246
  4355  001E24                     l246:
  4356  001E24  0012               	return		;funcret
  4357  001E26                     __end_of_Test_Alarm:
  4358                           	opt stack 0
  4359                           tblptru	equ	0xFF8
  4360                           tblptrh	equ	0xFF7
  4361                           tblptrl	equ	0xFF6
  4362                           tablat	equ	0xFF5
  4363                           postinc0	equ	0xFEE
  4364                           wreg	equ	0xFE8
  4365                           postdec1	equ	0xFE5
  4366                           fsr1l	equ	0xFE1
  4367                           status	equ	0xFD8
  4368                           
  4369 ;; *************** function ___ftge *****************
  4370 ;; Defined at:
  4371 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  ff1             3   16[COMRAM] float 
  4374 ;;  ff2             3   19[COMRAM] float 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;		None               void
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, status,0
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4386 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;Total ram usage:        9 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    3
  4393 ;; This function calls:
  4394 ;;		Nothing
  4395 ;; This function is called by:
  4396 ;;		_Test_Alarm
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text8
  4401  002BE4                     __ptext8:
  4402                           	opt stack 0
  4403  002BE4                     ___ftge:
  4404                           	opt stack 26
  4405                           
  4406                           ;incstack = 0
  4407  002BE4  AE13               	btfss	___ftge@ff1+2,7,c
  4408  002BE6  D017               	goto	l6866
  4409  002BE8  C011  F017         	movff	___ftge@ff1,??___ftge
  4410  002BEC  C012  F018         	movff	___ftge@ff1+1,??___ftge+1
  4411  002BF0  C013  F019         	movff	___ftge@ff1+2,??___ftge+2
  4412  002BF4  1E17               	comf	??___ftge,f,c
  4413  002BF6  1E18               	comf	??___ftge+1,f,c
  4414  002BF8  1E19               	comf	??___ftge+2,f,c
  4415  002BFA  2A17               	incf	??___ftge,f,c
  4416  002BFC  0E00               	movlw	0
  4417  002BFE  2218               	addwfc	??___ftge+1,f,c
  4418  002C00  2219               	addwfc	??___ftge+2,f,c
  4419  002C02  0E00               	movlw	0
  4420  002C04  2417               	addwf	??___ftge,w,c
  4421  002C06  6E11               	movwf	___ftge@ff1,c
  4422  002C08  0E00               	movlw	0
  4423  002C0A  2018               	addwfc	??___ftge+1,w,c
  4424  002C0C  6E12               	movwf	___ftge@ff1+1,c
  4425  002C0E  0E80               	movlw	128
  4426  002C10  2019               	addwfc	??___ftge+2,w,c
  4427  002C12  6E13               	movwf	___ftge@ff1+2,c
  4428  002C14  D000               	goto	l6866
  4429  002C16                     l6866:
  4430  002C16  AE16               	btfss	___ftge@ff2+2,7,c
  4431  002C18  D017               	goto	l6870
  4432  002C1A  C014  F017         	movff	___ftge@ff2,??___ftge
  4433  002C1E  C015  F018         	movff	___ftge@ff2+1,??___ftge+1
  4434  002C22  C016  F019         	movff	___ftge@ff2+2,??___ftge+2
  4435  002C26  1E17               	comf	??___ftge,f,c
  4436  002C28  1E18               	comf	??___ftge+1,f,c
  4437  002C2A  1E19               	comf	??___ftge+2,f,c
  4438  002C2C  2A17               	incf	??___ftge,f,c
  4439  002C2E  0E00               	movlw	0
  4440  002C30  2218               	addwfc	??___ftge+1,f,c
  4441  002C32  2219               	addwfc	??___ftge+2,f,c
  4442  002C34  0E00               	movlw	0
  4443  002C36  2417               	addwf	??___ftge,w,c
  4444  002C38  6E14               	movwf	___ftge@ff2,c
  4445  002C3A  0E00               	movlw	0
  4446  002C3C  2018               	addwfc	??___ftge+1,w,c
  4447  002C3E  6E15               	movwf	___ftge@ff2+1,c
  4448  002C40  0E80               	movlw	128
  4449  002C42  2019               	addwfc	??___ftge+2,w,c
  4450  002C44  6E16               	movwf	___ftge@ff2+2,c
  4451  002C46  D000               	goto	l6870
  4452  002C48                     l6870:
  4453  002C48  0E00               	movlw	0
  4454  002C4A  1A11               	xorwf	___ftge@ff1,f,c
  4455  002C4C  0E00               	movlw	0
  4456  002C4E  1A12               	xorwf	___ftge@ff1+1,f,c
  4457  002C50  0E80               	movlw	128
  4458  002C52  1A13               	xorwf	___ftge@ff1+2,f,c
  4459  002C54  0E00               	movlw	0
  4460  002C56  1A14               	xorwf	___ftge@ff2,f,c
  4461  002C58  0E00               	movlw	0
  4462  002C5A  1A15               	xorwf	___ftge@ff2+1,f,c
  4463  002C5C  0E80               	movlw	128
  4464  002C5E  1A16               	xorwf	___ftge@ff2+2,f,c
  4465  002C60  5014               	movf	___ftge@ff2,w,c
  4466  002C62  5C11               	subwf	___ftge@ff1,w,c
  4467  002C64  5015               	movf	___ftge@ff2+1,w,c
  4468  002C66  5812               	subwfb	___ftge@ff1+1,w,c
  4469  002C68  5016               	movf	___ftge@ff2+2,w,c
  4470  002C6A  5813               	subwfb	___ftge@ff1+2,w,c
  4471  002C6C  B0D8               	btfsc	status,0,c
  4472  002C6E  D002               	goto	l6876
  4473  002C70  90D8               	bcf	status,0,c
  4474  002C72  D002               	goto	l1903
  4475  002C74                     l6876:
  4476  002C74  80D8               	bsf	status,0,c
  4477  002C76  D000               	goto	l1903
  4478  002C78                     l1903:
  4479  002C78  0012               	return		;funcret
  4480  002C7A                     __end_of___ftge:
  4481                           	opt stack 0
  4482                           tblptru	equ	0xFF8
  4483                           tblptrh	equ	0xFF7
  4484                           tblptrl	equ	0xFF6
  4485                           tablat	equ	0xFF5
  4486                           postinc0	equ	0xFEE
  4487                           wreg	equ	0xFE8
  4488                           postdec1	equ	0xFE5
  4489                           fsr1l	equ	0xFE1
  4490                           status	equ	0xFD8
  4491                           
  4492 ;; *************** function _Set_RGB_Color *****************
  4493 ;; Defined at:
  4494 ;;		line 174 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  color           1    wreg     unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  color           1   34[COMRAM] unsigned char 
  4499 ;;  D3             16   18[COMRAM] int [8]
  4500 ;; Return value:  Size  Location     Type
  4501 ;;		None               void
  4502 ;; Registers used:
  4503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;Total ram usage:       17 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    4
  4516 ;; This function calls:
  4517 ;;		_Wait_One_Sec
  4518 ;; This function is called by:
  4519 ;;		_Test_Alarm
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text9
  4524  0038DA                     __ptext9:
  4525                           	opt stack 0
  4526  0038DA                     _Set_RGB_Color:
  4527                           	opt stack 25
  4528                           
  4529                           ;incstack = 0
  4530                           ;Set_RGB_Color@color stored from wreg
  4531  0038DA  6E23               	movwf	Set_RGB_Color@color,c
  4532                           
  4533                           ;utils.c: 176: int D3[8] = {0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07};
  4534  0038DC  EE21  F034         	lfsr	2,Set_RGB_Color@F4248
  4535  0038E0  EE10  F013         	lfsr	1,Set_RGB_Color@D3
  4536  0038E4  0E0F               	movlw	15
  4537  0038E6                     u4111:
  4538  0038E6  CFDB FFE3          	movff	plusw2,plusw1
  4539  0038EA  06E8               	decf	wreg,f,c
  4540  0038EC  E2FC               	bc	u4111
  4541                           
  4542                           ;utils.c: 177: PORTE = D3[color];
  4543  0038EE  5023               	movf	Set_RGB_Color@color,w,c
  4544  0038F0  0D02               	mullw	2
  4545  0038F2  0E13               	movlw	low Set_RGB_Color@D3
  4546  0038F4  24F3               	addwf	prodl,w,c
  4547  0038F6  6ED9               	movwf	fsr2l,c
  4548  0038F8  0E00               	movlw	high Set_RGB_Color@D3
  4549  0038FA  20F4               	addwfc	prodh,w,c
  4550  0038FC  6EDA               	movwf	fsr2h,c
  4551  0038FE  50DF               	movf	indf2,w,c
  4552  003900  6E84               	movwf	3972,c	;volatile
  4553                           
  4554                           ;utils.c: 178: Wait_One_Sec();
  4555  003902  EC5B  F01D         	call	_Wait_One_Sec	;wreg free
  4556  003906  0012               	return		;funcret
  4557  003908                     __end_of_Set_RGB_Color:
  4558                           	opt stack 0
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           prodh	equ	0xFF4
  4564                           prodl	equ	0xFF3
  4565                           postinc0	equ	0xFEE
  4566                           wreg	equ	0xFE8
  4567                           postdec1	equ	0xFE5
  4568                           plusw1	equ	0xFE3
  4569                           fsr1l	equ	0xFE1
  4570                           indf2	equ	0xFDF
  4571                           plusw2	equ	0xFDB
  4572                           fsr2h	equ	0xFDA
  4573                           fsr2l	equ	0xFD9
  4574                           status	equ	0xFD8
  4575                           
  4576 ;; *************** function _DS3231_Turn_On_Alarm *****************
  4577 ;; Defined at:
  4578 ;;		line 210 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Support.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;		None
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  Device          1   30[COMRAM] unsigned char 
  4583 ;;  control_F       1   29[COMRAM] unsigned char 
  4584 ;;  control_E       1   28[COMRAM] unsigned char 
  4585 ;;  Address_F       1   27[COMRAM] unsigned char 
  4586 ;;  Address_E       1   26[COMRAM] unsigned char 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;		None               void
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4600 ;;Total ram usage:        5 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    8
  4603 ;; This function calls:
  4604 ;;		_DS3231_Init
  4605 ;;		_I2C_Write_Address_Read_One_Byte
  4606 ;;		_I2C_Write_Address_Write_One_Byte
  4607 ;; This function is called by:
  4608 ;;		_Test_Alarm
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text10
  4613  003404                     __ptext10:
  4614                           	opt stack 0
  4615  003404                     _DS3231_Turn_On_Alarm:
  4616                           	opt stack 21
  4617                           
  4618                           ;I2C_Support.c: 212: char Device = 0x68;
  4619                           
  4620                           ;incstack = 0
  4621  003404  0E68               	movlw	104
  4622  003406  6E1F               	movwf	DS3231_Turn_On_Alarm@Device,c
  4623                           
  4624                           ;I2C_Support.c: 213: char Address_E = 0x0E;
  4625  003408  0E0E               	movlw	14
  4626  00340A  6E1B               	movwf	DS3231_Turn_On_Alarm@Address_E,c
  4627                           
  4628                           ;I2C_Support.c: 214: char Address_F = 0x0F;
  4629  00340C  0E0F               	movlw	15
  4630  00340E  6E1C               	movwf	DS3231_Turn_On_Alarm@Address_F,c
  4631                           
  4632                           ;I2C_Support.c: 215: char control_E;
  4633                           ;I2C_Support.c: 216: char control_F;
  4634                           ;I2C_Support.c: 218: control_E = I2C_Write_Address_Read_One_Byte(Device, Address_E);
  4635  003410  C01B  F014         	movff	DS3231_Turn_On_Alarm@Address_E,I2C_Write_Address_Read_One_Byte@Address
  4636  003414  501F               	movf	DS3231_Turn_On_Alarm@Device,w,c
  4637  003416  EC23  F01C         	call	_I2C_Write_Address_Read_One_Byte
  4638  00341A  6E1D               	movwf	DS3231_Turn_On_Alarm@control_E,c
  4639                           
  4640                           ;I2C_Support.c: 219: control_E = control_E | 0x01;
  4641  00341C  501D               	movf	DS3231_Turn_On_Alarm@control_E,w,c
  4642  00341E  0901               	iorlw	1
  4643  003420  6E1D               	movwf	DS3231_Turn_On_Alarm@control_E,c
  4644                           
  4645                           ;I2C_Support.c: 220: I2C_Write_Address_Write_One_Byte(Device, Address_E, control_E);
  4646  003422  C01B  F013         	movff	DS3231_Turn_On_Alarm@Address_E,I2C_Write_Address_Write_One_Byte@Address
  4647  003426  C01D  F014         	movff	DS3231_Turn_On_Alarm@control_E,I2C_Write_Address_Write_One_Byte@Data_Out
  4648  00342A  501F               	movf	DS3231_Turn_On_Alarm@Device,w,c
  4649  00342C  EC1E  F01D         	call	_I2C_Write_Address_Write_One_Byte
  4650                           
  4651                           ;I2C_Support.c: 222: control_F = I2C_Write_Address_Read_One_Byte(Device, Address_F);
  4652  003430  C01C  F014         	movff	DS3231_Turn_On_Alarm@Address_F,I2C_Write_Address_Read_One_Byte@Address
  4653  003434  501F               	movf	DS3231_Turn_On_Alarm@Device,w,c
  4654  003436  EC23  F01C         	call	_I2C_Write_Address_Read_One_Byte
  4655  00343A  6E1E               	movwf	DS3231_Turn_On_Alarm@control_F,c
  4656                           
  4657                           ;I2C_Support.c: 223: control_F = control_F & 0xFE;
  4658  00343C  501E               	movf	DS3231_Turn_On_Alarm@control_F,w,c
  4659  00343E  0BFE               	andlw	254
  4660  003440  6E1E               	movwf	DS3231_Turn_On_Alarm@control_F,c
  4661                           
  4662                           ;I2C_Support.c: 224: I2C_Write_Address_Write_One_Byte(Device, Address_F, control_F);
  4663  003442  C01C  F013         	movff	DS3231_Turn_On_Alarm@Address_F,I2C_Write_Address_Write_One_Byte@Address
  4664  003446  C01E  F014         	movff	DS3231_Turn_On_Alarm@control_F,I2C_Write_Address_Write_One_Byte@Data_Out
  4665  00344A  501F               	movf	DS3231_Turn_On_Alarm@Device,w,c
  4666  00344C  EC1E  F01D         	call	_I2C_Write_Address_Write_One_Byte
  4667                           
  4668                           ;I2C_Support.c: 225: DS3231_Init();
  4669  003450  EC43  F014         	call	_DS3231_Init	;wreg free
  4670  003454  0012               	return		;funcret
  4671  003456                     __end_of_DS3231_Turn_On_Alarm:
  4672                           	opt stack 0
  4673                           tblptru	equ	0xFF8
  4674                           tblptrh	equ	0xFF7
  4675                           tblptrl	equ	0xFF6
  4676                           tablat	equ	0xFF5
  4677                           prodh	equ	0xFF4
  4678                           prodl	equ	0xFF3
  4679                           postinc0	equ	0xFEE
  4680                           wreg	equ	0xFE8
  4681                           postdec1	equ	0xFE5
  4682                           plusw1	equ	0xFE3
  4683                           fsr1l	equ	0xFE1
  4684                           indf2	equ	0xFDF
  4685                           plusw2	equ	0xFDB
  4686                           fsr2h	equ	0xFDA
  4687                           fsr2l	equ	0xFD9
  4688                           status	equ	0xFD8
  4689                           
  4690 ;; *************** function _DS3231_Turn_Off_Alarm *****************
  4691 ;; Defined at:
  4692 ;;		line 193 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Support.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;		None
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  Device          1   30[COMRAM] unsigned char 
  4697 ;;  control_F       1   29[COMRAM] unsigned char 
  4698 ;;  control_E       1   28[COMRAM] unsigned char 
  4699 ;;  Address_F       1   27[COMRAM] unsigned char 
  4700 ;;  Address_E       1   26[COMRAM] unsigned char 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;		None               void
  4703 ;; Registers used:
  4704 ;;		wreg, status,2, status,0, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;Total ram usage:        5 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    8
  4717 ;; This function calls:
  4718 ;;		_DS3231_Init
  4719 ;;		_I2C_Write_Address_Read_One_Byte
  4720 ;;		_I2C_Write_Address_Write_One_Byte
  4721 ;; This function is called by:
  4722 ;;		_main
  4723 ;;		_Test_Alarm
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text11
  4728  003456                     __ptext11:
  4729                           	opt stack 0
  4730  003456                     _DS3231_Turn_Off_Alarm:
  4731                           	opt stack 21
  4732                           
  4733                           ;I2C_Support.c: 195: char Device = 0x68;
  4734                           
  4735                           ;incstack = 0
  4736  003456  0E68               	movlw	104
  4737  003458  6E1F               	movwf	DS3231_Turn_Off_Alarm@Device,c
  4738                           
  4739                           ;I2C_Support.c: 196: char Address_E = 0x0E;
  4740  00345A  0E0E               	movlw	14
  4741  00345C  6E1B               	movwf	DS3231_Turn_Off_Alarm@Address_E,c
  4742                           
  4743                           ;I2C_Support.c: 197: char Address_F = 0x0F;
  4744  00345E  0E0F               	movlw	15
  4745  003460  6E1C               	movwf	DS3231_Turn_Off_Alarm@Address_F,c
  4746                           
  4747                           ;I2C_Support.c: 198: char control_E;
  4748                           ;I2C_Support.c: 199: char control_F;
  4749                           ;I2C_Support.c: 201: control_E = I2C_Write_Address_Read_One_Byte(Device, Address_E);
  4750  003462  C01B  F014         	movff	DS3231_Turn_Off_Alarm@Address_E,I2C_Write_Address_Read_One_Byte@Address
  4751  003466  501F               	movf	DS3231_Turn_Off_Alarm@Device,w,c
  4752  003468  EC23  F01C         	call	_I2C_Write_Address_Read_One_Byte
  4753  00346C  6E1D               	movwf	DS3231_Turn_Off_Alarm@control_E,c
  4754                           
  4755                           ;I2C_Support.c: 202: control_E = control_E & 0xFE;
  4756  00346E  501D               	movf	DS3231_Turn_Off_Alarm@control_E,w,c
  4757  003470  0BFE               	andlw	254
  4758  003472  6E1D               	movwf	DS3231_Turn_Off_Alarm@control_E,c
  4759                           
  4760                           ;I2C_Support.c: 203: I2C_Write_Address_Write_One_Byte(Device, Address_E, control_E);
  4761  003474  C01B  F013         	movff	DS3231_Turn_Off_Alarm@Address_E,I2C_Write_Address_Write_One_Byte@Address
  4762  003478  C01D  F014         	movff	DS3231_Turn_Off_Alarm@control_E,I2C_Write_Address_Write_One_Byte@Data_Out
  4763  00347C  501F               	movf	DS3231_Turn_Off_Alarm@Device,w,c
  4764  00347E  EC1E  F01D         	call	_I2C_Write_Address_Write_One_Byte
  4765                           
  4766                           ;I2C_Support.c: 204: control_F = I2C_Write_Address_Read_One_Byte(Device, Address_F);
  4767  003482  C01C  F014         	movff	DS3231_Turn_Off_Alarm@Address_F,I2C_Write_Address_Read_One_Byte@Address
  4768  003486  501F               	movf	DS3231_Turn_Off_Alarm@Device,w,c
  4769  003488  EC23  F01C         	call	_I2C_Write_Address_Read_One_Byte
  4770  00348C  6E1E               	movwf	DS3231_Turn_Off_Alarm@control_F,c
  4771                           
  4772                           ;I2C_Support.c: 205: control_F = control_F & 0xFE;
  4773  00348E  501E               	movf	DS3231_Turn_Off_Alarm@control_F,w,c
  4774  003490  0BFE               	andlw	254
  4775  003492  6E1E               	movwf	DS3231_Turn_Off_Alarm@control_F,c
  4776                           
  4777                           ;I2C_Support.c: 206: I2C_Write_Address_Write_One_Byte(Device, Address_F, control_F);
  4778  003494  C01C  F013         	movff	DS3231_Turn_Off_Alarm@Address_F,I2C_Write_Address_Write_One_Byte@Address
  4779  003498  C01E  F014         	movff	DS3231_Turn_Off_Alarm@control_F,I2C_Write_Address_Write_One_Byte@Data_Out
  4780  00349C  501F               	movf	DS3231_Turn_Off_Alarm@Device,w,c
  4781  00349E  EC1E  F01D         	call	_I2C_Write_Address_Write_One_Byte
  4782                           
  4783                           ;I2C_Support.c: 207: DS3231_Init();
  4784  0034A2  EC43  F014         	call	_DS3231_Init	;wreg free
  4785  0034A6  0012               	return		;funcret
  4786  0034A8                     __end_of_DS3231_Turn_Off_Alarm:
  4787                           	opt stack 0
  4788                           tblptru	equ	0xFF8
  4789                           tblptrh	equ	0xFF7
  4790                           tblptrl	equ	0xFF6
  4791                           tablat	equ	0xFF5
  4792                           prodh	equ	0xFF4
  4793                           prodl	equ	0xFF3
  4794                           postinc0	equ	0xFEE
  4795                           wreg	equ	0xFE8
  4796                           postdec1	equ	0xFE5
  4797                           plusw1	equ	0xFE3
  4798                           fsr1l	equ	0xFE1
  4799                           indf2	equ	0xFDF
  4800                           plusw2	equ	0xFDB
  4801                           fsr2h	equ	0xFDA
  4802                           fsr2l	equ	0xFD9
  4803                           status	equ	0xFD8
  4804                           
  4805 ;; *************** function _DS3231_Init *****************
  4806 ;; Defined at:
  4807 ;;		line 132 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Support.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;		None
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  Device          1   25[COMRAM] unsigned char 
  4812 ;;  control_E       1   24[COMRAM] unsigned char 
  4813 ;;  Address_E       1   23[COMRAM] unsigned char 
  4814 ;;  Address_7       1   22[COMRAM] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;		None               void
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;Total ram usage:        4 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    7
  4831 ;; This function calls:
  4832 ;;		_I2C_ReStart
  4833 ;;		_I2C_Read
  4834 ;;		_I2C_Start
  4835 ;;		_I2C_Stop
  4836 ;;		_I2C_Write
  4837 ;;		_I2C_Write_Address_Read_One_Byte
  4838 ;;		_I2C_Write_Address_Write_One_Byte
  4839 ;; This function is called by:
  4840 ;;		_DS3231_Turn_Off_Alarm
  4841 ;;		_DS3231_Turn_On_Alarm
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text12
  4846  002886                     __ptext12:
  4847                           	opt stack 0
  4848  002886                     _DS3231_Init:
  4849                           	opt stack 21
  4850                           
  4851                           ;I2C_Support.c: 134: char Device = 0x68;
  4852                           
  4853                           ;incstack = 0
  4854  002886  0E68               	movlw	104
  4855  002888  6E1A               	movwf	DS3231_Init@Device,c
  4856                           
  4857                           ;I2C_Support.c: 135: char Address_7 = 0x07;
  4858  00288A  0E07               	movlw	7
  4859  00288C  6E17               	movwf	DS3231_Init@Address_7,c
  4860                           
  4861                           ;I2C_Support.c: 136: char Address_E = 0x0E;
  4862  00288E  0E0E               	movlw	14
  4863  002890  6E18               	movwf	DS3231_Init@Address_E,c
  4864                           
  4865                           ;I2C_Support.c: 137: char control_E;
  4866                           ;I2C_Support.c: 139: control_E = I2C_Write_Address_Read_One_Byte(Device, Address_E);
  4867  002892  C018  F014         	movff	DS3231_Init@Address_E,I2C_Write_Address_Read_One_Byte@Address
  4868  002896  501A               	movf	DS3231_Init@Device,w,c
  4869  002898  EC23  F01C         	call	_I2C_Write_Address_Read_One_Byte
  4870  00289C  6E19               	movwf	DS3231_Init@control_E,c
  4871                           
  4872                           ;I2C_Support.c: 140: control_E = control_E & 0x01;
  4873  00289E  5019               	movf	DS3231_Init@control_E,w,c
  4874  0028A0  0B01               	andlw	1
  4875  0028A2  6E19               	movwf	DS3231_Init@control_E,c
  4876                           
  4877                           ;I2C_Support.c: 141: control_E = control_E | 0x25;
  4878  0028A4  5019               	movf	DS3231_Init@control_E,w,c
  4879  0028A6  0925               	iorlw	37
  4880  0028A8  6E19               	movwf	DS3231_Init@control_E,c
  4881                           
  4882                           ;I2C_Support.c: 142: I2C_Write_Address_Write_One_Byte(Device, Address_E, control_E);
  4883  0028AA  C018  F013         	movff	DS3231_Init@Address_E,I2C_Write_Address_Write_One_Byte@Address
  4884  0028AE  C019  F014         	movff	DS3231_Init@control_E,I2C_Write_Address_Write_One_Byte@Data_Out
  4885  0028B2  501A               	movf	DS3231_Init@Device,w,c
  4886  0028B4  EC1E  F01D         	call	_I2C_Write_Address_Write_One_Byte
  4887                           
  4888                           ;I2C_Support.c: 143: I2C_Start();
  4889  0028B8  EC47  F01E         	call	_I2C_Start	;wreg free
  4890                           
  4891                           ;I2C_Support.c: 144: I2C_Write((Device << 1) | 0);
  4892  0028BC  501A               	movf	DS3231_Init@Device,w,c
  4893  0028BE  241A               	addwf	DS3231_Init@Device,w,c
  4894  0028C0  ECE6  F01B         	call	_I2C_Write
  4895                           
  4896                           ;I2C_Support.c: 145: I2C_Write(Address_7);
  4897  0028C4  5017               	movf	DS3231_Init@Address_7,w,c
  4898  0028C6  ECE6  F01B         	call	_I2C_Write
  4899                           
  4900                           ;I2C_Support.c: 146: I2C_ReStart();
  4901  0028CA  ECCA  F01D         	call	_I2C_ReStart	;wreg free
  4902                           
  4903                           ;I2C_Support.c: 147: I2C_Write((Device << 1) | 1);
  4904  0028CE  80D8               	bsf	status,0,c
  4905  0028D0  341A               	rlcf	DS3231_Init@Device,w,c
  4906  0028D2  ECE6  F01B         	call	_I2C_Write
  4907                           
  4908                           ;I2C_Support.c: 148: alarm_second = I2C_Read(1);
  4909  0028D6  0E01               	movlw	1
  4910  0028D8  EC63  F01B         	call	_I2C_Read
  4911  0028DC  6E58               	movwf	_alarm_second,c
  4912                           
  4913                           ;I2C_Support.c: 149: alarm_minute = I2C_Read(1);
  4914  0028DE  0E01               	movlw	1
  4915  0028E0  EC63  F01B         	call	_I2C_Read
  4916  0028E4  6E57               	movwf	_alarm_minute,c
  4917                           
  4918                           ;I2C_Support.c: 150: alarm_hour = I2C_Read(1);
  4919  0028E6  0E01               	movlw	1
  4920  0028E8  EC63  F01B         	call	_I2C_Read
  4921  0028EC  6E56               	movwf	_alarm_hour,c
  4922                           
  4923                           ;I2C_Support.c: 151: alarm_date = I2C_Read(0);
  4924  0028EE  0E00               	movlw	0
  4925  0028F0  EC63  F01B         	call	_I2C_Read
  4926  0028F4  6E55               	movwf	_alarm_date,c
  4927                           
  4928                           ;I2C_Support.c: 153: alarm_second = alarm_second & 0x7f;
  4929  0028F6  5058               	movf	_alarm_second,w,c
  4930  0028F8  0B7F               	andlw	127
  4931  0028FA  6E58               	movwf	_alarm_second,c
  4932                           
  4933                           ;I2C_Support.c: 154: alarm_minute = alarm_minute & 0x7f;
  4934  0028FC  5057               	movf	_alarm_minute,w,c
  4935  0028FE  0B7F               	andlw	127
  4936  002900  6E57               	movwf	_alarm_minute,c
  4937                           
  4938                           ;I2C_Support.c: 155: alarm_hour = alarm_hour & 0x7f;
  4939  002902  5056               	movf	_alarm_hour,w,c
  4940  002904  0B7F               	andlw	127
  4941  002906  6E56               	movwf	_alarm_hour,c
  4942                           
  4943                           ;I2C_Support.c: 156: alarm_date = alarm_date | 0x80;
  4944  002908  5055               	movf	_alarm_date,w,c
  4945  00290A  0980               	iorlw	128
  4946  00290C  6E55               	movwf	_alarm_date,c
  4947                           
  4948                           ;I2C_Support.c: 158: I2C_Start();
  4949  00290E  EC47  F01E         	call	_I2C_Start	;wreg free
  4950                           
  4951                           ;I2C_Support.c: 159: I2C_Write((Device << 1) | 0);
  4952  002912  501A               	movf	DS3231_Init@Device,w,c
  4953  002914  241A               	addwf	DS3231_Init@Device,w,c
  4954  002916  ECE6  F01B         	call	_I2C_Write
  4955                           
  4956                           ;I2C_Support.c: 160: I2C_Write(Address_7);
  4957  00291A  5017               	movf	DS3231_Init@Address_7,w,c
  4958  00291C  ECE6  F01B         	call	_I2C_Write
  4959                           
  4960                           ;I2C_Support.c: 162: I2C_Write(alarm_second);
  4961  002920  5058               	movf	_alarm_second,w,c
  4962  002922  ECE6  F01B         	call	_I2C_Write
  4963                           
  4964                           ;I2C_Support.c: 163: I2C_Write(alarm_minute);
  4965  002926  5057               	movf	_alarm_minute,w,c
  4966  002928  ECE6  F01B         	call	_I2C_Write
  4967                           
  4968                           ;I2C_Support.c: 164: I2C_Write(alarm_hour);
  4969  00292C  5056               	movf	_alarm_hour,w,c
  4970  00292E  ECE6  F01B         	call	_I2C_Write
  4971                           
  4972                           ;I2C_Support.c: 165: I2C_Write(alarm_date);
  4973  002932  5055               	movf	_alarm_date,w,c
  4974  002934  ECE6  F01B         	call	_I2C_Write
  4975                           
  4976                           ;I2C_Support.c: 166: I2C_Stop();
  4977  002938  EC3E  F01E         	call	_I2C_Stop	;wreg free
  4978  00293C  0012               	return		;funcret
  4979  00293E                     __end_of_DS3231_Init:
  4980                           	opt stack 0
  4981                           tblptru	equ	0xFF8
  4982                           tblptrh	equ	0xFF7
  4983                           tblptrl	equ	0xFF6
  4984                           tablat	equ	0xFF5
  4985                           prodh	equ	0xFF4
  4986                           prodl	equ	0xFF3
  4987                           postinc0	equ	0xFEE
  4988                           wreg	equ	0xFE8
  4989                           postdec1	equ	0xFE5
  4990                           plusw1	equ	0xFE3
  4991                           fsr1l	equ	0xFE1
  4992                           indf2	equ	0xFDF
  4993                           plusw2	equ	0xFDB
  4994                           fsr2h	equ	0xFDA
  4995                           fsr2l	equ	0xFD9
  4996                           status	equ	0xFD8
  4997                           
  4998 ;; *************** function _I2C_Write_Address_Write_One_Byte *****************
  4999 ;; Defined at:
  5000 ;;		line 131 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  Device          1    wreg     unsigned char 
  5003 ;;  Address         1   18[COMRAM] unsigned char 
  5004 ;;  Data_Out        1   19[COMRAM] unsigned char 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;  Device          1   20[COMRAM] unsigned char 
  5007 ;; Return value:  Size  Location     Type
  5008 ;;		None               void
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;Total ram usage:        3 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    5
  5023 ;; This function calls:
  5024 ;;		_I2C_Start
  5025 ;;		_I2C_Stop
  5026 ;;		_I2C_Write
  5027 ;; This function is called by:
  5028 ;;		_DS3231_Init
  5029 ;;		_DS3231_Turn_Off_Alarm
  5030 ;;		_DS3231_Turn_On_Alarm
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text13
  5035  003A3C                     __ptext13:
  5036                           	opt stack 0
  5037  003A3C                     _I2C_Write_Address_Write_One_Byte:
  5038                           	opt stack 23
  5039                           
  5040                           ;incstack = 0
  5041                           ;I2C_Write_Address_Write_One_Byte@Device stored from wreg
  5042  003A3C  6E15               	movwf	I2C_Write_Address_Write_One_Byte@Device,c
  5043                           
  5044                           ;I2C_Soft.c: 133: I2C_Start();
  5045  003A3E  EC47  F01E         	call	_I2C_Start	;wreg free
  5046                           
  5047                           ;I2C_Soft.c: 134: I2C_Write((Device << 1) | 0);
  5048  003A42  5015               	movf	I2C_Write_Address_Write_One_Byte@Device,w,c
  5049  003A44  2415               	addwf	I2C_Write_Address_Write_One_Byte@Device,w,c
  5050  003A46  ECE6  F01B         	call	_I2C_Write
  5051                           
  5052                           ;I2C_Soft.c: 135: I2C_Write(Address);
  5053  003A4A  5013               	movf	I2C_Write_Address_Write_One_Byte@Address,w,c
  5054  003A4C  ECE6  F01B         	call	_I2C_Write
  5055                           
  5056                           ;I2C_Soft.c: 136: I2C_Write(Data_Out);
  5057  003A50  5014               	movf	I2C_Write_Address_Write_One_Byte@Data_Out,w,c
  5058  003A52  ECE6  F01B         	call	_I2C_Write
  5059                           
  5060                           ;I2C_Soft.c: 137: I2C_Stop();
  5061  003A56  EC3E  F01E         	call	_I2C_Stop	;wreg free
  5062  003A5A  0012               	return		;funcret
  5063  003A5C                     __end_of_I2C_Write_Address_Write_One_Byte:
  5064                           	opt stack 0
  5065                           tblptru	equ	0xFF8
  5066                           tblptrh	equ	0xFF7
  5067                           tblptrl	equ	0xFF6
  5068                           tablat	equ	0xFF5
  5069                           prodh	equ	0xFF4
  5070                           prodl	equ	0xFF3
  5071                           postinc0	equ	0xFEE
  5072                           wreg	equ	0xFE8
  5073                           postdec1	equ	0xFE5
  5074                           plusw1	equ	0xFE3
  5075                           fsr1l	equ	0xFE1
  5076                           indf2	equ	0xFDF
  5077                           plusw2	equ	0xFDB
  5078                           fsr2h	equ	0xFDA
  5079                           fsr2l	equ	0xFD9
  5080                           status	equ	0xFD8
  5081                           
  5082 ;; *************** function _I2C_Write_Address_Read_One_Byte *****************
  5083 ;; Defined at:
  5084 ;;		line 118 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  Device          1    wreg     unsigned char 
  5087 ;;  Address         1   19[COMRAM] unsigned char 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  Device          1   21[COMRAM] unsigned char 
  5090 ;;  Data_Ret        1   20[COMRAM] unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      unsigned char 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, status,0, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5100 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;Total ram usage:        3 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    6
  5107 ;; This function calls:
  5108 ;;		_I2C_ReStart
  5109 ;;		_I2C_Read
  5110 ;;		_I2C_Start
  5111 ;;		_I2C_Stop
  5112 ;;		_I2C_Write
  5113 ;; This function is called by:
  5114 ;;		_DS3231_Init
  5115 ;;		_DS3231_Turn_Off_Alarm
  5116 ;;		_DS3231_Turn_On_Alarm
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text14
  5121  003846                     __ptext14:
  5122                           	opt stack 0
  5123  003846                     _I2C_Write_Address_Read_One_Byte:
  5124                           	opt stack 22
  5125                           
  5126                           ;incstack = 0
  5127                           ;I2C_Write_Address_Read_One_Byte@Device stored from wreg
  5128  003846  6E16               	movwf	I2C_Write_Address_Read_One_Byte@Device,c
  5129                           
  5130                           ;I2C_Soft.c: 120: char Data_Ret;
  5131                           ;I2C_Soft.c: 121: I2C_Start();
  5132  003848  EC47  F01E         	call	_I2C_Start	;wreg free
  5133                           
  5134                           ;I2C_Soft.c: 122: I2C_Write((Device << 1) | 0);
  5135  00384C  5016               	movf	I2C_Write_Address_Read_One_Byte@Device,w,c
  5136  00384E  2416               	addwf	I2C_Write_Address_Read_One_Byte@Device,w,c
  5137  003850  ECE6  F01B         	call	_I2C_Write
  5138                           
  5139                           ;I2C_Soft.c: 123: I2C_Write(Address);
  5140  003854  5014               	movf	I2C_Write_Address_Read_One_Byte@Address,w,c
  5141  003856  ECE6  F01B         	call	_I2C_Write
  5142                           
  5143                           ;I2C_Soft.c: 124: I2C_ReStart();
  5144  00385A  ECCA  F01D         	call	_I2C_ReStart	;wreg free
  5145                           
  5146                           ;I2C_Soft.c: 125: I2C_Write((Device << 1) | 1);
  5147  00385E  80D8               	bsf	status,0,c
  5148  003860  3416               	rlcf	I2C_Write_Address_Read_One_Byte@Device,w,c
  5149  003862  ECE6  F01B         	call	_I2C_Write
  5150                           
  5151                           ;I2C_Soft.c: 126: Data_Ret = I2C_Read(0);
  5152  003866  0E00               	movlw	0
  5153  003868  EC63  F01B         	call	_I2C_Read
  5154  00386C  6E15               	movwf	I2C_Write_Address_Read_One_Byte@Data_Ret,c
  5155                           
  5156                           ;I2C_Soft.c: 127: I2C_Stop();
  5157  00386E  EC3E  F01E         	call	_I2C_Stop	;wreg free
  5158                           
  5159                           ;I2C_Soft.c: 128: return Data_Ret;
  5160  003872  5015               	movf	I2C_Write_Address_Read_One_Byte@Data_Ret,w,c
  5161  003874  D000               	goto	l1225
  5162  003876                     l1225:
  5163  003876  0012               	return		;funcret
  5164  003878                     __end_of_I2C_Write_Address_Read_One_Byte:
  5165                           	opt stack 0
  5166                           tblptru	equ	0xFF8
  5167                           tblptrh	equ	0xFF7
  5168                           tblptrl	equ	0xFF6
  5169                           tablat	equ	0xFF5
  5170                           prodh	equ	0xFF4
  5171                           prodl	equ	0xFF3
  5172                           postinc0	equ	0xFEE
  5173                           wreg	equ	0xFE8
  5174                           postdec1	equ	0xFE5
  5175                           plusw1	equ	0xFE3
  5176                           fsr1l	equ	0xFE1
  5177                           indf2	equ	0xFDF
  5178                           plusw2	equ	0xFDB
  5179                           fsr2h	equ	0xFDA
  5180                           fsr2l	equ	0xFD9
  5181                           status	equ	0xFD8
  5182                           
  5183 ;; *************** function _Activate_Buzzer *****************
  5184 ;; Defined at:
  5185 ;;		line 97 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;		None
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;		None
  5190 ;; Return value:  Size  Location     Type
  5191 ;;		None               void
  5192 ;; Registers used:
  5193 ;;		wreg, status,2
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5203 ;;Total ram usage:        0 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    3
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_Test_Alarm
  5210 ;;		_Do_Beep
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text15
  5215  003C34                     __ptext15:
  5216                           	opt stack 0
  5217  003C34                     _Activate_Buzzer:
  5218                           	opt stack 26
  5219                           
  5220                           ;utils.c: 99: PR2 = 0b11111001 ;
  5221                           
  5222                           ;incstack = 0
  5223  003C34  0EF9               	movlw	249
  5224  003C36  6ECB               	movwf	4043,c	;volatile
  5225                           
  5226                           ;utils.c: 100: T2CON = 0b00000101 ;
  5227  003C38  0E05               	movlw	5
  5228  003C3A  6ECA               	movwf	4042,c	;volatile
  5229                           
  5230                           ;utils.c: 101: CCPR2L = 0b01001010 ;
  5231  003C3C  0E4A               	movlw	74
  5232  003C3E  6EBB               	movwf	4027,c	;volatile
  5233                           
  5234                           ;utils.c: 102: CCP2CON = 0b00111100 ;
  5235  003C40  0E3C               	movlw	60
  5236  003C42  6EBA               	movwf	4026,c	;volatile
  5237  003C44  0012               	return		;funcret
  5238  003C46                     __end_of_Activate_Buzzer:
  5239                           	opt stack 0
  5240                           tblptru	equ	0xFF8
  5241                           tblptrh	equ	0xFF7
  5242                           tblptrl	equ	0xFF6
  5243                           tablat	equ	0xFF5
  5244                           prodh	equ	0xFF4
  5245                           prodl	equ	0xFF3
  5246                           postinc0	equ	0xFEE
  5247                           wreg	equ	0xFE8
  5248                           postdec1	equ	0xFE5
  5249                           plusw1	equ	0xFE3
  5250                           fsr1l	equ	0xFE1
  5251                           indf2	equ	0xFDF
  5252                           plusw2	equ	0xFDB
  5253                           fsr2h	equ	0xFDA
  5254                           fsr2l	equ	0xFD9
  5255                           status	equ	0xFD8
  5256                           
  5257 ;; *************** function _Monitor_Heater *****************
  5258 ;; Defined at:
  5259 ;;		line 27 in file "../ECE3301L_Spring22_Final_Lab_Sample/Fan_Support.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;		None               void
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5275 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5276 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5277 ;;Total ram usage:        3 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:    7
  5280 ;; This function calls:
  5281 ;;		_Turn_Off_Fan
  5282 ;;		_Turn_On_Fan
  5283 ;;		_do_update_pwm
  5284 ;;		_get_duty_cycle
  5285 ;; This function is called by:
  5286 ;;		_main
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text16
  5291  00335C                     __ptext16:
  5292                           	opt stack 0
  5293  00335C                     _Monitor_Heater:
  5294                           	opt stack 23
  5295                           
  5296                           ;Fan_Support.c: 29: duty_cycle = get_duty_cycle(DS1621_tempF, heater_set_temp);
  5297                           
  5298                           ;incstack = 0
  5299  00335C  C048  F011         	movff	_DS1621_tempF,get_duty_cycle@temp
  5300  003360  C049  F012         	movff	_DS1621_tempF+1,get_duty_cycle@temp+1
  5301  003364  C06E  F013         	movff	_heater_set_temp,get_duty_cycle@set_temp
  5302  003368  6A14               	clrf	get_duty_cycle@set_temp+1,c
  5303  00336A  EC4C  F012         	call	_get_duty_cycle	;wreg free
  5304  00336E  5011               	movf	?_get_duty_cycle,w,c
  5305  003370  6E5C               	movwf	_duty_cycle,c
  5306                           
  5307                           ;Fan_Support.c: 30: do_update_pwm(duty_cycle);
  5308  003372  505C               	movf	_duty_cycle,w,c
  5309  003374  EC9F  F014         	call	_do_update_pwm
  5310                           
  5311                           ;Fan_Support.c: 32: if (HEATER == 1) if(DS1621_tempF < heater_set_temp) Turn_On_Fan();
  5312  003378  0450               	decf	_HEATER,w,c
  5313  00337A  A4D8               	btfss	status,2,c
  5314  00337C  D018               	goto	l1376
  5315  00337E  506E               	movf	_heater_set_temp,w,c
  5316  003380  0100               	movlb	0	; () banked
  5317  003382  6FFD               	movwf	??_Monitor_Heater& (0+255),b
  5318  003384  6BFE               	clrf	(??_Monitor_Heater+1)& (0+255),b
  5319  003386  0100               	movlb	0	; () banked
  5320  003388  51FD               	movf	??_Monitor_Heater& (0+255),w,b
  5321  00338A  5C48               	subwf	_DS1621_tempF,w,c
  5322  00338C  5049               	movf	_DS1621_tempF+1,w,c
  5323  00338E  0A80               	xorlw	128
  5324  003390  0100               	movlb	0	; () banked
  5325  003392  6FFF               	movwf	(??_Monitor_Heater+2)& (0+255),b
  5326  003394  0100               	movlb	0	; () banked
  5327  003396  51FE               	movf	(??_Monitor_Heater+1)& (0+255),w,b
  5328  003398  0A80               	xorlw	128
  5329  00339A  0100               	movlb	0	; () banked
  5330  00339C  59FF               	subwfb	(??_Monitor_Heater+2)& (0+255),w,b
  5331  00339E  B0D8               	btfsc	status,0,c
  5332  0033A0  D003               	goto	l9614
  5333                           
  5334                           ; BSR set to: 0
  5335  0033A2  EC59  F01E         	call	_Turn_On_Fan	;wreg free
  5336  0033A6  D003               	goto	l1376
  5337  0033A8                     l9614:
  5338                           
  5339                           ;Fan_Support.c: 33: else Turn_Off_Fan();
  5340  0033A8  ECA3  F01E         	call	_Turn_Off_Fan	;wreg free
  5341  0033AC  D000               	goto	l1376
  5342  0033AE                     l1376:
  5343  0033AE  0012               	return		;funcret
  5344  0033B0                     __end_of_Monitor_Heater:
  5345                           	opt stack 0
  5346                           tblptru	equ	0xFF8
  5347                           tblptrh	equ	0xFF7
  5348                           tblptrl	equ	0xFF6
  5349                           tablat	equ	0xFF5
  5350                           prodh	equ	0xFF4
  5351                           prodl	equ	0xFF3
  5352                           postinc0	equ	0xFEE
  5353                           wreg	equ	0xFE8
  5354                           postdec1	equ	0xFE5
  5355                           plusw1	equ	0xFE3
  5356                           fsr1l	equ	0xFE1
  5357                           indf2	equ	0xFDF
  5358                           plusw2	equ	0xFDB
  5359                           fsr2h	equ	0xFDA
  5360                           fsr2l	equ	0xFD9
  5361                           status	equ	0xFD8
  5362                           
  5363 ;; *************** function _get_duty_cycle *****************
  5364 ;; Defined at:
  5365 ;;		line 15 in file "../ECE3301L_Spring22_Final_Lab_Sample/Fan_Support.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  temp            2   16[COMRAM] int 
  5368 ;;  set_temp        2   18[COMRAM] int 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  diff            2   22[COMRAM] int 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  2   16[COMRAM] int 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0, prodl, prodh
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5380 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;Total ram usage:        8 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    3
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_Monitor_Heater
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text17
  5395  002498                     __ptext17:
  5396                           	opt stack 0
  5397  002498                     _get_duty_cycle:
  5398                           	opt stack 26
  5399                           
  5400                           ;Fan_Support.c: 16: if(temp >= set_temp) duty_cycle = 0;
  5401                           
  5402                           ;incstack = 0
  5403  002498  5013               	movf	get_duty_cycle@set_temp,w,c
  5404  00249A  5C11               	subwf	get_duty_cycle@temp,w,c
  5405  00249C  5012               	movf	get_duty_cycle@temp+1,w,c
  5406  00249E  0A80               	xorlw	128
  5407  0024A0  6E15               	movwf	??_get_duty_cycle& (0+255),c
  5408  0024A2  5014               	movf	get_duty_cycle@set_temp+1,w,c
  5409  0024A4  0A80               	xorlw	128
  5410  0024A6  5815               	subwfb	??_get_duty_cycle& (0+255),w,c
  5411  0024A8  A0D8               	btfss	status,0,c
  5412  0024AA  D002               	goto	l6830
  5413  0024AC  0E00               	movlw	0
  5414  0024AE  D034               	goto	L6
  5415  0024B0                     l6830:
  5416                           
  5417                           ;Fan_Support.c: 17: else if (temp < set_temp){
  5418  0024B0  5013               	movf	get_duty_cycle@set_temp,w,c
  5419  0024B2  5C11               	subwf	get_duty_cycle@temp,w,c
  5420  0024B4  5012               	movf	get_duty_cycle@temp+1,w,c
  5421  0024B6  0A80               	xorlw	128
  5422  0024B8  6E15               	movwf	??_get_duty_cycle& (0+255),c
  5423  0024BA  5014               	movf	get_duty_cycle@set_temp+1,w,c
  5424  0024BC  0A80               	xorlw	128
  5425  0024BE  5815               	subwfb	??_get_duty_cycle& (0+255),w,c
  5426  0024C0  B0D8               	btfsc	status,0,c
  5427  0024C2  D04E               	goto	l1361
  5428                           
  5429                           ;Fan_Support.c: 18: int diff = set_temp - temp;
  5430  0024C4  C011  F015         	movff	get_duty_cycle@temp,??_get_duty_cycle
  5431  0024C8  C012  F016         	movff	get_duty_cycle@temp+1,??_get_duty_cycle+1
  5432  0024CC  1E15               	comf	??_get_duty_cycle,f,c
  5433  0024CE  1E16               	comf	??_get_duty_cycle+1,f,c
  5434  0024D0  4A15               	infsnz	??_get_duty_cycle,f,c
  5435  0024D2  2A16               	incf	??_get_duty_cycle+1,f,c
  5436  0024D4  5013               	movf	get_duty_cycle@set_temp,w,c
  5437  0024D6  2415               	addwf	??_get_duty_cycle,w,c
  5438  0024D8  6E17               	movwf	get_duty_cycle@diff,c
  5439  0024DA  5014               	movf	get_duty_cycle@set_temp+1,w,c
  5440  0024DC  2016               	addwfc	??_get_duty_cycle+1,w,c
  5441  0024DE  6E18               	movwf	get_duty_cycle@diff+1,c
  5442                           
  5443                           ;Fan_Support.c: 19: if(diff > 50) duty_cycle = 100;
  5444  0024E0  BE18               	btfsc	get_duty_cycle@diff+1,7,c
  5445  0024E2  D008               	goto	l6836
  5446  0024E4  5018               	movf	get_duty_cycle@diff+1,w,c
  5447  0024E6  E104               	bnz	u4430
  5448  0024E8  0E33               	movlw	51
  5449  0024EA  5C17               	subwf	get_duty_cycle@diff,w,c
  5450  0024EC  A0D8               	btfss	status,0,c
  5451  0024EE  D002               	goto	l6836
  5452  0024F0                     u4430:
  5453  0024F0  0E64               	movlw	100
  5454  0024F2  D012               	goto	L6
  5455  0024F4                     l6836:
  5456                           
  5457                           ;Fan_Support.c: 20: else if((diff >= 25) && (diff < 50)) duty_cycle = diff * 2;
  5458  0024F4  BE18               	btfsc	get_duty_cycle@diff+1,7,c
  5459  0024F6  D012               	goto	l6842
  5460  0024F8  5018               	movf	get_duty_cycle@diff+1,w,c
  5461  0024FA  E104               	bnz	u4440
  5462  0024FC  0E19               	movlw	25
  5463  0024FE  5C17               	subwf	get_duty_cycle@diff,w,c
  5464  002500  A0D8               	btfss	status,0,c
  5465  002502  D00C               	goto	l6842
  5466  002504                     u4440:
  5467  002504  BE18               	btfsc	get_duty_cycle@diff+1,7,c
  5468  002506  D006               	goto	l6840
  5469  002508  5018               	movf	get_duty_cycle@diff+1,w,c
  5470  00250A  E108               	bnz	l6842
  5471  00250C  0E32               	movlw	50
  5472  00250E  5C17               	subwf	get_duty_cycle@diff,w,c
  5473  002510  B0D8               	btfsc	status,0,c
  5474  002512  D004               	goto	l6842
  5475  002514                     l6840:
  5476  002514  5017               	movf	get_duty_cycle@diff,w,c
  5477  002516  2417               	addwf	get_duty_cycle@diff,w,c
  5478  002518                     L6:
  5479  002518  6E5C               	movwf	_duty_cycle,c
  5480  00251A  D022               	goto	l1361
  5481  00251C                     l6842:
  5482                           
  5483                           ;Fan_Support.c: 21: else if ((diff >= 10) && (diff < 25)) duty_cycle = diff * (3/2);
  5484  00251C  BE18               	btfsc	get_duty_cycle@diff+1,7,c
  5485  00251E  D013               	goto	l6848
  5486  002520  5018               	movf	get_duty_cycle@diff+1,w,c
  5487  002522  E104               	bnz	u4460
  5488  002524  0E0A               	movlw	10
  5489  002526  5C17               	subwf	get_duty_cycle@diff,w,c
  5490  002528  A0D8               	btfss	status,0,c
  5491  00252A  D00D               	goto	l6848
  5492  00252C                     u4460:
  5493  00252C  BE18               	btfsc	get_duty_cycle@diff+1,7,c
  5494  00252E  D006               	goto	l6846
  5495  002530  5018               	movf	get_duty_cycle@diff+1,w,c
  5496  002532  E109               	bnz	l6848
  5497  002534  0E19               	movlw	25
  5498  002536  5C17               	subwf	get_duty_cycle@diff,w,c
  5499  002538  B0D8               	btfsc	status,0,c
  5500  00253A  D005               	goto	l6848
  5501  00253C                     l6846:
  5502  00253C  5017               	movf	get_duty_cycle@diff,w,c
  5503  00253E  0D01               	mullw	1
  5504  002540  CFF3 F05C          	movff	prodl,_duty_cycle
  5505  002544  D00D               	goto	l1361
  5506  002546                     l6848:
  5507                           
  5508                           ;Fan_Support.c: 22: else if ((diff >= 0) && (diff < 10)) duty_cycle = diff;
  5509  002546  BE18               	btfsc	get_duty_cycle@diff+1,7,c
  5510  002548  D00B               	goto	l1361
  5511  00254A  BE18               	btfsc	get_duty_cycle@diff+1,7,c
  5512  00254C  D006               	goto	l6852
  5513  00254E  5018               	movf	get_duty_cycle@diff+1,w,c
  5514  002550  E107               	bnz	l1361
  5515  002552  0E0A               	movlw	10
  5516  002554  5C17               	subwf	get_duty_cycle@diff,w,c
  5517  002556  B0D8               	btfsc	status,0,c
  5518  002558  D003               	goto	l1361
  5519  00255A                     l6852:
  5520  00255A  C017  F05C         	movff	get_duty_cycle@diff,_duty_cycle
  5521  00255E  D000               	goto	l1361
  5522  002560                     l1361:
  5523                           
  5524                           ;Fan_Support.c: 23: }
  5525                           ;Fan_Support.c: 24: return duty_cycle;
  5526  002560  C05C  F011         	movff	_duty_cycle,?_get_duty_cycle
  5527  002564  6A12               	clrf	?_get_duty_cycle+1,c
  5528  002566  0012               	return		;funcret
  5529  002568                     __end_of_get_duty_cycle:
  5530                           	opt stack 0
  5531                           tblptru	equ	0xFF8
  5532                           tblptrh	equ	0xFF7
  5533                           tblptrl	equ	0xFF6
  5534                           tablat	equ	0xFF5
  5535                           prodh	equ	0xFF4
  5536                           prodl	equ	0xFF3
  5537                           postinc0	equ	0xFEE
  5538                           wreg	equ	0xFE8
  5539                           postdec1	equ	0xFE5
  5540                           plusw1	equ	0xFE3
  5541                           fsr1l	equ	0xFE1
  5542                           indf2	equ	0xFDF
  5543                           plusw2	equ	0xFDB
  5544                           fsr2h	equ	0xFDA
  5545                           fsr2l	equ	0xFD9
  5546                           status	equ	0xFD8
  5547                           
  5548 ;; *************** function _Turn_On_Fan *****************
  5549 ;; Defined at:
  5550 ;;		line 57 in file "../ECE3301L_Spring22_Final_Lab_Sample/Fan_Support.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;		None
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;		None
  5555 ;; Return value:  Size  Location     Type
  5556 ;;		None               void
  5557 ;; Registers used:
  5558 ;;		wreg, status,2, status,0, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;Total ram usage:        0 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:    6
  5571 ;; This function calls:
  5572 ;;		_do_update_pwm
  5573 ;; This function is called by:
  5574 ;;		_Monitor_Heater
  5575 ;;		_Toggle_Heater
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text18
  5580  003CB2                     __ptext18:
  5581                           	opt stack 0
  5582  003CB2                     _Turn_On_Fan:
  5583                           	opt stack 23
  5584                           
  5585                           ;Fan_Support.c: 59: HEATER = 1;
  5586                           
  5587                           ;incstack = 0
  5588  003CB2  0E01               	movlw	1
  5589  003CB4  6E50               	movwf	_HEATER,c
  5590                           
  5591                           ;Fan_Support.c: 60: PORTDbits.RD7 = 1;
  5592  003CB6  8E83               	bsf	3971,7,c	;volatile
  5593                           
  5594                           ;Fan_Support.c: 61: do_update_pwm(duty_cycle);
  5595  003CB8  505C               	movf	_duty_cycle,w,c
  5596  003CBA  EC9F  F014         	call	_do_update_pwm
  5597                           
  5598                           ;Fan_Support.c: 62: PORTBbits.RB5=1;
  5599  003CBE  8A81               	bsf	3969,5,c	;volatile
  5600  003CC0  0012               	return		;funcret
  5601  003CC2                     __end_of_Turn_On_Fan:
  5602                           	opt stack 0
  5603                           tblptru	equ	0xFF8
  5604                           tblptrh	equ	0xFF7
  5605                           tblptrl	equ	0xFF6
  5606                           tablat	equ	0xFF5
  5607                           prodh	equ	0xFF4
  5608                           prodl	equ	0xFF3
  5609                           postinc0	equ	0xFEE
  5610                           wreg	equ	0xFE8
  5611                           postdec1	equ	0xFE5
  5612                           plusw1	equ	0xFE3
  5613                           fsr1l	equ	0xFE1
  5614                           indf2	equ	0xFDF
  5615                           plusw2	equ	0xFDB
  5616                           fsr2h	equ	0xFDA
  5617                           fsr2l	equ	0xFD9
  5618                           status	equ	0xFD8
  5619                           
  5620 ;; *************** function _Do_Setup_Time *****************
  5621 ;; Defined at:
  5622 ;;		line 33 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Time.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;		None
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;		None
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  2   68[None  ] int 
  5629 ;; Registers used:
  5630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;Total ram usage:        0 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; Hardware stack levels required when called:   12
  5643 ;; This function calls:
  5644 ;;		_DS3231_Read_Time
  5645 ;;		_Decrease_Time
  5646 ;;		_Do_Beep_Bad
  5647 ;;		_Do_Beep_Good
  5648 ;;		_Do_Save_New_Time
  5649 ;;		_Exit_Time_Setup
  5650 ;;		_Go_Next_Field
  5651 ;;		_Go_Prev_Field
  5652 ;;		_Increase_Time
  5653 ;;		_Initialize_Setup_Time_Screen
  5654 ;;		_Update_Setup_Time_Screen
  5655 ;;		_bcd_2_dec
  5656 ;;		_check_for_button_input
  5657 ;; This function is called by:
  5658 ;;		_main
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text19
  5663  002638                     __ptext19:
  5664                           	opt stack 0
  5665  002638                     _Do_Setup_Time:
  5666                           	opt stack 18
  5667                           
  5668                           ;Setup_Time.c: 36: Select_Field = 0;
  5669                           
  5670                           ;incstack = 0
  5671  002638  0E00               	movlw	0
  5672  00263A  6E53               	movwf	_Select_Field,c
  5673                           
  5674                           ;Setup_Time.c: 38: DS3231_Read_Time();
  5675  00263C  ECC5  F018         	call	_DS3231_Read_Time	;wreg free
  5676                           
  5677                           ;Setup_Time.c: 39: setup_second = bcd_2_dec(second);
  5678  002640  5062               	movf	_second,w,c
  5679  002642  EC84  F01C         	call	_bcd_2_dec
  5680  002646  6E6B               	movwf	_setup_second,c
  5681                           
  5682                           ;Setup_Time.c: 40: setup_minute = bcd_2_dec(minute);
  5683  002648  505F               	movf	_minute,w,c
  5684  00264A  EC84  F01C         	call	_bcd_2_dec
  5685  00264E  6E69               	movwf	_setup_minute,c
  5686                           
  5687                           ;Setup_Time.c: 41: setup_hour = bcd_2_dec(hour);
  5688  002650  505E               	movf	_hour,w,c
  5689  002652  EC84  F01C         	call	_bcd_2_dec
  5690  002656  6E68               	movwf	_setup_hour,c
  5691                           
  5692                           ;Setup_Time.c: 42: setup_day = bcd_2_dec(day);
  5693  002658  505A               	movf	_day,w,c
  5694  00265A  EC84  F01C         	call	_bcd_2_dec
  5695  00265E  6E66               	movwf	_setup_day,c
  5696                           
  5697                           ;Setup_Time.c: 43: setup_month = bcd_2_dec(month);
  5698  002660  5060               	movf	_month,w,c
  5699  002662  EC84  F01C         	call	_bcd_2_dec
  5700  002666  6E6A               	movwf	_setup_month,c
  5701                           
  5702                           ;Setup_Time.c: 44: setup_year = bcd_2_dec(year);
  5703  002668  506D               	movf	_year,w,c
  5704  00266A  EC84  F01C         	call	_bcd_2_dec
  5705  00266E  6E6C               	movwf	_setup_year,c
  5706                           
  5707                           ;Setup_Time.c: 46: Initialize_Setup_Time_Screen();
  5708  002670  EC83  F00D         	call	_Initialize_Setup_Time_Screen	;wreg free
  5709                           
  5710                           ;Setup_Time.c: 47: Update_Setup_Time_Screen();
  5711  002674  EC3B  F00A         	call	_Update_Setup_Time_Screen	;wreg free
  5712                           
  5713                           ;Setup_Time.c: 48: In_Time_Setup = 1;
  5714  002678  0E01               	movlw	1
  5715  00267A  0100               	movlb	0	; () banked
  5716  00267C  6FF9               	movwf	_In_Time_Setup& (0+255),b
  5717                           
  5718                           ;Setup_Time.c: 50: while (In_Time_Setup == 1)
  5719  00267E  D03C               	goto	l9862
  5720  002680                     l9826:
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;Setup_Time.c: 51: {
  5724                           ;Setup_Time.c: 52: if (check_for_button_input() == 1)
  5725  002680  EC9D  F017         	call	_check_for_button_input	;wreg free
  5726  002684  06E8               	decf	wreg,f,c
  5727  002686  A4D8               	btfss	status,2,c
  5728  002688  D037               	goto	l9862
  5729                           
  5730                           ;Setup_Time.c: 53: {
  5731                           ;Setup_Time.c: 55: if (found >= 3 && found <= 8)
  5732  00268A  0E02               	movlw	2
  5733  00268C  645D               	cpfsgt	_found,c
  5734  00268E  D031               	goto	l9860
  5735  002690  0E09               	movlw	9
  5736  002692  605D               	cpfslt	_found,c
  5737  002694  D02E               	goto	l9860
  5738                           
  5739                           ;Setup_Time.c: 56: {
  5740                           ;Setup_Time.c: 57: Do_Beep_Good();
  5741  002696  ECB2  F01D         	call	_Do_Beep_Good	;wreg free
  5742                           
  5743                           ;Setup_Time.c: 58: if (found == 3) Go_Prev_Field();
  5744  00269A  0E03               	movlw	3
  5745  00269C  185D               	xorwf	_found,w,c
  5746  00269E  A4D8               	btfss	status,2,c
  5747  0026A0  D003               	goto	l9838
  5748  0026A2  EC76  F01D         	call	_Go_Prev_Field	;wreg free
  5749  0026A6  D000               	goto	l9838
  5750  0026A8                     l9838:
  5751                           
  5752                           ;Setup_Time.c: 59: if (found == 4) Go_Next_Field();
  5753  0026A8  0E04               	movlw	4
  5754  0026AA  185D               	xorwf	_found,w,c
  5755  0026AC  A4D8               	btfss	status,2,c
  5756  0026AE  D003               	goto	l9842
  5757  0026B0  EC82  F01D         	call	_Go_Next_Field	;wreg free
  5758  0026B4  D000               	goto	l9842
  5759  0026B6                     l9842:
  5760                           
  5761                           ;Setup_Time.c: 60: if (found == 5) Do_Save_New_Time();
  5762  0026B6  0E05               	movlw	5
  5763  0026B8  185D               	xorwf	_found,w,c
  5764  0026BA  A4D8               	btfss	status,2,c
  5765  0026BC  D003               	goto	l9846
  5766  0026BE  ECD5  F01D         	call	_Do_Save_New_Time	;wreg free
  5767  0026C2  D000               	goto	l9846
  5768  0026C4                     l9846:
  5769                           
  5770                           ;Setup_Time.c: 61: if (found == 6) Decrease_Time();
  5771  0026C4  0E06               	movlw	6
  5772  0026C6  185D               	xorwf	_found,w,c
  5773  0026C8  A4D8               	btfss	status,2,c
  5774  0026CA  D003               	goto	l9850
  5775  0026CC  EC50  F015         	call	_Decrease_Time	;wreg free
  5776  0026D0  D000               	goto	l9850
  5777  0026D2                     l9850:
  5778                           
  5779                           ;Setup_Time.c: 62: if (found == 7 ) Increase_Time();
  5780  0026D2  0E07               	movlw	7
  5781  0026D4  185D               	xorwf	_found,w,c
  5782  0026D6  A4D8               	btfss	status,2,c
  5783  0026D8  D003               	goto	l9854
  5784  0026DA  ECA5  F015         	call	_Increase_Time	;wreg free
  5785  0026DE  D000               	goto	l9854
  5786  0026E0                     l9854:
  5787                           
  5788                           ;Setup_Time.c: 63: if (found == 8) Exit_Time_Setup();
  5789  0026E0  0E08               	movlw	8
  5790  0026E2  185D               	xorwf	_found,w,c
  5791  0026E4  A4D8               	btfss	status,2,c
  5792  0026E6  D003               	goto	l9858
  5793  0026E8  EC61  F01E         	call	_Exit_Time_Setup	;wreg free
  5794  0026EC  D000               	goto	l9858
  5795  0026EE                     l9858:
  5796                           
  5797                           ;Setup_Time.c: 64: found = 0xff;
  5798  0026EE  685D               	setf	_found,c
  5799                           
  5800                           ;Setup_Time.c: 65: }
  5801  0026F0  D003               	goto	l9862
  5802  0026F2                     l9860:
  5803                           
  5804                           ;Setup_Time.c: 66: else
  5805                           ;Setup_Time.c: 67: {
  5806                           ;Setup_Time.c: 68: Do_Beep_Bad();
  5807  0026F2  ECBE  F01D         	call	_Do_Beep_Bad	;wreg free
  5808  0026F6  D000               	goto	l9862
  5809  0026F8                     l9862:
  5810  0026F8  0100               	movlb	0	; () banked
  5811  0026FA  05F9               	decf	_In_Time_Setup& (0+255),w,b
  5812  0026FC  B4D8               	btfsc	status,2,c
  5813  0026FE  D7C0               	goto	l9826
  5814                           
  5815                           ; BSR set to: 0
  5816                           
  5817                           ; BSR set to: 0
  5818  002700  0012               	return		;funcret
  5819  002702                     __end_of_Do_Setup_Time:
  5820                           	opt stack 0
  5821                           tblptru	equ	0xFF8
  5822                           tblptrh	equ	0xFF7
  5823                           tblptrl	equ	0xFF6
  5824                           tablat	equ	0xFF5
  5825                           prodh	equ	0xFF4
  5826                           prodl	equ	0xFF3
  5827                           postinc0	equ	0xFEE
  5828                           wreg	equ	0xFE8
  5829                           postdec1	equ	0xFE5
  5830                           plusw1	equ	0xFE3
  5831                           fsr1l	equ	0xFE1
  5832                           indf2	equ	0xFDF
  5833                           plusw2	equ	0xFDB
  5834                           fsr2h	equ	0xFDA
  5835                           fsr2l	equ	0xFD9
  5836                           status	equ	0xFD8
  5837                           
  5838 ;; *************** function _Initialize_Setup_Time_Screen *****************
  5839 ;; Defined at:
  5840 ;;		line 184 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Time.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;		None
  5845 ;; Return value:  Size  Location     Type
  5846 ;;		None               void
  5847 ;; Registers used:
  5848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;Total ram usage:        0 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:   10
  5861 ;; This function calls:
  5862 ;;		_drawtext
  5863 ;;		_fillRect
  5864 ;;		_fillScreen
  5865 ;;		_strcpy
  5866 ;; This function is called by:
  5867 ;;		_Do_Setup_Time
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text20
  5872  001B06                     __ptext20:
  5873                           	opt stack 0
  5874  001B06                     _Initialize_Setup_Time_Screen:
  5875                           	opt stack 19
  5876                           
  5877                           ;Setup_Time.c: 186: fillScreen(0x0000);
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;incstack = 0
  5881  001B06  0E00               	movlw	0
  5882  001B08  6E25               	movwf	fillScreen@color+1,c
  5883  001B0A  0E00               	movlw	0
  5884  001B0C  6E24               	movwf	fillScreen@color,c
  5885  001B0E  EC4D  F01D         	call	_fillScreen	;wreg free
  5886                           
  5887                           ;Setup_Time.c: 188: strcpy(txt, "ECE3301L Sp'22 S3\0");
  5888  001B12  C04E  F011         	movff	_txt,strcpy@to
  5889  001B16  C04F  F012         	movff	_txt+1,strcpy@to+1
  5890  001B1A  0E14               	movlw	low (STR_5+1)
  5891  001B1C  6E13               	movwf	strcpy@from,c
  5892  001B1E  0EFF               	movlw	high (STR_5+1)
  5893  001B20  6E14               	movwf	strcpy@from+1,c
  5894  001B22  EC3C  F01C         	call	_strcpy	;wreg free
  5895                           
  5896                           ;Setup_Time.c: 189: drawtext(1 , 1, txt, 0xFFFF , 0x0000, 1);
  5897  001B26  0E01               	movlw	1
  5898  001B28  6E39               	movwf	drawtext@y,c
  5899  001B2A  C04E  F03A         	movff	_txt,drawtext@_text
  5900  001B2E  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5901  001B32  0EFF               	movlw	255
  5902  001B34  6E3D               	movwf	drawtext@color+1,c
  5903  001B36  683C               	setf	drawtext@color,c
  5904  001B38  0E00               	movlw	0
  5905  001B3A  6E3F               	movwf	drawtext@bg+1,c
  5906  001B3C  0E00               	movlw	0
  5907  001B3E  6E3E               	movwf	drawtext@bg,c
  5908  001B40  0E01               	movlw	1
  5909  001B42  6E40               	movwf	drawtext@size,c
  5910  001B44  0E01               	movlw	1
  5911  001B46  ECFC  F00C         	call	_drawtext
  5912                           
  5913                           ;Setup_Time.c: 192: strcpy(txt, "Time Setup\0");
  5914  001B4A  C04E  F011         	movff	_txt,strcpy@to
  5915  001B4E  C04F  F012         	movff	_txt+1,strcpy@to+1
  5916  001B52  0E88               	movlw	low STR_33
  5917  001B54  6E13               	movwf	strcpy@from,c
  5918  001B56  0EFF               	movlw	high STR_33
  5919  001B58  6E14               	movwf	strcpy@from+1,c
  5920  001B5A  EC3C  F01C         	call	_strcpy	;wreg free
  5921                           
  5922                           ;Setup_Time.c: 193: drawtext(1+3 , 1+15, txt, 0xF81F, 0x0000, 2);
  5923  001B5E  0E10               	movlw	16
  5924  001B60  6E39               	movwf	drawtext@y,c
  5925  001B62  C04E  F03A         	movff	_txt,drawtext@_text
  5926  001B66  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5927  001B6A  0EF8               	movlw	248
  5928  001B6C  6E3D               	movwf	drawtext@color+1,c
  5929  001B6E  0E1F               	movlw	31
  5930  001B70  6E3C               	movwf	drawtext@color,c
  5931  001B72  0E00               	movlw	0
  5932  001B74  6E3F               	movwf	drawtext@bg+1,c
  5933  001B76  0E00               	movlw	0
  5934  001B78  6E3E               	movwf	drawtext@bg,c
  5935  001B7A  0E02               	movlw	2
  5936  001B7C  6E40               	movwf	drawtext@size,c
  5937  001B7E  0E04               	movlw	4
  5938  001B80  ECFC  F00C         	call	_drawtext
  5939                           
  5940                           ;Setup_Time.c: 195: strcpy(txt, "Time");
  5941  001B84  C04E  F011         	movff	_txt,strcpy@to
  5942  001B88  C04F  F012         	movff	_txt+1,strcpy@to+1
  5943  001B8C  0EB0               	movlw	low (STR_11+6)
  5944  001B8E  6E13               	movwf	strcpy@from,c
  5945  001B90  0EFF               	movlw	high (STR_11+6)
  5946  001B92  6E14               	movwf	strcpy@from+1,c
  5947  001B94  EC3C  F01C         	call	_strcpy	;wreg free
  5948                           
  5949                           ;Setup_Time.c: 196: drawtext(50 , 40 , txt, 0x001F , 0x0000, 1);
  5950  001B98  0E28               	movlw	40
  5951  001B9A  6E39               	movwf	drawtext@y,c
  5952  001B9C  C04E  F03A         	movff	_txt,drawtext@_text
  5953  001BA0  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5954  001BA4  0E00               	movlw	0
  5955  001BA6  6E3D               	movwf	drawtext@color+1,c
  5956  001BA8  0E1F               	movlw	31
  5957  001BAA  6E3C               	movwf	drawtext@color,c
  5958  001BAC  0E00               	movlw	0
  5959  001BAE  6E3F               	movwf	drawtext@bg+1,c
  5960  001BB0  0E00               	movlw	0
  5961  001BB2  6E3E               	movwf	drawtext@bg,c
  5962  001BB4  0E01               	movlw	1
  5963  001BB6  6E40               	movwf	drawtext@size,c
  5964  001BB8  0E32               	movlw	50
  5965  001BBA  ECFC  F00C         	call	_drawtext
  5966                           
  5967                           ;Setup_Time.c: 198: fillRect(15-1, 52+16, 25,2,0x07FF);
  5968  001BBE  0E44               	movlw	68
  5969  001BC0  6E23               	movwf	fillRect@y,c
  5970  001BC2  0E19               	movlw	25
  5971  001BC4  6E24               	movwf	fillRect@w,c
  5972  001BC6  0E02               	movlw	2
  5973  001BC8  6E25               	movwf	fillRect@h,c
  5974  001BCA  0E07               	movlw	7
  5975  001BCC  6E27               	movwf	fillRect@color+1,c
  5976  001BCE  6826               	setf	fillRect@color,c
  5977  001BD0  0E0E               	movlw	14
  5978  001BD2  EC3E  F01B         	call	_fillRect
  5979                           
  5980                           ;Setup_Time.c: 199: strcpy(txt, "Date");
  5981  001BD6  C04E  F011         	movff	_txt,strcpy@to
  5982  001BDA  C04F  F012         	movff	_txt+1,strcpy@to+1
  5983  001BDE  0EDF               	movlw	low STR_10
  5984  001BE0  6E13               	movwf	strcpy@from,c
  5985  001BE2  0EFF               	movlw	high STR_10
  5986  001BE4  6E14               	movwf	strcpy@from+1,c
  5987  001BE6  EC3C  F01C         	call	_strcpy	;wreg free
  5988                           
  5989                           ;Setup_Time.c: 200: drawtext(50 , 71 , txt, 0xF800 , 0x0000, 1);
  5990  001BEA  0E47               	movlw	71
  5991  001BEC  6E39               	movwf	drawtext@y,c
  5992  001BEE  C04E  F03A         	movff	_txt,drawtext@_text
  5993  001BF2  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5994  001BF6  0EF8               	movlw	248
  5995  001BF8  6E3D               	movwf	drawtext@color+1,c
  5996  001BFA  0E00               	movlw	0
  5997  001BFC  6E3C               	movwf	drawtext@color,c
  5998  001BFE  0E00               	movlw	0
  5999  001C00  6E3F               	movwf	drawtext@bg+1,c
  6000  001C02  0E00               	movlw	0
  6001  001C04  6E3E               	movwf	drawtext@bg,c
  6002  001C06  0E01               	movlw	1
  6003  001C08  6E40               	movwf	drawtext@size,c
  6004  001C0A  0E32               	movlw	50
  6005  001C0C  ECFC  F00C         	call	_drawtext
  6006  001C10  0012               	return		;funcret
  6007  001C12                     __end_of_Initialize_Setup_Time_Screen:
  6008                           	opt stack 0
  6009                           tblptru	equ	0xFF8
  6010                           tblptrh	equ	0xFF7
  6011                           tblptrl	equ	0xFF6
  6012                           tablat	equ	0xFF5
  6013                           prodh	equ	0xFF4
  6014                           prodl	equ	0xFF3
  6015                           postinc0	equ	0xFEE
  6016                           wreg	equ	0xFE8
  6017                           postdec1	equ	0xFE5
  6018                           plusw1	equ	0xFE3
  6019                           fsr1l	equ	0xFE1
  6020                           indf2	equ	0xFDF
  6021                           plusw2	equ	0xFDB
  6022                           fsr2h	equ	0xFDA
  6023                           fsr2l	equ	0xFD9
  6024                           status	equ	0xFD8
  6025                           
  6026 ;; *************** function _Increase_Time *****************
  6027 ;; Defined at:
  6028 ;;		line 74 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Time.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;		None               void
  6035 ;; Registers used:
  6036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;Total ram usage:        0 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:   11
  6049 ;; This function calls:
  6050 ;;		_Update_Setup_Time_Screen
  6051 ;; This function is called by:
  6052 ;;		_Do_Setup_Time
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           	psect	text21
  6057  002B4A                     __ptext21:
  6058                           	opt stack 0
  6059  002B4A                     _Increase_Time:
  6060                           	opt stack 18
  6061                           
  6062                           ;Setup_Time.c: 76: switch (Select_Field)
  6063                           
  6064                           ;incstack = 0
  6065  002B4A  D035               	goto	l9512
  6066  002B4C                     l9468:
  6067                           
  6068                           ;Setup_Time.c: 79: setup_hour++;
  6069  002B4C  2A68               	incf	_setup_hour,f,c
  6070                           
  6071                           ;Setup_Time.c: 80: if (setup_hour == 24) setup_hour = 0;
  6072  002B4E  0E18               	movlw	24
  6073  002B50  1868               	xorwf	_setup_hour,w,c
  6074  002B52  A4D8               	btfss	status,2,c
  6075  002B54  D044               	goto	l9514
  6076  002B56  0E00               	movlw	0
  6077  002B58  6E68               	movwf	_setup_hour,c
  6078                           
  6079                           ;Setup_Time.c: 81: break;
  6080  002B5A  D041               	goto	l9514
  6081  002B5C                     l9474:
  6082                           
  6083                           ;Setup_Time.c: 84: setup_minute++;
  6084  002B5C  2A69               	incf	_setup_minute,f,c
  6085                           
  6086                           ;Setup_Time.c: 85: if (setup_minute == 60) setup_minute = 0;
  6087  002B5E  0E3C               	movlw	60
  6088  002B60  1869               	xorwf	_setup_minute,w,c
  6089  002B62  A4D8               	btfss	status,2,c
  6090  002B64  D03C               	goto	l9514
  6091  002B66  0E00               	movlw	0
  6092  002B68  6E69               	movwf	_setup_minute,c
  6093                           
  6094                           ;Setup_Time.c: 86: break;
  6095  002B6A  D039               	goto	l9514
  6096  002B6C                     l9480:
  6097                           
  6098                           ;Setup_Time.c: 89: setup_second++;
  6099  002B6C  2A6B               	incf	_setup_second,f,c
  6100                           
  6101                           ;Setup_Time.c: 90: if (setup_second == 60) setup_second = 0;
  6102  002B6E  0E3C               	movlw	60
  6103  002B70  186B               	xorwf	_setup_second,w,c
  6104  002B72  A4D8               	btfss	status,2,c
  6105  002B74  D034               	goto	l9514
  6106  002B76  0E00               	movlw	0
  6107  002B78  6E6B               	movwf	_setup_second,c
  6108                           
  6109                           ;Setup_Time.c: 91: break;
  6110  002B7A  D031               	goto	l9514
  6111  002B7C                     l9486:
  6112                           
  6113                           ;Setup_Time.c: 93: setup_month++;
  6114  002B7C  2A6A               	incf	_setup_month,f,c
  6115                           
  6116                           ;Setup_Time.c: 94: if (setup_month == 13) setup_month = 1;
  6117  002B7E  0E0D               	movlw	13
  6118  002B80  186A               	xorwf	_setup_month,w,c
  6119  002B82  A4D8               	btfss	status,2,c
  6120  002B84  D02C               	goto	l9514
  6121  002B86  0E01               	movlw	1
  6122  002B88  6E6A               	movwf	_setup_month,c
  6123                           
  6124                           ;Setup_Time.c: 95: break;
  6125  002B8A  D029               	goto	l9514
  6126  002B8C                     l9492:
  6127                           
  6128                           ;Setup_Time.c: 97: setup_day++;
  6129  002B8C  2A66               	incf	_setup_day,f,c
  6130                           
  6131                           ;Setup_Time.c: 98: if (setup_month % 2 == 0){if (setup_day == 31) setup_day =1;}
  6132  002B8E  B06A               	btfsc	_setup_month,0,c
  6133  002B90  D007               	goto	l9500
  6134  002B92  0E1F               	movlw	31
  6135  002B94  1866               	xorwf	_setup_day,w,c
  6136  002B96  A4D8               	btfss	status,2,c
  6137  002B98  D022               	goto	l9514
  6138  002B9A  0E01               	movlw	1
  6139  002B9C  6E66               	movwf	_setup_day,c
  6140  002B9E  D01F               	goto	l9514
  6141  002BA0                     l9500:
  6142                           
  6143                           ;Setup_Time.c: 99: else {if (setup_day == 32) setup_day =1;}
  6144  002BA0  0E20               	movlw	32
  6145  002BA2  D7F8               	goto	L7
  6146                           
  6147                           ;Setup_Time.c: 100: break;
  6148  002BA4  D01C               	goto	l9514
  6149  002BA6                     l9504:
  6150                           
  6151                           ;Setup_Time.c: 102: setup_year++;
  6152  002BA6  2A6C               	incf	_setup_year,f,c
  6153                           
  6154                           ;Setup_Time.c: 103: if (setup_year == 100) setup_year = 0;
  6155  002BA8  0E64               	movlw	100
  6156  002BAA  186C               	xorwf	_setup_year,w,c
  6157  002BAC  A4D8               	btfss	status,2,c
  6158  002BAE  D017               	goto	l9514
  6159  002BB0  0E00               	movlw	0
  6160  002BB2  6E6C               	movwf	_setup_year,c
  6161                           
  6162                           ;Setup_Time.c: 107: }
  6163                           
  6164                           ;Setup_Time.c: 106: break;
  6165                           
  6166                           ;Setup_Time.c: 105: default:
  6167                           
  6168                           ;Setup_Time.c: 104: break;
  6169  002BB4  D014               	goto	l9514
  6170  002BB6                     l9512:
  6171  002BB6  5053               	movf	_Select_Field,w,c
  6172                           
  6173                           ; Switch size 1, requested type "space"
  6174                           ; Number of cases is 6, Range of values is 0 to 5
  6175                           ; switch strategies available:
  6176                           ; Name         Instructions Cycles
  6177                           ; simple_byte           19    10 (average)
  6178                           ;	Chosen strategy is simple_byte
  6179  002BB8  0A00               	xorlw	0	; case 0
  6180  002BBA  B4D8               	btfsc	status,2,c
  6181  002BBC  D7C7               	goto	l9468
  6182  002BBE  0A01               	xorlw	1	; case 1
  6183  002BC0  B4D8               	btfsc	status,2,c
  6184  002BC2  D7CC               	goto	l9474
  6185  002BC4  0A03               	xorlw	3	; case 2
  6186  002BC6  B4D8               	btfsc	status,2,c
  6187  002BC8  D7D1               	goto	l9480
  6188  002BCA  0A01               	xorlw	1	; case 3
  6189  002BCC  B4D8               	btfsc	status,2,c
  6190  002BCE  D7D6               	goto	l9486
  6191  002BD0  0A07               	xorlw	7	; case 4
  6192  002BD2  B4D8               	btfsc	status,2,c
  6193  002BD4  D7DB               	goto	l9492
  6194  002BD6  0A01               	xorlw	1	; case 5
  6195  002BD8  B4D8               	btfsc	status,2,c
  6196  002BDA  D7E5               	goto	l9504
  6197  002BDC  D000               	goto	l9514
  6198  002BDE                     l9514:
  6199                           
  6200                           ;Setup_Time.c: 108: Update_Setup_Time_Screen();
  6201  002BDE  EC3B  F00A         	call	_Update_Setup_Time_Screen	;wreg free
  6202  002BE2  0012               	return		;funcret
  6203  002BE4                     __end_of_Increase_Time:
  6204                           	opt stack 0
  6205                           tblptru	equ	0xFF8
  6206                           tblptrh	equ	0xFF7
  6207                           tblptrl	equ	0xFF6
  6208                           tablat	equ	0xFF5
  6209                           prodh	equ	0xFF4
  6210                           prodl	equ	0xFF3
  6211                           postinc0	equ	0xFEE
  6212                           wreg	equ	0xFE8
  6213                           postdec1	equ	0xFE5
  6214                           plusw1	equ	0xFE3
  6215                           fsr1l	equ	0xFE1
  6216                           indf2	equ	0xFDF
  6217                           plusw2	equ	0xFDB
  6218                           fsr2h	equ	0xFDA
  6219                           fsr2l	equ	0xFD9
  6220                           status	equ	0xFD8
  6221                           
  6222 ;; *************** function _Go_Prev_Field *****************
  6223 ;; Defined at:
  6224 ;;		line 163 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Time.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;		None               void
  6231 ;; Registers used:
  6232 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;Total ram usage:        0 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    9
  6245 ;; This function calls:
  6246 ;;		_Update_Setup_Screen_Cursor_Backward
  6247 ;; This function is called by:
  6248 ;;		_Do_Setup_Time
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text22
  6253  003AEC                     __ptext22:
  6254                           	opt stack 0
  6255  003AEC                     _Go_Prev_Field:
  6256                           	opt stack 20
  6257                           
  6258                           ;Setup_Time.c: 165: if (Select_Field == 0) Select_Field = 5;
  6259                           
  6260                           ;incstack = 0
  6261  003AEC  5053               	movf	_Select_Field,w,c
  6262  003AEE  A4D8               	btfss	status,2,c
  6263  003AF0  D003               	goto	l9394
  6264  003AF2  0E05               	movlw	5
  6265  003AF4  6E53               	movwf	_Select_Field,c
  6266  003AF6  D002               	goto	l9396
  6267  003AF8                     l9394:
  6268                           
  6269                           ;Setup_Time.c: 166: else Select_Field--;
  6270  003AF8  0653               	decf	_Select_Field,f,c
  6271  003AFA  D000               	goto	l9396
  6272  003AFC                     l9396:
  6273                           
  6274                           ;Setup_Time.c: 167: Update_Setup_Screen_Cursor_Backward(Select_Field);
  6275  003AFC  5053               	movf	_Select_Field,w,c
  6276  003AFE  EC8A  F008         	call	_Update_Setup_Screen_Cursor_Backward
  6277  003B02  0012               	return		;funcret
  6278  003B04                     __end_of_Go_Prev_Field:
  6279                           	opt stack 0
  6280                           tblptru	equ	0xFF8
  6281                           tblptrh	equ	0xFF7
  6282                           tblptrl	equ	0xFF6
  6283                           tablat	equ	0xFF5
  6284                           prodh	equ	0xFF4
  6285                           prodl	equ	0xFF3
  6286                           postinc0	equ	0xFEE
  6287                           wreg	equ	0xFE8
  6288                           postdec1	equ	0xFE5
  6289                           plusw1	equ	0xFE3
  6290                           fsr1l	equ	0xFE1
  6291                           indf2	equ	0xFDF
  6292                           plusw2	equ	0xFDB
  6293                           fsr2h	equ	0xFDA
  6294                           fsr2l	equ	0xFD9
  6295                           status	equ	0xFD8
  6296                           
  6297 ;; *************** function _Go_Next_Field *****************
  6298 ;; Defined at:
  6299 ;;		line 154 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Time.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;		None
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;		None               void
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6317 ;;Total ram usage:        0 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    9
  6320 ;; This function calls:
  6321 ;;		_Update_Setup_Screen_Cursor_Forward
  6322 ;; This function is called by:
  6323 ;;		_Do_Setup_Time
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text23
  6328  003B04                     __ptext23:
  6329                           	opt stack 0
  6330  003B04                     _Go_Next_Field:
  6331                           	opt stack 20
  6332                           
  6333                           ;Setup_Time.c: 157: Select_Field++;
  6334                           
  6335                           ;incstack = 0
  6336  003B04  2A53               	incf	_Select_Field,f,c
  6337                           
  6338                           ;Setup_Time.c: 158: if (Select_Field == 6) Select_Field = 0;
  6339  003B06  0E06               	movlw	6
  6340  003B08  1853               	xorwf	_Select_Field,w,c
  6341  003B0A  A4D8               	btfss	status,2,c
  6342  003B0C  D003               	goto	l9404
  6343  003B0E  0E00               	movlw	0
  6344  003B10  6E53               	movwf	_Select_Field,c
  6345  003B12  D000               	goto	l9404
  6346  003B14                     l9404:
  6347                           
  6348                           ;Setup_Time.c: 159: Update_Setup_Screen_Cursor_Forward(Select_Field);
  6349  003B14  5053               	movf	_Select_Field,w,c
  6350  003B16  ECAD  F007         	call	_Update_Setup_Screen_Cursor_Forward
  6351  003B1A  0012               	return		;funcret
  6352  003B1C                     __end_of_Go_Next_Field:
  6353                           	opt stack 0
  6354                           tblptru	equ	0xFF8
  6355                           tblptrh	equ	0xFF7
  6356                           tblptrl	equ	0xFF6
  6357                           tablat	equ	0xFF5
  6358                           prodh	equ	0xFF4
  6359                           prodl	equ	0xFF3
  6360                           postinc0	equ	0xFEE
  6361                           wreg	equ	0xFE8
  6362                           postdec1	equ	0xFE5
  6363                           plusw1	equ	0xFE3
  6364                           fsr1l	equ	0xFE1
  6365                           indf2	equ	0xFDF
  6366                           plusw2	equ	0xFDB
  6367                           fsr2h	equ	0xFDA
  6368                           fsr2l	equ	0xFD9
  6369                           status	equ	0xFD8
  6370                           
  6371 ;; *************** function _Exit_Time_Setup *****************
  6372 ;; Defined at:
  6373 ;;		line 178 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Time.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;		None
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;		None
  6378 ;; Return value:  Size  Location     Type
  6379 ;;		None               void
  6380 ;; Registers used:
  6381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;Total ram usage:        0 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:   11
  6394 ;; This function calls:
  6395 ;;		_DS3231_Read_Time
  6396 ;;		_Initialize_Screen
  6397 ;; This function is called by:
  6398 ;;		_Do_Setup_Time
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           	psect	text24
  6403  003CC2                     __ptext24:
  6404                           	opt stack 0
  6405  003CC2                     _Exit_Time_Setup:
  6406                           	opt stack 18
  6407                           
  6408                           ;Setup_Time.c: 180: DS3231_Read_Time();
  6409                           
  6410                           ;incstack = 0
  6411  003CC2  ECC5  F018         	call	_DS3231_Read_Time	;wreg free
  6412                           
  6413                           ;Setup_Time.c: 181: Initialize_Screen();
  6414  003CC6  EC43  F003         	call	_Initialize_Screen	;wreg free
  6415                           
  6416                           ;Setup_Time.c: 182: In_Time_Setup = 0;
  6417  003CCA  0E00               	movlw	0
  6418  003CCC  0100               	movlb	0	; () banked
  6419  003CCE  6FF9               	movwf	_In_Time_Setup& (0+255),b
  6420                           
  6421                           ; BSR set to: 0
  6422  003CD0  0012               	return		;funcret
  6423  003CD2                     __end_of_Exit_Time_Setup:
  6424                           	opt stack 0
  6425                           tblptru	equ	0xFF8
  6426                           tblptrh	equ	0xFF7
  6427                           tblptrl	equ	0xFF6
  6428                           tablat	equ	0xFF5
  6429                           prodh	equ	0xFF4
  6430                           prodl	equ	0xFF3
  6431                           postinc0	equ	0xFEE
  6432                           wreg	equ	0xFE8
  6433                           postdec1	equ	0xFE5
  6434                           plusw1	equ	0xFE3
  6435                           fsr1l	equ	0xFE1
  6436                           indf2	equ	0xFDF
  6437                           plusw2	equ	0xFDB
  6438                           fsr2h	equ	0xFDA
  6439                           fsr2l	equ	0xFD9
  6440                           status	equ	0xFD8
  6441                           
  6442 ;; *************** function _Do_Save_New_Time *****************
  6443 ;; Defined at:
  6444 ;;		line 170 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Time.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;		None
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;		None
  6449 ;; Return value:  Size  Location     Type
  6450 ;;		None               void
  6451 ;; Registers used:
  6452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;Total ram usage:        0 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:   11
  6465 ;; This function calls:
  6466 ;;		_DS3231_Read_Time
  6467 ;;		_DS3231_Write_Time
  6468 ;;		_Initialize_Screen
  6469 ;; This function is called by:
  6470 ;;		_Do_Setup_Time
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text25
  6475  003BAA                     __ptext25:
  6476                           	opt stack 0
  6477  003BAA                     _Do_Save_New_Time:
  6478                           	opt stack 18
  6479                           
  6480                           ;Setup_Time.c: 172: DS3231_Write_Time();
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;incstack = 0
  6484  003BAA  EC87  F016         	call	_DS3231_Write_Time	;wreg free
  6485                           
  6486                           ;Setup_Time.c: 173: DS3231_Read_Time();
  6487  003BAE  ECC5  F018         	call	_DS3231_Read_Time	;wreg free
  6488                           
  6489                           ;Setup_Time.c: 174: Initialize_Screen();
  6490  003BB2  EC43  F003         	call	_Initialize_Screen	;wreg free
  6491                           
  6492                           ;Setup_Time.c: 175: In_Time_Setup = 0;
  6493  003BB6  0E00               	movlw	0
  6494  003BB8  0100               	movlb	0	; () banked
  6495  003BBA  6FF9               	movwf	_In_Time_Setup& (0+255),b
  6496                           
  6497                           ; BSR set to: 0
  6498  003BBC  0012               	return		;funcret
  6499  003BBE                     __end_of_Do_Save_New_Time:
  6500                           	opt stack 0
  6501                           tblptru	equ	0xFF8
  6502                           tblptrh	equ	0xFF7
  6503                           tblptrl	equ	0xFF6
  6504                           tablat	equ	0xFF5
  6505                           prodh	equ	0xFF4
  6506                           prodl	equ	0xFF3
  6507                           postinc0	equ	0xFEE
  6508                           wreg	equ	0xFE8
  6509                           postdec1	equ	0xFE5
  6510                           plusw1	equ	0xFE3
  6511                           fsr1l	equ	0xFE1
  6512                           indf2	equ	0xFDF
  6513                           plusw2	equ	0xFDB
  6514                           fsr2h	equ	0xFDA
  6515                           fsr2l	equ	0xFD9
  6516                           status	equ	0xFD8
  6517                           
  6518 ;; *************** function _DS3231_Write_Time *****************
  6519 ;; Defined at:
  6520 ;;		line 90 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Support.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;		None
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;  Address         1   12[BANK1 ] unsigned char 
  6525 ;;  Device          1   11[BANK1 ] unsigned char 
  6526 ;; Return value:  Size  Location     Type
  6527 ;;		None               void
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0, cstack
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;Total ram usage:        2 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; Hardware stack levels required when called:    5
  6542 ;; This function calls:
  6543 ;;		_I2C_Start
  6544 ;;		_I2C_Stop
  6545 ;;		_I2C_Write
  6546 ;;		_dec_2_bcd
  6547 ;; This function is called by:
  6548 ;;		_Do_Save_New_Time
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text26
  6553  002D0E                     __ptext26:
  6554                           	opt stack 0
  6555  002D0E                     _DS3231_Write_Time:
  6556                           	opt stack 23
  6557                           
  6558                           ;I2C_Support.c: 92: char Device = 0x68;
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;incstack = 0
  6562  002D0E  0E68               	movlw	104
  6563  002D10  0101               	movlb	1	; () banked
  6564  002D12  6F5E               	movwf	DS3231_Write_Time@Device& (0+255),b
  6565                           
  6566                           ;I2C_Support.c: 93: char Address = 0x00;
  6567  002D14  0E00               	movlw	0
  6568  002D16  0101               	movlb	1	; () banked
  6569  002D18  6F5F               	movwf	DS3231_Write_Time@Address& (0+255),b
  6570                           
  6571                           ; BSR set to: 1
  6572                           ;I2C_Support.c: 94: second = dec_2_bcd(setup_second);
  6573  002D1A  506B               	movf	_setup_second,w,c
  6574  002D1C  EC91  F018         	call	_dec_2_bcd
  6575  002D20  5041               	movf	?_dec_2_bcd,w,c
  6576  002D22  6E62               	movwf	_second,c
  6577                           
  6578                           ;I2C_Support.c: 95: minute = dec_2_bcd(setup_minute);
  6579  002D24  5069               	movf	_setup_minute,w,c
  6580  002D26  EC91  F018         	call	_dec_2_bcd
  6581  002D2A  5041               	movf	?_dec_2_bcd,w,c
  6582  002D2C  6E5F               	movwf	_minute,c
  6583                           
  6584                           ;I2C_Support.c: 96: hour = dec_2_bcd(setup_hour);
  6585  002D2E  5068               	movf	_setup_hour,w,c
  6586  002D30  EC91  F018         	call	_dec_2_bcd
  6587  002D34  5041               	movf	?_dec_2_bcd,w,c
  6588  002D36  6E5E               	movwf	_hour,c
  6589                           
  6590                           ;I2C_Support.c: 97: dow = 0x01;
  6591  002D38  0E01               	movlw	1
  6592  002D3A  6E5B               	movwf	_dow,c
  6593                           
  6594                           ;I2C_Support.c: 98: day = dec_2_bcd(setup_day);
  6595  002D3C  5066               	movf	_setup_day,w,c
  6596  002D3E  EC91  F018         	call	_dec_2_bcd
  6597  002D42  5041               	movf	?_dec_2_bcd,w,c
  6598  002D44  6E5A               	movwf	_day,c
  6599                           
  6600                           ;I2C_Support.c: 99: month = dec_2_bcd(setup_month);
  6601  002D46  506A               	movf	_setup_month,w,c
  6602  002D48  EC91  F018         	call	_dec_2_bcd
  6603  002D4C  5041               	movf	?_dec_2_bcd,w,c
  6604  002D4E  6E60               	movwf	_month,c
  6605                           
  6606                           ;I2C_Support.c: 100: year = dec_2_bcd(setup_year);
  6607  002D50  506C               	movf	_setup_year,w,c
  6608  002D52  EC91  F018         	call	_dec_2_bcd
  6609  002D56  5041               	movf	?_dec_2_bcd,w,c
  6610  002D58  6E6D               	movwf	_year,c
  6611                           
  6612                           ;I2C_Support.c: 101: I2C_Start();
  6613  002D5A  EC47  F01E         	call	_I2C_Start	;wreg free
  6614                           
  6615                           ;I2C_Support.c: 102: I2C_Write((Device << 1) | 0);
  6616  002D5E  0101               	movlb	1	; () banked
  6617  002D60  515E               	movf	DS3231_Write_Time@Device& (0+255),w,b
  6618  002D62  255E               	addwf	DS3231_Write_Time@Device& (0+255),w,b
  6619  002D64  ECE6  F01B         	call	_I2C_Write
  6620                           
  6621                           ;I2C_Support.c: 103: I2C_Write(Address);
  6622  002D68  0101               	movlb	1	; () banked
  6623  002D6A  515F               	movf	DS3231_Write_Time@Address& (0+255),w,b
  6624  002D6C  ECE6  F01B         	call	_I2C_Write
  6625                           
  6626                           ;I2C_Support.c: 104: I2C_Write(second);
  6627  002D70  5062               	movf	_second,w,c
  6628  002D72  ECE6  F01B         	call	_I2C_Write
  6629                           
  6630                           ;I2C_Support.c: 105: I2C_Write(minute);
  6631  002D76  505F               	movf	_minute,w,c
  6632  002D78  ECE6  F01B         	call	_I2C_Write
  6633                           
  6634                           ;I2C_Support.c: 106: I2C_Write(hour);
  6635  002D7C  505E               	movf	_hour,w,c
  6636  002D7E  ECE6  F01B         	call	_I2C_Write
  6637                           
  6638                           ;I2C_Support.c: 107: I2C_Write(dow);
  6639  002D82  505B               	movf	_dow,w,c
  6640  002D84  ECE6  F01B         	call	_I2C_Write
  6641                           
  6642                           ;I2C_Support.c: 108: I2C_Write(day);
  6643  002D88  505A               	movf	_day,w,c
  6644  002D8A  ECE6  F01B         	call	_I2C_Write
  6645                           
  6646                           ;I2C_Support.c: 109: I2C_Write(month);
  6647  002D8E  5060               	movf	_month,w,c
  6648  002D90  ECE6  F01B         	call	_I2C_Write
  6649                           
  6650                           ;I2C_Support.c: 110: I2C_Write(year);
  6651  002D94  506D               	movf	_year,w,c
  6652  002D96  ECE6  F01B         	call	_I2C_Write
  6653                           
  6654                           ;I2C_Support.c: 111: I2C_Stop();
  6655  002D9A  EC3E  F01E         	call	_I2C_Stop	;wreg free
  6656  002D9E  0012               	return		;funcret
  6657  002DA0                     __end_of_DS3231_Write_Time:
  6658                           	opt stack 0
  6659                           tblptru	equ	0xFF8
  6660                           tblptrh	equ	0xFF7
  6661                           tblptrl	equ	0xFF6
  6662                           tablat	equ	0xFF5
  6663                           prodh	equ	0xFF4
  6664                           prodl	equ	0xFF3
  6665                           postinc0	equ	0xFEE
  6666                           wreg	equ	0xFE8
  6667                           postdec1	equ	0xFE5
  6668                           plusw1	equ	0xFE3
  6669                           fsr1l	equ	0xFE1
  6670                           indf2	equ	0xFDF
  6671                           plusw2	equ	0xFDB
  6672                           fsr2h	equ	0xFDA
  6673                           fsr2l	equ	0xFD9
  6674                           status	equ	0xFD8
  6675                           
  6676 ;; *************** function _Decrease_Time *****************
  6677 ;; Defined at:
  6678 ;;		line 111 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Time.c"
  6679 ;; Parameters:    Size  Location     Type
  6680 ;;		None
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;		None
  6683 ;; Return value:  Size  Location     Type
  6684 ;;		None               void
  6685 ;; Registers used:
  6686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6696 ;;Total ram usage:        0 bytes
  6697 ;; Hardware stack levels used:    1
  6698 ;; Hardware stack levels required when called:   11
  6699 ;; This function calls:
  6700 ;;		_Update_Setup_Time_Screen
  6701 ;; This function is called by:
  6702 ;;		_Do_Setup_Time
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           	psect	text27
  6707  002AA0                     __ptext27:
  6708                           	opt stack 0
  6709  002AA0                     _Decrease_Time:
  6710                           	opt stack 18
  6711                           
  6712                           ;Setup_Time.c: 113: switch (Select_Field)
  6713                           
  6714                           ;incstack = 0
  6715  002AA0  D03D               	goto	l9462
  6716  002AA2                     l9414:
  6717                           
  6718                           ;Setup_Time.c: 116: if (setup_hour == 0) setup_hour = 23;
  6719  002AA2  5068               	movf	_setup_hour,w,c
  6720  002AA4  A4D8               	btfss	status,2,c
  6721  002AA6  D003               	goto	l9418
  6722  002AA8  0E17               	movlw	23
  6723  002AAA  6E68               	movwf	_setup_hour,c
  6724  002AAC  D04B               	goto	l9464
  6725  002AAE                     l9418:
  6726                           
  6727                           ;Setup_Time.c: 117: else --setup_hour;
  6728  002AAE  0668               	decf	_setup_hour,f,c
  6729                           
  6730                           ;Setup_Time.c: 118: break;
  6731  002AB0  D049               	goto	l9464
  6732  002AB2                     l9420:
  6733                           
  6734                           ;Setup_Time.c: 120: setup_minute++;
  6735  002AB2  2A69               	incf	_setup_minute,f,c
  6736                           
  6737                           ;Setup_Time.c: 121: if (setup_minute == 60) setup_minute = 0;
  6738  002AB4  0E3C               	movlw	60
  6739  002AB6  1869               	xorwf	_setup_minute,w,c
  6740  002AB8  A4D8               	btfss	status,2,c
  6741  002ABA  D003               	goto	l9426
  6742  002ABC  0E00               	movlw	0
  6743  002ABE  6E69               	movwf	_setup_minute,c
  6744  002AC0  D041               	goto	l9464
  6745  002AC2                     l9426:
  6746                           
  6747                           ;Setup_Time.c: 122: else --setup_minute;
  6748  002AC2  0669               	decf	_setup_minute,f,c
  6749                           
  6750                           ;Setup_Time.c: 123: break;
  6751  002AC4  D03F               	goto	l9464
  6752  002AC6                     l9428:
  6753                           
  6754                           ;Setup_Time.c: 126: setup_second++;
  6755  002AC6  2A6B               	incf	_setup_second,f,c
  6756                           
  6757                           ;Setup_Time.c: 127: if (setup_second == 60) setup_second = 0;
  6758  002AC8  0E3C               	movlw	60
  6759  002ACA  186B               	xorwf	_setup_second,w,c
  6760  002ACC  A4D8               	btfss	status,2,c
  6761  002ACE  D003               	goto	l9434
  6762  002AD0  0E00               	movlw	0
  6763  002AD2  6E6B               	movwf	_setup_second,c
  6764  002AD4  D037               	goto	l9464
  6765  002AD6                     l9434:
  6766                           
  6767                           ;Setup_Time.c: 128: else --setup_second;
  6768  002AD6  066B               	decf	_setup_second,f,c
  6769                           
  6770                           ;Setup_Time.c: 129: break;
  6771  002AD8  D035               	goto	l9464
  6772  002ADA                     l9436:
  6773                           
  6774                           ;Setup_Time.c: 132: if (setup_month == 1) setup_month = 12;
  6775  002ADA  046A               	decf	_setup_month,w,c
  6776  002ADC  A4D8               	btfss	status,2,c
  6777  002ADE  D003               	goto	l9440
  6778  002AE0  0E0C               	movlw	12
  6779  002AE2  6E6A               	movwf	_setup_month,c
  6780  002AE4  D02F               	goto	l9464
  6781  002AE6                     l9440:
  6782                           
  6783                           ;Setup_Time.c: 133: else --setup_month;
  6784  002AE6  066A               	decf	_setup_month,f,c
  6785                           
  6786                           ;Setup_Time.c: 134: break;
  6787  002AE8  D02D               	goto	l9464
  6788  002AEA                     l683:
  6789                           
  6790                           ;Setup_Time.c: 136: if (setup_month % 2 == 0)
  6791  002AEA  B06A               	btfsc	_setup_month,0,c
  6792  002AEC  D007               	goto	l9448
  6793                           
  6794                           ;Setup_Time.c: 137: {if (setup_day == 0) setup_day = 30;
  6795  002AEE  5066               	movf	_setup_day,w,c
  6796  002AF0  A4D8               	btfss	status,2,c
  6797  002AF2  D00A               	goto	l9452
  6798  002AF4  0E1E               	movlw	30
  6799  002AF6  D006               	goto	L8
  6800  002AF8  D007               	goto	l9452
  6801                           
  6802                           ;Setup_Time.c: 138: else --setup_day;}
  6803  002AFA  D024               	goto	l9464
  6804  002AFC                     l9448:
  6805                           
  6806                           ;Setup_Time.c: 139: else
  6807                           ;Setup_Time.c: 140: {if (setup_day == 0) setup_day = 31;
  6808  002AFC  5066               	movf	_setup_day,w,c
  6809  002AFE  A4D8               	btfss	status,2,c
  6810  002B00  D003               	goto	l9452
  6811  002B02  0E1F               	movlw	31
  6812  002B04                     L8:
  6813  002B04  6E66               	movwf	_setup_day,c
  6814  002B06  D01E               	goto	l9464
  6815  002B08                     l9452:
  6816                           
  6817                           ;Setup_Time.c: 141: else --setup_day;}
  6818  002B08  0666               	decf	_setup_day,f,c
  6819                           
  6820                           ;Setup_Time.c: 142: break;
  6821  002B0A  D01C               	goto	l9464
  6822  002B0C                     l9454:
  6823                           
  6824                           ;Setup_Time.c: 145: if (setup_year == 0) setup_year = 99;
  6825  002B0C  506C               	movf	_setup_year,w,c
  6826  002B0E  A4D8               	btfss	status,2,c
  6827  002B10  D003               	goto	l9458
  6828  002B12  0E63               	movlw	99
  6829  002B14  6E6C               	movwf	_setup_year,c
  6830  002B16  D016               	goto	l9464
  6831  002B18                     l9458:
  6832                           
  6833                           ;Setup_Time.c: 146: else --setup_year;
  6834  002B18  066C               	decf	_setup_year,f,c
  6835                           
  6836                           ;Setup_Time.c: 150: }
  6837                           
  6838                           ;Setup_Time.c: 149: break;
  6839                           
  6840                           ;Setup_Time.c: 148: default:
  6841                           
  6842                           ;Setup_Time.c: 147: break;
  6843  002B1A  D014               	goto	l9464
  6844  002B1C                     l9462:
  6845  002B1C  5053               	movf	_Select_Field,w,c
  6846                           
  6847                           ; Switch size 1, requested type "space"
  6848                           ; Number of cases is 6, Range of values is 0 to 5
  6849                           ; switch strategies available:
  6850                           ; Name         Instructions Cycles
  6851                           ; simple_byte           19    10 (average)
  6852                           ;	Chosen strategy is simple_byte
  6853  002B1E  0A00               	xorlw	0	; case 0
  6854  002B20  B4D8               	btfsc	status,2,c
  6855  002B22  D7BF               	goto	l9414
  6856  002B24  0A01               	xorlw	1	; case 1
  6857  002B26  B4D8               	btfsc	status,2,c
  6858  002B28  D7C4               	goto	l9420
  6859  002B2A  0A03               	xorlw	3	; case 2
  6860  002B2C  B4D8               	btfsc	status,2,c
  6861  002B2E  D7CB               	goto	l9428
  6862  002B30  0A01               	xorlw	1	; case 3
  6863  002B32  B4D8               	btfsc	status,2,c
  6864  002B34  D7D2               	goto	l9436
  6865  002B36  0A07               	xorlw	7	; case 4
  6866  002B38  B4D8               	btfsc	status,2,c
  6867  002B3A  D7D7               	goto	l683
  6868  002B3C  0A01               	xorlw	1	; case 5
  6869  002B3E  B4D8               	btfsc	status,2,c
  6870  002B40  D7E5               	goto	l9454
  6871  002B42  D000               	goto	l9464
  6872  002B44                     l9464:
  6873                           
  6874                           ;Setup_Time.c: 151: Update_Setup_Time_Screen();
  6875  002B44  EC3B  F00A         	call	_Update_Setup_Time_Screen	;wreg free
  6876  002B48  0012               	return		;funcret
  6877  002B4A                     __end_of_Decrease_Time:
  6878                           	opt stack 0
  6879                           tblptru	equ	0xFF8
  6880                           tblptrh	equ	0xFF7
  6881                           tblptrl	equ	0xFF6
  6882                           tablat	equ	0xFF5
  6883                           prodh	equ	0xFF4
  6884                           prodl	equ	0xFF3
  6885                           postinc0	equ	0xFEE
  6886                           wreg	equ	0xFE8
  6887                           postdec1	equ	0xFE5
  6888                           plusw1	equ	0xFE3
  6889                           fsr1l	equ	0xFE1
  6890                           indf2	equ	0xFDF
  6891                           plusw2	equ	0xFDB
  6892                           fsr2h	equ	0xFDA
  6893                           fsr2l	equ	0xFD9
  6894                           status	equ	0xFD8
  6895                           
  6896 ;; *************** function _Update_Setup_Time_Screen *****************
  6897 ;; Defined at:
  6898 ;;		line 203 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Time.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;		None
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;		None
  6903 ;; Return value:  Size  Location     Type
  6904 ;;		None               void
  6905 ;; Registers used:
  6906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6916 ;;Total ram usage:        0 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:   10
  6919 ;; This function calls:
  6920 ;;		___awdiv
  6921 ;;		___awmod
  6922 ;;		_drawtext
  6923 ;; This function is called by:
  6924 ;;		_Do_Setup_Time
  6925 ;;		_Increase_Time
  6926 ;;		_Decrease_Time
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text28
  6931  001476                     __ptext28:
  6932                           	opt stack 0
  6933  001476                     _Update_Setup_Time_Screen:
  6934                           	opt stack 19
  6935                           
  6936                           ;Setup_Time.c: 205: setup_time[0] = (setup_hour/10) + '0';
  6937                           
  6938                           ;incstack = 0
  6939  001476  C068  F153         	movff	_setup_hour,___awdiv@dividend
  6940  00147A  0101               	movlb	1	; () banked
  6941  00147C  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
  6942  00147E  0E00               	movlw	0
  6943  001480  0101               	movlb	1	; () banked
  6944  001482  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  6945  001484  0E0A               	movlw	10
  6946  001486  6F55               	movwf	___awdiv@divisor& (0+255),b
  6947  001488  ECB4  F012         	call	___awdiv	;wreg free
  6948  00148C  0101               	movlb	1	; () banked
  6949  00148E  5153               	movf	?___awdiv& (0+255),w,b
  6950  001490  0F30               	addlw	48
  6951  001492  0100               	movlb	0	; () banked
  6952  001494  6FA5               	movwf	_setup_time& (0+255),b
  6953                           
  6954                           ;Setup_Time.c: 206: setup_time[1] = (setup_hour % 10) + '0';
  6955  001496  C068  F03B         	movff	_setup_hour,___awmod@dividend
  6956  00149A  6A3C               	clrf	___awmod@dividend+1,c
  6957  00149C  0E00               	movlw	0
  6958  00149E  6E3E               	movwf	___awmod@divisor+1,c
  6959  0014A0  0E0A               	movlw	10
  6960  0014A2  6E3D               	movwf	___awmod@divisor,c
  6961  0014A4  EC5C  F017         	call	___awmod	;wreg free
  6962  0014A8  503B               	movf	?___awmod,w,c
  6963  0014AA  0F30               	addlw	48
  6964  0014AC  0100               	movlb	0	; () banked
  6965  0014AE  6FA6               	movwf	(_setup_time+1)& (0+255),b
  6966                           
  6967                           ;Setup_Time.c: 208: setup_time[3] = (setup_minute/10) + '0';
  6968  0014B0  C069  F153         	movff	_setup_minute,___awdiv@dividend
  6969  0014B4  0101               	movlb	1	; () banked
  6970  0014B6  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
  6971  0014B8  0E00               	movlw	0
  6972  0014BA  0101               	movlb	1	; () banked
  6973  0014BC  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  6974  0014BE  0E0A               	movlw	10
  6975  0014C0  6F55               	movwf	___awdiv@divisor& (0+255),b
  6976  0014C2  ECB4  F012         	call	___awdiv	;wreg free
  6977  0014C6  0101               	movlb	1	; () banked
  6978  0014C8  5153               	movf	?___awdiv& (0+255),w,b
  6979  0014CA  0F30               	addlw	48
  6980  0014CC  0100               	movlb	0	; () banked
  6981  0014CE  6FA8               	movwf	(_setup_time+3)& (0+255),b
  6982                           
  6983                           ;Setup_Time.c: 209: setup_time[4] = (setup_minute % 10) + '0';
  6984  0014D0  C069  F03B         	movff	_setup_minute,___awmod@dividend
  6985  0014D4  6A3C               	clrf	___awmod@dividend+1,c
  6986  0014D6  0E00               	movlw	0
  6987  0014D8  6E3E               	movwf	___awmod@divisor+1,c
  6988  0014DA  0E0A               	movlw	10
  6989  0014DC  6E3D               	movwf	___awmod@divisor,c
  6990  0014DE  EC5C  F017         	call	___awmod	;wreg free
  6991  0014E2  503B               	movf	?___awmod,w,c
  6992  0014E4  0F30               	addlw	48
  6993  0014E6  0100               	movlb	0	; () banked
  6994  0014E8  6FA9               	movwf	(_setup_time+4)& (0+255),b
  6995                           
  6996                           ;Setup_Time.c: 211: setup_time[6] = (setup_second/10) + '0';
  6997  0014EA  C06B  F153         	movff	_setup_second,___awdiv@dividend
  6998  0014EE  0101               	movlb	1	; () banked
  6999  0014F0  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
  7000  0014F2  0E00               	movlw	0
  7001  0014F4  0101               	movlb	1	; () banked
  7002  0014F6  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  7003  0014F8  0E0A               	movlw	10
  7004  0014FA  6F55               	movwf	___awdiv@divisor& (0+255),b
  7005  0014FC  ECB4  F012         	call	___awdiv	;wreg free
  7006  001500  0101               	movlb	1	; () banked
  7007  001502  5153               	movf	?___awdiv& (0+255),w,b
  7008  001504  0F30               	addlw	48
  7009  001506  0100               	movlb	0	; () banked
  7010  001508  6FAB               	movwf	(_setup_time+6)& (0+255),b
  7011                           
  7012                           ;Setup_Time.c: 212: setup_time[7] = (setup_second % 10) + '0';
  7013  00150A  C06B  F03B         	movff	_setup_second,___awmod@dividend
  7014  00150E  6A3C               	clrf	___awmod@dividend+1,c
  7015  001510  0E00               	movlw	0
  7016  001512  6E3E               	movwf	___awmod@divisor+1,c
  7017  001514  0E0A               	movlw	10
  7018  001516  6E3D               	movwf	___awmod@divisor,c
  7019  001518  EC5C  F017         	call	___awmod	;wreg free
  7020  00151C  503B               	movf	?___awmod,w,c
  7021  00151E  0F30               	addlw	48
  7022  001520  0100               	movlb	0	; () banked
  7023  001522  6FAC               	movwf	(_setup_time+7)& (0+255),b
  7024                           
  7025                           ;Setup_Time.c: 214: setup_date[0] = (setup_month/10) + '0';
  7026  001524  C06A  F153         	movff	_setup_month,___awdiv@dividend
  7027  001528  0101               	movlb	1	; () banked
  7028  00152A  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
  7029  00152C  0E00               	movlw	0
  7030  00152E  0101               	movlb	1	; () banked
  7031  001530  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  7032  001532  0E0A               	movlw	10
  7033  001534  6F55               	movwf	___awdiv@divisor& (0+255),b
  7034  001536  ECB4  F012         	call	___awdiv	;wreg free
  7035  00153A  0101               	movlb	1	; () banked
  7036  00153C  5153               	movf	?___awdiv& (0+255),w,b
  7037  00153E  0F30               	addlw	48
  7038  001540  0100               	movlb	0	; () banked
  7039  001542  6F9C               	movwf	_setup_date& (0+255),b
  7040                           
  7041                           ;Setup_Time.c: 215: setup_date[1] = (setup_month % 10) + '0';
  7042  001544  C06A  F03B         	movff	_setup_month,___awmod@dividend
  7043  001548  6A3C               	clrf	___awmod@dividend+1,c
  7044  00154A  0E00               	movlw	0
  7045  00154C  6E3E               	movwf	___awmod@divisor+1,c
  7046  00154E  0E0A               	movlw	10
  7047  001550  6E3D               	movwf	___awmod@divisor,c
  7048  001552  EC5C  F017         	call	___awmod	;wreg free
  7049  001556  503B               	movf	?___awmod,w,c
  7050  001558  0F30               	addlw	48
  7051  00155A  0100               	movlb	0	; () banked
  7052  00155C  6F9D               	movwf	(_setup_date+1)& (0+255),b
  7053                           
  7054                           ;Setup_Time.c: 217: setup_date[3] = (setup_day/10) + '0';
  7055  00155E  C066  F153         	movff	_setup_day,___awdiv@dividend
  7056  001562  0101               	movlb	1	; () banked
  7057  001564  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
  7058  001566  0E00               	movlw	0
  7059  001568  0101               	movlb	1	; () banked
  7060  00156A  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  7061  00156C  0E0A               	movlw	10
  7062  00156E  6F55               	movwf	___awdiv@divisor& (0+255),b
  7063  001570  ECB4  F012         	call	___awdiv	;wreg free
  7064  001574  0101               	movlb	1	; () banked
  7065  001576  5153               	movf	?___awdiv& (0+255),w,b
  7066  001578  0F30               	addlw	48
  7067  00157A  0100               	movlb	0	; () banked
  7068  00157C  6F9F               	movwf	(_setup_date+3)& (0+255),b
  7069                           
  7070                           ;Setup_Time.c: 218: setup_date[4] = (setup_day % 10) + '0';
  7071  00157E  C066  F03B         	movff	_setup_day,___awmod@dividend
  7072  001582  6A3C               	clrf	___awmod@dividend+1,c
  7073  001584  0E00               	movlw	0
  7074  001586  6E3E               	movwf	___awmod@divisor+1,c
  7075  001588  0E0A               	movlw	10
  7076  00158A  6E3D               	movwf	___awmod@divisor,c
  7077  00158C  EC5C  F017         	call	___awmod	;wreg free
  7078  001590  503B               	movf	?___awmod,w,c
  7079  001592  0F30               	addlw	48
  7080  001594  0100               	movlb	0	; () banked
  7081  001596  6FA0               	movwf	(_setup_date+4)& (0+255),b
  7082                           
  7083                           ;Setup_Time.c: 220: setup_date[6] = (setup_year/10) + '0';
  7084  001598  C06C  F153         	movff	_setup_year,___awdiv@dividend
  7085  00159C  0101               	movlb	1	; () banked
  7086  00159E  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
  7087  0015A0  0E00               	movlw	0
  7088  0015A2  0101               	movlb	1	; () banked
  7089  0015A4  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  7090  0015A6  0E0A               	movlw	10
  7091  0015A8  6F55               	movwf	___awdiv@divisor& (0+255),b
  7092  0015AA  ECB4  F012         	call	___awdiv	;wreg free
  7093  0015AE  0101               	movlb	1	; () banked
  7094  0015B0  5153               	movf	?___awdiv& (0+255),w,b
  7095  0015B2  0F30               	addlw	48
  7096  0015B4  0100               	movlb	0	; () banked
  7097  0015B6  6FA2               	movwf	(_setup_date+6)& (0+255),b
  7098                           
  7099                           ;Setup_Time.c: 221: setup_date[7] = (setup_year % 10) + '0';
  7100  0015B8  C06C  F03B         	movff	_setup_year,___awmod@dividend
  7101  0015BC  6A3C               	clrf	___awmod@dividend+1,c
  7102  0015BE  0E00               	movlw	0
  7103  0015C0  6E3E               	movwf	___awmod@divisor+1,c
  7104  0015C2  0E0A               	movlw	10
  7105  0015C4  6E3D               	movwf	___awmod@divisor,c
  7106  0015C6  EC5C  F017         	call	___awmod	;wreg free
  7107  0015CA  503B               	movf	?___awmod,w,c
  7108  0015CC  0F30               	addlw	48
  7109  0015CE  0100               	movlb	0	; () banked
  7110  0015D0  6FA3               	movwf	(_setup_date+7)& (0+255),b
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;Setup_Time.c: 223: drawtext(15, 52, setup_time, 0x07FF, 0x0000, 2);
  7114  0015D2  0E34               	movlw	52
  7115  0015D4  6E39               	movwf	drawtext@y,c
  7116  0015D6  0EA5               	movlw	low _setup_time
  7117  0015D8  6E3A               	movwf	drawtext@_text,c
  7118  0015DA  0E00               	movlw	high _setup_time
  7119  0015DC  6E3B               	movwf	drawtext@_text+1,c
  7120  0015DE  0E07               	movlw	7
  7121  0015E0  6E3D               	movwf	drawtext@color+1,c
  7122  0015E2  683C               	setf	drawtext@color,c
  7123  0015E4  0E00               	movlw	0
  7124  0015E6  6E3F               	movwf	drawtext@bg+1,c
  7125  0015E8  0E00               	movlw	0
  7126  0015EA  6E3E               	movwf	drawtext@bg,c
  7127  0015EC  0E02               	movlw	2
  7128  0015EE  6E40               	movwf	drawtext@size,c
  7129  0015F0  0E0F               	movlw	15
  7130  0015F2  ECFC  F00C         	call	_drawtext
  7131                           
  7132                           ;Setup_Time.c: 224: drawtext(15, 82, setup_date, 0x07E0, 0x0000, 2);
  7133  0015F6  0E52               	movlw	82
  7134  0015F8  6E39               	movwf	drawtext@y,c
  7135  0015FA  0E9C               	movlw	low _setup_date
  7136  0015FC  6E3A               	movwf	drawtext@_text,c
  7137  0015FE  0E00               	movlw	high _setup_date
  7138  001600  6E3B               	movwf	drawtext@_text+1,c
  7139  001602  0E07               	movlw	7
  7140  001604  6E3D               	movwf	drawtext@color+1,c
  7141  001606  0EE0               	movlw	224
  7142  001608  6E3C               	movwf	drawtext@color,c
  7143  00160A  0E00               	movlw	0
  7144  00160C  6E3F               	movwf	drawtext@bg+1,c
  7145  00160E  0E00               	movlw	0
  7146  001610  6E3E               	movwf	drawtext@bg,c
  7147  001612  0E02               	movlw	2
  7148  001614  6E40               	movwf	drawtext@size,c
  7149  001616  0E0F               	movlw	15
  7150  001618  ECFC  F00C         	call	_drawtext
  7151  00161C  0012               	return		;funcret
  7152  00161E                     __end_of_Update_Setup_Time_Screen:
  7153                           	opt stack 0
  7154                           tblptru	equ	0xFF8
  7155                           tblptrh	equ	0xFF7
  7156                           tblptrl	equ	0xFF6
  7157                           tablat	equ	0xFF5
  7158                           prodh	equ	0xFF4
  7159                           prodl	equ	0xFF3
  7160                           postinc0	equ	0xFEE
  7161                           wreg	equ	0xFE8
  7162                           postdec1	equ	0xFE5
  7163                           plusw1	equ	0xFE3
  7164                           fsr1l	equ	0xFE1
  7165                           indf2	equ	0xFDF
  7166                           plusw2	equ	0xFDB
  7167                           fsr2h	equ	0xFDA
  7168                           fsr2l	equ	0xFD9
  7169                           status	equ	0xFD8
  7170                           
  7171 ;; *************** function _Do_Setup_Heater_Temp *****************
  7172 ;; Defined at:
  7173 ;;		line 24 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Heater_Temp.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;		None
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  2   72[None  ] int 
  7180 ;; Registers used:
  7181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7189 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7190 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7191 ;;Total ram usage:        2 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:   12
  7194 ;; This function calls:
  7195 ;;		_Decrease_Heater_Temp
  7196 ;;		_Do_Beep_Bad
  7197 ;;		_Do_Beep_Good
  7198 ;;		_Do_Save_New_Heater_Temp
  7199 ;;		_Exit_Setup_Heater_Temp
  7200 ;;		_Increase_Heater_Temp
  7201 ;;		_Initialize_Setup_Heater_Screen
  7202 ;;		_Update_Setup_Heater_Screen
  7203 ;;		_check_for_button_input
  7204 ;; This function is called by:
  7205 ;;		_main
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text29
  7210  002C7A                     __ptext29:
  7211                           	opt stack 0
  7212  002C7A                     _Do_Setup_Heater_Temp:
  7213                           	opt stack 18
  7214                           
  7215                           ;Setup_Heater_Temp.c: 26: In_Heater_Temp_Setup = 1;
  7216                           
  7217                           ;incstack = 0
  7218  002C7A  0E01               	movlw	1
  7219  002C7C  0100               	movlb	0	; () banked
  7220  002C7E  6FF8               	movwf	_In_Heater_Temp_Setup& (0+255),b
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;Setup_Heater_Temp.c: 27: setup_heater_set_temp = heater_set_temp;
  7224  002C80  C06E  F067         	movff	_heater_set_temp,_setup_heater_set_temp
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;Setup_Heater_Temp.c: 28: Initialize_Setup_Heater_Screen();
  7228  002C84  EC8F  F00F         	call	_Initialize_Setup_Heater_Screen	;wreg free
  7229                           
  7230                           ;Setup_Heater_Temp.c: 29: Update_Setup_Heater_Screen();
  7231  002C88  ECFA  F014         	call	_Update_Setup_Heater_Screen	;wreg free
  7232                           
  7233                           ;Setup_Heater_Temp.c: 31: while (In_Heater_Temp_Setup == 1)
  7234  002C8C  D03B               	goto	l9960
  7235  002C8E                     l9930:
  7236                           
  7237                           ;Setup_Heater_Temp.c: 32: {
  7238                           ;Setup_Heater_Temp.c: 33: if (check_for_button_input() == 1)
  7239  002C8E  0E01               	movlw	1
  7240  002C90  0101               	movlb	1	; () banked
  7241  002C92  6F5B               	movwf	??_Do_Setup_Heater_Temp& (0+255),b
  7242  002C94  0E00               	movlw	0
  7243  002C96  0101               	movlb	1	; () banked
  7244  002C98  6F5C               	movwf	(??_Do_Setup_Heater_Temp+1)& (0+255),b
  7245  002C9A  EC9D  F017         	call	_check_for_button_input	;wreg free
  7246  002C9E  0101               	movlb	1	; () banked
  7247  002CA0  195B               	xorwf	??_Do_Setup_Heater_Temp& (0+255),w,b
  7248  002CA2  115C               	iorwf	(??_Do_Setup_Heater_Temp+1)& (0+255),w,b
  7249  002CA4  A4D8               	btfss	status,2,c
  7250  002CA6  D02E               	goto	l9960
  7251                           
  7252                           ; BSR set to: 1
  7253                           ;Setup_Heater_Temp.c: 34: {
  7254                           ;Setup_Heater_Temp.c: 35: nec_ok = 0;
  7255  002CA8  0E00               	movlw	0
  7256  002CAA  0100               	movlb	0	; () banked
  7257  002CAC  6FF2               	movwf	(_nec_ok+1)& (0+255),b
  7258  002CAE  0E00               	movlw	0
  7259  002CB0  6FF1               	movwf	_nec_ok& (0+255),b
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;Setup_Heater_Temp.c: 36: if (found >= 5 && found <= 8)
  7263  002CB2  0E04               	movlw	4
  7264  002CB4  645D               	cpfsgt	_found,c
  7265  002CB6  D023               	goto	l9958
  7266                           
  7267                           ; BSR set to: 0
  7268  002CB8  0E09               	movlw	9
  7269  002CBA  605D               	cpfslt	_found,c
  7270  002CBC  D020               	goto	l9958
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;Setup_Heater_Temp.c: 37: {
  7274                           ;Setup_Heater_Temp.c: 38: Do_Beep_Good();
  7275  002CBE  ECB2  F01D         	call	_Do_Beep_Good	;wreg free
  7276                           
  7277                           ;Setup_Heater_Temp.c: 39: if(found == 5) Do_Save_New_Heater_Temp();
  7278  002CC2  0E05               	movlw	5
  7279  002CC4  185D               	xorwf	_found,w,c
  7280  002CC6  A4D8               	btfss	status,2,c
  7281  002CC8  D003               	goto	l9944
  7282  002CCA  ECE9  F01D         	call	_Do_Save_New_Heater_Temp	;wreg free
  7283  002CCE  D015               	goto	l9956
  7284  002CD0                     l9944:
  7285                           
  7286                           ;Setup_Heater_Temp.c: 40: else if (found == 6) Decrease_Heater_Temp();
  7287  002CD0  0E06               	movlw	6
  7288  002CD2  185D               	xorwf	_found,w,c
  7289  002CD4  A4D8               	btfss	status,2,c
  7290  002CD6  D003               	goto	l9948
  7291  002CD8  ECF3  F01D         	call	_Decrease_Heater_Temp	;wreg free
  7292  002CDC  D00E               	goto	l9956
  7293  002CDE                     l9948:
  7294                           
  7295                           ;Setup_Heater_Temp.c: 41: else if (found == 7) Increase_Heater_Temp();
  7296  002CDE  0E07               	movlw	7
  7297  002CE0  185D               	xorwf	_found,w,c
  7298  002CE2  A4D8               	btfss	status,2,c
  7299  002CE4  D003               	goto	l9952
  7300  002CE6  ECDF  F01D         	call	_Increase_Heater_Temp	;wreg free
  7301  002CEA  D007               	goto	l9956
  7302  002CEC                     l9952:
  7303                           
  7304                           ;Setup_Heater_Temp.c: 42: else if (found == 8) Exit_Setup_Heater_Temp();
  7305  002CEC  0E08               	movlw	8
  7306  002CEE  185D               	xorwf	_found,w,c
  7307  002CF0  A4D8               	btfss	status,2,c
  7308  002CF2  D003               	goto	l9956
  7309  002CF4  EC69  F01E         	call	_Exit_Setup_Heater_Temp	;wreg free
  7310  002CF8  D000               	goto	l9956
  7311  002CFA                     l9956:
  7312                           
  7313                           ;Setup_Heater_Temp.c: 43: found = 0xff;
  7314  002CFA  685D               	setf	_found,c
  7315                           
  7316                           ;Setup_Heater_Temp.c: 44: }
  7317  002CFC  D003               	goto	l9960
  7318  002CFE                     l9958:
  7319                           
  7320                           ;Setup_Heater_Temp.c: 45: else
  7321                           ;Setup_Heater_Temp.c: 46: {
  7322                           ;Setup_Heater_Temp.c: 47: Do_Beep_Bad();
  7323  002CFE  ECBE  F01D         	call	_Do_Beep_Bad	;wreg free
  7324  002D02  D000               	goto	l9960
  7325  002D04                     l9960:
  7326  002D04  0100               	movlb	0	; () banked
  7327  002D06  05F8               	decf	_In_Heater_Temp_Setup& (0+255),w,b
  7328  002D08  B4D8               	btfsc	status,2,c
  7329  002D0A  D7C1               	goto	l9930
  7330                           
  7331                           ; BSR set to: 0
  7332                           
  7333                           ; BSR set to: 0
  7334  002D0C  0012               	return		;funcret
  7335  002D0E                     __end_of_Do_Setup_Heater_Temp:
  7336                           	opt stack 0
  7337                           tblptru	equ	0xFF8
  7338                           tblptrh	equ	0xFF7
  7339                           tblptrl	equ	0xFF6
  7340                           tablat	equ	0xFF5
  7341                           prodh	equ	0xFF4
  7342                           prodl	equ	0xFF3
  7343                           postinc0	equ	0xFEE
  7344                           wreg	equ	0xFE8
  7345                           postdec1	equ	0xFE5
  7346                           plusw1	equ	0xFE3
  7347                           fsr1l	equ	0xFE1
  7348                           indf2	equ	0xFDF
  7349                           plusw2	equ	0xFDB
  7350                           fsr2h	equ	0xFDA
  7351                           fsr2l	equ	0xFD9
  7352                           status	equ	0xFD8
  7353                           
  7354 ;; *************** function _Initialize_Setup_Heater_Screen *****************
  7355 ;; Defined at:
  7356 ;;		line 85 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Heater_Temp.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;		None
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;		None
  7361 ;; Return value:  Size  Location     Type
  7362 ;;		None               void
  7363 ;; Registers used:
  7364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7374 ;;Total ram usage:        0 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; Hardware stack levels required when called:   10
  7377 ;; This function calls:
  7378 ;;		_drawtext
  7379 ;;		_fillScreen
  7380 ;;		_strcpy
  7381 ;; This function is called by:
  7382 ;;		_Do_Setup_Heater_Temp
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386                           	psect	text30
  7387  001F1E                     __ptext30:
  7388                           	opt stack 0
  7389  001F1E                     _Initialize_Setup_Heater_Screen:
  7390                           	opt stack 19
  7391                           
  7392                           ;Setup_Heater_Temp.c: 87: fillScreen(0x0000);
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;incstack = 0
  7396  001F1E  0E00               	movlw	0
  7397  001F20  6E25               	movwf	fillScreen@color+1,c
  7398  001F22  0E00               	movlw	0
  7399  001F24  6E24               	movwf	fillScreen@color,c
  7400  001F26  EC4D  F01D         	call	_fillScreen	;wreg free
  7401                           
  7402                           ;Setup_Heater_Temp.c: 89: strcpy(txt, "ECE3301L Sp'22 S3\0");
  7403  001F2A  C04E  F011         	movff	_txt,strcpy@to
  7404  001F2E  C04F  F012         	movff	_txt+1,strcpy@to+1
  7405  001F32  0E14               	movlw	low (STR_5+1)
  7406  001F34  6E13               	movwf	strcpy@from,c
  7407  001F36  0EFF               	movlw	high (STR_5+1)
  7408  001F38  6E14               	movwf	strcpy@from+1,c
  7409  001F3A  EC3C  F01C         	call	_strcpy	;wreg free
  7410                           
  7411                           ;Setup_Heater_Temp.c: 90: drawtext(1 , 1, txt, 0xFFFF , 0x0000, 1);
  7412  001F3E  0E01               	movlw	1
  7413  001F40  6E39               	movwf	drawtext@y,c
  7414  001F42  C04E  F03A         	movff	_txt,drawtext@_text
  7415  001F46  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  7416  001F4A  0EFF               	movlw	255
  7417  001F4C  6E3D               	movwf	drawtext@color+1,c
  7418  001F4E  683C               	setf	drawtext@color,c
  7419  001F50  0E00               	movlw	0
  7420  001F52  6E3F               	movwf	drawtext@bg+1,c
  7421  001F54  0E00               	movlw	0
  7422  001F56  6E3E               	movwf	drawtext@bg,c
  7423  001F58  0E01               	movlw	1
  7424  001F5A  6E40               	movwf	drawtext@size,c
  7425  001F5C  0E01               	movlw	1
  7426  001F5E  ECFC  F00C         	call	_drawtext
  7427                           
  7428                           ;Setup_Heater_Temp.c: 92: strcpy(txt, "  Heater\0 ");
  7429  001F62  C04E  F011         	movff	_txt,strcpy@to
  7430  001F66  C04F  F012         	movff	_txt+1,strcpy@to+1
  7431  001F6A  0E94               	movlw	low STR_29
  7432  001F6C  6E13               	movwf	strcpy@from,c
  7433  001F6E  0EFF               	movlw	high STR_29
  7434  001F70  6E14               	movwf	strcpy@from+1,c
  7435  001F72  EC3C  F01C         	call	_strcpy	;wreg free
  7436                           
  7437                           ;Setup_Heater_Temp.c: 93: drawtext(1 , 1+25, txt, 0xFFE0, 0x0000, 2);
  7438  001F76  0E1A               	movlw	26
  7439  001F78  6E39               	movwf	drawtext@y,c
  7440  001F7A  C04E  F03A         	movff	_txt,drawtext@_text
  7441  001F7E  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  7442  001F82  0EFF               	movlw	255
  7443  001F84  6E3D               	movwf	drawtext@color+1,c
  7444  001F86  0EE0               	movlw	224
  7445  001F88  6E3C               	movwf	drawtext@color,c
  7446  001F8A  0E00               	movlw	0
  7447  001F8C  6E3F               	movwf	drawtext@bg+1,c
  7448  001F8E  0E00               	movlw	0
  7449  001F90  6E3E               	movwf	drawtext@bg,c
  7450  001F92  0E02               	movlw	2
  7451  001F94  6E40               	movwf	drawtext@size,c
  7452  001F96  0E01               	movlw	1
  7453  001F98  ECFC  F00C         	call	_drawtext
  7454                           
  7455                           ;Setup_Heater_Temp.c: 94: strcpy(txt, "  Setup\0 ");
  7456  001F9C  C04E  F011         	movff	_txt,strcpy@to
  7457  001FA0  C04F  F012         	movff	_txt+1,strcpy@to+1
  7458  001FA4  0EB5               	movlw	low STR_30
  7459  001FA6  6E13               	movwf	strcpy@from,c
  7460  001FA8  0EFF               	movlw	high STR_30
  7461  001FAA  6E14               	movwf	strcpy@from+1,c
  7462  001FAC  EC3C  F01C         	call	_strcpy	;wreg free
  7463                           
  7464                           ;Setup_Heater_Temp.c: 95: drawtext(1 , 1+40, txt, 0xFFE0, 0x0000, 2);
  7465  001FB0  0E29               	movlw	41
  7466  001FB2  6E39               	movwf	drawtext@y,c
  7467  001FB4  C04E  F03A         	movff	_txt,drawtext@_text
  7468  001FB8  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  7469  001FBC  0EFF               	movlw	255
  7470  001FBE  6E3D               	movwf	drawtext@color+1,c
  7471  001FC0  0EE0               	movlw	224
  7472  001FC2  6E3C               	movwf	drawtext@color,c
  7473  001FC4  0E00               	movlw	0
  7474  001FC6  6E3F               	movwf	drawtext@bg+1,c
  7475  001FC8  0E00               	movlw	0
  7476  001FCA  6E3E               	movwf	drawtext@bg,c
  7477  001FCC  0E02               	movlw	2
  7478  001FCE  6E40               	movwf	drawtext@size,c
  7479  001FD0  0E01               	movlw	1
  7480  001FD2  ECFC  F00C         	call	_drawtext
  7481                           
  7482                           ;Setup_Heater_Temp.c: 96: strcpy(txt, "Set Heater Temp");
  7483  001FD6  C04E  F011         	movff	_txt,strcpy@to
  7484  001FDA  C04F  F012         	movff	_txt+1,strcpy@to+1
  7485  001FDE  0E5E               	movlw	low STR_31
  7486  001FE0  6E13               	movwf	strcpy@from,c
  7487  001FE2  0EFF               	movlw	high STR_31
  7488  001FE4  6E14               	movwf	strcpy@from+1,c
  7489  001FE6  EC3C  F01C         	call	_strcpy	;wreg free
  7490                           
  7491                           ;Setup_Heater_Temp.c: 97: drawtext(15 , 60, txt, 0x07FF , 0x0000, 1);
  7492  001FEA  0E3C               	movlw	60
  7493  001FEC  6E39               	movwf	drawtext@y,c
  7494  001FEE  C04E  F03A         	movff	_txt,drawtext@_text
  7495  001FF2  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  7496  001FF6  0E07               	movlw	7
  7497  001FF8  6E3D               	movwf	drawtext@color+1,c
  7498  001FFA  683C               	setf	drawtext@color,c
  7499  001FFC  0E00               	movlw	0
  7500  001FFE  6E3F               	movwf	drawtext@bg+1,c
  7501  002000  0E00               	movlw	0
  7502  002002  6E3E               	movwf	drawtext@bg,c
  7503  002004  0E01               	movlw	1
  7504  002006  6E40               	movwf	drawtext@size,c
  7505  002008  0E0F               	movlw	15
  7506  00200A  ECFC  F00C         	call	_drawtext
  7507  00200E  0012               	return		;funcret
  7508  002010                     __end_of_Initialize_Setup_Heater_Screen:
  7509                           	opt stack 0
  7510                           tblptru	equ	0xFF8
  7511                           tblptrh	equ	0xFF7
  7512                           tblptrl	equ	0xFF6
  7513                           tablat	equ	0xFF5
  7514                           prodh	equ	0xFF4
  7515                           prodl	equ	0xFF3
  7516                           postinc0	equ	0xFEE
  7517                           wreg	equ	0xFE8
  7518                           postdec1	equ	0xFE5
  7519                           plusw1	equ	0xFE3
  7520                           fsr1l	equ	0xFE1
  7521                           indf2	equ	0xFDF
  7522                           plusw2	equ	0xFDB
  7523                           fsr2h	equ	0xFDA
  7524                           fsr2l	equ	0xFD9
  7525                           status	equ	0xFD8
  7526                           
  7527 ;; *************** function _Increase_Heater_Temp *****************
  7528 ;; Defined at:
  7529 ;;		line 53 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Heater_Temp.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;		None
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;		None
  7534 ;; Return value:  Size  Location     Type
  7535 ;;		None               void
  7536 ;; Registers used:
  7537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7538 ;; Tracked objects:
  7539 ;;		On entry : 0/0
  7540 ;;		On exit  : 0/0
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7547 ;;Total ram usage:        0 bytes
  7548 ;; Hardware stack levels used:    1
  7549 ;; Hardware stack levels required when called:   11
  7550 ;; This function calls:
  7551 ;;		_Update_Setup_Heater_Screen
  7552 ;; This function is called by:
  7553 ;;		_Do_Setup_Heater_Temp
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text31
  7558  003BBE                     __ptext31:
  7559                           	opt stack 0
  7560  003BBE                     _Increase_Heater_Temp:
  7561                           	opt stack 18
  7562                           
  7563                           ;Setup_Heater_Temp.c: 57: setup_heater_set_temp++;
  7564                           
  7565                           ;incstack = 0
  7566  003BBE  2A67               	incf	_setup_heater_set_temp,f,c
  7567                           
  7568                           ;Setup_Heater_Temp.c: 58: if(setup_heater_set_temp>120) setup_heater_set_temp = 120;
  7569  003BC0  0E78               	movlw	120
  7570  003BC2  6467               	cpfsgt	_setup_heater_set_temp,c
  7571  003BC4  D003               	goto	l9364
  7572  003BC6  0E78               	movlw	120
  7573  003BC8  6E67               	movwf	_setup_heater_set_temp,c
  7574  003BCA  D000               	goto	l9364
  7575  003BCC                     l9364:
  7576                           
  7577                           ;Setup_Heater_Temp.c: 59: Update_Setup_Heater_Screen();
  7578  003BCC  ECFA  F014         	call	_Update_Setup_Heater_Screen	;wreg free
  7579  003BD0  0012               	return		;funcret
  7580  003BD2                     __end_of_Increase_Heater_Temp:
  7581                           	opt stack 0
  7582                           tblptru	equ	0xFF8
  7583                           tblptrh	equ	0xFF7
  7584                           tblptrl	equ	0xFF6
  7585                           tablat	equ	0xFF5
  7586                           prodh	equ	0xFF4
  7587                           prodl	equ	0xFF3
  7588                           postinc0	equ	0xFEE
  7589                           wreg	equ	0xFE8
  7590                           postdec1	equ	0xFE5
  7591                           plusw1	equ	0xFE3
  7592                           fsr1l	equ	0xFE1
  7593                           indf2	equ	0xFDF
  7594                           plusw2	equ	0xFDB
  7595                           fsr2h	equ	0xFDA
  7596                           fsr2l	equ	0xFD9
  7597                           status	equ	0xFD8
  7598                           
  7599 ;; *************** function _Exit_Setup_Heater_Temp *****************
  7600 ;; Defined at:
  7601 ;;		line 70 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Heater_Temp.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;		None
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;		None
  7606 ;; Return value:  Size  Location     Type
  7607 ;;		None               void
  7608 ;; Registers used:
  7609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;Total ram usage:        0 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; Hardware stack levels required when called:   11
  7622 ;; This function calls:
  7623 ;;		_DS3231_Read_Time
  7624 ;;		_Initialize_Screen
  7625 ;; This function is called by:
  7626 ;;		_Do_Setup_Heater_Temp
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           	psect	text32
  7631  003CD2                     __ptext32:
  7632                           	opt stack 0
  7633  003CD2                     _Exit_Setup_Heater_Temp:
  7634                           	opt stack 18
  7635                           
  7636                           ;Setup_Heater_Temp.c: 72: DS3231_Read_Time();
  7637                           
  7638                           ;incstack = 0
  7639  003CD2  ECC5  F018         	call	_DS3231_Read_Time	;wreg free
  7640                           
  7641                           ;Setup_Heater_Temp.c: 73: Initialize_Screen();
  7642  003CD6  EC43  F003         	call	_Initialize_Screen	;wreg free
  7643                           
  7644                           ;Setup_Heater_Temp.c: 74: In_Heater_Temp_Setup = 0;
  7645  003CDA  0E00               	movlw	0
  7646  003CDC  0100               	movlb	0	; () banked
  7647  003CDE  6FF8               	movwf	_In_Heater_Temp_Setup& (0+255),b
  7648                           
  7649                           ; BSR set to: 0
  7650  003CE0  0012               	return		;funcret
  7651  003CE2                     __end_of_Exit_Setup_Heater_Temp:
  7652                           	opt stack 0
  7653                           tblptru	equ	0xFF8
  7654                           tblptrh	equ	0xFF7
  7655                           tblptrl	equ	0xFF6
  7656                           tablat	equ	0xFF5
  7657                           prodh	equ	0xFF4
  7658                           prodl	equ	0xFF3
  7659                           postinc0	equ	0xFEE
  7660                           wreg	equ	0xFE8
  7661                           postdec1	equ	0xFE5
  7662                           plusw1	equ	0xFE3
  7663                           fsr1l	equ	0xFE1
  7664                           indf2	equ	0xFDF
  7665                           plusw2	equ	0xFDB
  7666                           fsr2h	equ	0xFDA
  7667                           fsr2l	equ	0xFD9
  7668                           status	equ	0xFD8
  7669                           
  7670 ;; *************** function _Do_Save_New_Heater_Temp *****************
  7671 ;; Defined at:
  7672 ;;		line 77 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Heater_Temp.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;		None
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;		None               void
  7679 ;; Registers used:
  7680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;Total ram usage:        0 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:   11
  7693 ;; This function calls:
  7694 ;;		_DS3231_Read_Time
  7695 ;;		_Initialize_Screen
  7696 ;; This function is called by:
  7697 ;;		_Do_Setup_Heater_Temp
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701                           	psect	text33
  7702  003BD2                     __ptext33:
  7703                           	opt stack 0
  7704  003BD2                     _Do_Save_New_Heater_Temp:
  7705                           	opt stack 18
  7706                           
  7707                           ;Setup_Heater_Temp.c: 79: heater_set_temp = setup_heater_set_temp;
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;incstack = 0
  7711  003BD2  C067  F06E         	movff	_setup_heater_set_temp,_heater_set_temp
  7712                           
  7713                           ;Setup_Heater_Temp.c: 80: DS3231_Read_Time();
  7714  003BD6  ECC5  F018         	call	_DS3231_Read_Time	;wreg free
  7715                           
  7716                           ;Setup_Heater_Temp.c: 81: Initialize_Screen();
  7717  003BDA  EC43  F003         	call	_Initialize_Screen	;wreg free
  7718                           
  7719                           ;Setup_Heater_Temp.c: 82: In_Heater_Temp_Setup = 0;
  7720  003BDE  0E00               	movlw	0
  7721  003BE0  0100               	movlb	0	; () banked
  7722  003BE2  6FF8               	movwf	_In_Heater_Temp_Setup& (0+255),b
  7723                           
  7724                           ; BSR set to: 0
  7725  003BE4  0012               	return		;funcret
  7726  003BE6                     __end_of_Do_Save_New_Heater_Temp:
  7727                           	opt stack 0
  7728                           tblptru	equ	0xFF8
  7729                           tblptrh	equ	0xFF7
  7730                           tblptrl	equ	0xFF6
  7731                           tablat	equ	0xFF5
  7732                           prodh	equ	0xFF4
  7733                           prodl	equ	0xFF3
  7734                           postinc0	equ	0xFEE
  7735                           wreg	equ	0xFE8
  7736                           postdec1	equ	0xFE5
  7737                           plusw1	equ	0xFE3
  7738                           fsr1l	equ	0xFE1
  7739                           indf2	equ	0xFDF
  7740                           plusw2	equ	0xFDB
  7741                           fsr2h	equ	0xFDA
  7742                           fsr2l	equ	0xFD9
  7743                           status	equ	0xFD8
  7744                           
  7745 ;; *************** function _Decrease_Heater_Temp *****************
  7746 ;; Defined at:
  7747 ;;		line 63 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Heater_Temp.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;		None
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;		None               void
  7754 ;; Registers used:
  7755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7765 ;;Total ram usage:        0 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:   11
  7768 ;; This function calls:
  7769 ;;		_Update_Setup_Heater_Screen
  7770 ;; This function is called by:
  7771 ;;		_Do_Setup_Heater_Temp
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text34
  7776  003BE6                     __ptext34:
  7777                           	opt stack 0
  7778  003BE6                     _Decrease_Heater_Temp:
  7779                           	opt stack 18
  7780                           
  7781                           ;Setup_Heater_Temp.c: 65: setup_heater_set_temp--;
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;incstack = 0
  7785  003BE6  0667               	decf	_setup_heater_set_temp,f,c
  7786                           
  7787                           ;Setup_Heater_Temp.c: 66: if(setup_heater_set_temp < 50) setup_heater_set_temp = 50;
  7788  003BE8  0E32               	movlw	50
  7789  003BEA  6067               	cpfslt	_setup_heater_set_temp,c
  7790  003BEC  D003               	goto	l9356
  7791  003BEE  0E32               	movlw	50
  7792  003BF0  6E67               	movwf	_setup_heater_set_temp,c
  7793  003BF2  D000               	goto	l9356
  7794  003BF4                     l9356:
  7795                           
  7796                           ;Setup_Heater_Temp.c: 67: Update_Setup_Heater_Screen();
  7797  003BF4  ECFA  F014         	call	_Update_Setup_Heater_Screen	;wreg free
  7798  003BF8  0012               	return		;funcret
  7799  003BFA                     __end_of_Decrease_Heater_Temp:
  7800                           	opt stack 0
  7801                           tblptru	equ	0xFF8
  7802                           tblptrh	equ	0xFF7
  7803                           tblptrl	equ	0xFF6
  7804                           tablat	equ	0xFF5
  7805                           prodh	equ	0xFF4
  7806                           prodl	equ	0xFF3
  7807                           postinc0	equ	0xFEE
  7808                           wreg	equ	0xFE8
  7809                           postdec1	equ	0xFE5
  7810                           plusw1	equ	0xFE3
  7811                           fsr1l	equ	0xFE1
  7812                           indf2	equ	0xFDF
  7813                           plusw2	equ	0xFDB
  7814                           fsr2h	equ	0xFDA
  7815                           fsr2l	equ	0xFD9
  7816                           status	equ	0xFD8
  7817                           
  7818 ;; *************** function _Update_Setup_Heater_Screen *****************
  7819 ;; Defined at:
  7820 ;;		line 100 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Heater_Temp.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;		None
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  dc_char3        1    2[BANK0 ] unsigned char 
  7825 ;;  dc_char2        1    1[BANK0 ] unsigned char 
  7826 ;;  dc_char1        1    0[BANK0 ] unsigned char 
  7827 ;; Return value:  Size  Location     Type
  7828 ;;		None               void
  7829 ;; Registers used:
  7830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7831 ;; Tracked objects:
  7832 ;;		On entry : 0/0
  7833 ;;		On exit  : 0/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7839 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7840 ;;Total ram usage:        3 bytes
  7841 ;; Hardware stack levels used:    1
  7842 ;; Hardware stack levels required when called:   10
  7843 ;; This function calls:
  7844 ;;		___awdiv
  7845 ;;		___awmod
  7846 ;;		_drawtext
  7847 ;; This function is called by:
  7848 ;;		_Do_Setup_Heater_Temp
  7849 ;;		_Increase_Heater_Temp
  7850 ;;		_Decrease_Heater_Temp
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           	psect	text35
  7855  0029F4                     __ptext35:
  7856                           	opt stack 0
  7857  0029F4                     _Update_Setup_Heater_Screen:
  7858                           	opt stack 19
  7859                           
  7860                           ;Setup_Heater_Temp.c: 102: char dc_char1 = setup_heater_set_temp/100;
  7861                           
  7862                           ;incstack = 0
  7863  0029F4  C067  F153         	movff	_setup_heater_set_temp,___awdiv@dividend
  7864  0029F8  0101               	movlb	1	; () banked
  7865  0029FA  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
  7866  0029FC  0E00               	movlw	0
  7867  0029FE  0101               	movlb	1	; () banked
  7868  002A00  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  7869  002A02  0E64               	movlw	100
  7870  002A04  6F55               	movwf	___awdiv@divisor& (0+255),b
  7871  002A06  ECB4  F012         	call	___awdiv	;wreg free
  7872  002A0A  0101               	movlb	1	; () banked
  7873  002A0C  5153               	movf	?___awdiv& (0+255),w,b
  7874  002A0E  0100               	movlb	0	; () banked
  7875  002A10  6FFD               	movwf	Update_Setup_Heater_Screen@dc_char1& (0+255),b
  7876                           
  7877                           ;Setup_Heater_Temp.c: 103: char dc_char2 = (setup_heater_set_temp%100)/10;
  7878  002A12  0E00               	movlw	0
  7879  002A14  6E3E               	movwf	___awmod@divisor+1,c
  7880  002A16  0E64               	movlw	100
  7881  002A18  6E3D               	movwf	___awmod@divisor,c
  7882  002A1A  C067  F03B         	movff	_setup_heater_set_temp,___awmod@dividend
  7883  002A1E  6A3C               	clrf	___awmod@dividend+1,c
  7884  002A20  EC5C  F017         	call	___awmod	;wreg free
  7885  002A24  C03B  F153         	movff	?___awmod,___awdiv@dividend
  7886  002A28  C03C  F154         	movff	?___awmod+1,___awdiv@dividend+1
  7887  002A2C  0E00               	movlw	0
  7888  002A2E  0101               	movlb	1	; () banked
  7889  002A30  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
  7890  002A32  0E0A               	movlw	10
  7891  002A34  6F55               	movwf	___awdiv@divisor& (0+255),b
  7892  002A36  ECB4  F012         	call	___awdiv	;wreg free
  7893  002A3A  0101               	movlb	1	; () banked
  7894  002A3C  5153               	movf	?___awdiv& (0+255),w,b
  7895  002A3E  0100               	movlb	0	; () banked
  7896  002A40  6FFE               	movwf	Update_Setup_Heater_Screen@dc_char2& (0+255),b
  7897                           
  7898                           ;Setup_Heater_Temp.c: 104: char dc_char3 = (setup_heater_set_temp%10);
  7899  002A42  C067  F03B         	movff	_setup_heater_set_temp,___awmod@dividend
  7900  002A46  6A3C               	clrf	___awmod@dividend+1,c
  7901  002A48  0E00               	movlw	0
  7902  002A4A  6E3E               	movwf	___awmod@divisor+1,c
  7903  002A4C  0E0A               	movlw	10
  7904  002A4E  6E3D               	movwf	___awmod@divisor,c
  7905  002A50  EC5C  F017         	call	___awmod	;wreg free
  7906  002A54  503B               	movf	?___awmod,w,c
  7907  002A56  0100               	movlb	0	; () banked
  7908  002A58  6FFF               	movwf	Update_Setup_Heater_Screen@dc_char3& (0+255),b
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;Setup_Heater_Temp.c: 105: setup_heater_set_text[0] = dc_char1 + '0';
  7912  002A5A  0100               	movlb	0	; () banked
  7913  002A5C  51FD               	movf	Update_Setup_Heater_Screen@dc_char1& (0+255),w,b
  7914  002A5E  0F30               	addlw	48
  7915  002A60  0100               	movlb	0	; () banked
  7916  002A62  6FC7               	movwf	_setup_heater_set_text& (0+255),b
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;Setup_Heater_Temp.c: 106: setup_heater_set_text[1] = dc_char2 + '0';
  7920  002A64  0100               	movlb	0	; () banked
  7921  002A66  51FE               	movf	Update_Setup_Heater_Screen@dc_char2& (0+255),w,b
  7922  002A68  0F30               	addlw	48
  7923  002A6A  0100               	movlb	0	; () banked
  7924  002A6C  6FC8               	movwf	(_setup_heater_set_text+1)& (0+255),b
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;Setup_Heater_Temp.c: 107: setup_heater_set_text[2] = dc_char3 + '0';
  7928  002A6E  0100               	movlb	0	; () banked
  7929  002A70  51FF               	movf	Update_Setup_Heater_Screen@dc_char3& (0+255),w,b
  7930  002A72  0F30               	addlw	48
  7931  002A74  0100               	movlb	0	; () banked
  7932  002A76  6FC9               	movwf	(_setup_heater_set_text+2)& (0+255),b
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;Setup_Heater_Temp.c: 108: drawtext(40, 74 ,setup_heater_set_text, 0xF800, 0x0000, 2);
  7936  002A78  0E4A               	movlw	74
  7937  002A7A  6E39               	movwf	drawtext@y,c
  7938  002A7C  0EC7               	movlw	low _setup_heater_set_text
  7939  002A7E  6E3A               	movwf	drawtext@_text,c
  7940  002A80  0E00               	movlw	high _setup_heater_set_text
  7941  002A82  6E3B               	movwf	drawtext@_text+1,c
  7942  002A84  0EF8               	movlw	248
  7943  002A86  6E3D               	movwf	drawtext@color+1,c
  7944  002A88  0E00               	movlw	0
  7945  002A8A  6E3C               	movwf	drawtext@color,c
  7946  002A8C  0E00               	movlw	0
  7947  002A8E  6E3F               	movwf	drawtext@bg+1,c
  7948  002A90  0E00               	movlw	0
  7949  002A92  6E3E               	movwf	drawtext@bg,c
  7950  002A94  0E02               	movlw	2
  7951  002A96  6E40               	movwf	drawtext@size,c
  7952  002A98  0E28               	movlw	40
  7953  002A9A  ECFC  F00C         	call	_drawtext
  7954  002A9E  0012               	return		;funcret
  7955  002AA0                     __end_of_Update_Setup_Heater_Screen:
  7956                           	opt stack 0
  7957                           tblptru	equ	0xFF8
  7958                           tblptrh	equ	0xFF7
  7959                           tblptrl	equ	0xFF6
  7960                           tablat	equ	0xFF5
  7961                           prodh	equ	0xFF4
  7962                           prodl	equ	0xFF3
  7963                           postinc0	equ	0xFEE
  7964                           wreg	equ	0xFE8
  7965                           postdec1	equ	0xFE5
  7966                           plusw1	equ	0xFE3
  7967                           fsr1l	equ	0xFE1
  7968                           indf2	equ	0xFDF
  7969                           plusw2	equ	0xFDB
  7970                           fsr2h	equ	0xFDA
  7971                           fsr2l	equ	0xFD9
  7972                           status	equ	0xFD8
  7973                           
  7974 ;; *************** function _Do_Setup_Alarm_Time *****************
  7975 ;; Defined at:
  7976 ;;		line 24 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Alarm_Time.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;		None
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;		None
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  2   70[None  ] int 
  7983 ;; Registers used:
  7984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7994 ;;Total ram usage:        0 bytes
  7995 ;; Hardware stack levels used:    1
  7996 ;; Hardware stack levels required when called:   12
  7997 ;; This function calls:
  7998 ;;		_DS3231_Read_Alarm_Time
  7999 ;;		_Decrease_Alarm_Time
  8000 ;;		_Do_Beep_Bad
  8001 ;;		_Do_Beep_Good
  8002 ;;		_Do_Save_New_Alarm_Time
  8003 ;;		_Exit_Setup_Alarm_Time
  8004 ;;		_Go_Next_Alarm_Field
  8005 ;;		_Go_Prev_Alarm_Field
  8006 ;;		_Increase_Alarm_Time
  8007 ;;		_Initialize_Setup_Alarm_Time_Screen
  8008 ;;		_Update_Setup_Alarm_Time_Screen
  8009 ;;		_bcd_2_dec
  8010 ;;		_check_for_button_input
  8011 ;; This function is called by:
  8012 ;;		_main
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text36
  8017  0027C8                     __ptext36:
  8018                           	opt stack 0
  8019  0027C8                     _Do_Setup_Alarm_Time:
  8020                           	opt stack 18
  8021                           
  8022                           ;Setup_Alarm_Time.c: 26: Select_Alarm_Field = 0;
  8023                           
  8024                           ;incstack = 0
  8025  0027C8  0E00               	movlw	0
  8026  0027CA  6E52               	movwf	_Select_Alarm_Field,c
  8027                           
  8028                           ;Setup_Alarm_Time.c: 27: In_Alarm_Time_Setup = 1;
  8029  0027CC  0E01               	movlw	1
  8030  0027CE  0100               	movlb	0	; () banked
  8031  0027D0  6FF7               	movwf	_In_Alarm_Time_Setup& (0+255),b
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;Setup_Alarm_Time.c: 28: DS3231_Read_Alarm_Time();
  8035  0027D2  ECF2  F01A         	call	_DS3231_Read_Alarm_Time	;wreg free
  8036                           
  8037                           ;Setup_Alarm_Time.c: 29: alarm_second = bcd_2_dec(alarm_second);
  8038  0027D6  5058               	movf	_alarm_second,w,c
  8039  0027D8  EC84  F01C         	call	_bcd_2_dec
  8040  0027DC  6E58               	movwf	_alarm_second,c
  8041                           
  8042                           ;Setup_Alarm_Time.c: 30: alarm_minute = bcd_2_dec(alarm_minute);
  8043  0027DE  5057               	movf	_alarm_minute,w,c
  8044  0027E0  EC84  F01C         	call	_bcd_2_dec
  8045  0027E4  6E57               	movwf	_alarm_minute,c
  8046                           
  8047                           ;Setup_Alarm_Time.c: 31: alarm_hour = bcd_2_dec(alarm_hour);
  8048  0027E6  5056               	movf	_alarm_hour,w,c
  8049  0027E8  EC84  F01C         	call	_bcd_2_dec
  8050  0027EC  6E56               	movwf	_alarm_hour,c
  8051                           
  8052                           ;Setup_Alarm_Time.c: 32: setup_alarm_second = alarm_second;
  8053  0027EE  C058  F065         	movff	_alarm_second,_setup_alarm_second
  8054                           
  8055                           ;Setup_Alarm_Time.c: 33: setup_alarm_minute = alarm_minute;
  8056  0027F2  C057  F064         	movff	_alarm_minute,_setup_alarm_minute
  8057                           
  8058                           ;Setup_Alarm_Time.c: 34: setup_alarm_hour = alarm_hour;
  8059  0027F6  C056  F063         	movff	_alarm_hour,_setup_alarm_hour
  8060                           
  8061                           ;Setup_Alarm_Time.c: 35: Initialize_Setup_Alarm_Time_Screen();
  8062  0027FA  EC09  F00E         	call	_Initialize_Setup_Alarm_Time_Screen	;wreg free
  8063                           
  8064                           ;Setup_Alarm_Time.c: 36: Update_Setup_Alarm_Time_Screen();
  8065  0027FE  EC81  F010         	call	_Update_Setup_Alarm_Time_Screen	;wreg free
  8066                           
  8067                           ;Setup_Alarm_Time.c: 37: while (In_Alarm_Time_Setup == 1)
  8068  002802  D03C               	goto	l9920
  8069  002804                     l9884:
  8070                           
  8071                           ;Setup_Alarm_Time.c: 38: {
  8072                           ;Setup_Alarm_Time.c: 39: if (check_for_button_input() == 1)
  8073  002804  EC9D  F017         	call	_check_for_button_input	;wreg free
  8074  002808  06E8               	decf	wreg,f,c
  8075  00280A  A4D8               	btfss	status,2,c
  8076  00280C  D037               	goto	l9920
  8077                           
  8078                           ;Setup_Alarm_Time.c: 40: {
  8079                           ;Setup_Alarm_Time.c: 41: if (found >= 3 && found <= 8)
  8080  00280E  0E02               	movlw	2
  8081  002810  645D               	cpfsgt	_found,c
  8082  002812  D031               	goto	l9918
  8083  002814  0E09               	movlw	9
  8084  002816  605D               	cpfslt	_found,c
  8085  002818  D02E               	goto	l9918
  8086                           
  8087                           ;Setup_Alarm_Time.c: 42: {
  8088                           ;Setup_Alarm_Time.c: 43: Do_Beep_Good();
  8089  00281A  ECB2  F01D         	call	_Do_Beep_Good	;wreg free
  8090                           
  8091                           ;Setup_Alarm_Time.c: 44: if (found == 3) Go_Prev_Alarm_Field();
  8092  00281E  0E03               	movlw	3
  8093  002820  185D               	xorwf	_found,w,c
  8094  002822  A4D8               	btfss	status,2,c
  8095  002824  D003               	goto	l9896
  8096  002826  EC8E  F01D         	call	_Go_Prev_Alarm_Field	;wreg free
  8097  00282A  D023               	goto	l9916
  8098  00282C                     l9896:
  8099                           
  8100                           ;Setup_Alarm_Time.c: 45: else if (found == 4)
  8101  00282C  0E04               	movlw	4
  8102  00282E  185D               	xorwf	_found,w,c
  8103  002830  A4D8               	btfss	status,2,c
  8104  002832  D003               	goto	l9900
  8105                           
  8106                           ;Setup_Alarm_Time.c: 46: Go_Next_Alarm_Field();
  8107  002834  EC9A  F01D         	call	_Go_Next_Alarm_Field	;wreg free
  8108  002838  D01C               	goto	l9916
  8109  00283A                     l9900:
  8110                           
  8111                           ;Setup_Alarm_Time.c: 47: else if (found == 5)
  8112  00283A  0E05               	movlw	5
  8113  00283C  185D               	xorwf	_found,w,c
  8114  00283E  A4D8               	btfss	status,2,c
  8115  002840  D003               	goto	l9904
  8116                           
  8117                           ;Setup_Alarm_Time.c: 48: Do_Save_New_Alarm_Time();
  8118  002842  ECA6  F01D         	call	_Do_Save_New_Alarm_Time	;wreg free
  8119  002846  D015               	goto	l9916
  8120  002848                     l9904:
  8121                           
  8122                           ;Setup_Alarm_Time.c: 49: else if (found == 6)
  8123  002848  0E06               	movlw	6
  8124  00284A  185D               	xorwf	_found,w,c
  8125  00284C  A4D8               	btfss	status,2,c
  8126  00284E  D003               	goto	l9908
  8127                           
  8128                           ;Setup_Alarm_Time.c: 50: Decrease_Alarm_Time();
  8129  002850  ECA4  F01A         	call	_Decrease_Alarm_Time	;wreg free
  8130  002854  D00E               	goto	l9916
  8131  002856                     l9908:
  8132                           
  8133                           ;Setup_Alarm_Time.c: 51: else if (found == 7)
  8134  002856  0E07               	movlw	7
  8135  002858  185D               	xorwf	_found,w,c
  8136  00285A  A4D8               	btfss	status,2,c
  8137  00285C  D003               	goto	l9912
  8138                           
  8139                           ;Setup_Alarm_Time.c: 52: Increase_Alarm_Time();
  8140  00285E  EC7D  F01A         	call	_Increase_Alarm_Time	;wreg free
  8141  002862  D007               	goto	l9916
  8142  002864                     l9912:
  8143                           
  8144                           ;Setup_Alarm_Time.c: 53: else if (found == 8)
  8145  002864  0E08               	movlw	8
  8146  002866  185D               	xorwf	_found,w,c
  8147  002868  A4D8               	btfss	status,2,c
  8148  00286A  D003               	goto	l9916
  8149                           
  8150                           ;Setup_Alarm_Time.c: 54: Exit_Setup_Alarm_Time();
  8151  00286C  EC71  F01E         	call	_Exit_Setup_Alarm_Time	;wreg free
  8152  002870  D000               	goto	l9916
  8153  002872                     l9916:
  8154                           
  8155                           ;Setup_Alarm_Time.c: 55: found = 0xff;
  8156  002872  685D               	setf	_found,c
  8157                           
  8158                           ;Setup_Alarm_Time.c: 56: }
  8159  002874  D003               	goto	l9920
  8160  002876                     l9918:
  8161                           
  8162                           ;Setup_Alarm_Time.c: 57: else
  8163                           ;Setup_Alarm_Time.c: 58: {
  8164                           ;Setup_Alarm_Time.c: 59: Do_Beep_Bad();
  8165  002876  ECBE  F01D         	call	_Do_Beep_Bad	;wreg free
  8166  00287A  D000               	goto	l9920
  8167  00287C                     l9920:
  8168  00287C  0100               	movlb	0	; () banked
  8169  00287E  05F7               	decf	_In_Alarm_Time_Setup& (0+255),w,b
  8170  002880  B4D8               	btfsc	status,2,c
  8171  002882  D7C0               	goto	l9884
  8172                           
  8173                           ; BSR set to: 0
  8174                           
  8175                           ; BSR set to: 0
  8176  002884  0012               	return		;funcret
  8177  002886                     __end_of_Do_Setup_Alarm_Time:
  8178                           	opt stack 0
  8179                           tblptru	equ	0xFF8
  8180                           tblptrh	equ	0xFF7
  8181                           tblptrl	equ	0xFF6
  8182                           tablat	equ	0xFF5
  8183                           prodh	equ	0xFF4
  8184                           prodl	equ	0xFF3
  8185                           postinc0	equ	0xFEE
  8186                           wreg	equ	0xFE8
  8187                           postdec1	equ	0xFE5
  8188                           plusw1	equ	0xFE3
  8189                           fsr1l	equ	0xFE1
  8190                           indf2	equ	0xFDF
  8191                           plusw2	equ	0xFDB
  8192                           fsr2h	equ	0xFDA
  8193                           fsr2l	equ	0xFD9
  8194                           status	equ	0xFD8
  8195                           
  8196 ;; *************** function _check_for_button_input *****************
  8197 ;; Defined at:
  8198 ;;		line 15 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;		None
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;  j               2   57[COMRAM] int 
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      unsigned char 
  8205 ;; Registers used:
  8206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8215 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8216 ;;Total ram usage:        3 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; Hardware stack levels required when called:    5
  8219 ;; This function calls:
  8220 ;;		_printf
  8221 ;; This function is called by:
  8222 ;;		_main
  8223 ;;		_Do_Setup_Alarm_Time
  8224 ;;		_Do_Setup_Heater_Temp
  8225 ;;		_Do_Setup_Time
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           	psect	text37
  8230  002F3A                     __ptext37:
  8231                           	opt stack 0
  8232  002F3A                     _check_for_button_input:
  8233                           	opt stack 25
  8234                           
  8235                           ;utils.c: 17: if (nec_ok == 1)
  8236                           
  8237                           ; BSR set to: 0
  8238                           ;incstack = 0
  8239  002F3A  0100               	movlb	0	; () banked
  8240  002F3C  05F1               	decf	_nec_ok& (0+255),w,b
  8241  002F3E  0100               	movlb	0	; () banked
  8242  002F40  11F2               	iorwf	(_nec_ok+1)& (0+255),w,b
  8243  002F42  A4D8               	btfss	status,2,c
  8244  002F44  D039               	goto	l1012
  8245                           
  8246                           ; BSR set to: 0
  8247                           ;utils.c: 18: {
  8248                           ;utils.c: 19: nec_ok = 0;
  8249  002F46  0E00               	movlw	0
  8250  002F48  0100               	movlb	0	; () banked
  8251  002F4A  6FF2               	movwf	(_nec_ok+1)& (0+255),b
  8252  002F4C  0E00               	movlw	0
  8253  002F4E  6FF1               	movwf	_nec_ok& (0+255),b
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;utils.c: 21: INTCONbits.INT0IE = 1;
  8257  002F50  88F2               	bsf	intcon,4,c	;volatile
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;utils.c: 22: INTCON2bits.INTEDG0 = 0;
  8261  002F52  9CF1               	bcf	intcon2,6,c	;volatile
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;utils.c: 24: found = 0xff;
  8265  002F54  685D               	setf	_found,c
  8266                           
  8267                           ;utils.c: 25: for (int j=0; j< 21; j++)
  8268  002F56  0E00               	movlw	0
  8269  002F58  6E3B               	movwf	check_for_button_input@j+1,c
  8270  002F5A  0E00               	movlw	0
  8271  002F5C  6E3A               	movwf	check_for_button_input@j,c
  8272  002F5E                     l9162:
  8273                           
  8274                           ; BSR set to: 0
  8275  002F5E  BE3B               	btfsc	check_for_button_input@j+1,7,c
  8276  002F60  D008               	goto	l9166
  8277  002F62  503B               	movf	check_for_button_input@j+1,w,c
  8278  002F64  E11C               	bnz	l9176
  8279  002F66  0E15               	movlw	21
  8280  002F68  5C3A               	subwf	check_for_button_input@j,w,c
  8281  002F6A  B0D8               	btfsc	status,0,c
  8282  002F6C  D018               	goto	l9176
  8283  002F6E  D001               	goto	l9166
  8284                           
  8285                           ; BSR set to: 0
  8286  002F70  D016               	goto	l9176
  8287  002F72                     l9166:
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;utils.c: 26: {
  8291                           ;utils.c: 27: if (Nec_code1 == array1[j])
  8292  002F72  0E1F               	movlw	low _array1
  8293  002F74  243A               	addwf	check_for_button_input@j,w,c
  8294  002F76  6ED9               	movwf	fsr2l,c
  8295  002F78  0E01               	movlw	high _array1
  8296  002F7A  203B               	addwfc	check_for_button_input@j+1,w,c
  8297  002F7C  6EDA               	movwf	fsr2h,c
  8298  002F7E  0100               	movlb	0	; () banked
  8299  002F80  51FA               	movf	_Nec_code1& (0+255),w,b
  8300  002F82  18DE               	xorwf	postinc2,w,c
  8301  002F84  A4D8               	btfss	status,2,c
  8302  002F86  D007               	goto	l9172
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;utils.c: 28: {
  8306                           ;utils.c: 29: found = j;
  8307  002F88  C03A  F05D         	movff	check_for_button_input@j,_found
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;utils.c: 30: j = 21;
  8311  002F8C  0E00               	movlw	0
  8312  002F8E  6E3B               	movwf	check_for_button_input@j+1,c
  8313  002F90  0E15               	movlw	21
  8314  002F92  6E3A               	movwf	check_for_button_input@j,c
  8315  002F94  D000               	goto	l9172
  8316  002F96                     l9172:
  8317                           
  8318                           ; BSR set to: 0
  8319  002F96  4A3A               	infsnz	check_for_button_input@j,f,c
  8320  002F98  2A3B               	incf	check_for_button_input@j+1,f,c
  8321  002F9A  D7E1               	goto	l9162
  8322                           
  8323                           ; BSR set to: 0
  8324  002F9C  D000               	goto	l9176
  8325  002F9E                     l9176:
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;utils.c: 31: }
  8329                           ;utils.c: 32: }
  8330                           ;utils.c: 34: if (found == 0xff)
  8331  002F9E  285D               	incf	_found,w,c
  8332  002FA0  A4D8               	btfss	status,2,c
  8333  002FA2  D008               	goto	l9186
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;utils.c: 35: {
  8337                           ;utils.c: 36: printf ("Cannot find button \r\n");
  8338  002FA4  0EE8               	movlw	low STR_36
  8339  002FA6  6E1D               	movwf	printf@f,c
  8340  002FA8  0EFE               	movlw	high STR_36
  8341  002FAA  6E1E               	movwf	printf@f+1,c
  8342  002FAC  EC03  F005         	call	_printf	;wreg free
  8343                           
  8344                           ;utils.c: 37: return (0);
  8345  002FB0  0E00               	movlw	0
  8346                           
  8347                           ;utils.c: 38: }
  8348  002FB2  D002               	goto	l1012
  8349  002FB4                     l9186:
  8350                           
  8351                           ;utils.c: 39: else
  8352                           ;utils.c: 40: {
  8353                           ;utils.c: 41: return (1);
  8354  002FB4  0E01               	movlw	1
  8355  002FB6  D000               	goto	l1012
  8356  002FB8                     l1012:
  8357  002FB8  0012               	return		;funcret
  8358  002FBA                     __end_of_check_for_button_input:
  8359                           	opt stack 0
  8360                           tblptru	equ	0xFF8
  8361                           tblptrh	equ	0xFF7
  8362                           tblptrl	equ	0xFF6
  8363                           tablat	equ	0xFF5
  8364                           prodh	equ	0xFF4
  8365                           prodl	equ	0xFF3
  8366                           intcon	equ	0xFF2
  8367                           intcon2	equ	0xFF1
  8368                           postinc0	equ	0xFEE
  8369                           wreg	equ	0xFE8
  8370                           postdec1	equ	0xFE5
  8371                           plusw1	equ	0xFE3
  8372                           fsr1l	equ	0xFE1
  8373                           indf2	equ	0xFDF
  8374                           postinc2	equ	0xFDE
  8375                           plusw2	equ	0xFDB
  8376                           fsr2h	equ	0xFDA
  8377                           fsr2l	equ	0xFD9
  8378                           status	equ	0xFD8
  8379                           
  8380 ;; *************** function _bcd_2_dec *****************
  8381 ;; Defined at:
  8382 ;;		line 46 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  bcd             1    wreg     unsigned char 
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  bcd             1   20[COMRAM] unsigned char 
  8387 ;;  dec             2   18[COMRAM] int 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      unsigned char 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0, prodl, prodh
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8398 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8400 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8401 ;;Total ram usage:        5 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    3
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		_Do_Setup_Alarm_Time
  8408 ;;		_Do_Setup_Time
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text38
  8413  003908                     __ptext38:
  8414                           	opt stack 0
  8415  003908                     _bcd_2_dec:
  8416                           	opt stack 26
  8417                           
  8418                           ;incstack = 0
  8419                           ;bcd_2_dec@bcd stored from wreg
  8420  003908  6E15               	movwf	bcd_2_dec@bcd,c
  8421                           
  8422                           ;utils.c: 48: int dec;
  8423                           ;utils.c: 49: dec = ((bcd>> 4) * 10) + (bcd & 0x0f);
  8424  00390A  C015  F011         	movff	bcd_2_dec@bcd,??_bcd_2_dec
  8425  00390E  0E0F               	movlw	15
  8426  003910  1611               	andwf	??_bcd_2_dec,f,c
  8427  003912  C015  F012         	movff	bcd_2_dec@bcd,??_bcd_2_dec+1
  8428  003916  3A12               	swapf	??_bcd_2_dec+1,f,c
  8429  003918  0E0F               	movlw	15
  8430  00391A  1612               	andwf	??_bcd_2_dec+1,f,c
  8431  00391C  5012               	movf	??_bcd_2_dec+1,w,c
  8432  00391E  0D0A               	mullw	10
  8433  003920  5011               	movf	??_bcd_2_dec,w,c
  8434  003922  24F3               	addwf	prodl,w,c
  8435  003924  6E13               	movwf	bcd_2_dec@dec,c
  8436  003926  0E00               	movlw	0
  8437  003928  20F4               	addwfc	prodh,w,c
  8438  00392A  6E14               	movwf	bcd_2_dec@dec+1,c
  8439                           
  8440                           ;utils.c: 50: return dec;
  8441  00392C  5013               	movf	bcd_2_dec@dec,w,c
  8442  00392E  D000               	goto	l1016
  8443  003930                     l1016:
  8444  003930  0012               	return		;funcret
  8445  003932                     __end_of_bcd_2_dec:
  8446                           	opt stack 0
  8447                           tblptru	equ	0xFF8
  8448                           tblptrh	equ	0xFF7
  8449                           tblptrl	equ	0xFF6
  8450                           tablat	equ	0xFF5
  8451                           prodh	equ	0xFF4
  8452                           prodl	equ	0xFF3
  8453                           intcon	equ	0xFF2
  8454                           intcon2	equ	0xFF1
  8455                           postinc0	equ	0xFEE
  8456                           wreg	equ	0xFE8
  8457                           postdec1	equ	0xFE5
  8458                           plusw1	equ	0xFE3
  8459                           fsr1l	equ	0xFE1
  8460                           indf2	equ	0xFDF
  8461                           postinc2	equ	0xFDE
  8462                           plusw2	equ	0xFDB
  8463                           fsr2h	equ	0xFDA
  8464                           fsr2l	equ	0xFD9
  8465                           status	equ	0xFD8
  8466                           
  8467 ;; *************** function _Initialize_Setup_Alarm_Time_Screen *****************
  8468 ;; Defined at:
  8469 ;;		line 145 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Alarm_Time.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;		None
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;		None
  8474 ;; Return value:  Size  Location     Type
  8475 ;;		None               void
  8476 ;; Registers used:
  8477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8487 ;;Total ram usage:        0 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:   10
  8490 ;; This function calls:
  8491 ;;		_drawtext
  8492 ;;		_fillRect
  8493 ;;		_fillScreen
  8494 ;;		_strcpy
  8495 ;; This function is called by:
  8496 ;;		_Do_Setup_Alarm_Time
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text39
  8501  001C12                     __ptext39:
  8502                           	opt stack 0
  8503  001C12                     _Initialize_Setup_Alarm_Time_Screen:
  8504                           	opt stack 19
  8505                           
  8506                           ;Setup_Alarm_Time.c: 147: fillScreen(0x0000);
  8507                           
  8508                           ;incstack = 0
  8509  001C12  0E00               	movlw	0
  8510  001C14  6E25               	movwf	fillScreen@color+1,c
  8511  001C16  0E00               	movlw	0
  8512  001C18  6E24               	movwf	fillScreen@color,c
  8513  001C1A  EC4D  F01D         	call	_fillScreen	;wreg free
  8514                           
  8515                           ;Setup_Alarm_Time.c: 149: strcpy(txt, "ECE3301L Sp'22 S3");
  8516  001C1E  C04E  F011         	movff	_txt,strcpy@to
  8517  001C22  C04F  F012         	movff	_txt+1,strcpy@to+1
  8518  001C26  0E3B               	movlw	low STR_23
  8519  001C28  6E13               	movwf	strcpy@from,c
  8520  001C2A  0EFF               	movlw	high STR_23
  8521  001C2C  6E14               	movwf	strcpy@from+1,c
  8522  001C2E  EC3C  F01C         	call	_strcpy	;wreg free
  8523                           
  8524                           ;Setup_Alarm_Time.c: 150: drawtext(1 , 1, txt, 0xFFFF , 0x0000, 1);
  8525  001C32  0E01               	movlw	1
  8526  001C34  6E39               	movwf	drawtext@y,c
  8527  001C36  C04E  F03A         	movff	_txt,drawtext@_text
  8528  001C3A  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  8529  001C3E  0EFF               	movlw	255
  8530  001C40  6E3D               	movwf	drawtext@color+1,c
  8531  001C42  683C               	setf	drawtext@color,c
  8532  001C44  0E00               	movlw	0
  8533  001C46  6E3F               	movwf	drawtext@bg+1,c
  8534  001C48  0E00               	movlw	0
  8535  001C4A  6E3E               	movwf	drawtext@bg,c
  8536  001C4C  0E01               	movlw	1
  8537  001C4E  6E40               	movwf	drawtext@size,c
  8538  001C50  0E01               	movlw	1
  8539  001C52  ECFC  F00C         	call	_drawtext
  8540                           
  8541                           ;Setup_Alarm_Time.c: 153: strcpy(txt, "  Alarm");
  8542  001C56  C04E  F011         	movff	_txt,strcpy@to
  8543  001C5A  C04F  F012         	movff	_txt+1,strcpy@to+1
  8544  001C5E  0EC8               	movlw	low STR_24
  8545  001C60  6E13               	movwf	strcpy@from,c
  8546  001C62  0EFF               	movlw	high STR_24
  8547  001C64  6E14               	movwf	strcpy@from+1,c
  8548  001C66  EC3C  F01C         	call	_strcpy	;wreg free
  8549                           
  8550                           ;Setup_Alarm_Time.c: 154: drawtext(1+5 , 1+10, txt, 0xF81F, 0x0000, 2);
  8551  001C6A  0E0B               	movlw	11
  8552  001C6C  6E39               	movwf	drawtext@y,c
  8553  001C6E  C04E  F03A         	movff	_txt,drawtext@_text
  8554  001C72  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  8555  001C76  0EF8               	movlw	248
  8556  001C78  6E3D               	movwf	drawtext@color+1,c
  8557  001C7A  0E1F               	movlw	31
  8558  001C7C  6E3C               	movwf	drawtext@color,c
  8559  001C7E  0E00               	movlw	0
  8560  001C80  6E3F               	movwf	drawtext@bg+1,c
  8561  001C82  0E00               	movlw	0
  8562  001C84  6E3E               	movwf	drawtext@bg,c
  8563  001C86  0E02               	movlw	2
  8564  001C88  6E40               	movwf	drawtext@size,c
  8565  001C8A  0E06               	movlw	6
  8566  001C8C  ECFC  F00C         	call	_drawtext
  8567                           
  8568                           ;Setup_Alarm_Time.c: 155: strcpy(txt, "  Setup");
  8569  001C90  C04E  F011         	movff	_txt,strcpy@to
  8570  001C94  C04F  F012         	movff	_txt+1,strcpy@to+1
  8571  001C98  0ED0               	movlw	low STR_25
  8572  001C9A  6E13               	movwf	strcpy@from,c
  8573  001C9C  0EFF               	movlw	high STR_25
  8574  001C9E  6E14               	movwf	strcpy@from+1,c
  8575  001CA0  EC3C  F01C         	call	_strcpy	;wreg free
  8576                           
  8577                           ;Setup_Alarm_Time.c: 156: drawtext(1+5 , 1+25, txt, 0xF81F, 0x0000, 2);
  8578  001CA4  0E1A               	movlw	26
  8579  001CA6  6E39               	movwf	drawtext@y,c
  8580  001CA8  C04E  F03A         	movff	_txt,drawtext@_text
  8581  001CAC  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  8582  001CB0  0EF8               	movlw	248
  8583  001CB2  6E3D               	movwf	drawtext@color+1,c
  8584  001CB4  0E1F               	movlw	31
  8585  001CB6  6E3C               	movwf	drawtext@color,c
  8586  001CB8  0E00               	movlw	0
  8587  001CBA  6E3F               	movwf	drawtext@bg+1,c
  8588  001CBC  0E00               	movlw	0
  8589  001CBE  6E3E               	movwf	drawtext@bg,c
  8590  001CC0  0E02               	movlw	2
  8591  001CC2  6E40               	movwf	drawtext@size,c
  8592  001CC4  0E06               	movlw	6
  8593  001CC6  ECFC  F00C         	call	_drawtext
  8594                           
  8595                           ;Setup_Alarm_Time.c: 158: strcpy(txt, "Time");
  8596  001CCA  C04E  F011         	movff	_txt,strcpy@to
  8597  001CCE  C04F  F012         	movff	_txt+1,strcpy@to+1
  8598  001CD2  0EB0               	movlw	low (STR_11+6)
  8599  001CD4  6E13               	movwf	strcpy@from,c
  8600  001CD6  0EFF               	movlw	high (STR_11+6)
  8601  001CD8  6E14               	movwf	strcpy@from+1,c
  8602  001CDA  EC3C  F01C         	call	_strcpy	;wreg free
  8603                           
  8604                           ;Setup_Alarm_Time.c: 159: drawtext(50 , 40 , txt, 0x001F , 0x0000, 1);
  8605  001CDE  0E28               	movlw	40
  8606  001CE0  6E39               	movwf	drawtext@y,c
  8607  001CE2  C04E  F03A         	movff	_txt,drawtext@_text
  8608  001CE6  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  8609  001CEA  0E00               	movlw	0
  8610  001CEC  6E3D               	movwf	drawtext@color+1,c
  8611  001CEE  0E1F               	movlw	31
  8612  001CF0  6E3C               	movwf	drawtext@color,c
  8613  001CF2  0E00               	movlw	0
  8614  001CF4  6E3F               	movwf	drawtext@bg+1,c
  8615  001CF6  0E00               	movlw	0
  8616  001CF8  6E3E               	movwf	drawtext@bg,c
  8617  001CFA  0E01               	movlw	1
  8618  001CFC  6E40               	movwf	drawtext@size,c
  8619  001CFE  0E32               	movlw	50
  8620  001D00  ECFC  F00C         	call	_drawtext
  8621                           
  8622                           ;Setup_Alarm_Time.c: 160: fillRect(15-1, 52+16, 25,2,0x07FF);
  8623  001D04  0E44               	movlw	68
  8624  001D06  6E23               	movwf	fillRect@y,c
  8625  001D08  0E19               	movlw	25
  8626  001D0A  6E24               	movwf	fillRect@w,c
  8627  001D0C  0E02               	movlw	2
  8628  001D0E  6E25               	movwf	fillRect@h,c
  8629  001D10  0E07               	movlw	7
  8630  001D12  6E27               	movwf	fillRect@color+1,c
  8631  001D14  6826               	setf	fillRect@color,c
  8632  001D16  0E0E               	movlw	14
  8633  001D18  EC3E  F01B         	call	_fillRect
  8634  001D1C  0012               	return		;funcret
  8635  001D1E                     __end_of_Initialize_Setup_Alarm_Time_Screen:
  8636                           	opt stack 0
  8637                           tblptru	equ	0xFF8
  8638                           tblptrh	equ	0xFF7
  8639                           tblptrl	equ	0xFF6
  8640                           tablat	equ	0xFF5
  8641                           prodh	equ	0xFF4
  8642                           prodl	equ	0xFF3
  8643                           intcon	equ	0xFF2
  8644                           intcon2	equ	0xFF1
  8645                           postinc0	equ	0xFEE
  8646                           wreg	equ	0xFE8
  8647                           postdec1	equ	0xFE5
  8648                           plusw1	equ	0xFE3
  8649                           fsr1l	equ	0xFE1
  8650                           indf2	equ	0xFDF
  8651                           postinc2	equ	0xFDE
  8652                           plusw2	equ	0xFDB
  8653                           fsr2h	equ	0xFDA
  8654                           fsr2l	equ	0xFD9
  8655                           status	equ	0xFD8
  8656                           
  8657 ;; *************** function _Increase_Alarm_Time *****************
  8658 ;; Defined at:
  8659 ;;		line 65 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Alarm_Time.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;		None
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;		None
  8664 ;; Return value:  Size  Location     Type
  8665 ;;		None               void
  8666 ;; Registers used:
  8667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8677 ;;Total ram usage:        0 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:   11
  8680 ;; This function calls:
  8681 ;;		_Update_Setup_Alarm_Time_Screen
  8682 ;; This function is called by:
  8683 ;;		_Do_Setup_Alarm_Time
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text40
  8688  0034FA                     __ptext40:
  8689                           	opt stack 0
  8690  0034FA                     _Increase_Alarm_Time:
  8691                           	opt stack 18
  8692                           
  8693                           ;Setup_Alarm_Time.c: 67: switch (Select_Alarm_Field)
  8694                           
  8695                           ;incstack = 0
  8696  0034FA  D018               	goto	l9314
  8697  0034FC                     l9294:
  8698                           
  8699                           ;Setup_Alarm_Time.c: 70: setup_alarm_hour++;
  8700  0034FC  2A63               	incf	_setup_alarm_hour,f,c
  8701                           
  8702                           ;Setup_Alarm_Time.c: 71: if (setup_alarm_hour == 24) setup_alarm_hour = 0;
  8703  0034FE  0E18               	movlw	24
  8704  003500  1863               	xorwf	_setup_alarm_hour,w,c
  8705  003502  A4D8               	btfss	status,2,c
  8706  003504  D01E               	goto	l9316
  8707  003506  0E00               	movlw	0
  8708  003508  6E63               	movwf	_setup_alarm_hour,c
  8709                           
  8710                           ;Setup_Alarm_Time.c: 72: break;
  8711  00350A  D01B               	goto	l9316
  8712  00350C                     l9300:
  8713                           
  8714                           ;Setup_Alarm_Time.c: 75: setup_alarm_minute++;
  8715  00350C  2A64               	incf	_setup_alarm_minute,f,c
  8716                           
  8717                           ;Setup_Alarm_Time.c: 76: if (setup_alarm_minute == 60) setup_alarm_minute = 0;
  8718  00350E  0E3C               	movlw	60
  8719  003510  1864               	xorwf	_setup_alarm_minute,w,c
  8720  003512  A4D8               	btfss	status,2,c
  8721  003514  D016               	goto	l9316
  8722  003516  0E00               	movlw	0
  8723  003518  6E64               	movwf	_setup_alarm_minute,c
  8724                           
  8725                           ;Setup_Alarm_Time.c: 77: break;
  8726  00351A  D013               	goto	l9316
  8727  00351C                     l9306:
  8728                           
  8729                           ;Setup_Alarm_Time.c: 80: setup_alarm_second++;
  8730  00351C  2A65               	incf	_setup_alarm_second,f,c
  8731                           
  8732                           ;Setup_Alarm_Time.c: 81: if (setup_alarm_second == 60) setup_alarm_second = 0;
  8733  00351E  0E3C               	movlw	60
  8734  003520  1865               	xorwf	_setup_alarm_second,w,c
  8735  003522  A4D8               	btfss	status,2,c
  8736  003524  D00E               	goto	l9316
  8737  003526  0E00               	movlw	0
  8738  003528  6E65               	movwf	_setup_alarm_second,c
  8739                           
  8740                           ;Setup_Alarm_Time.c: 86: }
  8741                           
  8742                           ;Setup_Alarm_Time.c: 85: break;
  8743                           
  8744                           ;Setup_Alarm_Time.c: 84: default:
  8745                           
  8746                           ;Setup_Alarm_Time.c: 82: break;
  8747  00352A  D00B               	goto	l9316
  8748  00352C                     l9314:
  8749  00352C  5052               	movf	_Select_Alarm_Field,w,c
  8750                           
  8751                           ; Switch size 1, requested type "space"
  8752                           ; Number of cases is 3, Range of values is 0 to 2
  8753                           ; switch strategies available:
  8754                           ; Name         Instructions Cycles
  8755                           ; simple_byte           10     6 (average)
  8756                           ;	Chosen strategy is simple_byte
  8757  00352E  0A00               	xorlw	0	; case 0
  8758  003530  B4D8               	btfsc	status,2,c
  8759  003532  D7E4               	goto	l9294
  8760  003534  0A01               	xorlw	1	; case 1
  8761  003536  B4D8               	btfsc	status,2,c
  8762  003538  D7E9               	goto	l9300
  8763  00353A  0A03               	xorlw	3	; case 2
  8764  00353C  B4D8               	btfsc	status,2,c
  8765  00353E  D7EE               	goto	l9306
  8766  003540  D000               	goto	l9316
  8767  003542                     l9316:
  8768                           
  8769                           ;Setup_Alarm_Time.c: 87: Update_Setup_Alarm_Time_Screen();
  8770  003542  EC81  F010         	call	_Update_Setup_Alarm_Time_Screen	;wreg free
  8771  003546  0012               	return		;funcret
  8772  003548                     __end_of_Increase_Alarm_Time:
  8773                           	opt stack 0
  8774                           tblptru	equ	0xFF8
  8775                           tblptrh	equ	0xFF7
  8776                           tblptrl	equ	0xFF6
  8777                           tablat	equ	0xFF5
  8778                           prodh	equ	0xFF4
  8779                           prodl	equ	0xFF3
  8780                           intcon	equ	0xFF2
  8781                           intcon2	equ	0xFF1
  8782                           postinc0	equ	0xFEE
  8783                           wreg	equ	0xFE8
  8784                           postdec1	equ	0xFE5
  8785                           plusw1	equ	0xFE3
  8786                           fsr1l	equ	0xFE1
  8787                           indf2	equ	0xFDF
  8788                           postinc2	equ	0xFDE
  8789                           plusw2	equ	0xFDB
  8790                           fsr2h	equ	0xFDA
  8791                           fsr2l	equ	0xFD9
  8792                           status	equ	0xFD8
  8793                           
  8794 ;; *************** function _Go_Prev_Alarm_Field *****************
  8795 ;; Defined at:
  8796 ;;		line 122 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Alarm_Time.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;		None
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;		None               void
  8803 ;; Registers used:
  8804 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8814 ;;Total ram usage:        0 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    9
  8817 ;; This function calls:
  8818 ;;		_Update_Setup_Screen_Cursor_Backward
  8819 ;; This function is called by:
  8820 ;;		_Do_Setup_Alarm_Time
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text41
  8825  003B1C                     __ptext41:
  8826                           	opt stack 0
  8827  003B1C                     _Go_Prev_Alarm_Field:
  8828                           	opt stack 20
  8829                           
  8830                           ;Setup_Alarm_Time.c: 124: if (Select_Alarm_Field == 0) Select_Alarm_Field = 2;
  8831                           
  8832                           ;incstack = 0
  8833  003B1C  5052               	movf	_Select_Alarm_Field,w,c
  8834  003B1E  A4D8               	btfss	status,2,c
  8835  003B20  D003               	goto	l9248
  8836  003B22  0E02               	movlw	2
  8837  003B24  6E52               	movwf	_Select_Alarm_Field,c
  8838  003B26  D002               	goto	l9250
  8839  003B28                     l9248:
  8840                           
  8841                           ;Setup_Alarm_Time.c: 125: else Select_Alarm_Field--;
  8842  003B28  0652               	decf	_Select_Alarm_Field,f,c
  8843  003B2A  D000               	goto	l9250
  8844  003B2C                     l9250:
  8845                           
  8846                           ;Setup_Alarm_Time.c: 126: Update_Setup_Screen_Cursor_Backward(Select_Alarm_Field);
  8847  003B2C  5052               	movf	_Select_Alarm_Field,w,c
  8848  003B2E  EC8A  F008         	call	_Update_Setup_Screen_Cursor_Backward
  8849  003B32  0012               	return		;funcret
  8850  003B34                     __end_of_Go_Prev_Alarm_Field:
  8851                           	opt stack 0
  8852                           tblptru	equ	0xFF8
  8853                           tblptrh	equ	0xFF7
  8854                           tblptrl	equ	0xFF6
  8855                           tablat	equ	0xFF5
  8856                           prodh	equ	0xFF4
  8857                           prodl	equ	0xFF3
  8858                           intcon	equ	0xFF2
  8859                           intcon2	equ	0xFF1
  8860                           postinc0	equ	0xFEE
  8861                           wreg	equ	0xFE8
  8862                           postdec1	equ	0xFE5
  8863                           plusw1	equ	0xFE3
  8864                           fsr1l	equ	0xFE1
  8865                           indf2	equ	0xFDF
  8866                           postinc2	equ	0xFDE
  8867                           plusw2	equ	0xFDB
  8868                           fsr2h	equ	0xFDA
  8869                           fsr2l	equ	0xFD9
  8870                           status	equ	0xFD8
  8871                           
  8872 ;; *************** function _Update_Setup_Screen_Cursor_Backward *****************
  8873 ;; Defined at:
  8874 ;;		line 266 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Time.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  field           1    wreg     unsigned char 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;  field           1   45[COMRAM] unsigned char 
  8879 ;;  xinc            1   47[COMRAM] unsigned char 
  8880 ;;  yinc            1   46[COMRAM] unsigned char 
  8881 ;; Return value:  Size  Location     Type
  8882 ;;		None               void
  8883 ;; Registers used:
  8884 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8891 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8893 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8894 ;;Total ram usage:        3 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    8
  8897 ;; This function calls:
  8898 ;;		_fillRect
  8899 ;; This function is called by:
  8900 ;;		_Go_Prev_Alarm_Field
  8901 ;;		_Go_Prev_Field
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           	psect	text42
  8906  001114                     __ptext42:
  8907                           	opt stack 0
  8908  001114                     _Update_Setup_Screen_Cursor_Backward:
  8909                           	opt stack 20
  8910                           
  8911                           ;incstack = 0
  8912                           ;Update_Setup_Screen_Cursor_Backward@field stored from wreg
  8913  001114  6E2E               	movwf	Update_Setup_Screen_Cursor_Backward@field,c
  8914                           
  8915                           ;Setup_Time.c: 268: char xinc = 36;
  8916  001116  0E24               	movlw	36
  8917  001118  6E30               	movwf	Update_Setup_Screen_Cursor_Backward@xinc,c
  8918                           
  8919                           ;Setup_Time.c: 269: char yinc = 30;
  8920  00111A  0E1E               	movlw	30
  8921  00111C  6E2F               	movwf	Update_Setup_Screen_Cursor_Backward@yinc,c
  8922                           
  8923                           ;Setup_Time.c: 270: switch (field)
  8924  00111E  D0BF               	goto	l8978
  8925  001120                     l8956:
  8926                           
  8927                           ;Setup_Time.c: 273: fillRect(15-1+xinc, 52+16, 25,2,0x0000);
  8928  001120  0E44               	movlw	68
  8929  001122  6E23               	movwf	fillRect@y,c
  8930  001124  0E19               	movlw	25
  8931  001126  6E24               	movwf	fillRect@w,c
  8932  001128  0E02               	movlw	2
  8933  00112A  6E25               	movwf	fillRect@h,c
  8934  00112C  0E00               	movlw	0
  8935  00112E  6E27               	movwf	fillRect@color+1,c
  8936  001130  0E00               	movlw	0
  8937  001132  6E26               	movwf	fillRect@color,c
  8938  001134  5030               	movf	Update_Setup_Screen_Cursor_Backward@xinc,w,c
  8939  001136  0F0E               	addlw	14
  8940  001138  EC3E  F01B         	call	_fillRect
  8941                           
  8942                           ;Setup_Time.c: 274: fillRect(15-1, 52+16, 25,2,0x07FF);
  8943  00113C  0E44               	movlw	68
  8944  00113E  6E23               	movwf	fillRect@y,c
  8945  001140  0E19               	movlw	25
  8946  001142  6E24               	movwf	fillRect@w,c
  8947  001144  0E02               	movlw	2
  8948  001146  6E25               	movwf	fillRect@h,c
  8949  001148  0E07               	movlw	7
  8950  00114A  6E27               	movwf	fillRect@color+1,c
  8951  00114C  6826               	setf	fillRect@color,c
  8952  00114E  0E0E               	movlw	14
  8953  001150  EC3E  F01B         	call	_fillRect
  8954                           
  8955                           ;Setup_Time.c: 275: break;
  8956  001154  D0B8               	goto	l737
  8957  001156                     l8958:
  8958                           
  8959                           ;Setup_Time.c: 278: fillRect(15-1+2*xinc, 52+16, 25,2,0x0000);
  8960  001156  0E44               	movlw	68
  8961  001158  6E23               	movwf	fillRect@y,c
  8962  00115A  0E19               	movlw	25
  8963  00115C  6E24               	movwf	fillRect@w,c
  8964  00115E  0E02               	movlw	2
  8965  001160  6E25               	movwf	fillRect@h,c
  8966  001162  0E00               	movlw	0
  8967  001164  6E27               	movwf	fillRect@color+1,c
  8968  001166  0E00               	movlw	0
  8969  001168  6E26               	movwf	fillRect@color,c
  8970  00116A  5030               	movf	Update_Setup_Screen_Cursor_Backward@xinc,w,c
  8971  00116C  0D02               	mullw	2
  8972  00116E  50F3               	movf	prodl,w,c
  8973  001170  0F0E               	addlw	14
  8974  001172  EC3E  F01B         	call	_fillRect
  8975                           
  8976                           ;Setup_Time.c: 279: fillRect(15-1+xinc, 52+16, 25,2,0x07FF);
  8977  001176  0E44               	movlw	68
  8978  001178  6E23               	movwf	fillRect@y,c
  8979  00117A  0E19               	movlw	25
  8980  00117C  6E24               	movwf	fillRect@w,c
  8981  00117E  0E02               	movlw	2
  8982  001180  6E25               	movwf	fillRect@h,c
  8983  001182  0E07               	movlw	7
  8984  001184  6E27               	movwf	fillRect@color+1,c
  8985  001186  6826               	setf	fillRect@color,c
  8986  001188  5030               	movf	Update_Setup_Screen_Cursor_Backward@xinc,w,c
  8987  00118A  0F0E               	addlw	14
  8988  00118C  EC3E  F01B         	call	_fillRect
  8989                           
  8990                           ;Setup_Time.c: 280: break;
  8991  001190  D09A               	goto	l737
  8992  001192                     l8962:
  8993                           
  8994                           ;Setup_Time.c: 283: fillRect(15-1, 52+16, 25,2,0x0000);
  8995  001192  0E44               	movlw	68
  8996  001194  6E23               	movwf	fillRect@y,c
  8997  001196  0E19               	movlw	25
  8998  001198  6E24               	movwf	fillRect@w,c
  8999  00119A  0E02               	movlw	2
  9000  00119C  6E25               	movwf	fillRect@h,c
  9001  00119E  0E00               	movlw	0
  9002  0011A0  6E27               	movwf	fillRect@color+1,c
  9003  0011A2  0E00               	movlw	0
  9004  0011A4  6E26               	movwf	fillRect@color,c
  9005  0011A6  0E0E               	movlw	14
  9006  0011A8  EC3E  F01B         	call	_fillRect
  9007                           
  9008                           ;Setup_Time.c: 284: fillRect(15-1, 52+16+yinc, 25,2,0x0000);
  9009  0011AC  502F               	movf	Update_Setup_Screen_Cursor_Backward@yinc,w,c
  9010  0011AE  0F44               	addlw	68
  9011  0011B0  6E23               	movwf	fillRect@y,c
  9012  0011B2  0E19               	movlw	25
  9013  0011B4  6E24               	movwf	fillRect@w,c
  9014  0011B6  0E02               	movlw	2
  9015  0011B8  6E25               	movwf	fillRect@h,c
  9016  0011BA  0E00               	movlw	0
  9017  0011BC  6E27               	movwf	fillRect@color+1,c
  9018  0011BE  0E00               	movlw	0
  9019  0011C0  6E26               	movwf	fillRect@color,c
  9020  0011C2  0E0E               	movlw	14
  9021  0011C4  EC3E  F01B         	call	_fillRect
  9022                           
  9023                           ;Setup_Time.c: 285: fillRect(15-1+2*xinc, 52+16, 25,2,0x07FF);
  9024  0011C8  0E44               	movlw	68
  9025  0011CA  6E23               	movwf	fillRect@y,c
  9026  0011CC  0E19               	movlw	25
  9027  0011CE  6E24               	movwf	fillRect@w,c
  9028  0011D0  0E02               	movlw	2
  9029  0011D2  6E25               	movwf	fillRect@h,c
  9030  0011D4  0E07               	movlw	7
  9031  0011D6  6E27               	movwf	fillRect@color+1,c
  9032  0011D8  6826               	setf	fillRect@color,c
  9033  0011DA  5030               	movf	Update_Setup_Screen_Cursor_Backward@xinc,w,c
  9034  0011DC  0D02               	mullw	2
  9035  0011DE  50F3               	movf	prodl,w,c
  9036  0011E0  0F0E               	addlw	14
  9037  0011E2  EC3E  F01B         	call	_fillRect
  9038                           
  9039                           ;Setup_Time.c: 286: break;
  9040  0011E6  D06F               	goto	l737
  9041  0011E8                     l8966:
  9042                           
  9043                           ;Setup_Time.c: 289: fillRect(15-1+xinc, 52+16+yinc, 25,2,0x0000);
  9044  0011E8  502F               	movf	Update_Setup_Screen_Cursor_Backward@yinc,w,c
  9045  0011EA  0F44               	addlw	68
  9046  0011EC  6E23               	movwf	fillRect@y,c
  9047  0011EE  0E19               	movlw	25
  9048  0011F0  6E24               	movwf	fillRect@w,c
  9049  0011F2  0E02               	movlw	2
  9050  0011F4  6E25               	movwf	fillRect@h,c
  9051  0011F6  0E00               	movlw	0
  9052  0011F8  6E27               	movwf	fillRect@color+1,c
  9053  0011FA  0E00               	movlw	0
  9054  0011FC  6E26               	movwf	fillRect@color,c
  9055  0011FE  5030               	movf	Update_Setup_Screen_Cursor_Backward@xinc,w,c
  9056  001200  0F0E               	addlw	14
  9057  001202  EC3E  F01B         	call	_fillRect
  9058                           
  9059                           ;Setup_Time.c: 290: fillRect(15-1, 52+16+yinc, 25,2,0x07FF);
  9060  001206  502F               	movf	Update_Setup_Screen_Cursor_Backward@yinc,w,c
  9061  001208  0F44               	addlw	68
  9062  00120A  6E23               	movwf	fillRect@y,c
  9063  00120C  0E19               	movlw	25
  9064  00120E  6E24               	movwf	fillRect@w,c
  9065  001210  0E02               	movlw	2
  9066  001212  6E25               	movwf	fillRect@h,c
  9067  001214  0E07               	movlw	7
  9068  001216  6E27               	movwf	fillRect@color+1,c
  9069  001218  6826               	setf	fillRect@color,c
  9070  00121A  0E0E               	movlw	14
  9071  00121C  EC3E  F01B         	call	_fillRect
  9072                           
  9073                           ;Setup_Time.c: 291: break;
  9074  001220  D052               	goto	l737
  9075  001222                     l8968:
  9076                           
  9077                           ;Setup_Time.c: 294: fillRect(15-1+2*xinc, 52+16+yinc, 25,2,0x0000);
  9078  001222  502F               	movf	Update_Setup_Screen_Cursor_Backward@yinc,w,c
  9079  001224  0F44               	addlw	68
  9080  001226  6E23               	movwf	fillRect@y,c
  9081  001228  0E19               	movlw	25
  9082  00122A  6E24               	movwf	fillRect@w,c
  9083  00122C  0E02               	movlw	2
  9084  00122E  6E25               	movwf	fillRect@h,c
  9085  001230  0E00               	movlw	0
  9086  001232  6E27               	movwf	fillRect@color+1,c
  9087  001234  0E00               	movlw	0
  9088  001236  6E26               	movwf	fillRect@color,c
  9089  001238  5030               	movf	Update_Setup_Screen_Cursor_Backward@xinc,w,c
  9090  00123A  0D02               	mullw	2
  9091  00123C  50F3               	movf	prodl,w,c
  9092  00123E  0F0E               	addlw	14
  9093  001240  EC3E  F01B         	call	_fillRect
  9094                           
  9095                           ;Setup_Time.c: 295: fillRect(15-1+xinc, 52+16+yinc, 25,2,0x07FF);
  9096  001244  502F               	movf	Update_Setup_Screen_Cursor_Backward@yinc,w,c
  9097  001246  0F44               	addlw	68
  9098  001248  6E23               	movwf	fillRect@y,c
  9099  00124A  0E19               	movlw	25
  9100  00124C  6E24               	movwf	fillRect@w,c
  9101  00124E  0E02               	movlw	2
  9102  001250  6E25               	movwf	fillRect@h,c
  9103  001252  0E07               	movlw	7
  9104  001254  6E27               	movwf	fillRect@color+1,c
  9105  001256  6826               	setf	fillRect@color,c
  9106  001258  5030               	movf	Update_Setup_Screen_Cursor_Backward@xinc,w,c
  9107  00125A  0F0E               	addlw	14
  9108  00125C  EC3E  F01B         	call	_fillRect
  9109                           
  9110                           ;Setup_Time.c: 296: break;
  9111  001260  D032               	goto	l737
  9112  001262                     l8972:
  9113                           
  9114                           ;Setup_Time.c: 299: fillRect(15-1, 52+16, 25,2,0x0000);
  9115  001262  0E44               	movlw	68
  9116  001264  6E23               	movwf	fillRect@y,c
  9117  001266  0E19               	movlw	25
  9118  001268  6E24               	movwf	fillRect@w,c
  9119  00126A  0E02               	movlw	2
  9120  00126C  6E25               	movwf	fillRect@h,c
  9121  00126E  0E00               	movlw	0
  9122  001270  6E27               	movwf	fillRect@color+1,c
  9123  001272  0E00               	movlw	0
  9124  001274  6E26               	movwf	fillRect@color,c
  9125  001276  0E0E               	movlw	14
  9126  001278  EC3E  F01B         	call	_fillRect
  9127                           
  9128                           ;Setup_Time.c: 300: fillRect(15-1+2*xinc, 52+16+yinc, 25,2,0x07FF);
  9129  00127C  502F               	movf	Update_Setup_Screen_Cursor_Backward@yinc,w,c
  9130  00127E  0F44               	addlw	68
  9131  001280  6E23               	movwf	fillRect@y,c
  9132  001282  0E19               	movlw	25
  9133  001284  6E24               	movwf	fillRect@w,c
  9134  001286  0E02               	movlw	2
  9135  001288  6E25               	movwf	fillRect@h,c
  9136  00128A  0E07               	movlw	7
  9137  00128C  6E27               	movwf	fillRect@color+1,c
  9138  00128E  6826               	setf	fillRect@color,c
  9139  001290  5030               	movf	Update_Setup_Screen_Cursor_Backward@xinc,w,c
  9140  001292  0D02               	mullw	2
  9141  001294  50F3               	movf	prodl,w,c
  9142  001296  0F0E               	addlw	14
  9143  001298  EC3E  F01B         	call	_fillRect
  9144                           
  9145                           ;Setup_Time.c: 302: }
  9146                           
  9147                           ;Setup_Time.c: 301: break;
  9148  00129C  D014               	goto	l737
  9149  00129E                     l8978:
  9150  00129E  502E               	movf	Update_Setup_Screen_Cursor_Backward@field,w,c
  9151                           
  9152                           ; Switch size 1, requested type "space"
  9153                           ; Number of cases is 6, Range of values is 0 to 5
  9154                           ; switch strategies available:
  9155                           ; Name         Instructions Cycles
  9156                           ; simple_byte           19    10 (average)
  9157                           ;	Chosen strategy is simple_byte
  9158  0012A0  0A00               	xorlw	0	; case 0
  9159  0012A2  B4D8               	btfsc	status,2,c
  9160  0012A4  D73D               	goto	l8956
  9161  0012A6  0A01               	xorlw	1	; case 1
  9162  0012A8  B4D8               	btfsc	status,2,c
  9163  0012AA  D755               	goto	l8958
  9164  0012AC  0A03               	xorlw	3	; case 2
  9165  0012AE  B4D8               	btfsc	status,2,c
  9166  0012B0  D770               	goto	l8962
  9167  0012B2  0A01               	xorlw	1	; case 3
  9168  0012B4  B4D8               	btfsc	status,2,c
  9169  0012B6  D798               	goto	l8966
  9170  0012B8  0A07               	xorlw	7	; case 4
  9171  0012BA  B4D8               	btfsc	status,2,c
  9172  0012BC  D7B2               	goto	l8968
  9173  0012BE  0A01               	xorlw	1	; case 5
  9174  0012C0  B4D8               	btfsc	status,2,c
  9175  0012C2  D7CF               	goto	l8972
  9176  0012C4  D000               	goto	l737
  9177  0012C6                     l737:
  9178  0012C6  0012               	return		;funcret
  9179  0012C8                     __end_of_Update_Setup_Screen_Cursor_Backward:
  9180                           	opt stack 0
  9181                           tblptru	equ	0xFF8
  9182                           tblptrh	equ	0xFF7
  9183                           tblptrl	equ	0xFF6
  9184                           tablat	equ	0xFF5
  9185                           prodh	equ	0xFF4
  9186                           prodl	equ	0xFF3
  9187                           intcon	equ	0xFF2
  9188                           intcon2	equ	0xFF1
  9189                           postinc0	equ	0xFEE
  9190                           wreg	equ	0xFE8
  9191                           postdec1	equ	0xFE5
  9192                           plusw1	equ	0xFE3
  9193                           fsr1l	equ	0xFE1
  9194                           indf2	equ	0xFDF
  9195                           postinc2	equ	0xFDE
  9196                           plusw2	equ	0xFDB
  9197                           fsr2h	equ	0xFDA
  9198                           fsr2l	equ	0xFD9
  9199                           status	equ	0xFD8
  9200                           
  9201 ;; *************** function _Go_Next_Alarm_Field *****************
  9202 ;; Defined at:
  9203 ;;		line 113 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Alarm_Time.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;		None
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;		None
  9208 ;; Return value:  Size  Location     Type
  9209 ;;		None               void
  9210 ;; Registers used:
  9211 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9221 ;;Total ram usage:        0 bytes
  9222 ;; Hardware stack levels used:    1
  9223 ;; Hardware stack levels required when called:    9
  9224 ;; This function calls:
  9225 ;;		_Update_Setup_Screen_Cursor_Forward
  9226 ;; This function is called by:
  9227 ;;		_Do_Setup_Alarm_Time
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           	psect	text43
  9232  003B34                     __ptext43:
  9233                           	opt stack 0
  9234  003B34                     _Go_Next_Alarm_Field:
  9235                           	opt stack 20
  9236                           
  9237                           ;Setup_Alarm_Time.c: 116: Select_Alarm_Field++;
  9238                           
  9239                           ;incstack = 0
  9240  003B34  2A52               	incf	_Select_Alarm_Field,f,c
  9241                           
  9242                           ;Setup_Alarm_Time.c: 117: if (Select_Alarm_Field == 3) Select_Alarm_Field = 0;
  9243  003B36  0E03               	movlw	3
  9244  003B38  1852               	xorwf	_Select_Alarm_Field,w,c
  9245  003B3A  A4D8               	btfss	status,2,c
  9246  003B3C  D003               	goto	l9258
  9247  003B3E  0E00               	movlw	0
  9248  003B40  6E52               	movwf	_Select_Alarm_Field,c
  9249  003B42  D000               	goto	l9258
  9250  003B44                     l9258:
  9251                           
  9252                           ;Setup_Alarm_Time.c: 118: Update_Setup_Screen_Cursor_Forward(Select_Alarm_Field);
  9253  003B44  5052               	movf	_Select_Alarm_Field,w,c
  9254  003B46  ECAD  F007         	call	_Update_Setup_Screen_Cursor_Forward
  9255  003B4A  0012               	return		;funcret
  9256  003B4C                     __end_of_Go_Next_Alarm_Field:
  9257                           	opt stack 0
  9258                           tblptru	equ	0xFF8
  9259                           tblptrh	equ	0xFF7
  9260                           tblptrl	equ	0xFF6
  9261                           tablat	equ	0xFF5
  9262                           prodh	equ	0xFF4
  9263                           prodl	equ	0xFF3
  9264                           intcon	equ	0xFF2
  9265                           intcon2	equ	0xFF1
  9266                           postinc0	equ	0xFEE
  9267                           wreg	equ	0xFE8
  9268                           postdec1	equ	0xFE5
  9269                           plusw1	equ	0xFE3
  9270                           fsr1l	equ	0xFE1
  9271                           indf2	equ	0xFDF
  9272                           postinc2	equ	0xFDE
  9273                           plusw2	equ	0xFDB
  9274                           fsr2h	equ	0xFDA
  9275                           fsr2l	equ	0xFD9
  9276                           status	equ	0xFD8
  9277                           
  9278 ;; *************** function _Update_Setup_Screen_Cursor_Forward *****************
  9279 ;; Defined at:
  9280 ;;		line 227 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Time.c"
  9281 ;; Parameters:    Size  Location     Type
  9282 ;;  field           1    wreg     unsigned char 
  9283 ;; Auto vars:     Size  Location     Type
  9284 ;;  field           1   45[COMRAM] unsigned char 
  9285 ;;  xinc            1   47[COMRAM] unsigned char 
  9286 ;;  yinc            1   46[COMRAM] unsigned char 
  9287 ;; Return value:  Size  Location     Type
  9288 ;;		None               void
  9289 ;; Registers used:
  9290 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9297 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9299 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9300 ;;Total ram usage:        3 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:    8
  9303 ;; This function calls:
  9304 ;;		_fillRect
  9305 ;; This function is called by:
  9306 ;;		_Go_Next_Alarm_Field
  9307 ;;		_Go_Next_Field
  9308 ;; This function uses a non-reentrant model
  9309 ;;
  9310                           
  9311                           	psect	text44
  9312  000F5A                     __ptext44:
  9313                           	opt stack 0
  9314  000F5A                     _Update_Setup_Screen_Cursor_Forward:
  9315                           	opt stack 20
  9316                           
  9317                           ;incstack = 0
  9318                           ;Update_Setup_Screen_Cursor_Forward@field stored from wreg
  9319  000F5A  6E2E               	movwf	Update_Setup_Screen_Cursor_Forward@field,c
  9320                           
  9321                           ;Setup_Time.c: 229: char xinc = 36;
  9322  000F5C  0E24               	movlw	36
  9323  000F5E  6E30               	movwf	Update_Setup_Screen_Cursor_Forward@xinc,c
  9324                           
  9325                           ;Setup_Time.c: 230: char yinc = 30;
  9326  000F60  0E1E               	movlw	30
  9327  000F62  6E2F               	movwf	Update_Setup_Screen_Cursor_Forward@yinc,c
  9328                           
  9329                           ;Setup_Time.c: 231: switch (field)
  9330  000F64  D0C2               	goto	l8952
  9331  000F66                     l8930:
  9332                           
  9333                           ;Setup_Time.c: 234: fillRect(15-1+2*xinc, 52+16+yinc, 25,2,0x0000);
  9334  000F66  502F               	movf	Update_Setup_Screen_Cursor_Forward@yinc,w,c
  9335  000F68  0F44               	addlw	68
  9336  000F6A  6E23               	movwf	fillRect@y,c
  9337  000F6C  0E19               	movlw	25
  9338  000F6E  6E24               	movwf	fillRect@w,c
  9339  000F70  0E02               	movlw	2
  9340  000F72  6E25               	movwf	fillRect@h,c
  9341  000F74  0E00               	movlw	0
  9342  000F76  6E27               	movwf	fillRect@color+1,c
  9343  000F78  0E00               	movlw	0
  9344  000F7A  6E26               	movwf	fillRect@color,c
  9345  000F7C  5030               	movf	Update_Setup_Screen_Cursor_Forward@xinc,w,c
  9346  000F7E  0D02               	mullw	2
  9347  000F80  50F3               	movf	prodl,w,c
  9348  000F82  0F0E               	addlw	14
  9349  000F84  EC3E  F01B         	call	_fillRect
  9350                           
  9351                           ;Setup_Time.c: 235: fillRect(15-1+2*xinc, 52+16, 25,2,0x0000);
  9352  000F88  0E44               	movlw	68
  9353  000F8A  6E23               	movwf	fillRect@y,c
  9354  000F8C  0E19               	movlw	25
  9355  000F8E  6E24               	movwf	fillRect@w,c
  9356  000F90  0E02               	movlw	2
  9357  000F92  6E25               	movwf	fillRect@h,c
  9358  000F94  0E00               	movlw	0
  9359  000F96  6E27               	movwf	fillRect@color+1,c
  9360  000F98  0E00               	movlw	0
  9361  000F9A  6E26               	movwf	fillRect@color,c
  9362  000F9C  5030               	movf	Update_Setup_Screen_Cursor_Forward@xinc,w,c
  9363  000F9E  0D02               	mullw	2
  9364  000FA0  50F3               	movf	prodl,w,c
  9365  000FA2  0F0E               	addlw	14
  9366  000FA4  EC3E  F01B         	call	_fillRect
  9367                           
  9368                           ;Setup_Time.c: 236: fillRect(15-1, 52+16, 25,2,0x07FF);
  9369  000FA8  0E44               	movlw	68
  9370  000FAA  6E23               	movwf	fillRect@y,c
  9371  000FAC  0E19               	movlw	25
  9372  000FAE  6E24               	movwf	fillRect@w,c
  9373  000FB0  0E02               	movlw	2
  9374  000FB2  6E25               	movwf	fillRect@h,c
  9375  000FB4  0E07               	movlw	7
  9376  000FB6  6E27               	movwf	fillRect@color+1,c
  9377  000FB8  6826               	setf	fillRect@color,c
  9378  000FBA  0E0E               	movlw	14
  9379  000FBC  EC3E  F01B         	call	_fillRect
  9380                           
  9381                           ;Setup_Time.c: 237: break;
  9382  000FC0  D0A8               	goto	l726
  9383  000FC2                     l8934:
  9384                           
  9385                           ;Setup_Time.c: 240: fillRect(15-1, 52+16, 25,2,0x0000);
  9386  000FC2  0E44               	movlw	68
  9387  000FC4  6E23               	movwf	fillRect@y,c
  9388  000FC6  0E19               	movlw	25
  9389  000FC8  6E24               	movwf	fillRect@w,c
  9390  000FCA  0E02               	movlw	2
  9391  000FCC  6E25               	movwf	fillRect@h,c
  9392  000FCE  0E00               	movlw	0
  9393  000FD0  6E27               	movwf	fillRect@color+1,c
  9394  000FD2  0E00               	movlw	0
  9395  000FD4  6E26               	movwf	fillRect@color,c
  9396  000FD6  0E0E               	movlw	14
  9397  000FD8  EC3E  F01B         	call	_fillRect
  9398                           
  9399                           ;Setup_Time.c: 241: fillRect(15-1+xinc, 52+16, 25,2,0x07FF);
  9400  000FDC  0E44               	movlw	68
  9401  000FDE  6E23               	movwf	fillRect@y,c
  9402  000FE0  0E19               	movlw	25
  9403  000FE2  6E24               	movwf	fillRect@w,c
  9404  000FE4  0E02               	movlw	2
  9405  000FE6  6E25               	movwf	fillRect@h,c
  9406  000FE8  0E07               	movlw	7
  9407  000FEA  6E27               	movwf	fillRect@color+1,c
  9408  000FEC  6826               	setf	fillRect@color,c
  9409  000FEE  5030               	movf	Update_Setup_Screen_Cursor_Forward@xinc,w,c
  9410  000FF0  0F0E               	addlw	14
  9411  000FF2  EC3E  F01B         	call	_fillRect
  9412                           
  9413                           ;Setup_Time.c: 242: break;
  9414  000FF6  D08D               	goto	l726
  9415  000FF8                     l8936:
  9416                           
  9417                           ;Setup_Time.c: 245: fillRect(15-1+xinc, 52+16, 25,2,0x0000);
  9418  000FF8  0E44               	movlw	68
  9419  000FFA  6E23               	movwf	fillRect@y,c
  9420  000FFC  0E19               	movlw	25
  9421  000FFE  6E24               	movwf	fillRect@w,c
  9422  001000  0E02               	movlw	2
  9423  001002  6E25               	movwf	fillRect@h,c
  9424  001004  0E00               	movlw	0
  9425  001006  6E27               	movwf	fillRect@color+1,c
  9426  001008  0E00               	movlw	0
  9427  00100A  6E26               	movwf	fillRect@color,c
  9428  00100C  5030               	movf	Update_Setup_Screen_Cursor_Forward@xinc,w,c
  9429  00100E  0F0E               	addlw	14
  9430  001010  EC3E  F01B         	call	_fillRect
  9431                           
  9432                           ;Setup_Time.c: 246: fillRect(15-1+2*xinc, 52+16, 25,2,0x07FF);
  9433  001014  0E44               	movlw	68
  9434  001016  6E23               	movwf	fillRect@y,c
  9435  001018  0E19               	movlw	25
  9436  00101A  6E24               	movwf	fillRect@w,c
  9437  00101C  0E02               	movlw	2
  9438  00101E  6E25               	movwf	fillRect@h,c
  9439  001020  0E07               	movlw	7
  9440  001022  6E27               	movwf	fillRect@color+1,c
  9441  001024  6826               	setf	fillRect@color,c
  9442  001026  5030               	movf	Update_Setup_Screen_Cursor_Forward@xinc,w,c
  9443  001028  0D02               	mullw	2
  9444  00102A  50F3               	movf	prodl,w,c
  9445  00102C  0F0E               	addlw	14
  9446  00102E  EC3E  F01B         	call	_fillRect
  9447                           
  9448                           ;Setup_Time.c: 247: break;
  9449  001032  D06F               	goto	l726
  9450  001034                     l8940:
  9451                           
  9452                           ;Setup_Time.c: 250: fillRect(15-1+2*xinc, 52+16, 25,2,0x0000);
  9453  001034  0E44               	movlw	68
  9454  001036  6E23               	movwf	fillRect@y,c
  9455  001038  0E19               	movlw	25
  9456  00103A  6E24               	movwf	fillRect@w,c
  9457  00103C  0E02               	movlw	2
  9458  00103E  6E25               	movwf	fillRect@h,c
  9459  001040  0E00               	movlw	0
  9460  001042  6E27               	movwf	fillRect@color+1,c
  9461  001044  0E00               	movlw	0
  9462  001046  6E26               	movwf	fillRect@color,c
  9463  001048  5030               	movf	Update_Setup_Screen_Cursor_Forward@xinc,w,c
  9464  00104A  0D02               	mullw	2
  9465  00104C  50F3               	movf	prodl,w,c
  9466  00104E  0F0E               	addlw	14
  9467  001050  EC3E  F01B         	call	_fillRect
  9468                           
  9469                           ;Setup_Time.c: 251: fillRect(15-1, 52+16+yinc, 25,2,0x07FF);
  9470  001054  502F               	movf	Update_Setup_Screen_Cursor_Forward@yinc,w,c
  9471  001056  0F44               	addlw	68
  9472  001058  6E23               	movwf	fillRect@y,c
  9473  00105A  0E19               	movlw	25
  9474  00105C  6E24               	movwf	fillRect@w,c
  9475  00105E  0E02               	movlw	2
  9476  001060  6E25               	movwf	fillRect@h,c
  9477  001062  0E07               	movlw	7
  9478  001064  6E27               	movwf	fillRect@color+1,c
  9479  001066  6826               	setf	fillRect@color,c
  9480  001068  0E0E               	movlw	14
  9481  00106A  EC3E  F01B         	call	_fillRect
  9482                           
  9483                           ;Setup_Time.c: 252: break;
  9484  00106E  D051               	goto	l726
  9485  001070                     l8944:
  9486                           
  9487                           ;Setup_Time.c: 255: fillRect(15-1, 52+16+yinc, 25,2,0x0000);
  9488  001070  502F               	movf	Update_Setup_Screen_Cursor_Forward@yinc,w,c
  9489  001072  0F44               	addlw	68
  9490  001074  6E23               	movwf	fillRect@y,c
  9491  001076  0E19               	movlw	25
  9492  001078  6E24               	movwf	fillRect@w,c
  9493  00107A  0E02               	movlw	2
  9494  00107C  6E25               	movwf	fillRect@h,c
  9495  00107E  0E00               	movlw	0
  9496  001080  6E27               	movwf	fillRect@color+1,c
  9497  001082  0E00               	movlw	0
  9498  001084  6E26               	movwf	fillRect@color,c
  9499  001086  0E0E               	movlw	14
  9500  001088  EC3E  F01B         	call	_fillRect
  9501                           
  9502                           ;Setup_Time.c: 256: fillRect(15-1+xinc, 52+16+yinc, 25,2,0x07FF);
  9503  00108C  502F               	movf	Update_Setup_Screen_Cursor_Forward@yinc,w,c
  9504  00108E  0F44               	addlw	68
  9505  001090  6E23               	movwf	fillRect@y,c
  9506  001092  0E19               	movlw	25
  9507  001094  6E24               	movwf	fillRect@w,c
  9508  001096  0E02               	movlw	2
  9509  001098  6E25               	movwf	fillRect@h,c
  9510  00109A  0E07               	movlw	7
  9511  00109C  6E27               	movwf	fillRect@color+1,c
  9512  00109E  6826               	setf	fillRect@color,c
  9513  0010A0  5030               	movf	Update_Setup_Screen_Cursor_Forward@xinc,w,c
  9514  0010A2  0F0E               	addlw	14
  9515  0010A4  EC3E  F01B         	call	_fillRect
  9516                           
  9517                           ;Setup_Time.c: 257: break;
  9518  0010A8  D034               	goto	l726
  9519  0010AA                     l8946:
  9520                           
  9521                           ;Setup_Time.c: 260: fillRect(15-1+xinc, 52+16+yinc, 25,2,0x0000);
  9522  0010AA  502F               	movf	Update_Setup_Screen_Cursor_Forward@yinc,w,c
  9523  0010AC  0F44               	addlw	68
  9524  0010AE  6E23               	movwf	fillRect@y,c
  9525  0010B0  0E19               	movlw	25
  9526  0010B2  6E24               	movwf	fillRect@w,c
  9527  0010B4  0E02               	movlw	2
  9528  0010B6  6E25               	movwf	fillRect@h,c
  9529  0010B8  0E00               	movlw	0
  9530  0010BA  6E27               	movwf	fillRect@color+1,c
  9531  0010BC  0E00               	movlw	0
  9532  0010BE  6E26               	movwf	fillRect@color,c
  9533  0010C0  5030               	movf	Update_Setup_Screen_Cursor_Forward@xinc,w,c
  9534  0010C2  0F0E               	addlw	14
  9535  0010C4  EC3E  F01B         	call	_fillRect
  9536                           
  9537                           ;Setup_Time.c: 261: fillRect(15-1+2*xinc, 52+16+yinc, 25,2,0x07FF);
  9538  0010C8  502F               	movf	Update_Setup_Screen_Cursor_Forward@yinc,w,c
  9539  0010CA  0F44               	addlw	68
  9540  0010CC  6E23               	movwf	fillRect@y,c
  9541  0010CE  0E19               	movlw	25
  9542  0010D0  6E24               	movwf	fillRect@w,c
  9543  0010D2  0E02               	movlw	2
  9544  0010D4  6E25               	movwf	fillRect@h,c
  9545  0010D6  0E07               	movlw	7
  9546  0010D8  6E27               	movwf	fillRect@color+1,c
  9547  0010DA  6826               	setf	fillRect@color,c
  9548  0010DC  5030               	movf	Update_Setup_Screen_Cursor_Forward@xinc,w,c
  9549  0010DE  0D02               	mullw	2
  9550  0010E0  50F3               	movf	prodl,w,c
  9551  0010E2  0F0E               	addlw	14
  9552  0010E4  EC3E  F01B         	call	_fillRect
  9553                           
  9554                           ;Setup_Time.c: 263: }
  9555                           
  9556                           ;Setup_Time.c: 262: break;
  9557  0010E8  D014               	goto	l726
  9558  0010EA                     l8952:
  9559  0010EA  502E               	movf	Update_Setup_Screen_Cursor_Forward@field,w,c
  9560                           
  9561                           ; Switch size 1, requested type "space"
  9562                           ; Number of cases is 6, Range of values is 0 to 5
  9563                           ; switch strategies available:
  9564                           ; Name         Instructions Cycles
  9565                           ; simple_byte           19    10 (average)
  9566                           ;	Chosen strategy is simple_byte
  9567  0010EC  0A00               	xorlw	0	; case 0
  9568  0010EE  B4D8               	btfsc	status,2,c
  9569  0010F0  D73A               	goto	l8930
  9570  0010F2  0A01               	xorlw	1	; case 1
  9571  0010F4  B4D8               	btfsc	status,2,c
  9572  0010F6  D765               	goto	l8934
  9573  0010F8  0A03               	xorlw	3	; case 2
  9574  0010FA  B4D8               	btfsc	status,2,c
  9575  0010FC  D77D               	goto	l8936
  9576  0010FE  0A01               	xorlw	1	; case 3
  9577  001100  B4D8               	btfsc	status,2,c
  9578  001102  D798               	goto	l8940
  9579  001104  0A07               	xorlw	7	; case 4
  9580  001106  B4D8               	btfsc	status,2,c
  9581  001108  D7B3               	goto	l8944
  9582  00110A  0A01               	xorlw	1	; case 5
  9583  00110C  B4D8               	btfsc	status,2,c
  9584  00110E  D7CD               	goto	l8946
  9585  001110  D000               	goto	l726
  9586  001112                     l726:
  9587  001112  0012               	return		;funcret
  9588  001114                     __end_of_Update_Setup_Screen_Cursor_Forward:
  9589                           	opt stack 0
  9590                           tblptru	equ	0xFF8
  9591                           tblptrh	equ	0xFF7
  9592                           tblptrl	equ	0xFF6
  9593                           tablat	equ	0xFF5
  9594                           prodh	equ	0xFF4
  9595                           prodl	equ	0xFF3
  9596                           intcon	equ	0xFF2
  9597                           intcon2	equ	0xFF1
  9598                           postinc0	equ	0xFEE
  9599                           wreg	equ	0xFE8
  9600                           postdec1	equ	0xFE5
  9601                           plusw1	equ	0xFE3
  9602                           fsr1l	equ	0xFE1
  9603                           indf2	equ	0xFDF
  9604                           postinc2	equ	0xFDE
  9605                           plusw2	equ	0xFDB
  9606                           fsr2h	equ	0xFDA
  9607                           fsr2l	equ	0xFD9
  9608                           status	equ	0xFD8
  9609                           
  9610 ;; *************** function _Exit_Setup_Alarm_Time *****************
  9611 ;; Defined at:
  9612 ;;		line 129 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Alarm_Time.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;		None
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;		None
  9617 ;; Return value:  Size  Location     Type
  9618 ;;		None               void
  9619 ;; Registers used:
  9620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9630 ;;Total ram usage:        0 bytes
  9631 ;; Hardware stack levels used:    1
  9632 ;; Hardware stack levels required when called:   11
  9633 ;; This function calls:
  9634 ;;		_DS3231_Read_Time
  9635 ;;		_Initialize_Screen
  9636 ;; This function is called by:
  9637 ;;		_Do_Setup_Alarm_Time
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641                           	psect	text45
  9642  003CE2                     __ptext45:
  9643                           	opt stack 0
  9644  003CE2                     _Exit_Setup_Alarm_Time:
  9645                           	opt stack 18
  9646                           
  9647                           ;Setup_Alarm_Time.c: 131: DS3231_Read_Time();
  9648                           
  9649                           ;incstack = 0
  9650  003CE2  ECC5  F018         	call	_DS3231_Read_Time	;wreg free
  9651                           
  9652                           ;Setup_Alarm_Time.c: 132: Initialize_Screen();
  9653  003CE6  EC43  F003         	call	_Initialize_Screen	;wreg free
  9654                           
  9655                           ;Setup_Alarm_Time.c: 133: In_Alarm_Time_Setup = 0;
  9656  003CEA  0E00               	movlw	0
  9657  003CEC  0100               	movlb	0	; () banked
  9658  003CEE  6FF7               	movwf	_In_Alarm_Time_Setup& (0+255),b
  9659                           
  9660                           ; BSR set to: 0
  9661  003CF0  0012               	return		;funcret
  9662  003CF2                     __end_of_Exit_Setup_Alarm_Time:
  9663                           	opt stack 0
  9664                           tblptru	equ	0xFF8
  9665                           tblptrh	equ	0xFF7
  9666                           tblptrl	equ	0xFF6
  9667                           tablat	equ	0xFF5
  9668                           prodh	equ	0xFF4
  9669                           prodl	equ	0xFF3
  9670                           intcon	equ	0xFF2
  9671                           intcon2	equ	0xFF1
  9672                           postinc0	equ	0xFEE
  9673                           wreg	equ	0xFE8
  9674                           postdec1	equ	0xFE5
  9675                           plusw1	equ	0xFE3
  9676                           fsr1l	equ	0xFE1
  9677                           indf2	equ	0xFDF
  9678                           postinc2	equ	0xFDE
  9679                           plusw2	equ	0xFDB
  9680                           fsr2h	equ	0xFDA
  9681                           fsr2l	equ	0xFD9
  9682                           status	equ	0xFD8
  9683                           
  9684 ;; *************** function _Do_Save_New_Alarm_Time *****************
  9685 ;; Defined at:
  9686 ;;		line 136 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Alarm_Time.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;		None
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;		None
  9691 ;; Return value:  Size  Location     Type
  9692 ;;		None               void
  9693 ;; Registers used:
  9694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9704 ;;Total ram usage:        0 bytes
  9705 ;; Hardware stack levels used:    1
  9706 ;; Hardware stack levels required when called:   11
  9707 ;; This function calls:
  9708 ;;		_DS3231_Read_Alarm_Time
  9709 ;;		_DS3231_Read_Time
  9710 ;;		_DS3231_Write_Alarm_Time
  9711 ;;		_Initialize_Screen
  9712 ;; This function is called by:
  9713 ;;		_Do_Setup_Alarm_Time
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           	psect	text46
  9718  003B4C                     __ptext46:
  9719                           	opt stack 0
  9720  003B4C                     _Do_Save_New_Alarm_Time:
  9721                           	opt stack 18
  9722                           
  9723                           ;Setup_Alarm_Time.c: 138: DS3231_Write_Alarm_Time();
  9724                           
  9725                           ; BSR set to: 0
  9726                           ;incstack = 0
  9727  003B4C  ECDD  F017         	call	_DS3231_Write_Alarm_Time	;wreg free
  9728                           
  9729                           ;Setup_Alarm_Time.c: 139: DS3231_Read_Alarm_Time();
  9730  003B50  ECF2  F01A         	call	_DS3231_Read_Alarm_Time	;wreg free
  9731                           
  9732                           ;Setup_Alarm_Time.c: 140: DS3231_Read_Time();
  9733  003B54  ECC5  F018         	call	_DS3231_Read_Time	;wreg free
  9734                           
  9735                           ;Setup_Alarm_Time.c: 141: Initialize_Screen();
  9736  003B58  EC43  F003         	call	_Initialize_Screen	;wreg free
  9737                           
  9738                           ;Setup_Alarm_Time.c: 142: In_Alarm_Time_Setup = 0;
  9739  003B5C  0E00               	movlw	0
  9740  003B5E  0100               	movlb	0	; () banked
  9741  003B60  6FF7               	movwf	_In_Alarm_Time_Setup& (0+255),b
  9742                           
  9743                           ; BSR set to: 0
  9744  003B62  0012               	return		;funcret
  9745  003B64                     __end_of_Do_Save_New_Alarm_Time:
  9746                           	opt stack 0
  9747                           tblptru	equ	0xFF8
  9748                           tblptrh	equ	0xFF7
  9749                           tblptrl	equ	0xFF6
  9750                           tablat	equ	0xFF5
  9751                           prodh	equ	0xFF4
  9752                           prodl	equ	0xFF3
  9753                           intcon	equ	0xFF2
  9754                           intcon2	equ	0xFF1
  9755                           postinc0	equ	0xFEE
  9756                           wreg	equ	0xFE8
  9757                           postdec1	equ	0xFE5
  9758                           plusw1	equ	0xFE3
  9759                           fsr1l	equ	0xFE1
  9760                           indf2	equ	0xFDF
  9761                           postinc2	equ	0xFDE
  9762                           plusw2	equ	0xFDB
  9763                           fsr2h	equ	0xFDA
  9764                           fsr2l	equ	0xFD9
  9765                           status	equ	0xFD8
  9766                           
  9767 ;; *************** function _Initialize_Screen *****************
  9768 ;; Defined at:
  9769 ;;		line 36 in file "../ECE3301L_Spring22_Final_Lab_Sample/Main_Screen.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;		None
  9772 ;; Auto vars:     Size  Location     Type
  9773 ;;		None
  9774 ;; Return value:  Size  Location     Type
  9775 ;;                  2   40[None  ] int 
  9776 ;; Registers used:
  9777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9778 ;; Tracked objects:
  9779 ;;		On entry : 0/0
  9780 ;;		On exit  : 0/0
  9781 ;;		Unchanged: 0/0
  9782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9787 ;;Total ram usage:        0 bytes
  9788 ;; Hardware stack levels used:    1
  9789 ;; Hardware stack levels required when called:   10
  9790 ;; This function calls:
  9791 ;;		_LCD_Reset
  9792 ;;		_TFT_GreenTab_Initialize
  9793 ;;		_drawCircle
  9794 ;;		_drawtext
  9795 ;;		_fillScreen
  9796 ;;		_strcpy
  9797 ;; This function is called by:
  9798 ;;		_main
  9799 ;;		_Exit_Setup_Alarm_Time
  9800 ;;		_Do_Save_New_Alarm_Time
  9801 ;;		_Exit_Setup_Heater_Temp
  9802 ;;		_Do_Save_New_Heater_Temp
  9803 ;;		_Do_Save_New_Time
  9804 ;;		_Exit_Time_Setup
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808                           	psect	text47
  9809  000686                     __ptext47:
  9810                           	opt stack 0
  9811  000686                     _Initialize_Screen:
  9812                           	opt stack 20
  9813                           
  9814                           ;Main_Screen.c: 38: LCD_Reset();
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;incstack = 0
  9818  000686  EC23  F01E         	call	_LCD_Reset	;wreg free
  9819                           
  9820                           ;Main_Screen.c: 39: TFT_GreenTab_Initialize();
  9821  00068A  EC99  F01C         	call	_TFT_GreenTab_Initialize	;wreg free
  9822                           
  9823                           ;Main_Screen.c: 40: fillScreen(0x0000);
  9824  00068E  0E00               	movlw	0
  9825  000690  6E25               	movwf	fillScreen@color+1,c
  9826  000692  0E00               	movlw	0
  9827  000694  6E24               	movwf	fillScreen@color,c
  9828  000696  EC4D  F01D         	call	_fillScreen	;wreg free
  9829                           
  9830                           ;Main_Screen.c: 42: strcpy(txt, " ECE3301L Sp'22 S3\0");
  9831  00069A  C04E  F011         	movff	_txt,strcpy@to
  9832  00069E  C04F  F012         	movff	_txt+1,strcpy@to+1
  9833  0006A2  0E13               	movlw	low STR_5
  9834  0006A4  6E13               	movwf	strcpy@from,c
  9835  0006A6  0EFF               	movlw	high STR_5
  9836  0006A8  6E14               	movwf	strcpy@from+1,c
  9837  0006AA  EC3C  F01C         	call	_strcpy	;wreg free
  9838                           
  9839                           ;Main_Screen.c: 43: drawtext(1 , 1, txt, 0xFFFF , 0x0000, 1);
  9840  0006AE  0E01               	movlw	1
  9841  0006B0  6E39               	movwf	drawtext@y,c
  9842  0006B2  C04E  F03A         	movff	_txt,drawtext@_text
  9843  0006B6  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  9844  0006BA  0EFF               	movlw	255
  9845  0006BC  6E3D               	movwf	drawtext@color+1,c
  9846  0006BE  683C               	setf	drawtext@color,c
  9847  0006C0  0E00               	movlw	0
  9848  0006C2  6E3F               	movwf	drawtext@bg+1,c
  9849  0006C4  0E00               	movlw	0
  9850  0006C6  6E3E               	movwf	drawtext@bg,c
  9851  0006C8  0E01               	movlw	1
  9852  0006CA  6E40               	movwf	drawtext@size,c
  9853  0006CC  0E01               	movlw	1
  9854  0006CE  ECFC  F00C         	call	_drawtext
  9855                           
  9856                           ;Main_Screen.c: 45: strcpy(txt, "Temperature:");
  9857  0006D2  C04E  F011         	movff	_txt,strcpy@to
  9858  0006D6  C04F  F012         	movff	_txt+1,strcpy@to+1
  9859  0006DA  0E6E               	movlw	low STR_6
  9860  0006DC  6E13               	movwf	strcpy@from,c
  9861  0006DE  0EFF               	movlw	high STR_6
  9862  0006E0  6E14               	movwf	strcpy@from+1,c
  9863  0006E2  EC3C  F01C         	call	_strcpy	;wreg free
  9864                           
  9865                           ;Main_Screen.c: 46: drawtext(24 , 11 , txt, 0xF81F, 0x0000, 1);
  9866  0006E6  0E0B               	movlw	11
  9867  0006E8  6E39               	movwf	drawtext@y,c
  9868  0006EA  C04E  F03A         	movff	_txt,drawtext@_text
  9869  0006EE  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  9870  0006F2  0EF8               	movlw	248
  9871  0006F4  6E3D               	movwf	drawtext@color+1,c
  9872  0006F6  0E1F               	movlw	31
  9873  0006F8  6E3C               	movwf	drawtext@color,c
  9874  0006FA  0E00               	movlw	0
  9875  0006FC  6E3F               	movwf	drawtext@bg+1,c
  9876  0006FE  0E00               	movlw	0
  9877  000700  6E3E               	movwf	drawtext@bg,c
  9878  000702  0E01               	movlw	1
  9879  000704  6E40               	movwf	drawtext@size,c
  9880  000706  0E18               	movlw	24
  9881  000708  ECFC  F00C         	call	_drawtext
  9882                           
  9883                           ;Main_Screen.c: 47: drawCircle(40, 23 , 2 , 0xFFE0);
  9884  00070C  0E00               	movlw	0
  9885  00070E  6E1D               	movwf	drawCircle@x0+1,c
  9886  000710  0E28               	movlw	40
  9887  000712  6E1C               	movwf	drawCircle@x0,c
  9888  000714  0E00               	movlw	0
  9889  000716  6E1F               	movwf	drawCircle@y0+1,c
  9890  000718  0E17               	movlw	23
  9891  00071A  6E1E               	movwf	drawCircle@y0,c
  9892  00071C  0E00               	movlw	0
  9893  00071E  6E21               	movwf	drawCircle@r+1,c
  9894  000720  0E02               	movlw	2
  9895  000722  6E20               	movwf	drawCircle@r,c
  9896  000724  0EFF               	movlw	255
  9897  000726  6E23               	movwf	drawCircle@color+1,c
  9898  000728  0EE0               	movlw	224
  9899  00072A  6E22               	movwf	drawCircle@color,c
  9900  00072C  EC64  F009         	call	_drawCircle	;wreg free
  9901                           
  9902                           ;Main_Screen.c: 48: strcpy(txt, "C/");
  9903  000730  C04E  F011         	movff	_txt,strcpy@to
  9904  000734  C04F  F012         	movff	_txt+1,strcpy@to+1
  9905  000738  0EF5               	movlw	low STR_7
  9906  00073A  6E13               	movwf	strcpy@from,c
  9907  00073C  0EFF               	movlw	high STR_7
  9908  00073E  6E14               	movwf	strcpy@from+1,c
  9909  000740  EC3C  F01C         	call	_strcpy	;wreg free
  9910                           
  9911                           ;Main_Screen.c: 49: drawtext(45 , 23, txt, 0xFFE0 , 0x0000, 2);
  9912  000744  0E17               	movlw	23
  9913  000746  6E39               	movwf	drawtext@y,c
  9914  000748  C04E  F03A         	movff	_txt,drawtext@_text
  9915  00074C  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  9916  000750  0EFF               	movlw	255
  9917  000752  6E3D               	movwf	drawtext@color+1,c
  9918  000754  0EE0               	movlw	224
  9919  000756  6E3C               	movwf	drawtext@color,c
  9920  000758  0E00               	movlw	0
  9921  00075A  6E3F               	movwf	drawtext@bg+1,c
  9922  00075C  0E00               	movlw	0
  9923  00075E  6E3E               	movwf	drawtext@bg,c
  9924  000760  0E02               	movlw	2
  9925  000762  6E40               	movwf	drawtext@size,c
  9926  000764  0E2D               	movlw	45
  9927  000766  ECFC  F00C         	call	_drawtext
  9928                           
  9929                           ;Main_Screen.c: 50: strcpy(txt, "F");
  9930  00076A  C04E  F011         	movff	_txt,strcpy@to
  9931  00076E  C04F  F012         	movff	_txt+1,strcpy@to+1
  9932  000772  0EEF               	movlw	low (STR_20+2)
  9933  000774  6E13               	movwf	strcpy@from,c
  9934  000776  0EFF               	movlw	high (STR_20+2)
  9935  000778  6E14               	movwf	strcpy@from+1,c
  9936  00077A  EC3C  F01C         	call	_strcpy	;wreg free
  9937                           
  9938                           ;Main_Screen.c: 51: drawCircle(110, 23 , 2 , 0xFFE0);
  9939  00077E  0E00               	movlw	0
  9940  000780  6E1D               	movwf	drawCircle@x0+1,c
  9941  000782  0E6E               	movlw	110
  9942  000784  6E1C               	movwf	drawCircle@x0,c
  9943  000786  0E00               	movlw	0
  9944  000788  6E1F               	movwf	drawCircle@y0+1,c
  9945  00078A  0E17               	movlw	23
  9946  00078C  6E1E               	movwf	drawCircle@y0,c
  9947  00078E  0E00               	movlw	0
  9948  000790  6E21               	movwf	drawCircle@r+1,c
  9949  000792  0E02               	movlw	2
  9950  000794  6E20               	movwf	drawCircle@r,c
  9951  000796  0EFF               	movlw	255
  9952  000798  6E23               	movwf	drawCircle@color+1,c
  9953  00079A  0EE0               	movlw	224
  9954  00079C  6E22               	movwf	drawCircle@color,c
  9955  00079E  EC64  F009         	call	_drawCircle	;wreg free
  9956                           
  9957                           ;Main_Screen.c: 52: drawtext(115 , 23, txt, 0xFFE0 , 0x0000, 2);
  9958  0007A2  0E17               	movlw	23
  9959  0007A4  6E39               	movwf	drawtext@y,c
  9960  0007A6  C04E  F03A         	movff	_txt,drawtext@_text
  9961  0007AA  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  9962  0007AE  0EFF               	movlw	255
  9963  0007B0  6E3D               	movwf	drawtext@color+1,c
  9964  0007B2  0EE0               	movlw	224
  9965  0007B4  6E3C               	movwf	drawtext@color,c
  9966  0007B6  0E00               	movlw	0
  9967  0007B8  6E3F               	movwf	drawtext@bg+1,c
  9968  0007BA  0E00               	movlw	0
  9969  0007BC  6E3E               	movwf	drawtext@bg,c
  9970  0007BE  0E02               	movlw	2
  9971  0007C0  6E40               	movwf	drawtext@size,c
  9972  0007C2  0E73               	movlw	115
  9973  0007C4  ECFC  F00C         	call	_drawtext
  9974                           
  9975                           ;Main_Screen.c: 53: strcpy(txt, "Time");
  9976  0007C8  C04E  F011         	movff	_txt,strcpy@to
  9977  0007CC  C04F  F012         	movff	_txt+1,strcpy@to+1
  9978  0007D0  0EB0               	movlw	low (STR_11+6)
  9979  0007D2  6E13               	movwf	strcpy@from,c
  9980  0007D4  0EFF               	movlw	high (STR_11+6)
  9981  0007D6  6E14               	movwf	strcpy@from+1,c
  9982  0007D8  EC3C  F01C         	call	_strcpy	;wreg free
  9983                           
  9984                           ;Main_Screen.c: 54: drawtext(50 , 40 , txt, 0x001F , 0x0000, 1);
  9985  0007DC  0E28               	movlw	40
  9986  0007DE  6E39               	movwf	drawtext@y,c
  9987  0007E0  C04E  F03A         	movff	_txt,drawtext@_text
  9988  0007E4  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  9989  0007E8  0E00               	movlw	0
  9990  0007EA  6E3D               	movwf	drawtext@color+1,c
  9991  0007EC  0E1F               	movlw	31
  9992  0007EE  6E3C               	movwf	drawtext@color,c
  9993  0007F0  0E00               	movlw	0
  9994  0007F2  6E3F               	movwf	drawtext@bg+1,c
  9995  0007F4  0E00               	movlw	0
  9996  0007F6  6E3E               	movwf	drawtext@bg,c
  9997  0007F8  0E01               	movlw	1
  9998  0007FA  6E40               	movwf	drawtext@size,c
  9999  0007FC  0E32               	movlw	50
 10000  0007FE  ECFC  F00C         	call	_drawtext
 10001                           
 10002                           ;Main_Screen.c: 55: strcpy(txt, "Date");
 10003  000802  C04E  F011         	movff	_txt,strcpy@to
 10004  000806  C04F  F012         	movff	_txt+1,strcpy@to+1
 10005  00080A  0EDF               	movlw	low STR_10
 10006  00080C  6E13               	movwf	strcpy@from,c
 10007  00080E  0EFF               	movlw	high STR_10
 10008  000810  6E14               	movwf	strcpy@from+1,c
 10009  000812  EC3C  F01C         	call	_strcpy	;wreg free
 10010                           
 10011                           ;Main_Screen.c: 56: drawtext(50 , 71 , txt, 0xF800 , 0x0000, 1);
 10012  000816  0E47               	movlw	71
 10013  000818  6E39               	movwf	drawtext@y,c
 10014  00081A  C04E  F03A         	movff	_txt,drawtext@_text
 10015  00081E  C04F  F03B         	movff	_txt+1,drawtext@_text+1
 10016  000822  0EF8               	movlw	248
 10017  000824  6E3D               	movwf	drawtext@color+1,c
 10018  000826  0E00               	movlw	0
 10019  000828  6E3C               	movwf	drawtext@color,c
 10020  00082A  0E00               	movlw	0
 10021  00082C  6E3F               	movwf	drawtext@bg+1,c
 10022  00082E  0E00               	movlw	0
 10023  000830  6E3E               	movwf	drawtext@bg,c
 10024  000832  0E01               	movlw	1
 10025  000834  6E40               	movwf	drawtext@size,c
 10026  000836  0E32               	movlw	50
 10027  000838  ECFC  F00C         	call	_drawtext
 10028                           
 10029                           ;Main_Screen.c: 57: strcpy(txt, "Alarm Time");
 10030  00083C  C04E  F011         	movff	_txt,strcpy@to
 10031  000840  C04F  F012         	movff	_txt+1,strcpy@to+1
 10032  000844  0EAA               	movlw	low STR_11
 10033  000846  6E13               	movwf	strcpy@from,c
 10034  000848  0EFF               	movlw	high STR_11
 10035  00084A  6E14               	movwf	strcpy@from+1,c
 10036  00084C  EC3C  F01C         	call	_strcpy	;wreg free
 10037                           
 10038                           ;Main_Screen.c: 58: drawtext(4 , 100 , txt, 0xFFE0, 0x0000, 1);
 10039  000850  0E64               	movlw	100
 10040  000852  6E39               	movwf	drawtext@y,c
 10041  000854  C04E  F03A         	movff	_txt,drawtext@_text
 10042  000858  C04F  F03B         	movff	_txt+1,drawtext@_text+1
 10043  00085C  0EFF               	movlw	255
 10044  00085E  6E3D               	movwf	drawtext@color+1,c
 10045  000860  0EE0               	movlw	224
 10046  000862  6E3C               	movwf	drawtext@color,c
 10047  000864  0E00               	movlw	0
 10048  000866  6E3F               	movwf	drawtext@bg+1,c
 10049  000868  0E00               	movlw	0
 10050  00086A  6E3E               	movwf	drawtext@bg,c
 10051  00086C  0E01               	movlw	1
 10052  00086E  6E40               	movwf	drawtext@size,c
 10053  000870  0E04               	movlw	4
 10054  000872  ECFC  F00C         	call	_drawtext
 10055                           
 10056                           ;Main_Screen.c: 59: strcpy(txt, "Alarm SW");
 10057  000876  C04E  F011         	movff	_txt,strcpy@to
 10058  00087A  C04F  F012         	movff	_txt+1,strcpy@to+1
 10059  00087E  0EBF               	movlw	low STR_12
 10060  000880  6E13               	movwf	strcpy@from,c
 10061  000882  0EFF               	movlw	high STR_12
 10062  000884  6E14               	movwf	strcpy@from+1,c
 10063  000886  EC3C  F01C         	call	_strcpy	;wreg free
 10064                           
 10065                           ;Main_Screen.c: 60: drawtext(77, 100, txt, 0xFFE0, 0x0000, 1);
 10066  00088A  0E64               	movlw	100
 10067  00088C  6E39               	movwf	drawtext@y,c
 10068  00088E  C04E  F03A         	movff	_txt,drawtext@_text
 10069  000892  C04F  F03B         	movff	_txt+1,drawtext@_text+1
 10070  000896  0EFF               	movlw	255
 10071  000898  6E3D               	movwf	drawtext@color+1,c
 10072  00089A  0EE0               	movlw	224
 10073  00089C  6E3C               	movwf	drawtext@color,c
 10074  00089E  0E00               	movlw	0
 10075  0008A0  6E3F               	movwf	drawtext@bg+1,c
 10076  0008A2  0E00               	movlw	0
 10077  0008A4  6E3E               	movwf	drawtext@bg,c
 10078  0008A6  0E01               	movlw	1
 10079  0008A8  6E40               	movwf	drawtext@size,c
 10080  0008AA  0E4D               	movlw	77
 10081  0008AC  ECFC  F00C         	call	_drawtext
 10082                           
 10083                           ;Main_Screen.c: 61: strcpy(txt, "HTR Set Temp");
 10084  0008B0  C04E  F011         	movff	_txt,strcpy@to
 10085  0008B4  C04F  F012         	movff	_txt+1,strcpy@to+1
 10086  0008B8  0E7B               	movlw	low STR_13
 10087  0008BA  6E13               	movwf	strcpy@from,c
 10088  0008BC  0EFF               	movlw	high STR_13
 10089  0008BE  6E14               	movwf	strcpy@from+1,c
 10090  0008C0  EC3C  F01C         	call	_strcpy	;wreg free
 10091                           
 10092                           ;Main_Screen.c: 62: drawtext(6, 120, txt, 0x001F , 0x0000, 1);
 10093  0008C4  0E78               	movlw	120
 10094  0008C6  6E39               	movwf	drawtext@y,c
 10095  0008C8  C04E  F03A         	movff	_txt,drawtext@_text
 10096  0008CC  C04F  F03B         	movff	_txt+1,drawtext@_text+1
 10097  0008D0  0E00               	movlw	0
 10098  0008D2  6E3D               	movwf	drawtext@color+1,c
 10099  0008D4  0E1F               	movlw	31
 10100  0008D6  6E3C               	movwf	drawtext@color,c
 10101  0008D8  0E00               	movlw	0
 10102  0008DA  6E3F               	movwf	drawtext@bg+1,c
 10103  0008DC  0E00               	movlw	0
 10104  0008DE  6E3E               	movwf	drawtext@bg,c
 10105  0008E0  0E01               	movlw	1
 10106  0008E2  6E40               	movwf	drawtext@size,c
 10107  0008E4  0E06               	movlw	6
 10108  0008E6  ECFC  F00C         	call	_drawtext
 10109                           
 10110                           ;Main_Screen.c: 63: strcpy(txt, "HTR SW");
 10111  0008EA  C04E  F011         	movff	_txt,strcpy@to
 10112  0008EE  C04F  F012         	movff	_txt+1,strcpy@to+1
 10113  0008F2  0ED8               	movlw	low STR_14
 10114  0008F4  6E13               	movwf	strcpy@from,c
 10115  0008F6  0EFF               	movlw	high STR_14
 10116  0008F8  6E14               	movwf	strcpy@from+1,c
 10117  0008FA  EC3C  F01C         	call	_strcpy	;wreg free
 10118                           
 10119                           ;Main_Screen.c: 64: drawtext(85, 120, txt, 0x001F , 0x0000, 1);
 10120  0008FE  0E78               	movlw	120
 10121  000900  6E39               	movwf	drawtext@y,c
 10122  000902  C04E  F03A         	movff	_txt,drawtext@_text
 10123  000906  C04F  F03B         	movff	_txt+1,drawtext@_text+1
 10124  00090A  0E00               	movlw	0
 10125  00090C  6E3D               	movwf	drawtext@color+1,c
 10126  00090E  0E1F               	movlw	31
 10127  000910  6E3C               	movwf	drawtext@color,c
 10128  000912  0E00               	movlw	0
 10129  000914  6E3F               	movwf	drawtext@bg+1,c
 10130  000916  0E00               	movlw	0
 10131  000918  6E3E               	movwf	drawtext@bg,c
 10132  00091A  0E01               	movlw	1
 10133  00091C  6E40               	movwf	drawtext@size,c
 10134  00091E  0E55               	movlw	85
 10135  000920  ECFC  F00C         	call	_drawtext
 10136                           
 10137                           ;Main_Screen.c: 65: strcpy(txt, "DC");
 10138  000924  C04E  F011         	movff	_txt,strcpy@to
 10139  000928  C04F  F012         	movff	_txt+1,strcpy@to+1
 10140  00092C  0EF8               	movlw	low STR_15
 10141  00092E  6E13               	movwf	strcpy@from,c
 10142  000930  0EFF               	movlw	high STR_15
 10143  000932  6E14               	movwf	strcpy@from+1,c
 10144  000934  EC3C  F01C         	call	_strcpy	;wreg free
 10145                           
 10146                           ;Main_Screen.c: 66: drawtext(12, 140, txt, 0xFFFF , 0x0000, 1);
 10147  000938  0E8C               	movlw	140
 10148  00093A  6E39               	movwf	drawtext@y,c
 10149  00093C  C04E  F03A         	movff	_txt,drawtext@_text
 10150  000940  C04F  F03B         	movff	_txt+1,drawtext@_text+1
 10151  000944  0EFF               	movlw	255
 10152  000946  6E3D               	movwf	drawtext@color+1,c
 10153  000948  683C               	setf	drawtext@color,c
 10154  00094A  0E00               	movlw	0
 10155  00094C  6E3F               	movwf	drawtext@bg+1,c
 10156  00094E  0E00               	movlw	0
 10157  000950  6E3E               	movwf	drawtext@bg,c
 10158  000952  0E01               	movlw	1
 10159  000954  6E40               	movwf	drawtext@size,c
 10160  000956  0E0C               	movlw	12
 10161  000958  ECFC  F00C         	call	_drawtext
 10162                           
 10163                           ;Main_Screen.c: 67: strcpy(txt, "RM");
 10164  00095C  C04E  F011         	movff	_txt,strcpy@to
 10165  000960  C04F  F012         	movff	_txt+1,strcpy@to+1
 10166  000964  0EFB               	movlw	low STR_16
 10167  000966  6E13               	movwf	strcpy@from,c
 10168  000968  0EFF               	movlw	high STR_16
 10169  00096A  6E14               	movwf	strcpy@from+1,c
 10170  00096C  EC3C  F01C         	call	_strcpy	;wreg free
 10171                           
 10172                           ;Main_Screen.c: 68: drawtext(33, 140, txt, 0xFFFF , 0x0000 , 1);
 10173  000970  0E8C               	movlw	140
 10174  000972  6E39               	movwf	drawtext@y,c
 10175  000974  C04E  F03A         	movff	_txt,drawtext@_text
 10176  000978  C04F  F03B         	movff	_txt+1,drawtext@_text+1
 10177  00097C  0EFF               	movlw	255
 10178  00097E  6E3D               	movwf	drawtext@color+1,c
 10179  000980  683C               	setf	drawtext@color,c
 10180  000982  0E00               	movlw	0
 10181  000984  6E3F               	movwf	drawtext@bg+1,c
 10182  000986  0E00               	movlw	0
 10183  000988  6E3E               	movwf	drawtext@bg,c
 10184  00098A  0E01               	movlw	1
 10185  00098C  6E40               	movwf	drawtext@size,c
 10186  00098E  0E21               	movlw	33
 10187  000990  ECFC  F00C         	call	_drawtext
 10188                           
 10189                           ;Main_Screen.c: 69: strcpy(txt, "Volt");
 10190  000994  C04E  F011         	movff	_txt,strcpy@to
 10191  000998  C04F  F012         	movff	_txt+1,strcpy@to+1
 10192  00099C  0EE4               	movlw	low STR_17
 10193  00099E  6E13               	movwf	strcpy@from,c
 10194  0009A0  0EFF               	movlw	high STR_17
 10195  0009A2  6E14               	movwf	strcpy@from+1,c
 10196  0009A4  EC3C  F01C         	call	_strcpy	;wreg free
 10197                           
 10198                           ;Main_Screen.c: 70: drawtext(50, 140, txt, 0xFFFF , 0x0000 , 1);
 10199  0009A8  0E8C               	movlw	140
 10200  0009AA  6E39               	movwf	drawtext@y,c
 10201  0009AC  C04E  F03A         	movff	_txt,drawtext@_text
 10202  0009B0  C04F  F03B         	movff	_txt+1,drawtext@_text+1
 10203  0009B4  0EFF               	movlw	255
 10204  0009B6  6E3D               	movwf	drawtext@color+1,c
 10205  0009B8  683C               	setf	drawtext@color,c
 10206  0009BA  0E00               	movlw	0
 10207  0009BC  6E3F               	movwf	drawtext@bg+1,c
 10208  0009BE  0E00               	movlw	0
 10209  0009C0  6E3E               	movwf	drawtext@bg,c
 10210  0009C2  0E01               	movlw	1
 10211  0009C4  6E40               	movwf	drawtext@size,c
 10212  0009C6  0E32               	movlw	50
 10213  0009C8  ECFC  F00C         	call	_drawtext
 10214                           
 10215                           ;Main_Screen.c: 71: strcpy(txt, "RPM");
 10216  0009CC  C04E  F011         	movff	_txt,strcpy@to
 10217  0009D0  C04F  F012         	movff	_txt+1,strcpy@to+1
 10218  0009D4  0EF1               	movlw	low STR_18
 10219  0009D6  6E13               	movwf	strcpy@from,c
 10220  0009D8  0EFF               	movlw	high STR_18
 10221  0009DA  6E14               	movwf	strcpy@from+1,c
 10222  0009DC  EC3C  F01C         	call	_strcpy	;wreg free
 10223                           
 10224                           ;Main_Screen.c: 72: drawtext(95, 140, txt, 0xFFFF , 0x0000 , 1);
 10225  0009E0  0E8C               	movlw	140
 10226  0009E2  6E39               	movwf	drawtext@y,c
 10227  0009E4  C04E  F03A         	movff	_txt,drawtext@_text
 10228  0009E8  C04F  F03B         	movff	_txt+1,drawtext@_text+1
 10229  0009EC  0EFF               	movlw	255
 10230  0009EE  6E3D               	movwf	drawtext@color+1,c
 10231  0009F0  683C               	setf	drawtext@color,c
 10232  0009F2  0E00               	movlw	0
 10233  0009F4  6E3F               	movwf	drawtext@bg+1,c
 10234  0009F6  0E00               	movlw	0
 10235  0009F8  6E3E               	movwf	drawtext@bg,c
 10236  0009FA  0E01               	movlw	1
 10237  0009FC  6E40               	movwf	drawtext@size,c
 10238  0009FE  0E5F               	movlw	95
 10239  000A00  ECFC  F00C         	call	_drawtext
 10240  000A04  0012               	return		;funcret
 10241  000A06                     __end_of_Initialize_Screen:
 10242                           	opt stack 0
 10243                           tblptru	equ	0xFF8
 10244                           tblptrh	equ	0xFF7
 10245                           tblptrl	equ	0xFF6
 10246                           tablat	equ	0xFF5
 10247                           prodh	equ	0xFF4
 10248                           prodl	equ	0xFF3
 10249                           intcon	equ	0xFF2
 10250                           intcon2	equ	0xFF1
 10251                           postinc0	equ	0xFEE
 10252                           wreg	equ	0xFE8
 10253                           postdec1	equ	0xFE5
 10254                           plusw1	equ	0xFE3
 10255                           fsr1l	equ	0xFE1
 10256                           indf2	equ	0xFDF
 10257                           postinc2	equ	0xFDE
 10258                           plusw2	equ	0xFDB
 10259                           fsr2h	equ	0xFDA
 10260                           fsr2l	equ	0xFD9
 10261                           status	equ	0xFD8
 10262                           
 10263 ;; *************** function _strcpy *****************
 10264 ;; Defined at:
 10265 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;  to              2   16[COMRAM] PTR unsigned char 
 10268 ;;		 -> NULL(0), Heater_SW_Txt(4), Alarm_SW_Txt(4), 
 10269 ;;  from            2   18[COMRAM] PTR const unsigned char 
 10270 ;;		 -> STR_35(5), STR_34(5), STR_33(12), STR_32(19), 
 10271 ;;		 -> STR_31(16), STR_30(10), STR_29(11), STR_28(19), 
 10272 ;;		 -> STR_26(5), STR_25(8), STR_24(8), STR_23(18), 
 10273 ;;		 -> STR_22(4), STR_21(4), STR_20(4), STR_19(4), 
 10274 ;;		 -> STR_18(4), STR_17(5), STR_16(3), STR_15(3), 
 10275 ;;		 -> STR_14(7), STR_13(13), STR_12(9), STR_11(11), 
 10276 ;;		 -> STR_10(5), STR_9(5), STR_8(2), STR_7(3), 
 10277 ;;		 -> STR_6(13), STR_5(20), 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  cp              2   20[COMRAM] PTR unsigned char 
 10280 ;;		 -> NULL(0), Heater_SW_Txt(4), Alarm_SW_Txt(4), 
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  2   16[COMRAM] PTR unsigned char 
 10283 ;; Registers used:
 10284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10293 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10294 ;;Total ram usage:        6 bytes
 10295 ;; Hardware stack levels used:    1
 10296 ;; Hardware stack levels required when called:    3
 10297 ;; This function calls:
 10298 ;;		Nothing
 10299 ;; This function is called by:
 10300 ;;		_Initialize_Screen
 10301 ;;		_Update_Screen
 10302 ;;		_Initialize_Setup_Alarm_Time_Screen
 10303 ;;		_Initialize_Setup_Heater_Screen
 10304 ;;		_Initialize_Setup_Time_Screen
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308                           	psect	text48
 10309  003878                     __ptext48:
 10310                           	opt stack 0
 10311  003878                     _strcpy:
 10312                           	opt stack 26
 10313                           
 10314                           ;incstack = 0
 10315  003878  C011  F015         	movff	strcpy@to,strcpy@cp
 10316  00387C  C012  F016         	movff	strcpy@to+1,strcpy@cp+1
 10317  003880  D005               	goto	l8570
 10318  003882                     l8568:
 10319  003882  4A15               	infsnz	strcpy@cp,f,c
 10320  003884  2A16               	incf	strcpy@cp+1,f,c
 10321  003886  4A13               	infsnz	strcpy@from,f,c
 10322  003888  2A14               	incf	strcpy@from+1,f,c
 10323  00388A  D000               	goto	l8570
 10324  00388C                     l8570:
 10325  00388C  C013  FFF6         	movff	strcpy@from,tblptrl
 10326  003890  C014  FFF7         	movff	strcpy@from+1,tblptrh
 10327  003894                     	if	0	;tblptru may be non-zero
 10328  003894                     	endif
 10329  003894                     	if	0	;tblptru may be non-zero
 10330  003894                     	endif
 10331  003894  C015  FFD9         	movff	strcpy@cp,fsr2l
 10332  003898  C016  FFDA         	movff	strcpy@cp+1,fsr2h
 10333  00389C  0008               	tblrd		*
 10334  00389E  CFF5 FFDF          	movff	tablat,indf2
 10335  0038A2  50DF               	movf	indf2,w,c
 10336  0038A4  A4D8               	btfss	status,2,c
 10337  0038A6  D7ED               	goto	l8568
 10338                           
 10339                           ;	Return value of _strcpy is never used
 10340  0038A8  0012               	return		;funcret
 10341  0038AA                     __end_of_strcpy:
 10342                           	opt stack 0
 10343                           tblptru	equ	0xFF8
 10344                           tblptrh	equ	0xFF7
 10345                           tblptrl	equ	0xFF6
 10346                           tablat	equ	0xFF5
 10347                           prodh	equ	0xFF4
 10348                           prodl	equ	0xFF3
 10349                           intcon	equ	0xFF2
 10350                           intcon2	equ	0xFF1
 10351                           postinc0	equ	0xFEE
 10352                           wreg	equ	0xFE8
 10353                           postdec1	equ	0xFE5
 10354                           plusw1	equ	0xFE3
 10355                           fsr1l	equ	0xFE1
 10356                           indf2	equ	0xFDF
 10357                           postinc2	equ	0xFDE
 10358                           plusw2	equ	0xFDB
 10359                           fsr2h	equ	0xFDA
 10360                           fsr2l	equ	0xFD9
 10361                           status	equ	0xFD8
 10362                           
 10363 ;; *************** function _fillScreen *****************
 10364 ;; Defined at:
 10365 ;;		line 619 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 10366 ;; Parameters:    Size  Location     Type
 10367 ;;  color           2   35[COMRAM] unsigned int 
 10368 ;; Auto vars:     Size  Location     Type
 10369 ;;		None
 10370 ;; Return value:  Size  Location     Type
 10371 ;;		None               void
 10372 ;; Registers used:
 10373 ;;		wreg, status,2, status,0, cstack
 10374 ;; Tracked objects:
 10375 ;;		On entry : 0/0
 10376 ;;		On exit  : 0/0
 10377 ;;		Unchanged: 0/0
 10378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10383 ;;Total ram usage:        2 bytes
 10384 ;; Hardware stack levels used:    1
 10385 ;; Hardware stack levels required when called:    7
 10386 ;; This function calls:
 10387 ;;		_fillRectangle
 10388 ;; This function is called by:
 10389 ;;		_Initialize_Screen
 10390 ;;		_Initialize_Setup_Alarm_Time_Screen
 10391 ;;		_Initialize_Setup_Heater_Screen
 10392 ;;		_Initialize_Setup_Time_Screen
 10393 ;; This function uses a non-reentrant model
 10394 ;;
 10395                           
 10396                           	psect	text49
 10397  003A9A                     __ptext49:
 10398                           	opt stack 0
 10399  003A9A                     _fillScreen:
 10400                           	opt stack 22
 10401                           
 10402                           ;ST7735_TFT.c: 621: fillRectangle(0, 0, 128, 160, color);
 10403                           
 10404                           ;incstack = 0
 10405  003A9A  0E00               	movlw	0
 10406  003A9C  6E18               	movwf	fillRectangle@y,c
 10407  003A9E  0E80               	movlw	128
 10408  003AA0  6E19               	movwf	fillRectangle@w,c
 10409  003AA2  0EA0               	movlw	160
 10410  003AA4  6E1A               	movwf	fillRectangle@h,c
 10411  003AA6  C024  F01B         	movff	fillScreen@color,fillRectangle@color
 10412  003AAA  C025  F01C         	movff	fillScreen@color+1,fillRectangle@color+1
 10413  003AAE  0E00               	movlw	0
 10414  003AB0  ECDE  F011         	call	_fillRectangle
 10415  003AB4  0012               	return		;funcret
 10416  003AB6                     __end_of_fillScreen:
 10417                           	opt stack 0
 10418                           tblptru	equ	0xFF8
 10419                           tblptrh	equ	0xFF7
 10420                           tblptrl	equ	0xFF6
 10421                           tablat	equ	0xFF5
 10422                           prodh	equ	0xFF4
 10423                           prodl	equ	0xFF3
 10424                           intcon	equ	0xFF2
 10425                           intcon2	equ	0xFF1
 10426                           postinc0	equ	0xFEE
 10427                           wreg	equ	0xFE8
 10428                           postdec1	equ	0xFE5
 10429                           plusw1	equ	0xFE3
 10430                           fsr1l	equ	0xFE1
 10431                           indf2	equ	0xFDF
 10432                           postinc2	equ	0xFDE
 10433                           plusw2	equ	0xFDB
 10434                           fsr2h	equ	0xFDA
 10435                           fsr2l	equ	0xFD9
 10436                           status	equ	0xFD8
 10437                           
 10438 ;; *************** function _fillRectangle *****************
 10439 ;; Defined at:
 10440 ;;		line 503 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 10441 ;; Parameters:    Size  Location     Type
 10442 ;;  x               1    wreg     unsigned char 
 10443 ;;  y               1   23[COMRAM] unsigned char 
 10444 ;;  w               1   24[COMRAM] unsigned char 
 10445 ;;  h               1   25[COMRAM] unsigned char 
 10446 ;;  color           2   26[COMRAM] unsigned int 
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;  x               1   34[COMRAM] unsigned char 
 10449 ;;  lo              1   33[COMRAM] unsigned char 
 10450 ;;  hi              1   32[COMRAM] unsigned char 
 10451 ;; Return value:  Size  Location     Type
 10452 ;;		None               void
 10453 ;; Registers used:
 10454 ;;		wreg, status,2, status,0, cstack
 10455 ;; Tracked objects:
 10456 ;;		On entry : 0/0
 10457 ;;		On exit  : 0/0
 10458 ;;		Unchanged: 0/0
 10459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10460 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10461 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10462 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10463 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10464 ;;Total ram usage:       12 bytes
 10465 ;; Hardware stack levels used:    1
 10466 ;; Hardware stack levels required when called:    6
 10467 ;; This function calls:
 10468 ;;		_setAddrWindow
 10469 ;;		_spiwrite
 10470 ;; This function is called by:
 10471 ;;		_fillScreen
 10472 ;; This function uses a non-reentrant model
 10473 ;;
 10474                           
 10475                           	psect	text50
 10476  0023BC                     __ptext50:
 10477                           	opt stack 0
 10478  0023BC                     _fillRectangle:
 10479                           	opt stack 22
 10480                           
 10481                           ;incstack = 0
 10482                           ;fillRectangle@x stored from wreg
 10483  0023BC  6E23               	movwf	fillRectangle@x,c
 10484                           
 10485                           ;ST7735_TFT.c: 505: unsigned char hi, lo;
 10486                           ;ST7735_TFT.c: 506: if((x >= 128) || (y >= 160))
 10487  0023BE  0E80               	movlw	128
 10488  0023C0  6023               	cpfslt	fillRectangle@x,c
 10489  0023C2  D069               	goto	l885
 10490  0023C4  0E9F               	movlw	159
 10491  0023C6  6418               	cpfsgt	fillRectangle@y,c
 10492  0023C8  D001               	goto	l8152
 10493                           
 10494                           ;ST7735_TFT.c: 507: return;
 10495  0023CA  D065               	goto	l885
 10496  0023CC                     l8152:
 10497                           
 10498                           ;ST7735_TFT.c: 508: if((x + w - 1) >= 128)
 10499  0023CC  0EFF               	movlw	255
 10500  0023CE  6E1D               	movwf	??_fillRectangle& (0+255),c
 10501  0023D0  0EFF               	movlw	255
 10502  0023D2  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
 10503  0023D4  5019               	movf	fillRectangle@w,w,c
 10504  0023D6  C023  F01F         	movff	fillRectangle@x,??_fillRectangle+2
 10505  0023DA  6A20               	clrf	(??_fillRectangle+3)& (0+255),c
 10506  0023DC  261F               	addwf	??_fillRectangle+2,f,c
 10507  0023DE  0E00               	movlw	0
 10508  0023E0  2220               	addwfc	??_fillRectangle+3,f,c
 10509  0023E2  501D               	movf	??_fillRectangle,w,c
 10510  0023E4  261F               	addwf	??_fillRectangle+2,f,c
 10511  0023E6  501E               	movf	??_fillRectangle+1,w,c
 10512  0023E8  2220               	addwfc	??_fillRectangle+3,f,c
 10513  0023EA  BE20               	btfsc	??_fillRectangle+3,7,c
 10514  0023EC  D00A               	goto	l886
 10515  0023EE  5020               	movf	??_fillRectangle+3,w,c
 10516  0023F0  E104               	bnz	u5730
 10517  0023F2  0E80               	movlw	128
 10518  0023F4  5C1F               	subwf	??_fillRectangle+2,w,c
 10519  0023F6  A0D8               	btfss	status,0,c
 10520  0023F8  D004               	goto	l886
 10521  0023FA                     u5730:
 10522                           
 10523                           ;ST7735_TFT.c: 509: w = 128 - x;
 10524  0023FA  5023               	movf	fillRectangle@x,w,c
 10525  0023FC  0800               	sublw	0
 10526  0023FE  0F80               	addlw	128
 10527  002400  6E19               	movwf	fillRectangle@w,c
 10528  002402                     l886:
 10529                           
 10530                           ;ST7735_TFT.c: 510: if((y + h - 1) >= 160)
 10531  002402  0EFF               	movlw	255
 10532  002404  6E1D               	movwf	??_fillRectangle& (0+255),c
 10533  002406  0EFF               	movlw	255
 10534  002408  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
 10535  00240A  501A               	movf	fillRectangle@h,w,c
 10536  00240C  C018  F01F         	movff	fillRectangle@y,??_fillRectangle+2
 10537  002410  6A20               	clrf	(??_fillRectangle+3)& (0+255),c
 10538  002412  261F               	addwf	??_fillRectangle+2,f,c
 10539  002414  0E00               	movlw	0
 10540  002416  2220               	addwfc	??_fillRectangle+3,f,c
 10541  002418  501D               	movf	??_fillRectangle,w,c
 10542  00241A  261F               	addwf	??_fillRectangle+2,f,c
 10543  00241C  501E               	movf	??_fillRectangle+1,w,c
 10544  00241E  2220               	addwfc	??_fillRectangle+3,f,c
 10545  002420  BE20               	btfsc	??_fillRectangle+3,7,c
 10546  002422  D00B               	goto	l8158
 10547  002424  5020               	movf	??_fillRectangle+3,w,c
 10548  002426  E104               	bnz	u5740
 10549  002428  0EA0               	movlw	160
 10550  00242A  5C1F               	subwf	??_fillRectangle+2,w,c
 10551  00242C  A0D8               	btfss	status,0,c
 10552  00242E  D005               	goto	l8158
 10553  002430                     u5740:
 10554                           
 10555                           ;ST7735_TFT.c: 511: h = 160 - y;
 10556  002430  5018               	movf	fillRectangle@y,w,c
 10557  002432  0800               	sublw	0
 10558  002434  0FA0               	addlw	160
 10559  002436  6E1A               	movwf	fillRectangle@h,c
 10560  002438  D000               	goto	l8158
 10561  00243A                     l8158:
 10562                           
 10563                           ;ST7735_TFT.c: 512: setAddrWindow(x, y, x+w-1, y+h-1);
 10564  00243A  C018  F014         	movff	fillRectangle@y,setAddrWindow@y0
 10565  00243E  5023               	movf	fillRectangle@x,w,c
 10566  002440  2419               	addwf	fillRectangle@w,w,c
 10567  002442  6E1D               	movwf	??_fillRectangle& (0+255),c
 10568  002444  041D               	decf	??_fillRectangle,w,c
 10569  002446  6E15               	movwf	setAddrWindow@x1,c
 10570  002448  5018               	movf	fillRectangle@y,w,c
 10571  00244A  241A               	addwf	fillRectangle@h,w,c
 10572  00244C  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
 10573  00244E  041E               	decf	??_fillRectangle+1,w,c
 10574  002450  6E16               	movwf	setAddrWindow@y1,c
 10575  002452  5023               	movf	fillRectangle@x,w,c
 10576  002454  ECCB  F01A         	call	_setAddrWindow
 10577                           
 10578                           ;ST7735_TFT.c: 513: hi = color >> 8; lo = color;
 10579  002458  501C               	movf	fillRectangle@color+1,w,c
 10580  00245A  6E21               	movwf	fillRectangle@hi,c
 10581  00245C  C01B  F022         	movff	fillRectangle@color,fillRectangle@lo
 10582                           
 10583                           ;ST7735_TFT.c: 514: PORTDbits.RD0 = 1;
 10584  002460  8083               	bsf	3971,0,c	;volatile
 10585                           
 10586                           ;ST7735_TFT.c: 515: PORTDbits.RD1 = 0;
 10587  002462  9283               	bcf	3971,1,c	;volatile
 10588                           
 10589                           ;ST7735_TFT.c: 517: for(y=h; y>0; y--) {
 10590  002464  C01A  F018         	movff	fillRectangle@h,fillRectangle@y
 10591  002468                     l8170:
 10592  002468  5018               	movf	fillRectangle@y,w,c
 10593  00246A  B4D8               	btfsc	status,2,c
 10594  00246C  D013               	goto	l889
 10595  00246E  D001               	goto	l888
 10596  002470  D011               	goto	l889
 10597  002472                     l888:
 10598                           
 10599                           ;ST7735_TFT.c: 518: for(x = w; x > 0; x--) {
 10600  002472  C019  F023         	movff	fillRectangle@w,fillRectangle@x
 10601  002476                     l8174:
 10602  002476  5023               	movf	fillRectangle@x,w,c
 10603  002478  B4D8               	btfsc	status,2,c
 10604  00247A  D00A               	goto	l8184
 10605  00247C  D001               	goto	l8178
 10606  00247E  D008               	goto	l8184
 10607  002480                     l8178:
 10608                           
 10609                           ;ST7735_TFT.c: 519: spiwrite(hi);
 10610  002480  5021               	movf	fillRectangle@hi,w,c
 10611  002482  ECFD  F01D         	call	_spiwrite
 10612                           
 10613                           ;ST7735_TFT.c: 520: spiwrite(lo);
 10614  002486  5022               	movf	fillRectangle@lo,w,c
 10615  002488  ECFD  F01D         	call	_spiwrite
 10616  00248C  0623               	decf	fillRectangle@x,f,c
 10617  00248E  D7F3               	goto	l8174
 10618  002490                     l8184:
 10619  002490  0618               	decf	fillRectangle@y,f,c
 10620  002492  D7EA               	goto	l8170
 10621  002494                     l889:
 10622                           
 10623                           ;ST7735_TFT.c: 521: }
 10624                           ;ST7735_TFT.c: 522: }
 10625                           ;ST7735_TFT.c: 523: PORTDbits.RD1 = 1;
 10626  002494  8283               	bsf	3971,1,c	;volatile
 10627  002496                     l885:
 10628  002496  0012               	return		;funcret
 10629  002498                     __end_of_fillRectangle:
 10630                           	opt stack 0
 10631                           tblptru	equ	0xFF8
 10632                           tblptrh	equ	0xFF7
 10633                           tblptrl	equ	0xFF6
 10634                           tablat	equ	0xFF5
 10635                           prodh	equ	0xFF4
 10636                           prodl	equ	0xFF3
 10637                           intcon	equ	0xFF2
 10638                           intcon2	equ	0xFF1
 10639                           postinc0	equ	0xFEE
 10640                           wreg	equ	0xFE8
 10641                           postdec1	equ	0xFE5
 10642                           plusw1	equ	0xFE3
 10643                           fsr1l	equ	0xFE1
 10644                           indf2	equ	0xFDF
 10645                           postinc2	equ	0xFDE
 10646                           plusw2	equ	0xFDB
 10647                           fsr2h	equ	0xFDA
 10648                           fsr2l	equ	0xFD9
 10649                           status	equ	0xFD8
 10650                           
 10651 ;; *************** function _drawCircle *****************
 10652 ;; Defined at:
 10653 ;;		line 528 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;  x0              2   27[COMRAM] int 
 10656 ;;  y0              2   29[COMRAM] int 
 10657 ;;  r               2   31[COMRAM] int 
 10658 ;;  color           2   33[COMRAM] unsigned int 
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;  y               2   45[COMRAM] int 
 10661 ;;  x               2   43[COMRAM] int 
 10662 ;;  f               2   41[COMRAM] int 
 10663 ;;  ddF_y           2   39[COMRAM] int 
 10664 ;;  ddF_x           2   37[COMRAM] int 
 10665 ;; Return value:  Size  Location     Type
 10666 ;;		None               void
 10667 ;; Registers used:
 10668 ;;		wreg, status,2, status,0, cstack
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10674 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10675 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10677 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10678 ;;Total ram usage:       20 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; Hardware stack levels required when called:    7
 10681 ;; This function calls:
 10682 ;;		_drawPixel
 10683 ;; This function is called by:
 10684 ;;		_Initialize_Screen
 10685 ;; This function uses a non-reentrant model
 10686 ;;
 10687                           
 10688                           	psect	text51
 10689  0012C8                     __ptext51:
 10690                           	opt stack 0
 10691  0012C8                     _drawCircle:
 10692                           	opt stack 22
 10693                           
 10694                           ;ST7735_TFT.c: 530: signed int f, ddF_x, ddF_y, x, y;
 10695                           ;ST7735_TFT.c: 531: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
 10696                           
 10697                           ;incstack = 0
 10698  0012C8  C020  F024         	movff	drawCircle@r,??_drawCircle
 10699  0012CC  C021  F025         	movff	drawCircle@r+1,??_drawCircle+1
 10700  0012D0  1E24               	comf	??_drawCircle,f,c
 10701  0012D2  1E25               	comf	??_drawCircle+1,f,c
 10702  0012D4  4A24               	infsnz	??_drawCircle,f,c
 10703  0012D6  2A25               	incf	??_drawCircle+1,f,c
 10704  0012D8  0E01               	movlw	1
 10705  0012DA  2424               	addwf	??_drawCircle,w,c
 10706  0012DC  6E2A               	movwf	drawCircle@f,c
 10707  0012DE  0E00               	movlw	0
 10708  0012E0  2025               	addwfc	??_drawCircle+1,w,c
 10709  0012E2  6E2B               	movwf	drawCircle@f+1,c
 10710  0012E4  0E00               	movlw	0
 10711  0012E6  6E27               	movwf	drawCircle@ddF_x+1,c
 10712  0012E8  0E01               	movlw	1
 10713  0012EA  6E26               	movwf	drawCircle@ddF_x,c
 10714  0012EC  C020  F024         	movff	drawCircle@r,??_drawCircle
 10715  0012F0  C021  F025         	movff	drawCircle@r+1,??_drawCircle+1
 10716  0012F4  90D8               	bcf	status,0,c
 10717  0012F6  3624               	rlcf	??_drawCircle,f,c
 10718  0012F8  3625               	rlcf	??_drawCircle+1,f,c
 10719  0012FA  1E24               	comf	??_drawCircle,f,c
 10720  0012FC  1E25               	comf	??_drawCircle+1,f,c
 10721  0012FE  4A24               	infsnz	??_drawCircle,f,c
 10722  001300  2A25               	incf	??_drawCircle+1,f,c
 10723  001302  C024  F028         	movff	??_drawCircle,drawCircle@ddF_y
 10724  001306  C025  F029         	movff	??_drawCircle+1,drawCircle@ddF_y+1
 10725  00130A  0E00               	movlw	0
 10726  00130C  6E2D               	movwf	drawCircle@x+1,c
 10727  00130E  0E00               	movlw	0
 10728  001310  6E2C               	movwf	drawCircle@x,c
 10729  001312  C020  F02E         	movff	drawCircle@r,drawCircle@y
 10730  001316  C021  F02F         	movff	drawCircle@r+1,drawCircle@y+1
 10731                           
 10732                           ;ST7735_TFT.c: 532: drawPixel(x0 , y0 + r, color);
 10733  00131A  501E               	movf	drawCircle@y0,w,c
 10734  00131C  2420               	addwf	drawCircle@r,w,c
 10735  00131E  6E18               	movwf	drawPixel@y,c
 10736  001320  C022  F019         	movff	drawCircle@color,drawPixel@color
 10737  001324  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
 10738  001328  501C               	movf	drawCircle@x0,w,c
 10739  00132A  EC55  F01C         	call	_drawPixel
 10740                           
 10741                           ;ST7735_TFT.c: 533: drawPixel(x0 , y0 - r, color);
 10742  00132E  5020               	movf	drawCircle@r,w,c
 10743  001330  0800               	sublw	0
 10744  001332  241E               	addwf	drawCircle@y0,w,c
 10745  001334  6E18               	movwf	drawPixel@y,c
 10746  001336  C022  F019         	movff	drawCircle@color,drawPixel@color
 10747  00133A  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
 10748  00133E  501C               	movf	drawCircle@x0,w,c
 10749  001340  EC55  F01C         	call	_drawPixel
 10750                           
 10751                           ;ST7735_TFT.c: 534: drawPixel(x0+r, y0 , color);
 10752  001344  C01E  F018         	movff	drawCircle@y0,drawPixel@y
 10753  001348  C022  F019         	movff	drawCircle@color,drawPixel@color
 10754  00134C  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
 10755  001350  501C               	movf	drawCircle@x0,w,c
 10756  001352  2420               	addwf	drawCircle@r,w,c
 10757  001354  EC55  F01C         	call	_drawPixel
 10758                           
 10759                           ;ST7735_TFT.c: 535: drawPixel(x0-r, y0 , color);
 10760  001358  C01E  F018         	movff	drawCircle@y0,drawPixel@y
 10761  00135C  C022  F019         	movff	drawCircle@color,drawPixel@color
 10762  001360  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
 10763  001364  5020               	movf	drawCircle@r,w,c
 10764  001366  0800               	sublw	0
 10765  001368  241C               	addwf	drawCircle@x0,w,c
 10766  00136A  EC55  F01C         	call	_drawPixel
 10767                           
 10768                           ;ST7735_TFT.c: 536: while (x < y) {
 10769  00136E  D078               	goto	l8654
 10770  001370                     l8626:
 10771                           
 10772                           ;ST7735_TFT.c: 537: if (f >= 0) {
 10773  001370  BE2B               	btfsc	drawCircle@f+1,7,c
 10774  001372  D00B               	goto	l896
 10775                           
 10776                           ;ST7735_TFT.c: 538: y--;
 10777  001374  062E               	decf	drawCircle@y,f,c
 10778  001376  A0D8               	btfss	status,0,c
 10779  001378  062F               	decf	drawCircle@y+1,f,c
 10780                           
 10781                           ;ST7735_TFT.c: 539: ddF_y += 2;
 10782  00137A  0E02               	movlw	2
 10783  00137C  2628               	addwf	drawCircle@ddF_y,f,c
 10784  00137E  0E00               	movlw	0
 10785  001380  2229               	addwfc	drawCircle@ddF_y+1,f,c
 10786                           
 10787                           ;ST7735_TFT.c: 540: f += ddF_y;
 10788  001382  5028               	movf	drawCircle@ddF_y,w,c
 10789  001384  262A               	addwf	drawCircle@f,f,c
 10790  001386  5029               	movf	drawCircle@ddF_y+1,w,c
 10791  001388  222B               	addwfc	drawCircle@f+1,f,c
 10792  00138A                     l896:
 10793                           
 10794                           ;ST7735_TFT.c: 541: }
 10795                           ;ST7735_TFT.c: 542: x++;
 10796  00138A  4A2C               	infsnz	drawCircle@x,f,c
 10797  00138C  2A2D               	incf	drawCircle@x+1,f,c
 10798                           
 10799                           ;ST7735_TFT.c: 543: ddF_x += 2;
 10800  00138E  0E02               	movlw	2
 10801  001390  2626               	addwf	drawCircle@ddF_x,f,c
 10802  001392  0E00               	movlw	0
 10803  001394  2227               	addwfc	drawCircle@ddF_x+1,f,c
 10804                           
 10805                           ;ST7735_TFT.c: 544: f += ddF_x;
 10806  001396  5026               	movf	drawCircle@ddF_x,w,c
 10807  001398  262A               	addwf	drawCircle@f,f,c
 10808  00139A  5027               	movf	drawCircle@ddF_x+1,w,c
 10809  00139C  222B               	addwfc	drawCircle@f+1,f,c
 10810                           
 10811                           ;ST7735_TFT.c: 545: drawPixel(x0 + x, y0 + y, color);
 10812  00139E  501E               	movf	drawCircle@y0,w,c
 10813  0013A0  242E               	addwf	drawCircle@y,w,c
 10814  0013A2  6E18               	movwf	drawPixel@y,c
 10815  0013A4  C022  F019         	movff	drawCircle@color,drawPixel@color
 10816  0013A8  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
 10817  0013AC  501C               	movf	drawCircle@x0,w,c
 10818  0013AE  242C               	addwf	drawCircle@x,w,c
 10819  0013B0  EC55  F01C         	call	_drawPixel
 10820                           
 10821                           ;ST7735_TFT.c: 546: drawPixel(x0 - x, y0 + y, color);
 10822  0013B4  501E               	movf	drawCircle@y0,w,c
 10823  0013B6  242E               	addwf	drawCircle@y,w,c
 10824  0013B8  6E18               	movwf	drawPixel@y,c
 10825  0013BA  C022  F019         	movff	drawCircle@color,drawPixel@color
 10826  0013BE  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
 10827  0013C2  502C               	movf	drawCircle@x,w,c
 10828  0013C4  0800               	sublw	0
 10829  0013C6  241C               	addwf	drawCircle@x0,w,c
 10830  0013C8  EC55  F01C         	call	_drawPixel
 10831                           
 10832                           ;ST7735_TFT.c: 547: drawPixel(x0 + x, y0 - y, color);
 10833  0013CC  502E               	movf	drawCircle@y,w,c
 10834  0013CE  0800               	sublw	0
 10835  0013D0  241E               	addwf	drawCircle@y0,w,c
 10836  0013D2  6E18               	movwf	drawPixel@y,c
 10837  0013D4  C022  F019         	movff	drawCircle@color,drawPixel@color
 10838  0013D8  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
 10839  0013DC  501C               	movf	drawCircle@x0,w,c
 10840  0013DE  242C               	addwf	drawCircle@x,w,c
 10841  0013E0  EC55  F01C         	call	_drawPixel
 10842                           
 10843                           ;ST7735_TFT.c: 548: drawPixel(x0 - x, y0 - y, color);
 10844  0013E4  502E               	movf	drawCircle@y,w,c
 10845  0013E6  0800               	sublw	0
 10846  0013E8  241E               	addwf	drawCircle@y0,w,c
 10847  0013EA  6E18               	movwf	drawPixel@y,c
 10848  0013EC  C022  F019         	movff	drawCircle@color,drawPixel@color
 10849  0013F0  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
 10850  0013F4  502C               	movf	drawCircle@x,w,c
 10851  0013F6  0800               	sublw	0
 10852  0013F8  241C               	addwf	drawCircle@x0,w,c
 10853  0013FA  EC55  F01C         	call	_drawPixel
 10854                           
 10855                           ;ST7735_TFT.c: 549: drawPixel(x0 + y, y0 + x, color);
 10856  0013FE  501E               	movf	drawCircle@y0,w,c
 10857  001400  242C               	addwf	drawCircle@x,w,c
 10858  001402  6E18               	movwf	drawPixel@y,c
 10859  001404  C022  F019         	movff	drawCircle@color,drawPixel@color
 10860  001408  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
 10861  00140C  501C               	movf	drawCircle@x0,w,c
 10862  00140E  242E               	addwf	drawCircle@y,w,c
 10863  001410  EC55  F01C         	call	_drawPixel
 10864                           
 10865                           ;ST7735_TFT.c: 550: drawPixel(x0 - y, y0 + x, color);
 10866  001414  501E               	movf	drawCircle@y0,w,c
 10867  001416  242C               	addwf	drawCircle@x,w,c
 10868  001418  6E18               	movwf	drawPixel@y,c
 10869  00141A  C022  F019         	movff	drawCircle@color,drawPixel@color
 10870  00141E  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
 10871  001422  502E               	movf	drawCircle@y,w,c
 10872  001424  0800               	sublw	0
 10873  001426  241C               	addwf	drawCircle@x0,w,c
 10874  001428  EC55  F01C         	call	_drawPixel
 10875                           
 10876                           ;ST7735_TFT.c: 551: drawPixel(x0 + y, y0 - x, color);
 10877  00142C  502C               	movf	drawCircle@x,w,c
 10878  00142E  0800               	sublw	0
 10879  001430  241E               	addwf	drawCircle@y0,w,c
 10880  001432  6E18               	movwf	drawPixel@y,c
 10881  001434  C022  F019         	movff	drawCircle@color,drawPixel@color
 10882  001438  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
 10883  00143C  501C               	movf	drawCircle@x0,w,c
 10884  00143E  242E               	addwf	drawCircle@y,w,c
 10885  001440  EC55  F01C         	call	_drawPixel
 10886                           
 10887                           ;ST7735_TFT.c: 552: drawPixel(x0 - y, y0 - x, color);
 10888  001444  502C               	movf	drawCircle@x,w,c
 10889  001446  0800               	sublw	0
 10890  001448  241E               	addwf	drawCircle@y0,w,c
 10891  00144A  6E18               	movwf	drawPixel@y,c
 10892  00144C  C022  F019         	movff	drawCircle@color,drawPixel@color
 10893  001450  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
 10894  001454  502E               	movf	drawCircle@y,w,c
 10895  001456  0800               	sublw	0
 10896  001458  241C               	addwf	drawCircle@x0,w,c
 10897  00145A  EC55  F01C         	call	_drawPixel
 10898  00145E  D000               	goto	l8654
 10899  001460                     l8654:
 10900  001460  502E               	movf	drawCircle@y,w,c
 10901  001462  5C2C               	subwf	drawCircle@x,w,c
 10902  001464  502D               	movf	drawCircle@x+1,w,c
 10903  001466  0A80               	xorlw	128
 10904  001468  6E24               	movwf	??_drawCircle& (0+255),c
 10905  00146A  502F               	movf	drawCircle@y+1,w,c
 10906  00146C  0A80               	xorlw	128
 10907  00146E  5824               	subwfb	??_drawCircle& (0+255),w,c
 10908  001470  A0D8               	btfss	status,0,c
 10909  001472  D77E               	goto	l8626
 10910  001474  0012               	return		;funcret
 10911  001476                     __end_of_drawCircle:
 10912                           	opt stack 0
 10913                           tblptru	equ	0xFF8
 10914                           tblptrh	equ	0xFF7
 10915                           tblptrl	equ	0xFF6
 10916                           tablat	equ	0xFF5
 10917                           prodh	equ	0xFF4
 10918                           prodl	equ	0xFF3
 10919                           intcon	equ	0xFF2
 10920                           intcon2	equ	0xFF1
 10921                           postinc0	equ	0xFEE
 10922                           wreg	equ	0xFE8
 10923                           postdec1	equ	0xFE5
 10924                           plusw1	equ	0xFE3
 10925                           fsr1l	equ	0xFE1
 10926                           indf2	equ	0xFDF
 10927                           postinc2	equ	0xFDE
 10928                           plusw2	equ	0xFDB
 10929                           fsr2h	equ	0xFDA
 10930                           fsr2l	equ	0xFD9
 10931                           status	equ	0xFD8
 10932                           
 10933 ;; *************** function _TFT_GreenTab_Initialize *****************
 10934 ;; Defined at:
 10935 ;;		line 644 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;		None
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;		None
 10940 ;; Return value:  Size  Location     Type
 10941 ;;		None               void
 10942 ;; Registers used:
 10943 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10953 ;;Total ram usage:        0 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:    6
 10956 ;; This function calls:
 10957 ;;		_Rcmd1
 10958 ;;		_Rcmd2red
 10959 ;;		_Rcmd3
 10960 ;;		_write_command
 10961 ;;		_write_data
 10962 ;; This function is called by:
 10963 ;;		_Initialize_Screen
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           
 10967                           	psect	text52
 10968  003932                     __ptext52:
 10969                           	opt stack 0
 10970  003932                     _TFT_GreenTab_Initialize:
 10971                           	opt stack 23
 10972                           
 10973                           ;ST7735_TFT.c: 646: PORTDbits.RD1 = 1;
 10974                           
 10975                           ;incstack = 0
 10976  003932  8283               	bsf	3971,1,c	;volatile
 10977                           
 10978                           ;ST7735_TFT.c: 647: PORTDbits.RD0 = 0;
 10979  003934  9083               	bcf	3971,0,c	;volatile
 10980                           
 10981                           ;ST7735_TFT.c: 649: SSPSTAT=0x80;
 10982  003936  0E80               	movlw	128
 10983  003938  6EC7               	movwf	4039,c	;volatile
 10984                           
 10985                           ;ST7735_TFT.c: 650: SSPCON1=0x30;
 10986  00393A  0E30               	movlw	48
 10987  00393C  6EC6               	movwf	4038,c	;volatile
 10988                           
 10989                           ;ST7735_TFT.c: 653: Rcmd1();
 10990  00393E  EC74  F00C         	call	_Rcmd1	;wreg free
 10991                           
 10992                           ;ST7735_TFT.c: 654: Rcmd2red();
 10993  003942  ECA8  F01B         	call	_Rcmd2red	;wreg free
 10994                           
 10995                           ;ST7735_TFT.c: 655: Rcmd3();
 10996  003946  EC08  F010         	call	_Rcmd3	;wreg free
 10997                           
 10998                           ;ST7735_TFT.c: 656: write_command(0x36);
 10999  00394A  0E36               	movlw	54
 11000  00394C  EC81  F01E         	call	_write_command
 11001                           
 11002                           ;ST7735_TFT.c: 657: write_data(0xC0);
 11003  003950  0EC0               	movlw	192
 11004  003952  EC79  F01E         	call	_write_data
 11005                           
 11006                           ;ST7735_TFT.c: 658: _tft_type = 1;
 11007  003956  0E01               	movlw	1
 11008  003958  6E54               	movwf	__tft_type,c
 11009  00395A  0012               	return		;funcret
 11010  00395C                     __end_of_TFT_GreenTab_Initialize:
 11011                           	opt stack 0
 11012                           tblptru	equ	0xFF8
 11013                           tblptrh	equ	0xFF7
 11014                           tblptrl	equ	0xFF6
 11015                           tablat	equ	0xFF5
 11016                           prodh	equ	0xFF4
 11017                           prodl	equ	0xFF3
 11018                           intcon	equ	0xFF2
 11019                           intcon2	equ	0xFF1
 11020                           postinc0	equ	0xFEE
 11021                           wreg	equ	0xFE8
 11022                           postdec1	equ	0xFE5
 11023                           plusw1	equ	0xFE3
 11024                           fsr1l	equ	0xFE1
 11025                           indf2	equ	0xFDF
 11026                           postinc2	equ	0xFDE
 11027                           plusw2	equ	0xFDB
 11028                           fsr2h	equ	0xFDA
 11029                           fsr2l	equ	0xFD9
 11030                           status	equ	0xFD8
 11031                           
 11032 ;; *************** function _Rcmd3 *****************
 11033 ;; Defined at:
 11034 ;;		line 338 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;		None
 11037 ;; Auto vars:     Size  Location     Type
 11038 ;;		None
 11039 ;; Return value:  Size  Location     Type
 11040 ;;		None               void
 11041 ;; Registers used:
 11042 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11043 ;; Tracked objects:
 11044 ;;		On entry : 0/0
 11045 ;;		On exit  : 0/0
 11046 ;;		Unchanged: 0/0
 11047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11052 ;;Total ram usage:        0 bytes
 11053 ;; Hardware stack levels used:    1
 11054 ;; Hardware stack levels required when called:    5
 11055 ;; This function calls:
 11056 ;;		_delay_ms
 11057 ;;		_write_command
 11058 ;;		_write_data
 11059 ;; This function is called by:
 11060 ;;		_TFT_GreenTab_Initialize
 11061 ;;		_TFT_BlackTab_Initialize
 11062 ;; This function uses a non-reentrant model
 11063 ;;
 11064                           
 11065                           	psect	text53
 11066  002010                     __ptext53:
 11067                           	opt stack 0
 11068  002010                     _Rcmd3:
 11069                           	opt stack 23
 11070                           
 11071                           ;ST7735_TFT.c: 340: write_command(0xE0);
 11072                           
 11073                           ;incstack = 0
 11074  002010  0EE0               	movlw	224
 11075  002012  EC81  F01E         	call	_write_command
 11076                           
 11077                           ;ST7735_TFT.c: 341: write_data(0x02); write_data(0x1C); write_data(0x07); write_data(0x1
      +                          2);
 11078  002016  0E02               	movlw	2
 11079  002018  EC79  F01E         	call	_write_data
 11080  00201C  0E1C               	movlw	28
 11081  00201E  EC79  F01E         	call	_write_data
 11082  002022  0E07               	movlw	7
 11083  002024  EC79  F01E         	call	_write_data
 11084  002028  0E12               	movlw	18
 11085  00202A  EC79  F01E         	call	_write_data
 11086                           
 11087                           ;ST7735_TFT.c: 342: write_data(0x37); write_data(0x32); write_data(0x29); write_data(0x2
      +                          D);
 11088  00202E  0E37               	movlw	55
 11089  002030  EC79  F01E         	call	_write_data
 11090  002034  0E32               	movlw	50
 11091  002036  EC79  F01E         	call	_write_data
 11092  00203A  0E29               	movlw	41
 11093  00203C  EC79  F01E         	call	_write_data
 11094  002040  0E2D               	movlw	45
 11095  002042  EC79  F01E         	call	_write_data
 11096                           
 11097                           ;ST7735_TFT.c: 343: write_data(0x29); write_data(0x25); write_data(0x2B); write_data(0x3
      +                          9);
 11098  002046  0E29               	movlw	41
 11099  002048  EC79  F01E         	call	_write_data
 11100  00204C  0E25               	movlw	37
 11101  00204E  EC79  F01E         	call	_write_data
 11102  002052  0E2B               	movlw	43
 11103  002054  EC79  F01E         	call	_write_data
 11104  002058  0E39               	movlw	57
 11105  00205A  EC79  F01E         	call	_write_data
 11106                           
 11107                           ;ST7735_TFT.c: 344: write_data(0x00); write_data(0x01); write_data(0x03); write_data(0x1
      +                          0);
 11108  00205E  0E00               	movlw	0
 11109  002060  EC79  F01E         	call	_write_data
 11110  002064  0E01               	movlw	1
 11111  002066  EC79  F01E         	call	_write_data
 11112  00206A  0E03               	movlw	3
 11113  00206C  EC79  F01E         	call	_write_data
 11114  002070  0E10               	movlw	16
 11115  002072  EC79  F01E         	call	_write_data
 11116                           
 11117                           ;ST7735_TFT.c: 345: write_command(0xE1);
 11118  002076  0EE1               	movlw	225
 11119  002078  EC81  F01E         	call	_write_command
 11120                           
 11121                           ;ST7735_TFT.c: 346: write_data(0x03); write_data(0x1D); write_data(0x07); write_data(0x0
      +                          6);
 11122  00207C  0E03               	movlw	3
 11123  00207E  EC79  F01E         	call	_write_data
 11124  002082  0E1D               	movlw	29
 11125  002084  EC79  F01E         	call	_write_data
 11126  002088  0E07               	movlw	7
 11127  00208A  EC79  F01E         	call	_write_data
 11128  00208E  0E06               	movlw	6
 11129  002090  EC79  F01E         	call	_write_data
 11130                           
 11131                           ;ST7735_TFT.c: 347: write_data(0x2E); write_data(0x2C); write_data(0x29); write_data(0x2
      +                          D);
 11132  002094  0E2E               	movlw	46
 11133  002096  EC79  F01E         	call	_write_data
 11134  00209A  0E2C               	movlw	44
 11135  00209C  EC79  F01E         	call	_write_data
 11136  0020A0  0E29               	movlw	41
 11137  0020A2  EC79  F01E         	call	_write_data
 11138  0020A6  0E2D               	movlw	45
 11139  0020A8  EC79  F01E         	call	_write_data
 11140                           
 11141                           ;ST7735_TFT.c: 348: write_data(0x2E); write_data(0x2E); write_data(0x37); write_data(0x3
      +                          F);
 11142  0020AC  0E2E               	movlw	46
 11143  0020AE  EC79  F01E         	call	_write_data
 11144  0020B2  0E2E               	movlw	46
 11145  0020B4  EC79  F01E         	call	_write_data
 11146  0020B8  0E37               	movlw	55
 11147  0020BA  EC79  F01E         	call	_write_data
 11148  0020BE  0E3F               	movlw	63
 11149  0020C0  EC79  F01E         	call	_write_data
 11150                           
 11151                           ;ST7735_TFT.c: 349: write_data(0x00); write_data(0x00); write_data(0x02); write_data(0x1
      +                          0);
 11152  0020C4  0E00               	movlw	0
 11153  0020C6  EC79  F01E         	call	_write_data
 11154  0020CA  0E00               	movlw	0
 11155  0020CC  EC79  F01E         	call	_write_data
 11156  0020D0  0E02               	movlw	2
 11157  0020D2  EC79  F01E         	call	_write_data
 11158  0020D6  0E10               	movlw	16
 11159  0020D8  EC79  F01E         	call	_write_data
 11160                           
 11161                           ;ST7735_TFT.c: 350: write_command(0x13);
 11162  0020DC  0E13               	movlw	19
 11163  0020DE  EC81  F01E         	call	_write_command
 11164                           
 11165                           ;ST7735_TFT.c: 351: delay_ms(10);
 11166  0020E2  0E00               	movlw	0
 11167  0020E4  6E18               	movwf	delay_ms@ms+1,c
 11168  0020E6  0E0A               	movlw	10
 11169  0020E8  6E17               	movwf	delay_ms@ms,c
 11170  0020EA  EC54  F01A         	call	_delay_ms	;wreg free
 11171                           
 11172                           ;ST7735_TFT.c: 352: write_command(0x29);
 11173  0020EE  0E29               	movlw	41
 11174  0020F0  EC81  F01E         	call	_write_command
 11175                           
 11176                           ;ST7735_TFT.c: 353: delay_ms(100);
 11177  0020F4  0E00               	movlw	0
 11178  0020F6  6E18               	movwf	delay_ms@ms+1,c
 11179  0020F8  0E64               	movlw	100
 11180  0020FA  6E17               	movwf	delay_ms@ms,c
 11181  0020FC  EC54  F01A         	call	_delay_ms	;wreg free
 11182  002100  0012               	return		;funcret
 11183  002102                     __end_of_Rcmd3:
 11184                           	opt stack 0
 11185                           tblptru	equ	0xFF8
 11186                           tblptrh	equ	0xFF7
 11187                           tblptrl	equ	0xFF6
 11188                           tablat	equ	0xFF5
 11189                           prodh	equ	0xFF4
 11190                           prodl	equ	0xFF3
 11191                           intcon	equ	0xFF2
 11192                           intcon2	equ	0xFF1
 11193                           postinc0	equ	0xFEE
 11194                           wreg	equ	0xFE8
 11195                           postdec1	equ	0xFE5
 11196                           plusw1	equ	0xFE3
 11197                           fsr1l	equ	0xFE1
 11198                           indf2	equ	0xFDF
 11199                           postinc2	equ	0xFDE
 11200                           plusw2	equ	0xFDB
 11201                           fsr2h	equ	0xFDA
 11202                           fsr2l	equ	0xFD9
 11203                           status	equ	0xFD8
 11204                           
 11205 ;; *************** function _Rcmd2red *****************
 11206 ;; Defined at:
 11207 ;;		line 328 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;		None
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;		None
 11212 ;; Return value:  Size  Location     Type
 11213 ;;		None               void
 11214 ;; Registers used:
 11215 ;;		wreg, status,2, cstack
 11216 ;; Tracked objects:
 11217 ;;		On entry : 0/0
 11218 ;;		On exit  : 0/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11225 ;;Total ram usage:        0 bytes
 11226 ;; Hardware stack levels used:    1
 11227 ;; Hardware stack levels required when called:    5
 11228 ;; This function calls:
 11229 ;;		_write_command
 11230 ;;		_write_data
 11231 ;; This function is called by:
 11232 ;;		_TFT_GreenTab_Initialize
 11233 ;; This function uses a non-reentrant model
 11234 ;;
 11235                           
 11236                           	psect	text54
 11237  003750                     __ptext54:
 11238                           	opt stack 0
 11239  003750                     _Rcmd2red:
 11240                           	opt stack 23
 11241                           
 11242                           ;ST7735_TFT.c: 330: write_command(0x2A);
 11243                           
 11244                           ;incstack = 0
 11245  003750  0E2A               	movlw	42
 11246  003752  EC81  F01E         	call	_write_command
 11247                           
 11248                           ;ST7735_TFT.c: 331: write_data(0x00); write_data(0x00);
 11249  003756  0E00               	movlw	0
 11250  003758  EC79  F01E         	call	_write_data
 11251  00375C  0E00               	movlw	0
 11252  00375E  EC79  F01E         	call	_write_data
 11253                           
 11254                           ;ST7735_TFT.c: 332: write_data(0x00); write_data(0x7F);
 11255  003762  0E00               	movlw	0
 11256  003764  EC79  F01E         	call	_write_data
 11257  003768  0E7F               	movlw	127
 11258  00376A  EC79  F01E         	call	_write_data
 11259                           
 11260                           ;ST7735_TFT.c: 333: write_command(0x2B);
 11261  00376E  0E2B               	movlw	43
 11262  003770  EC81  F01E         	call	_write_command
 11263                           
 11264                           ;ST7735_TFT.c: 334: write_data(0x00); write_data(0x00);
 11265  003774  0E00               	movlw	0
 11266  003776  EC79  F01E         	call	_write_data
 11267  00377A  0E00               	movlw	0
 11268  00377C  EC79  F01E         	call	_write_data
 11269                           
 11270                           ;ST7735_TFT.c: 335: write_data(0x00); write_data(0x9F);
 11271  003780  0E00               	movlw	0
 11272  003782  EC79  F01E         	call	_write_data
 11273  003786  0E9F               	movlw	159
 11274  003788  EC79  F01E         	call	_write_data
 11275  00378C  0012               	return		;funcret
 11276  00378E                     __end_of_Rcmd2red:
 11277                           	opt stack 0
 11278                           tblptru	equ	0xFF8
 11279                           tblptrh	equ	0xFF7
 11280                           tblptrl	equ	0xFF6
 11281                           tablat	equ	0xFF5
 11282                           prodh	equ	0xFF4
 11283                           prodl	equ	0xFF3
 11284                           intcon	equ	0xFF2
 11285                           intcon2	equ	0xFF1
 11286                           postinc0	equ	0xFEE
 11287                           wreg	equ	0xFE8
 11288                           postdec1	equ	0xFE5
 11289                           plusw1	equ	0xFE3
 11290                           fsr1l	equ	0xFE1
 11291                           indf2	equ	0xFDF
 11292                           postinc2	equ	0xFDE
 11293                           plusw2	equ	0xFDB
 11294                           fsr2h	equ	0xFDA
 11295                           fsr2l	equ	0xFD9
 11296                           status	equ	0xFD8
 11297                           
 11298 ;; *************** function _Rcmd1 *****************
 11299 ;; Defined at:
 11300 ;;		line 281 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 11301 ;; Parameters:    Size  Location     Type
 11302 ;;		None
 11303 ;; Auto vars:     Size  Location     Type
 11304 ;;		None
 11305 ;; Return value:  Size  Location     Type
 11306 ;;		None               void
 11307 ;; Registers used:
 11308 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11309 ;; Tracked objects:
 11310 ;;		On entry : 0/0
 11311 ;;		On exit  : 0/0
 11312 ;;		Unchanged: 0/0
 11313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11318 ;;Total ram usage:        0 bytes
 11319 ;; Hardware stack levels used:    1
 11320 ;; Hardware stack levels required when called:    5
 11321 ;; This function calls:
 11322 ;;		_delay_ms
 11323 ;;		_write_command
 11324 ;;		_write_data
 11325 ;; This function is called by:
 11326 ;;		_TFT_GreenTab_Initialize
 11327 ;;		_TFT_BlackTab_Initialize
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           	psect	text55
 11332  0018E8                     __ptext55:
 11333                           	opt stack 0
 11334  0018E8                     _Rcmd1:
 11335                           	opt stack 23
 11336                           
 11337                           ;ST7735_TFT.c: 283: write_command(0x01);
 11338                           
 11339                           ;incstack = 0
 11340  0018E8  0E01               	movlw	1
 11341  0018EA  EC81  F01E         	call	_write_command
 11342                           
 11343                           ;ST7735_TFT.c: 284: delay_ms(150);
 11344  0018EE  0E00               	movlw	0
 11345  0018F0  6E18               	movwf	delay_ms@ms+1,c
 11346  0018F2  0E96               	movlw	150
 11347  0018F4  6E17               	movwf	delay_ms@ms,c
 11348  0018F6  EC54  F01A         	call	_delay_ms	;wreg free
 11349                           
 11350                           ;ST7735_TFT.c: 285: write_command(0x11);
 11351  0018FA  0E11               	movlw	17
 11352  0018FC  EC81  F01E         	call	_write_command
 11353                           
 11354                           ;ST7735_TFT.c: 286: delay_ms(500);
 11355  001900  0E01               	movlw	1
 11356  001902  6E18               	movwf	delay_ms@ms+1,c
 11357  001904  0EF4               	movlw	244
 11358  001906  6E17               	movwf	delay_ms@ms,c
 11359  001908  EC54  F01A         	call	_delay_ms	;wreg free
 11360                           
 11361                           ;ST7735_TFT.c: 287: write_command(0xB1);
 11362  00190C  0EB1               	movlw	177
 11363  00190E  EC81  F01E         	call	_write_command
 11364                           
 11365                           ;ST7735_TFT.c: 288: write_data(0x01);
 11366  001912  0E01               	movlw	1
 11367  001914  EC79  F01E         	call	_write_data
 11368                           
 11369                           ;ST7735_TFT.c: 289: write_data(0x2C);
 11370  001918  0E2C               	movlw	44
 11371  00191A  EC79  F01E         	call	_write_data
 11372                           
 11373                           ;ST7735_TFT.c: 290: write_data(0x2D);
 11374  00191E  0E2D               	movlw	45
 11375  001920  EC79  F01E         	call	_write_data
 11376                           
 11377                           ;ST7735_TFT.c: 291: write_command(0xB2);
 11378  001924  0EB2               	movlw	178
 11379  001926  EC81  F01E         	call	_write_command
 11380                           
 11381                           ;ST7735_TFT.c: 292: write_data(0x01);
 11382  00192A  0E01               	movlw	1
 11383  00192C  EC79  F01E         	call	_write_data
 11384                           
 11385                           ;ST7735_TFT.c: 293: write_data(0x2C);
 11386  001930  0E2C               	movlw	44
 11387  001932  EC79  F01E         	call	_write_data
 11388                           
 11389                           ;ST7735_TFT.c: 294: write_data(0x2D);
 11390  001936  0E2D               	movlw	45
 11391  001938  EC79  F01E         	call	_write_data
 11392                           
 11393                           ;ST7735_TFT.c: 295: write_command(0xB3);
 11394  00193C  0EB3               	movlw	179
 11395  00193E  EC81  F01E         	call	_write_command
 11396                           
 11397                           ;ST7735_TFT.c: 296: write_data(0x01);
 11398  001942  0E01               	movlw	1
 11399  001944  EC79  F01E         	call	_write_data
 11400                           
 11401                           ;ST7735_TFT.c: 297: write_data(0x2C);
 11402  001948  0E2C               	movlw	44
 11403  00194A  EC79  F01E         	call	_write_data
 11404                           
 11405                           ;ST7735_TFT.c: 298: write_data(0x2D);
 11406  00194E  0E2D               	movlw	45
 11407  001950  EC79  F01E         	call	_write_data
 11408                           
 11409                           ;ST7735_TFT.c: 299: write_data(0x01);
 11410  001954  0E01               	movlw	1
 11411  001956  EC79  F01E         	call	_write_data
 11412                           
 11413                           ;ST7735_TFT.c: 300: write_data(0x2C);
 11414  00195A  0E2C               	movlw	44
 11415  00195C  EC79  F01E         	call	_write_data
 11416                           
 11417                           ;ST7735_TFT.c: 301: write_data(0x2D);
 11418  001960  0E2D               	movlw	45
 11419  001962  EC79  F01E         	call	_write_data
 11420                           
 11421                           ;ST7735_TFT.c: 302: write_command(0xB4);
 11422  001966  0EB4               	movlw	180
 11423  001968  EC81  F01E         	call	_write_command
 11424                           
 11425                           ;ST7735_TFT.c: 303: write_data(0x07);
 11426  00196C  0E07               	movlw	7
 11427  00196E  EC79  F01E         	call	_write_data
 11428                           
 11429                           ;ST7735_TFT.c: 304: write_command(0xC0);
 11430  001972  0EC0               	movlw	192
 11431  001974  EC81  F01E         	call	_write_command
 11432                           
 11433                           ;ST7735_TFT.c: 305: write_data(0xA2);
 11434  001978  0EA2               	movlw	162
 11435  00197A  EC79  F01E         	call	_write_data
 11436                           
 11437                           ;ST7735_TFT.c: 306: write_data(0x02);
 11438  00197E  0E02               	movlw	2
 11439  001980  EC79  F01E         	call	_write_data
 11440                           
 11441                           ;ST7735_TFT.c: 307: write_data(0x84);
 11442  001984  0E84               	movlw	132
 11443  001986  EC79  F01E         	call	_write_data
 11444                           
 11445                           ;ST7735_TFT.c: 308: write_command(0xC1);
 11446  00198A  0EC1               	movlw	193
 11447  00198C  EC81  F01E         	call	_write_command
 11448                           
 11449                           ;ST7735_TFT.c: 309: write_data(0xC5);
 11450  001990  0EC5               	movlw	197
 11451  001992  EC79  F01E         	call	_write_data
 11452                           
 11453                           ;ST7735_TFT.c: 310: write_command(0xC2);
 11454  001996  0EC2               	movlw	194
 11455  001998  EC81  F01E         	call	_write_command
 11456                           
 11457                           ;ST7735_TFT.c: 311: write_data(0x0A);
 11458  00199C  0E0A               	movlw	10
 11459  00199E  EC79  F01E         	call	_write_data
 11460                           
 11461                           ;ST7735_TFT.c: 312: write_data(0x00);
 11462  0019A2  0E00               	movlw	0
 11463  0019A4  EC79  F01E         	call	_write_data
 11464                           
 11465                           ;ST7735_TFT.c: 313: write_command(0xC3);
 11466  0019A8  0EC3               	movlw	195
 11467  0019AA  EC81  F01E         	call	_write_command
 11468                           
 11469                           ;ST7735_TFT.c: 314: write_data(0x8A);
 11470  0019AE  0E8A               	movlw	138
 11471  0019B0  EC79  F01E         	call	_write_data
 11472                           
 11473                           ;ST7735_TFT.c: 315: write_data(0x2A);
 11474  0019B4  0E2A               	movlw	42
 11475  0019B6  EC79  F01E         	call	_write_data
 11476                           
 11477                           ;ST7735_TFT.c: 316: write_command(0xC4);
 11478  0019BA  0EC4               	movlw	196
 11479  0019BC  EC81  F01E         	call	_write_command
 11480                           
 11481                           ;ST7735_TFT.c: 317: write_data(0x8A);
 11482  0019C0  0E8A               	movlw	138
 11483  0019C2  EC79  F01E         	call	_write_data
 11484                           
 11485                           ;ST7735_TFT.c: 318: write_data(0xEE);
 11486  0019C6  0EEE               	movlw	238
 11487  0019C8  EC79  F01E         	call	_write_data
 11488                           
 11489                           ;ST7735_TFT.c: 319: write_command(0xC5);
 11490  0019CC  0EC5               	movlw	197
 11491  0019CE  EC81  F01E         	call	_write_command
 11492                           
 11493                           ;ST7735_TFT.c: 320: write_data(0x0E);
 11494  0019D2  0E0E               	movlw	14
 11495  0019D4  EC79  F01E         	call	_write_data
 11496                           
 11497                           ;ST7735_TFT.c: 321: write_command(0x20);
 11498  0019D8  0E20               	movlw	32
 11499  0019DA  EC81  F01E         	call	_write_command
 11500                           
 11501                           ;ST7735_TFT.c: 322: write_command(0x36);
 11502  0019DE  0E36               	movlw	54
 11503  0019E0  EC81  F01E         	call	_write_command
 11504                           
 11505                           ;ST7735_TFT.c: 323: write_data(0xC8);
 11506  0019E4  0EC8               	movlw	200
 11507  0019E6  EC79  F01E         	call	_write_data
 11508                           
 11509                           ;ST7735_TFT.c: 324: write_command(0x3A);
 11510  0019EA  0E3A               	movlw	58
 11511  0019EC  EC81  F01E         	call	_write_command
 11512                           
 11513                           ;ST7735_TFT.c: 325: write_data(0x05);
 11514  0019F0  0E05               	movlw	5
 11515  0019F2  EC79  F01E         	call	_write_data
 11516  0019F6  0012               	return		;funcret
 11517  0019F8                     __end_of_Rcmd1:
 11518                           	opt stack 0
 11519                           tblptru	equ	0xFF8
 11520                           tblptrh	equ	0xFF7
 11521                           tblptrl	equ	0xFF6
 11522                           tablat	equ	0xFF5
 11523                           prodh	equ	0xFF4
 11524                           prodl	equ	0xFF3
 11525                           intcon	equ	0xFF2
 11526                           intcon2	equ	0xFF1
 11527                           postinc0	equ	0xFEE
 11528                           wreg	equ	0xFE8
 11529                           postdec1	equ	0xFE5
 11530                           plusw1	equ	0xFE3
 11531                           fsr1l	equ	0xFE1
 11532                           indf2	equ	0xFDF
 11533                           postinc2	equ	0xFDE
 11534                           plusw2	equ	0xFDB
 11535                           fsr2h	equ	0xFDA
 11536                           fsr2l	equ	0xFD9
 11537                           status	equ	0xFD8
 11538                           
 11539 ;; *************** function _LCD_Reset *****************
 11540 ;; Defined at:
 11541 ;;		line 217 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 11542 ;; Parameters:    Size  Location     Type
 11543 ;;		None
 11544 ;; Auto vars:     Size  Location     Type
 11545 ;;		None
 11546 ;; Return value:  Size  Location     Type
 11547 ;;		None               void
 11548 ;; Registers used:
 11549 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11550 ;; Tracked objects:
 11551 ;;		On entry : 0/0
 11552 ;;		On exit  : 0/0
 11553 ;;		Unchanged: 0/0
 11554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;Total ram usage:        0 bytes
 11560 ;; Hardware stack levels used:    1
 11561 ;; Hardware stack levels required when called:    5
 11562 ;; This function calls:
 11563 ;;		_delay_ms
 11564 ;; This function is called by:
 11565 ;;		_Initialize_Screen
 11566 ;; This function uses a non-reentrant model
 11567 ;;
 11568                           
 11569                           	psect	text56
 11570  003C46                     __ptext56:
 11571                           	opt stack 0
 11572  003C46                     _LCD_Reset:
 11573                           	opt stack 24
 11574                           
 11575                           ;ST7735_TFT.c: 219: PORTDbits.RD2 = 0;
 11576                           
 11577                           ;incstack = 0
 11578  003C46  9483               	bcf	3971,2,c	;volatile
 11579                           
 11580                           ;ST7735_TFT.c: 220: delay_ms(100);
 11581  003C48  0E00               	movlw	0
 11582  003C4A  6E18               	movwf	delay_ms@ms+1,c
 11583  003C4C  0E64               	movlw	100
 11584  003C4E  6E17               	movwf	delay_ms@ms,c
 11585  003C50  EC54  F01A         	call	_delay_ms	;wreg free
 11586                           
 11587                           ;ST7735_TFT.c: 221: PORTDbits.RD2 = 1;
 11588  003C54  8483               	bsf	3971,2,c	;volatile
 11589  003C56  0012               	return		;funcret
 11590  003C58                     __end_of_LCD_Reset:
 11591                           	opt stack 0
 11592                           tblptru	equ	0xFF8
 11593                           tblptrh	equ	0xFF7
 11594                           tblptrl	equ	0xFF6
 11595                           tablat	equ	0xFF5
 11596                           prodh	equ	0xFF4
 11597                           prodl	equ	0xFF3
 11598                           intcon	equ	0xFF2
 11599                           intcon2	equ	0xFF1
 11600                           postinc0	equ	0xFEE
 11601                           wreg	equ	0xFE8
 11602                           postdec1	equ	0xFE5
 11603                           plusw1	equ	0xFE3
 11604                           fsr1l	equ	0xFE1
 11605                           indf2	equ	0xFDF
 11606                           postinc2	equ	0xFDE
 11607                           plusw2	equ	0xFDB
 11608                           fsr2h	equ	0xFDA
 11609                           fsr2l	equ	0xFD9
 11610                           status	equ	0xFD8
 11611                           
 11612 ;; *************** function _delay_ms *****************
 11613 ;; Defined at:
 11614 ;;		line 64 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 11615 ;; Parameters:    Size  Location     Type
 11616 ;;  ms              2   22[COMRAM] int 
 11617 ;; Auto vars:     Size  Location     Type
 11618 ;;  count           2   26[COMRAM] int 
 11619 ;; Return value:  Size  Location     Type
 11620 ;;		None               void
 11621 ;; Registers used:
 11622 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11623 ;; Tracked objects:
 11624 ;;		On entry : 0/0
 11625 ;;		On exit  : 0/0
 11626 ;;		Unchanged: 0/0
 11627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11631 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11632 ;;Total ram usage:        6 bytes
 11633 ;; Hardware stack levels used:    1
 11634 ;; Hardware stack levels required when called:    4
 11635 ;; This function calls:
 11636 ;;		___wmul
 11637 ;; This function is called by:
 11638 ;;		_LCD_Reset
 11639 ;;		_Rcmd1
 11640 ;;		_Rcmd3
 11641 ;;		_Bcmd
 11642 ;; This function uses a non-reentrant model
 11643 ;;
 11644                           
 11645                           	psect	text57
 11646  0034A8                     __ptext57:
 11647                           	opt stack 0
 11648  0034A8                     _delay_ms:
 11649                           	opt stack 23
 11650                           
 11651                           ;ST7735_TFT.c: 70: int count;
 11652                           ;ST7735_TFT.c: 71: count = 8000000/4000/16 * ms;
 11653                           
 11654                           ;incstack = 0
 11655  0034A8  C017  F011         	movff	delay_ms@ms,___wmul@multiplier
 11656  0034AC  C018  F012         	movff	delay_ms@ms+1,___wmul@multiplier+1
 11657  0034B0  0E00               	movlw	0
 11658  0034B2  6E14               	movwf	___wmul@multiplicand+1,c
 11659  0034B4  0E7D               	movlw	125
 11660  0034B6  6E13               	movwf	___wmul@multiplicand,c
 11661  0034B8  ECAE  F01C         	call	___wmul	;wreg free
 11662  0034BC  C011  F01B         	movff	?___wmul,delay_ms@count
 11663  0034C0  C012  F01C         	movff	?___wmul+1,delay_ms@count+1
 11664                           
 11665                           ;ST7735_TFT.c: 72: count = (0xffff - count);
 11666  0034C4  C01B  F019         	movff	delay_ms@count,??_delay_ms
 11667  0034C8  C01C  F01A         	movff	delay_ms@count+1,??_delay_ms+1
 11668  0034CC  1E19               	comf	??_delay_ms,f,c
 11669  0034CE  1E1A               	comf	??_delay_ms+1,f,c
 11670  0034D0  4A19               	infsnz	??_delay_ms,f,c
 11671  0034D2  2A1A               	incf	??_delay_ms+1,f,c
 11672  0034D4  0EFF               	movlw	255
 11673  0034D6  2419               	addwf	??_delay_ms,w,c
 11674  0034D8  6E1B               	movwf	delay_ms@count,c
 11675  0034DA  0EFF               	movlw	255
 11676  0034DC  201A               	addwfc	??_delay_ms+1,w,c
 11677  0034DE  6E1C               	movwf	delay_ms@count+1,c
 11678                           
 11679                           ;ST7735_TFT.c: 74: T0CON = 0x03;
 11680  0034E0  0E03               	movlw	3
 11681  0034E2  6ED5               	movwf	4053,c	;volatile
 11682                           
 11683                           ;ST7735_TFT.c: 76: TMR0L = count & 0x00ff;
 11684  0034E4  C01B  FFD6         	movff	delay_ms@count,4054	;volatile
 11685                           
 11686                           ;ST7735_TFT.c: 77: TMR0H = count >> 8;
 11687  0034E8  501C               	movf	delay_ms@count+1,w,c
 11688  0034EA  6ED7               	movwf	4055,c	;volatile
 11689                           
 11690                           ;ST7735_TFT.c: 79: INTCONbits.TMR0IF = 0;
 11691  0034EC  94F2               	bcf	intcon,2,c	;volatile
 11692                           
 11693                           ;ST7735_TFT.c: 80: T0CONbits.TMR0ON = 1;
 11694  0034EE  8ED5               	bsf	4053,7,c	;volatile
 11695                           
 11696                           ;ST7735_TFT.c: 82: while (INTCONbits.TMR0IF == 0);
 11697  0034F0  D000               	goto	l772
 11698  0034F2                     l772:
 11699  0034F2  A4F2               	btfss	intcon,2,c	;volatile
 11700  0034F4  D7FE               	goto	l772
 11701                           
 11702                           ;ST7735_TFT.c: 83: T0CONbits.TMR0ON = 0;
 11703  0034F6  9ED5               	bcf	4053,7,c	;volatile
 11704  0034F8  0012               	return		;funcret
 11705  0034FA                     __end_of_delay_ms:
 11706                           	opt stack 0
 11707                           tblptru	equ	0xFF8
 11708                           tblptrh	equ	0xFF7
 11709                           tblptrl	equ	0xFF6
 11710                           tablat	equ	0xFF5
 11711                           prodh	equ	0xFF4
 11712                           prodl	equ	0xFF3
 11713                           intcon	equ	0xFF2
 11714                           intcon2	equ	0xFF1
 11715                           postinc0	equ	0xFEE
 11716                           wreg	equ	0xFE8
 11717                           postdec1	equ	0xFE5
 11718                           plusw1	equ	0xFE3
 11719                           fsr1l	equ	0xFE1
 11720                           indf2	equ	0xFDF
 11721                           postinc2	equ	0xFDE
 11722                           plusw2	equ	0xFDB
 11723                           fsr2h	equ	0xFDA
 11724                           fsr2l	equ	0xFD9
 11725                           status	equ	0xFD8
 11726                           
 11727 ;; *************** function _DS3231_Write_Alarm_Time *****************
 11728 ;; Defined at:
 11729 ;;		line 169 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Support.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;		None
 11732 ;; Auto vars:     Size  Location     Type
 11733 ;;  Address         1   12[BANK1 ] unsigned char 
 11734 ;;  Device          1   11[BANK1 ] unsigned char 
 11735 ;; Return value:  Size  Location     Type
 11736 ;;		None               void
 11737 ;; Registers used:
 11738 ;;		wreg, status,2, status,0, cstack
 11739 ;; Tracked objects:
 11740 ;;		On entry : 0/0
 11741 ;;		On exit  : 0/0
 11742 ;;		Unchanged: 0/0
 11743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11745 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11747 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11748 ;;Total ram usage:        2 bytes
 11749 ;; Hardware stack levels used:    1
 11750 ;; Hardware stack levels required when called:    7
 11751 ;; This function calls:
 11752 ;;		_DS3231_Read_Time
 11753 ;;		_I2C_Start
 11754 ;;		_I2C_Stop
 11755 ;;		_I2C_Write
 11756 ;;		_dec_2_bcd
 11757 ;; This function is called by:
 11758 ;;		_Do_Save_New_Alarm_Time
 11759 ;; This function uses a non-reentrant model
 11760 ;;
 11761                           
 11762                           	psect	text58
 11763  002FBA                     __ptext58:
 11764                           	opt stack 0
 11765  002FBA                     _DS3231_Write_Alarm_Time:
 11766                           	opt stack 21
 11767                           
 11768                           ;I2C_Support.c: 171: DS3231_Read_Time();
 11769                           
 11770                           ;incstack = 0
 11771  002FBA  ECC5  F018         	call	_DS3231_Read_Time	;wreg free
 11772                           
 11773                           ;I2C_Support.c: 172: alarm_date = day;
 11774  002FBE  C05A  F055         	movff	_day,_alarm_date
 11775                           
 11776                           ;I2C_Support.c: 173: char Device = 0x68;
 11777  002FC2  0E68               	movlw	104
 11778  002FC4  0101               	movlb	1	; () banked
 11779  002FC6  6F5E               	movwf	DS3231_Write_Alarm_Time@Device& (0+255),b
 11780                           
 11781                           ; BSR set to: 1
 11782                           ;I2C_Support.c: 174: char Address = 0x07;
 11783  002FC8  0E07               	movlw	7
 11784  002FCA  0101               	movlb	1	; () banked
 11785  002FCC  6F5F               	movwf	DS3231_Write_Alarm_Time@Address& (0+255),b
 11786                           
 11787                           ;I2C_Support.c: 175: alarm_hour = dec_2_bcd(setup_alarm_hour);
 11788  002FCE  5063               	movf	_setup_alarm_hour,w,c
 11789  002FD0  EC91  F018         	call	_dec_2_bcd
 11790  002FD4  5041               	movf	?_dec_2_bcd,w,c
 11791  002FD6  6E56               	movwf	_alarm_hour,c
 11792                           
 11793                           ;I2C_Support.c: 176: alarm_minute = dec_2_bcd(setup_alarm_minute);
 11794  002FD8  5064               	movf	_setup_alarm_minute,w,c
 11795  002FDA  EC91  F018         	call	_dec_2_bcd
 11796  002FDE  5041               	movf	?_dec_2_bcd,w,c
 11797  002FE0  6E57               	movwf	_alarm_minute,c
 11798                           
 11799                           ;I2C_Support.c: 177: alarm_second = dec_2_bcd(setup_alarm_second);
 11800  002FE2  5065               	movf	_setup_alarm_second,w,c
 11801  002FE4  EC91  F018         	call	_dec_2_bcd
 11802  002FE8  5041               	movf	?_dec_2_bcd,w,c
 11803  002FEA  6E58               	movwf	_alarm_second,c
 11804                           
 11805                           ;I2C_Support.c: 178: alarm_second = alarm_second & 0x7f;
 11806  002FEC  5058               	movf	_alarm_second,w,c
 11807  002FEE  0B7F               	andlw	127
 11808  002FF0  6E58               	movwf	_alarm_second,c
 11809                           
 11810                           ;I2C_Support.c: 179: alarm_minute = alarm_minute & 0x7f;
 11811  002FF2  5057               	movf	_alarm_minute,w,c
 11812  002FF4  0B7F               	andlw	127
 11813  002FF6  6E57               	movwf	_alarm_minute,c
 11814                           
 11815                           ;I2C_Support.c: 180: alarm_hour = alarm_hour & 0x7f;
 11816  002FF8  5056               	movf	_alarm_hour,w,c
 11817  002FFA  0B7F               	andlw	127
 11818  002FFC  6E56               	movwf	_alarm_hour,c
 11819                           
 11820                           ;I2C_Support.c: 181: alarm_date = alarm_date | 0x80;
 11821  002FFE  5055               	movf	_alarm_date,w,c
 11822  003000  0980               	iorlw	128
 11823  003002  6E55               	movwf	_alarm_date,c
 11824                           
 11825                           ;I2C_Support.c: 182: I2C_Start();
 11826  003004  EC47  F01E         	call	_I2C_Start	;wreg free
 11827                           
 11828                           ;I2C_Support.c: 183: I2C_Write((Device << 1) | 0);
 11829  003008  0101               	movlb	1	; () banked
 11830  00300A  515E               	movf	DS3231_Write_Alarm_Time@Device& (0+255),w,b
 11831  00300C  255E               	addwf	DS3231_Write_Alarm_Time@Device& (0+255),w,b
 11832  00300E  ECE6  F01B         	call	_I2C_Write
 11833                           
 11834                           ;I2C_Support.c: 184: I2C_Write(Address);
 11835  003012  0101               	movlb	1	; () banked
 11836  003014  515F               	movf	DS3231_Write_Alarm_Time@Address& (0+255),w,b
 11837  003016  ECE6  F01B         	call	_I2C_Write
 11838                           
 11839                           ;I2C_Support.c: 186: I2C_Write(alarm_second);
 11840  00301A  5058               	movf	_alarm_second,w,c
 11841  00301C  ECE6  F01B         	call	_I2C_Write
 11842                           
 11843                           ;I2C_Support.c: 187: I2C_Write(alarm_minute);
 11844  003020  5057               	movf	_alarm_minute,w,c
 11845  003022  ECE6  F01B         	call	_I2C_Write
 11846                           
 11847                           ;I2C_Support.c: 188: I2C_Write(alarm_hour);
 11848  003026  5056               	movf	_alarm_hour,w,c
 11849  003028  ECE6  F01B         	call	_I2C_Write
 11850                           
 11851                           ;I2C_Support.c: 189: I2C_Write(alarm_date);
 11852  00302C  5055               	movf	_alarm_date,w,c
 11853  00302E  ECE6  F01B         	call	_I2C_Write
 11854                           
 11855                           ;I2C_Support.c: 190: I2C_Stop();
 11856  003032  EC3E  F01E         	call	_I2C_Stop	;wreg free
 11857  003036  0012               	return		;funcret
 11858  003038                     __end_of_DS3231_Write_Alarm_Time:
 11859                           	opt stack 0
 11860                           tblptru	equ	0xFF8
 11861                           tblptrh	equ	0xFF7
 11862                           tblptrl	equ	0xFF6
 11863                           tablat	equ	0xFF5
 11864                           prodh	equ	0xFF4
 11865                           prodl	equ	0xFF3
 11866                           intcon	equ	0xFF2
 11867                           intcon2	equ	0xFF1
 11868                           postinc0	equ	0xFEE
 11869                           wreg	equ	0xFE8
 11870                           postdec1	equ	0xFE5
 11871                           plusw1	equ	0xFE3
 11872                           fsr1l	equ	0xFE1
 11873                           indf2	equ	0xFDF
 11874                           postinc2	equ	0xFDE
 11875                           plusw2	equ	0xFDB
 11876                           fsr2h	equ	0xFDA
 11877                           fsr2l	equ	0xFD9
 11878                           status	equ	0xFD8
 11879                           
 11880 ;; *************** function _dec_2_bcd *****************
 11881 ;; Defined at:
 11882 ;;		line 53 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
 11883 ;; Parameters:    Size  Location     Type
 11884 ;;  dec             1    wreg     unsigned char 
 11885 ;; Auto vars:     Size  Location     Type
 11886 ;;  dec             1   10[BANK1 ] unsigned char 
 11887 ;;  bcd             2    8[BANK1 ] int 
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  2   64[COMRAM] int 
 11890 ;; Registers used:
 11891 ;;		wreg, status,2, status,0, cstack
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11898 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11899 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11900 ;;      Totals:         2       2       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11901 ;;Total ram usage:        7 bytes
 11902 ;; Hardware stack levels used:    1
 11903 ;; Hardware stack levels required when called:    4
 11904 ;; This function calls:
 11905 ;;		___awdiv
 11906 ;;		___awmod
 11907 ;; This function is called by:
 11908 ;;		_DS3231_Write_Time
 11909 ;;		_DS3231_Write_Alarm_Time
 11910 ;; This function uses a non-reentrant model
 11911 ;;
 11912                           
 11913                           	psect	text59
 11914  003122                     __ptext59:
 11915                           	opt stack 0
 11916  003122                     _dec_2_bcd:
 11917                           	opt stack 23
 11918                           
 11919                           ;incstack = 0
 11920                           ;dec_2_bcd@dec stored from wreg
 11921  003122  0101               	movlb	1	; () banked
 11922  003124  6F5D               	movwf	dec_2_bcd@dec& (0+255),b
 11923                           
 11924                           ; BSR set to: 1
 11925                           ;utils.c: 55: int bcd;
 11926                           ;utils.c: 56: bcd = ((dec / 10) << 4) + (dec % 10);
 11927  003126  C15D  F153         	movff	dec_2_bcd@dec,___awdiv@dividend
 11928  00312A  0101               	movlb	1	; () banked
 11929  00312C  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
 11930  00312E  0E00               	movlw	0
 11931  003130  0101               	movlb	1	; () banked
 11932  003132  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
 11933  003134  0E0A               	movlw	10
 11934  003136  6F55               	movwf	___awdiv@divisor& (0+255),b
 11935  003138  ECB4  F012         	call	___awdiv	;wreg free
 11936  00313C  C153  F0FD         	movff	?___awdiv,??_dec_2_bcd
 11937  003140  C154  F0FE         	movff	?___awdiv+1,??_dec_2_bcd+1
 11938  003144  0100               	movlb	0	; () banked
 11939  003146  3BFD               	swapf	??_dec_2_bcd& (0+255),f,b
 11940  003148  3BFE               	swapf	(??_dec_2_bcd+1)& (0+255),f,b
 11941  00314A  0EF0               	movlw	240
 11942  00314C  17FE               	andwf	(??_dec_2_bcd+1)& (0+255),f,b
 11943  00314E  51FD               	movf	??_dec_2_bcd& (0+255),w,b
 11944  003150  0B0F               	andlw	15
 11945  003152  13FE               	iorwf	(??_dec_2_bcd+1)& (0+255),f,b
 11946  003154  0EF0               	movlw	240
 11947  003156  17FD               	andwf	??_dec_2_bcd& (0+255),f,b
 11948  003158  C15D  F03B         	movff	dec_2_bcd@dec,___awmod@dividend
 11949  00315C  6A3C               	clrf	___awmod@dividend+1,c
 11950  00315E  0E00               	movlw	0
 11951  003160  6E3E               	movwf	___awmod@divisor+1,c
 11952  003162  0E0A               	movlw	10
 11953  003164  6E3D               	movwf	___awmod@divisor,c
 11954  003166  EC5C  F017         	call	___awmod	;wreg free
 11955  00316A  503B               	movf	?___awmod,w,c
 11956  00316C  0100               	movlb	0	; () banked
 11957  00316E  25FD               	addwf	??_dec_2_bcd& (0+255),w,b
 11958  003170  0101               	movlb	1	; () banked
 11959  003172  6F5B               	movwf	dec_2_bcd@bcd& (0+255),b
 11960  003174  503C               	movf	?___awmod+1,w,c
 11961  003176  0100               	movlb	0	; () banked
 11962  003178  21FE               	addwfc	(??_dec_2_bcd+1)& (0+255),w,b
 11963  00317A  0101               	movlb	1	; () banked
 11964  00317C  6F5C               	movwf	(dec_2_bcd@bcd+1)& (0+255),b
 11965                           
 11966                           ; BSR set to: 1
 11967                           ;utils.c: 57: return bcd;
 11968  00317E  C15B  F041         	movff	dec_2_bcd@bcd,?_dec_2_bcd
 11969  003182  C15C  F042         	movff	dec_2_bcd@bcd+1,?_dec_2_bcd+1
 11970  003186  D000               	goto	l1019
 11971  003188                     l1019:
 11972                           
 11973                           ; BSR set to: 1
 11974  003188  0012               	return		;funcret
 11975  00318A                     __end_of_dec_2_bcd:
 11976                           	opt stack 0
 11977                           tblptru	equ	0xFF8
 11978                           tblptrh	equ	0xFF7
 11979                           tblptrl	equ	0xFF6
 11980                           tablat	equ	0xFF5
 11981                           prodh	equ	0xFF4
 11982                           prodl	equ	0xFF3
 11983                           intcon	equ	0xFF2
 11984                           intcon2	equ	0xFF1
 11985                           postinc0	equ	0xFEE
 11986                           wreg	equ	0xFE8
 11987                           postdec1	equ	0xFE5
 11988                           plusw1	equ	0xFE3
 11989                           fsr1l	equ	0xFE1
 11990                           indf2	equ	0xFDF
 11991                           postinc2	equ	0xFDE
 11992                           plusw2	equ	0xFDB
 11993                           fsr2h	equ	0xFDA
 11994                           fsr2l	equ	0xFD9
 11995                           status	equ	0xFD8
 11996                           
 11997 ;; *************** function _DS3231_Read_Time *****************
 11998 ;; Defined at:
 11999 ;;		line 45 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Support.c"
 12000 ;; Parameters:    Size  Location     Type
 12001 ;;		None
 12002 ;; Auto vars:     Size  Location     Type
 12003 ;;  Device          1   20[COMRAM] unsigned char 
 12004 ;;  Address         1   19[COMRAM] unsigned char 
 12005 ;; Return value:  Size  Location     Type
 12006 ;;		None               void
 12007 ;; Registers used:
 12008 ;;		wreg, status,2, status,0, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12015 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12017 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12018 ;;Total ram usage:        2 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    6
 12021 ;; This function calls:
 12022 ;;		_I2C_ReStart
 12023 ;;		_I2C_Read
 12024 ;;		_I2C_Start
 12025 ;;		_I2C_Stop
 12026 ;;		_I2C_Write
 12027 ;; This function is called by:
 12028 ;;		_main
 12029 ;;		_Exit_Setup_Alarm_Time
 12030 ;;		_Do_Save_New_Alarm_Time
 12031 ;;		_Exit_Setup_Heater_Temp
 12032 ;;		_Do_Save_New_Heater_Temp
 12033 ;;		_Do_Setup_Time
 12034 ;;		_Do_Save_New_Time
 12035 ;;		_Exit_Time_Setup
 12036 ;;		_DS3231_Write_Alarm_Time
 12037 ;; This function uses a non-reentrant model
 12038 ;;
 12039                           
 12040                           	psect	text60
 12041  00318A                     __ptext60:
 12042                           	opt stack 0
 12043  00318A                     _DS3231_Read_Time:
 12044                           	opt stack 22
 12045                           
 12046                           ;I2C_Support.c: 47: char Device = 0x68;
 12047                           
 12048                           ; BSR set to: 1
 12049                           ;incstack = 0
 12050  00318A  0E68               	movlw	104
 12051  00318C  6E15               	movwf	DS3231_Read_Time@Device,c
 12052                           
 12053                           ;I2C_Support.c: 48: char Address = 0x00;
 12054  00318E  0E00               	movlw	0
 12055  003190  6E14               	movwf	DS3231_Read_Time@Address,c
 12056                           
 12057                           ;I2C_Support.c: 50: I2C_Start();
 12058  003192  EC47  F01E         	call	_I2C_Start	;wreg free
 12059                           
 12060                           ;I2C_Support.c: 51: I2C_Write((Device << 1) | 0);
 12061  003196  5015               	movf	DS3231_Read_Time@Device,w,c
 12062  003198  2415               	addwf	DS3231_Read_Time@Device,w,c
 12063  00319A  ECE6  F01B         	call	_I2C_Write
 12064                           
 12065                           ;I2C_Support.c: 52: I2C_Write(Address);
 12066  00319E  5014               	movf	DS3231_Read_Time@Address,w,c
 12067  0031A0  ECE6  F01B         	call	_I2C_Write
 12068                           
 12069                           ;I2C_Support.c: 53: I2C_ReStart();
 12070  0031A4  ECCA  F01D         	call	_I2C_ReStart	;wreg free
 12071                           
 12072                           ;I2C_Support.c: 54: I2C_Write((Device << 1) | 1);
 12073  0031A8  80D8               	bsf	status,0,c
 12074  0031AA  3415               	rlcf	DS3231_Read_Time@Device,w,c
 12075  0031AC  ECE6  F01B         	call	_I2C_Write
 12076                           
 12077                           ;I2C_Support.c: 55: second = I2C_Read(1);
 12078  0031B0  0E01               	movlw	1
 12079  0031B2  EC63  F01B         	call	_I2C_Read
 12080  0031B6  6E62               	movwf	_second,c
 12081                           
 12082                           ;I2C_Support.c: 56: minute = I2C_Read(1);
 12083  0031B8  0E01               	movlw	1
 12084  0031BA  EC63  F01B         	call	_I2C_Read
 12085  0031BE  6E5F               	movwf	_minute,c
 12086                           
 12087                           ;I2C_Support.c: 57: hour = I2C_Read(1);
 12088  0031C0  0E01               	movlw	1
 12089  0031C2  EC63  F01B         	call	_I2C_Read
 12090  0031C6  6E5E               	movwf	_hour,c
 12091                           
 12092                           ;I2C_Support.c: 58: dow = I2C_Read(1);
 12093  0031C8  0E01               	movlw	1
 12094  0031CA  EC63  F01B         	call	_I2C_Read
 12095  0031CE  6E5B               	movwf	_dow,c
 12096                           
 12097                           ;I2C_Support.c: 59: day = I2C_Read(1);
 12098  0031D0  0E01               	movlw	1
 12099  0031D2  EC63  F01B         	call	_I2C_Read
 12100  0031D6  6E5A               	movwf	_day,c
 12101                           
 12102                           ;I2C_Support.c: 60: month = I2C_Read(1);
 12103  0031D8  0E01               	movlw	1
 12104  0031DA  EC63  F01B         	call	_I2C_Read
 12105  0031DE  6E60               	movwf	_month,c
 12106                           
 12107                           ;I2C_Support.c: 61: year = I2C_Read(0);
 12108  0031E0  0E00               	movlw	0
 12109  0031E2  EC63  F01B         	call	_I2C_Read
 12110  0031E6  6E6D               	movwf	_year,c
 12111                           
 12112                           ;I2C_Support.c: 62: I2C_Stop();
 12113  0031E8  EC3E  F01E         	call	_I2C_Stop	;wreg free
 12114  0031EC  0012               	return		;funcret
 12115  0031EE                     __end_of_DS3231_Read_Time:
 12116                           	opt stack 0
 12117                           tblptru	equ	0xFF8
 12118                           tblptrh	equ	0xFF7
 12119                           tblptrl	equ	0xFF6
 12120                           tablat	equ	0xFF5
 12121                           prodh	equ	0xFF4
 12122                           prodl	equ	0xFF3
 12123                           intcon	equ	0xFF2
 12124                           intcon2	equ	0xFF1
 12125                           postinc0	equ	0xFEE
 12126                           wreg	equ	0xFE8
 12127                           postdec1	equ	0xFE5
 12128                           plusw1	equ	0xFE3
 12129                           fsr1l	equ	0xFE1
 12130                           indf2	equ	0xFDF
 12131                           postinc2	equ	0xFDE
 12132                           plusw2	equ	0xFDB
 12133                           fsr2h	equ	0xFDA
 12134                           fsr2l	equ	0xFD9
 12135                           status	equ	0xFD8
 12136                           
 12137 ;; *************** function _DS3231_Read_Alarm_Time *****************
 12138 ;; Defined at:
 12139 ;;		line 115 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Support.c"
 12140 ;; Parameters:    Size  Location     Type
 12141 ;;		None
 12142 ;; Auto vars:     Size  Location     Type
 12143 ;;  Device          1   20[COMRAM] unsigned char 
 12144 ;;  Address         1   19[COMRAM] unsigned char 
 12145 ;; Return value:  Size  Location     Type
 12146 ;;		None               void
 12147 ;; Registers used:
 12148 ;;		wreg, status,2, status,0, cstack
 12149 ;; Tracked objects:
 12150 ;;		On entry : 0/0
 12151 ;;		On exit  : 0/0
 12152 ;;		Unchanged: 0/0
 12153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12155 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12157 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12158 ;;Total ram usage:        2 bytes
 12159 ;; Hardware stack levels used:    1
 12160 ;; Hardware stack levels required when called:    6
 12161 ;; This function calls:
 12162 ;;		_I2C_ReStart
 12163 ;;		_I2C_Read
 12164 ;;		_I2C_Start
 12165 ;;		_I2C_Stop
 12166 ;;		_I2C_Write
 12167 ;; This function is called by:
 12168 ;;		_main
 12169 ;;		_Do_Setup_Alarm_Time
 12170 ;;		_Do_Save_New_Alarm_Time
 12171 ;; This function uses a non-reentrant model
 12172 ;;
 12173                           
 12174                           	psect	text61
 12175  0035E4                     __ptext61:
 12176                           	opt stack 0
 12177  0035E4                     _DS3231_Read_Alarm_Time:
 12178                           	opt stack 22
 12179                           
 12180                           ;I2C_Support.c: 117: char Device = 0x68;
 12181                           
 12182                           ;incstack = 0
 12183  0035E4  0E68               	movlw	104
 12184  0035E6  6E15               	movwf	DS3231_Read_Alarm_Time@Device,c
 12185                           
 12186                           ;I2C_Support.c: 118: char Address = 0x07;
 12187  0035E8  0E07               	movlw	7
 12188  0035EA  6E14               	movwf	DS3231_Read_Alarm_Time@Address,c
 12189                           
 12190                           ;I2C_Support.c: 119: I2C_Start();
 12191  0035EC  EC47  F01E         	call	_I2C_Start	;wreg free
 12192                           
 12193                           ;I2C_Support.c: 120: I2C_Write((Device << 1) | 0);
 12194  0035F0  5015               	movf	DS3231_Read_Alarm_Time@Device,w,c
 12195  0035F2  2415               	addwf	DS3231_Read_Alarm_Time@Device,w,c
 12196  0035F4  ECE6  F01B         	call	_I2C_Write
 12197                           
 12198                           ;I2C_Support.c: 121: I2C_Write(Address);
 12199  0035F8  5014               	movf	DS3231_Read_Alarm_Time@Address,w,c
 12200  0035FA  ECE6  F01B         	call	_I2C_Write
 12201                           
 12202                           ;I2C_Support.c: 122: I2C_ReStart();
 12203  0035FE  ECCA  F01D         	call	_I2C_ReStart	;wreg free
 12204                           
 12205                           ;I2C_Support.c: 123: I2C_Write((Device << 1) | 1);
 12206  003602  80D8               	bsf	status,0,c
 12207  003604  3415               	rlcf	DS3231_Read_Alarm_Time@Device,w,c
 12208  003606  ECE6  F01B         	call	_I2C_Write
 12209                           
 12210                           ;I2C_Support.c: 124: alarm_second = I2C_Read(1);
 12211  00360A  0E01               	movlw	1
 12212  00360C  EC63  F01B         	call	_I2C_Read
 12213  003610  6E58               	movwf	_alarm_second,c
 12214                           
 12215                           ;I2C_Support.c: 125: alarm_minute = I2C_Read(1);
 12216  003612  0E01               	movlw	1
 12217  003614  EC63  F01B         	call	_I2C_Read
 12218  003618  6E57               	movwf	_alarm_minute,c
 12219                           
 12220                           ;I2C_Support.c: 126: alarm_hour = I2C_Read(1);
 12221  00361A  0E01               	movlw	1
 12222  00361C  EC63  F01B         	call	_I2C_Read
 12223  003620  6E56               	movwf	_alarm_hour,c
 12224                           
 12225                           ;I2C_Support.c: 127: alarm_date = I2C_Read(0);
 12226  003622  0E00               	movlw	0
 12227  003624  EC63  F01B         	call	_I2C_Read
 12228  003628  6E55               	movwf	_alarm_date,c
 12229                           
 12230                           ;I2C_Support.c: 128: I2C_Stop();
 12231  00362A  EC3E  F01E         	call	_I2C_Stop	;wreg free
 12232  00362E  0012               	return		;funcret
 12233  003630                     __end_of_DS3231_Read_Alarm_Time:
 12234                           	opt stack 0
 12235                           tblptru	equ	0xFF8
 12236                           tblptrh	equ	0xFF7
 12237                           tblptrl	equ	0xFF6
 12238                           tablat	equ	0xFF5
 12239                           prodh	equ	0xFF4
 12240                           prodl	equ	0xFF3
 12241                           intcon	equ	0xFF2
 12242                           intcon2	equ	0xFF1
 12243                           postinc0	equ	0xFEE
 12244                           wreg	equ	0xFE8
 12245                           postdec1	equ	0xFE5
 12246                           plusw1	equ	0xFE3
 12247                           fsr1l	equ	0xFE1
 12248                           indf2	equ	0xFDF
 12249                           postinc2	equ	0xFDE
 12250                           plusw2	equ	0xFDB
 12251                           fsr2h	equ	0xFDA
 12252                           fsr2l	equ	0xFD9
 12253                           status	equ	0xFD8
 12254                           
 12255 ;; *************** function _Do_Beep_Good *****************
 12256 ;; Defined at:
 12257 ;;		line 70 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
 12258 ;; Parameters:    Size  Location     Type
 12259 ;;		None
 12260 ;; Auto vars:     Size  Location     Type
 12261 ;;		None
 12262 ;; Return value:  Size  Location     Type
 12263 ;;		None               void
 12264 ;; Registers used:
 12265 ;;		wreg, status,2, status,0, cstack
 12266 ;; Tracked objects:
 12267 ;;		On entry : 0/0
 12268 ;;		On exit  : 0/0
 12269 ;;		Unchanged: 0/0
 12270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12275 ;;Total ram usage:        0 bytes
 12276 ;; Hardware stack levels used:    1
 12277 ;; Hardware stack levels required when called:    6
 12278 ;; This function calls:
 12279 ;;		_Activate_Buzzer_2KHz
 12280 ;;		_Deactivate_Buzzer
 12281 ;;		_Wait_One_Sec
 12282 ;;		_do_update_pwm
 12283 ;; This function is called by:
 12284 ;;		_main
 12285 ;;		_Do_Setup_Alarm_Time
 12286 ;;		_Do_Setup_Heater_Temp
 12287 ;;		_Do_Setup_Time
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291                           	psect	text62
 12292  003B64                     __ptext62:
 12293                           	opt stack 0
 12294  003B64                     _Do_Beep_Good:
 12295                           	opt stack 23
 12296                           
 12297                           ;utils.c: 73: PORTBbits.RB7 = 1;
 12298                           
 12299                           ;incstack = 0
 12300  003B64  8E81               	bsf	3969,7,c	;volatile
 12301                           
 12302                           ;utils.c: 74: Activate_Buzzer_2KHz();
 12303  003B66  EC2C  F01E         	call	_Activate_Buzzer_2KHz	;wreg free
 12304                           
 12305                           ;utils.c: 75: Wait_One_Sec();
 12306  003B6A  EC5B  F01D         	call	_Wait_One_Sec	;wreg free
 12307                           
 12308                           ;utils.c: 76: PORTBbits.RB7 = 0;
 12309  003B6E  9E81               	bcf	3969,7,c	;volatile
 12310                           
 12311                           ;utils.c: 77: Deactivate_Buzzer();
 12312  003B70  ECC1  F01E         	call	_Deactivate_Buzzer	;wreg free
 12313                           
 12314                           ;utils.c: 78: do_update_pwm(duty_cycle);
 12315  003B74  505C               	movf	_duty_cycle,w,c
 12316  003B76  EC9F  F014         	call	_do_update_pwm
 12317  003B7A  0012               	return		;funcret
 12318  003B7C                     __end_of_Do_Beep_Good:
 12319                           	opt stack 0
 12320                           tblptru	equ	0xFF8
 12321                           tblptrh	equ	0xFF7
 12322                           tblptrl	equ	0xFF6
 12323                           tablat	equ	0xFF5
 12324                           prodh	equ	0xFF4
 12325                           prodl	equ	0xFF3
 12326                           intcon	equ	0xFF2
 12327                           intcon2	equ	0xFF1
 12328                           postinc0	equ	0xFEE
 12329                           wreg	equ	0xFE8
 12330                           postdec1	equ	0xFE5
 12331                           plusw1	equ	0xFE3
 12332                           fsr1l	equ	0xFE1
 12333                           indf2	equ	0xFDF
 12334                           postinc2	equ	0xFDE
 12335                           plusw2	equ	0xFDB
 12336                           fsr2h	equ	0xFDA
 12337                           fsr2l	equ	0xFD9
 12338                           status	equ	0xFD8
 12339                           
 12340 ;; *************** function _Activate_Buzzer_2KHz *****************
 12341 ;; Defined at:
 12342 ;;		line 113 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
 12343 ;; Parameters:    Size  Location     Type
 12344 ;;		None
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;		None
 12347 ;; Return value:  Size  Location     Type
 12348 ;;		None               void
 12349 ;; Registers used:
 12350 ;;		wreg, status,2
 12351 ;; Tracked objects:
 12352 ;;		On entry : 0/0
 12353 ;;		On exit  : 0/0
 12354 ;;		Unchanged: 0/0
 12355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12360 ;;Total ram usage:        0 bytes
 12361 ;; Hardware stack levels used:    1
 12362 ;; Hardware stack levels required when called:    3
 12363 ;; This function calls:
 12364 ;;		Nothing
 12365 ;; This function is called by:
 12366 ;;		_Do_Beep_Good
 12367 ;; This function uses a non-reentrant model
 12368 ;;
 12369                           
 12370                           	psect	text63
 12371  003C58                     __ptext63:
 12372                           	opt stack 0
 12373  003C58                     _Activate_Buzzer_2KHz:
 12374                           	opt stack 25
 12375                           
 12376                           ;utils.c: 115: PR2 = 0b11111001 ;
 12377                           
 12378                           ;incstack = 0
 12379  003C58  0EF9               	movlw	249
 12380  003C5A  6ECB               	movwf	4043,c	;volatile
 12381                           
 12382                           ;utils.c: 116: T2CON = 0b00000101 ;
 12383  003C5C  0E05               	movlw	5
 12384  003C5E  6ECA               	movwf	4042,c	;volatile
 12385                           
 12386                           ;utils.c: 117: CCPR2L = 0b01111100 ;
 12387  003C60  0E7C               	movlw	124
 12388  003C62  6EBB               	movwf	4027,c	;volatile
 12389                           
 12390                           ;utils.c: 118: CCP2CON = 0b00111100 ;
 12391  003C64  0E3C               	movlw	60
 12392  003C66  6EBA               	movwf	4026,c	;volatile
 12393  003C68  0012               	return		;funcret
 12394  003C6A                     __end_of_Activate_Buzzer_2KHz:
 12395                           	opt stack 0
 12396                           tblptru	equ	0xFF8
 12397                           tblptrh	equ	0xFF7
 12398                           tblptrl	equ	0xFF6
 12399                           tablat	equ	0xFF5
 12400                           prodh	equ	0xFF4
 12401                           prodl	equ	0xFF3
 12402                           intcon	equ	0xFF2
 12403                           intcon2	equ	0xFF1
 12404                           postinc0	equ	0xFEE
 12405                           wreg	equ	0xFE8
 12406                           postdec1	equ	0xFE5
 12407                           plusw1	equ	0xFE3
 12408                           fsr1l	equ	0xFE1
 12409                           indf2	equ	0xFDF
 12410                           postinc2	equ	0xFDE
 12411                           plusw2	equ	0xFDB
 12412                           fsr2h	equ	0xFDA
 12413                           fsr2l	equ	0xFD9
 12414                           status	equ	0xFD8
 12415                           
 12416 ;; *************** function _Do_Beep_Bad *****************
 12417 ;; Defined at:
 12418 ;;		line 81 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
 12419 ;; Parameters:    Size  Location     Type
 12420 ;;		None
 12421 ;; Auto vars:     Size  Location     Type
 12422 ;;		None
 12423 ;; Return value:  Size  Location     Type
 12424 ;;		None               void
 12425 ;; Registers used:
 12426 ;;		wreg, status,2, status,0, cstack
 12427 ;; Tracked objects:
 12428 ;;		On entry : 0/0
 12429 ;;		On exit  : 0/0
 12430 ;;		Unchanged: 0/0
 12431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12436 ;;Total ram usage:        0 bytes
 12437 ;; Hardware stack levels used:    1
 12438 ;; Hardware stack levels required when called:    6
 12439 ;; This function calls:
 12440 ;;		_Activate_Buzzer_500Hz
 12441 ;;		_Deactivate_Buzzer
 12442 ;;		_Wait_One_Sec
 12443 ;;		_do_update_pwm
 12444 ;; This function is called by:
 12445 ;;		_main
 12446 ;;		_Do_Setup_Alarm_Time
 12447 ;;		_Do_Setup_Heater_Temp
 12448 ;;		_Do_Setup_Time
 12449 ;; This function uses a non-reentrant model
 12450 ;;
 12451                           
 12452                           	psect	text64
 12453  003B7C                     __ptext64:
 12454                           	opt stack 0
 12455  003B7C                     _Do_Beep_Bad:
 12456                           	opt stack 23
 12457                           
 12458                           ;utils.c: 84: PORTBbits.RB7 = 1;
 12459                           
 12460                           ;incstack = 0
 12461  003B7C  8E81               	bsf	3969,7,c	;volatile
 12462                           
 12463                           ;utils.c: 85: Activate_Buzzer_500Hz();
 12464  003B7E  EC35  F01E         	call	_Activate_Buzzer_500Hz	;wreg free
 12465                           
 12466                           ;utils.c: 86: Wait_One_Sec();
 12467  003B82  EC5B  F01D         	call	_Wait_One_Sec	;wreg free
 12468                           
 12469                           ;utils.c: 87: PORTBbits.RB7 = 0;
 12470  003B86  9E81               	bcf	3969,7,c	;volatile
 12471                           
 12472                           ;utils.c: 88: Deactivate_Buzzer();
 12473  003B88  ECC1  F01E         	call	_Deactivate_Buzzer	;wreg free
 12474                           
 12475                           ;utils.c: 89: do_update_pwm(duty_cycle);
 12476  003B8C  505C               	movf	_duty_cycle,w,c
 12477  003B8E  EC9F  F014         	call	_do_update_pwm
 12478  003B92  0012               	return		;funcret
 12479  003B94                     __end_of_Do_Beep_Bad:
 12480                           	opt stack 0
 12481                           tblptru	equ	0xFF8
 12482                           tblptrh	equ	0xFF7
 12483                           tblptrl	equ	0xFF6
 12484                           tablat	equ	0xFF5
 12485                           prodh	equ	0xFF4
 12486                           prodl	equ	0xFF3
 12487                           intcon	equ	0xFF2
 12488                           intcon2	equ	0xFF1
 12489                           postinc0	equ	0xFEE
 12490                           wreg	equ	0xFE8
 12491                           postdec1	equ	0xFE5
 12492                           plusw1	equ	0xFE3
 12493                           fsr1l	equ	0xFE1
 12494                           indf2	equ	0xFDF
 12495                           postinc2	equ	0xFDE
 12496                           plusw2	equ	0xFDB
 12497                           fsr2h	equ	0xFDA
 12498                           fsr2l	equ	0xFD9
 12499                           status	equ	0xFD8
 12500                           
 12501 ;; *************** function _do_update_pwm *****************
 12502 ;; Defined at:
 12503 ;;		line 135 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
 12504 ;; Parameters:    Size  Location     Type
 12505 ;;  duty_cycle      1    wreg     unsigned char 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;  duty_cycle      1   64[COMRAM] unsigned char 
 12508 ;;  dc_f            3   61[COMRAM] float 
 12509 ;;  dc_I            2   65[COMRAM] int 
 12510 ;; Return value:  Size  Location     Type
 12511 ;;		None               void
 12512 ;; Registers used:
 12513 ;;		wreg, status,2, status,0, cstack
 12514 ;; Tracked objects:
 12515 ;;		On entry : 0/0
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12520 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12521 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12522 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12523 ;;Total ram usage:        9 bytes
 12524 ;; Hardware stack levels used:    1
 12525 ;; Hardware stack levels required when called:    5
 12526 ;; This function calls:
 12527 ;;		___ftdiv
 12528 ;;		___ftmul
 12529 ;;		___fttol
 12530 ;;		___lbtoft
 12531 ;; This function is called by:
 12532 ;;		_Test_Alarm
 12533 ;;		_Do_Beep_Good
 12534 ;;		_Do_Beep_Bad
 12535 ;;		_Monitor_Heater
 12536 ;;		_Turn_On_Fan
 12537 ;;		_Do_Beep
 12538 ;;		_Decrease_Speed
 12539 ;; This function uses a non-reentrant model
 12540 ;;
 12541                           
 12542                           	psect	text65
 12543  00293E                     __ptext65:
 12544                           	opt stack 0
 12545  00293E                     _do_update_pwm:
 12546                           	opt stack 23
 12547                           
 12548                           ;incstack = 0
 12549                           ;do_update_pwm@duty_cycle stored from wreg
 12550  00293E  6E41               	movwf	do_update_pwm@duty_cycle,c
 12551                           
 12552                           ;utils.c: 137: float dc_f;
 12553                           ;utils.c: 138: int dc_I;
 12554                           ;utils.c: 139: PR2 = 0b00000100 ;
 12555  002940  0E04               	movlw	4
 12556  002942  6ECB               	movwf	4043,c	;volatile
 12557                           
 12558                           ;utils.c: 140: T2CON = 0b00000111 ;
 12559  002944  0E07               	movlw	7
 12560  002946  6ECA               	movwf	4042,c	;volatile
 12561                           
 12562                           ;utils.c: 141: dc_f = ( 4.0 * duty_cycle / 20.0) ;
 12563  002948  0E00               	movlw	0
 12564  00294A  6E20               	movwf	___ftmul@f2,c
 12565  00294C  0E80               	movlw	128
 12566  00294E  6E21               	movwf	___ftmul@f2+1,c
 12567  002950  0E40               	movlw	64
 12568  002952  6E22               	movwf	___ftmul@f2+2,c
 12569  002954  5041               	movf	do_update_pwm@duty_cycle,w,c
 12570  002956  ECE8  F01C         	call	___lbtoft
 12571  00295A  C019  F01D         	movff	?___lbtoft,___ftmul@f1
 12572  00295E  C01A  F01E         	movff	?___lbtoft+1,___ftmul@f1+1
 12573  002962  C01B  F01F         	movff	?___lbtoft+2,___ftmul@f1+2
 12574  002966  EC13  F00F         	call	___ftmul	;wreg free
 12575  00296A  C01D  F02C         	movff	?___ftmul,___ftdiv@f1
 12576  00296E  C01E  F02D         	movff	?___ftmul+1,___ftdiv@f1+1
 12577  002972  C01F  F02E         	movff	?___ftmul+2,___ftdiv@f1+2
 12578  002976  0E00               	movlw	0
 12579  002978  6E2F               	movwf	___ftdiv@f2,c
 12580  00297A  0EA0               	movlw	160
 12581  00297C  6E30               	movwf	___ftdiv@f2+1,c
 12582  00297E  0E41               	movlw	65
 12583  002980  6E31               	movwf	___ftdiv@f2+2,c
 12584  002982  EC6D  F011         	call	___ftdiv	;wreg free
 12585  002986  C02C  F03E         	movff	?___ftdiv,do_update_pwm@dc_f
 12586  00298A  C02D  F03F         	movff	?___ftdiv+1,do_update_pwm@dc_f+1
 12587  00298E  C02E  F040         	movff	?___ftdiv+2,do_update_pwm@dc_f+2
 12588                           
 12589                           ;utils.c: 142: dc_I = (int) dc_f;
 12590  002992  C03E  F02C         	movff	do_update_pwm@dc_f,___fttol@f1
 12591  002996  C03F  F02D         	movff	do_update_pwm@dc_f+1,___fttol@f1+1
 12592  00299A  C040  F02E         	movff	do_update_pwm@dc_f+2,___fttol@f1+2
 12593  00299E  ECFA  F010         	call	___fttol	;wreg free
 12594  0029A2  C02C  F042         	movff	?___fttol,do_update_pwm@dc_I
 12595  0029A6  C02D  F043         	movff	?___fttol+1,do_update_pwm@dc_I+1
 12596                           
 12597                           ;utils.c: 143: if (dc_I > duty_cycle) dc_I++;
 12598  0029AA  5041               	movf	do_update_pwm@duty_cycle,w,c
 12599  0029AC  6E3B               	movwf	??_do_update_pwm& (0+255),c
 12600  0029AE  6A3C               	clrf	(??_do_update_pwm+1)& (0+255),c
 12601  0029B0  5042               	movf	do_update_pwm@dc_I,w,c
 12602  0029B2  5C3B               	subwf	??_do_update_pwm,w,c
 12603  0029B4  503C               	movf	??_do_update_pwm+1,w,c
 12604  0029B6  0A80               	xorlw	128
 12605  0029B8  6E3D               	movwf	(??_do_update_pwm+2)& (0+255),c
 12606  0029BA  5043               	movf	do_update_pwm@dc_I+1,w,c
 12607  0029BC  0A80               	xorlw	128
 12608  0029BE  583D               	subwfb	(??_do_update_pwm+2)& (0+255),w,c
 12609  0029C0  B0D8               	btfsc	status,0,c
 12610  0029C2  D003               	goto	l8910
 12611  0029C4  4A42               	infsnz	do_update_pwm@dc_I,f,c
 12612  0029C6  2A43               	incf	do_update_pwm@dc_I+1,f,c
 12613  0029C8  D000               	goto	l8910
 12614  0029CA                     l8910:
 12615                           
 12616                           ;utils.c: 144: CCP1CON = ((dc_I & 0x03) << 4) | 0b00001100;
 12617  0029CA  C042  F03B         	movff	do_update_pwm@dc_I,??_do_update_pwm
 12618  0029CE  0E03               	movlw	3
 12619  0029D0  163B               	andwf	??_do_update_pwm,f,c
 12620  0029D2  383B               	swapf	??_do_update_pwm,w,c
 12621  0029D4  0BF0               	andlw	240
 12622  0029D6  090C               	iorlw	12
 12623  0029D8  6EBD               	movwf	4029,c	;volatile
 12624                           
 12625                           ;utils.c: 145: CCPR1L = (dc_I) >> 2;
 12626  0029DA  C042  F03B         	movff	do_update_pwm@dc_I,??_do_update_pwm
 12627  0029DE  C043  F03C         	movff	do_update_pwm@dc_I+1,??_do_update_pwm+1
 12628  0029E2  343C               	rlcf	??_do_update_pwm+1,w,c
 12629  0029E4  323C               	rrcf	??_do_update_pwm+1,f,c
 12630  0029E6  323B               	rrcf	??_do_update_pwm,f,c
 12631  0029E8  343C               	rlcf	??_do_update_pwm+1,w,c
 12632  0029EA  323C               	rrcf	??_do_update_pwm+1,f,c
 12633  0029EC  323B               	rrcf	??_do_update_pwm,f,c
 12634  0029EE  503B               	movf	??_do_update_pwm,w,c
 12635  0029F0  6EBE               	movwf	4030,c	;volatile
 12636  0029F2  0012               	return		;funcret
 12637  0029F4                     __end_of_do_update_pwm:
 12638                           	opt stack 0
 12639                           tblptru	equ	0xFF8
 12640                           tblptrh	equ	0xFF7
 12641                           tblptrl	equ	0xFF6
 12642                           tablat	equ	0xFF5
 12643                           prodh	equ	0xFF4
 12644                           prodl	equ	0xFF3
 12645                           intcon	equ	0xFF2
 12646                           intcon2	equ	0xFF1
 12647                           postinc0	equ	0xFEE
 12648                           wreg	equ	0xFE8
 12649                           postdec1	equ	0xFE5
 12650                           plusw1	equ	0xFE3
 12651                           fsr1l	equ	0xFE1
 12652                           indf2	equ	0xFDF
 12653                           postinc2	equ	0xFDE
 12654                           plusw2	equ	0xFDB
 12655                           fsr2h	equ	0xFDA
 12656                           fsr2l	equ	0xFD9
 12657                           status	equ	0xFD8
 12658                           
 12659 ;; *************** function ___lbtoft *****************
 12660 ;; Defined at:
 12661 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;  c               1    wreg     unsigned char 
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;  c               1   27[COMRAM] unsigned char 
 12666 ;; Return value:  Size  Location     Type
 12667 ;;                  3   24[COMRAM] float 
 12668 ;; Registers used:
 12669 ;;		wreg, status,2, status,0, cstack
 12670 ;; Tracked objects:
 12671 ;;		On entry : 0/0
 12672 ;;		On exit  : 0/0
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12675 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12678 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12679 ;;Total ram usage:        4 bytes
 12680 ;; Hardware stack levels used:    1
 12681 ;; Hardware stack levels required when called:    4
 12682 ;; This function calls:
 12683 ;;		___ftpack
 12684 ;; This function is called by:
 12685 ;;		_do_update_pwm
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           
 12689                           	psect	text66
 12690  0039D0                     __ptext66:
 12691                           	opt stack 0
 12692  0039D0                     ___lbtoft:
 12693                           	opt stack 23
 12694                           
 12695                           ;incstack = 0
 12696                           ;___lbtoft@c stored from wreg
 12697  0039D0  6E1C               	movwf	___lbtoft@c,c
 12698  0039D2  501C               	movf	___lbtoft@c,w,c
 12699  0039D4  6E11               	movwf	___ftpack@arg,c
 12700  0039D6  6A12               	clrf	___ftpack@arg+1,c
 12701  0039D8  6A13               	clrf	___ftpack@arg+2,c
 12702  0039DA  0E8E               	movlw	142
 12703  0039DC  6E14               	movwf	___ftpack@exp,c
 12704  0039DE  0E00               	movlw	0
 12705  0039E0  6E15               	movwf	___ftpack@sign,c
 12706  0039E2  EC81  F013         	call	___ftpack	;wreg free
 12707  0039E6  C011  F019         	movff	?___ftpack,?___lbtoft
 12708  0039EA  C012  F01A         	movff	?___ftpack+1,?___lbtoft+1
 12709  0039EE  C013  F01B         	movff	?___ftpack+2,?___lbtoft+2
 12710  0039F2  D000               	goto	l1971
 12711  0039F4                     l1971:
 12712  0039F4  0012               	return		;funcret
 12713  0039F6                     __end_of___lbtoft:
 12714                           	opt stack 0
 12715                           tblptru	equ	0xFF8
 12716                           tblptrh	equ	0xFF7
 12717                           tblptrl	equ	0xFF6
 12718                           tablat	equ	0xFF5
 12719                           prodh	equ	0xFF4
 12720                           prodl	equ	0xFF3
 12721                           intcon	equ	0xFF2
 12722                           intcon2	equ	0xFF1
 12723                           postinc0	equ	0xFEE
 12724                           wreg	equ	0xFE8
 12725                           postdec1	equ	0xFE5
 12726                           plusw1	equ	0xFE3
 12727                           fsr1l	equ	0xFE1
 12728                           indf2	equ	0xFDF
 12729                           postinc2	equ	0xFDE
 12730                           plusw2	equ	0xFDB
 12731                           fsr2h	equ	0xFDA
 12732                           fsr2l	equ	0xFD9
 12733                           status	equ	0xFD8
 12734                           
 12735 ;; *************** function ___fttol *****************
 12736 ;; Defined at:
 12737 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 12738 ;; Parameters:    Size  Location     Type
 12739 ;;  f1              3   43[COMRAM] float 
 12740 ;; Auto vars:     Size  Location     Type
 12741 ;;  lval            4   53[COMRAM] unsigned long 
 12742 ;;  exp1            1   57[COMRAM] unsigned char 
 12743 ;;  sign1           1   52[COMRAM] unsigned char 
 12744 ;; Return value:  Size  Location     Type
 12745 ;;                  4   43[COMRAM] long 
 12746 ;; Registers used:
 12747 ;;		wreg, status,2, status,0
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12754 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12755 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12756 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12757 ;;Total ram usage:       15 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; Hardware stack levels required when called:    3
 12760 ;; This function calls:
 12761 ;;		Nothing
 12762 ;; This function is called by:
 12763 ;;		_Update_Screen
 12764 ;;		_do_update_pwm
 12765 ;; This function uses a non-reentrant model
 12766 ;;
 12767                           
 12768                           	psect	text67
 12769  0021F4                     __ptext67:
 12770                           	opt stack 0
 12771  0021F4                     ___fttol:
 12772                           	opt stack 26
 12773                           
 12774                           ;incstack = 0
 12775  0021F4  C02E  F030         	movff	___fttol@f1+2,??___fttol
 12776  0021F8  6A31               	clrf	(??___fttol+1)& (0+255),c
 12777  0021FA  6A32               	clrf	(??___fttol+2)& (0+255),c
 12778  0021FC  342D               	rlcf	___fttol@f1+1,w,c
 12779  0021FE  3630               	rlcf	??___fttol& (0+255),f,c
 12780  002200  E301               	bnc	u6491
 12781  002202  8031               	bsf	(??___fttol+1)& (0+255),0,c
 12782  002204                     u6491:
 12783  002204  5030               	movf	??___fttol,w,c
 12784  002206  6E3A               	movwf	___fttol@exp1,c
 12785  002208  503A               	movf	___fttol@exp1,w,c
 12786  00220A  A4D8               	btfss	status,2,c
 12787  00220C  D002               	goto	l8786
 12788  00220E  D039               	goto	l8810
 12789  002210  D063               	goto	l1930
 12790  002212                     l8786:
 12791  002212  0E17               	movlw	23
 12792  002214  6E30               	movwf	??___fttol& (0+255),c
 12793  002216  C02C  F031         	movff	___fttol@f1,??___fttol+1
 12794  00221A  C02D  F032         	movff	___fttol@f1+1,??___fttol+2
 12795  00221E  C02E  F033         	movff	___fttol@f1+2,??___fttol+3
 12796  002222  2830               	incf	??___fttol,w,c
 12797  002224  6E34               	movwf	(??___fttol+4)& (0+255),c
 12798  002226  D004               	goto	u6510
 12799  002228                     u6515:
 12800  002228  90D8               	bcf	status,0,c
 12801  00222A  3233               	rrcf	??___fttol+3,f,c
 12802  00222C  3232               	rrcf	??___fttol+2,f,c
 12803  00222E  3231               	rrcf	??___fttol+1,f,c
 12804  002230                     u6510:
 12805  002230  2E34               	decfsz	(??___fttol+4)& (0+255),f,c
 12806  002232  D7FA               	goto	u6515
 12807  002234  5031               	movf	??___fttol+1,w,c
 12808  002236  6E35               	movwf	___fttol@sign1,c
 12809  002238  8E2D               	bsf	___fttol@f1+1,7,c
 12810  00223A  0EFF               	movlw	255
 12811  00223C  162C               	andwf	___fttol@f1,f,c
 12812  00223E  0EFF               	movlw	255
 12813  002240  162D               	andwf	___fttol@f1+1,f,c
 12814  002242  0E00               	movlw	0
 12815  002244  162E               	andwf	___fttol@f1+2,f,c
 12816  002246  502C               	movf	___fttol@f1,w,c
 12817  002248  6E36               	movwf	___fttol@lval,c
 12818  00224A  502D               	movf	___fttol@f1+1,w,c
 12819  00224C  6E37               	movwf	___fttol@lval+1,c
 12820  00224E  502E               	movf	___fttol@f1+2,w,c
 12821  002250  6E38               	movwf	___fttol@lval+2,c
 12822  002252  6A39               	clrf	___fttol@lval+3,c
 12823  002254  0E8E               	movlw	142
 12824  002256  5E3A               	subwf	___fttol@exp1,f,c
 12825  002258  AE3A               	btfss	___fttol@exp1,7,c
 12826  00225A  D010               	goto	l8808
 12827  00225C  503A               	movf	___fttol@exp1,w,c
 12828  00225E  0A80               	xorlw	128
 12829  002260  0F8F               	addlw	143
 12830  002262  B0D8               	btfsc	status,0,c
 12831  002264  D003               	goto	l8804
 12832  002266  D00D               	goto	l8810
 12833  002268  D037               	goto	l1930
 12834  00226A  D000               	goto	l8804
 12835  00226C                     l8804:
 12836  00226C  90D8               	bcf	status,0,c
 12837  00226E  3239               	rrcf	___fttol@lval+3,f,c
 12838  002270  3238               	rrcf	___fttol@lval+2,f,c
 12839  002272  3237               	rrcf	___fttol@lval+1,f,c
 12840  002274  3236               	rrcf	___fttol@lval,f,c
 12841  002276  3E3A               	incfsz	___fttol@exp1,f,c
 12842  002278  D7F9               	goto	l8804
 12843  00227A  D019               	goto	l8818
 12844  00227C                     l8808:
 12845  00227C  0E17               	movlw	23
 12846  00227E  643A               	cpfsgt	___fttol@exp1,c
 12847  002280  D011               	goto	l8816
 12848  002282                     l8810:
 12849  002282  0E00               	movlw	0
 12850  002284  6E2C               	movwf	?___fttol,c
 12851  002286  0E00               	movlw	0
 12852  002288  6E2D               	movwf	?___fttol+1,c
 12853  00228A  0E00               	movlw	0
 12854  00228C  6E2E               	movwf	?___fttol+2,c
 12855  00228E  0E00               	movlw	0
 12856  002290  6E2F               	movwf	?___fttol+3,c
 12857  002292  D022               	goto	l1930
 12858  002294  D007               	goto	l8816
 12859  002296                     l8814:
 12860  002296  90D8               	bcf	status,0,c
 12861  002298  3636               	rlcf	___fttol@lval,f,c
 12862  00229A  3637               	rlcf	___fttol@lval+1,f,c
 12863  00229C  3638               	rlcf	___fttol@lval+2,f,c
 12864  00229E  3639               	rlcf	___fttol@lval+3,f,c
 12865  0022A0  063A               	decf	___fttol@exp1,f,c
 12866  0022A2  D000               	goto	l8816
 12867  0022A4                     l8816:
 12868  0022A4  503A               	movf	___fttol@exp1,w,c
 12869  0022A6  B4D8               	btfsc	status,2,c
 12870  0022A8  D002               	goto	l8818
 12871  0022AA  D7F5               	goto	l8814
 12872  0022AC  D000               	goto	l8818
 12873  0022AE                     l8818:
 12874  0022AE  5035               	movf	___fttol@sign1,w,c
 12875  0022B0  B4D8               	btfsc	status,2,c
 12876  0022B2  D009               	goto	l8822
 12877  0022B4  1E39               	comf	___fttol@lval+3,f,c
 12878  0022B6  1E38               	comf	___fttol@lval+2,f,c
 12879  0022B8  1E37               	comf	___fttol@lval+1,f,c
 12880  0022BA  6C36               	negf	___fttol@lval,c
 12881  0022BC  0E00               	movlw	0
 12882  0022BE  2237               	addwfc	___fttol@lval+1,f,c
 12883  0022C0  2238               	addwfc	___fttol@lval+2,f,c
 12884  0022C2  2239               	addwfc	___fttol@lval+3,f,c
 12885  0022C4  D000               	goto	l8822
 12886  0022C6                     l8822:
 12887  0022C6  C036  F02C         	movff	___fttol@lval,?___fttol
 12888  0022CA  C037  F02D         	movff	___fttol@lval+1,?___fttol+1
 12889  0022CE  C038  F02E         	movff	___fttol@lval+2,?___fttol+2
 12890  0022D2  C039  F02F         	movff	___fttol@lval+3,?___fttol+3
 12891  0022D6  D000               	goto	l1930
 12892  0022D8                     l1930:
 12893  0022D8  0012               	return		;funcret
 12894  0022DA                     __end_of___fttol:
 12895                           	opt stack 0
 12896                           tblptru	equ	0xFF8
 12897                           tblptrh	equ	0xFF7
 12898                           tblptrl	equ	0xFF6
 12899                           tablat	equ	0xFF5
 12900                           prodh	equ	0xFF4
 12901                           prodl	equ	0xFF3
 12902                           intcon	equ	0xFF2
 12903                           intcon2	equ	0xFF1
 12904                           postinc0	equ	0xFEE
 12905                           wreg	equ	0xFE8
 12906                           postdec1	equ	0xFE5
 12907                           plusw1	equ	0xFE3
 12908                           fsr1l	equ	0xFE1
 12909                           indf2	equ	0xFDF
 12910                           postinc2	equ	0xFDE
 12911                           plusw2	equ	0xFDB
 12912                           fsr2h	equ	0xFDA
 12913                           fsr2l	equ	0xFD9
 12914                           status	equ	0xFD8
 12915                           
 12916 ;; *************** function ___ftmul *****************
 12917 ;; Defined at:
 12918 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 12919 ;; Parameters:    Size  Location     Type
 12920 ;;  f1              3   28[COMRAM] float 
 12921 ;;  f2              3   31[COMRAM] float 
 12922 ;; Auto vars:     Size  Location     Type
 12923 ;;  f3_as_produc    3   38[COMRAM] unsigned um
 12924 ;;  sign            1   42[COMRAM] unsigned char 
 12925 ;;  cntr            1   41[COMRAM] unsigned char 
 12926 ;;  exp             1   37[COMRAM] unsigned char 
 12927 ;; Return value:  Size  Location     Type
 12928 ;;                  3   28[COMRAM] float 
 12929 ;; Registers used:
 12930 ;;		wreg, status,2, status,0, cstack
 12931 ;; Tracked objects:
 12932 ;;		On entry : 0/0
 12933 ;;		On exit  : 0/0
 12934 ;;		Unchanged: 0/0
 12935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12936 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12937 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12938 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12939 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12940 ;;Total ram usage:       15 bytes
 12941 ;; Hardware stack levels used:    1
 12942 ;; Hardware stack levels required when called:    4
 12943 ;; This function calls:
 12944 ;;		___ftpack
 12945 ;; This function is called by:
 12946 ;;		_Update_Screen
 12947 ;;		_do_update_pwm
 12948 ;;		_read_volt
 12949 ;; This function uses a non-reentrant model
 12950 ;;
 12951                           
 12952                           	psect	text68
 12953  001E26                     __ptext68:
 12954                           	opt stack 0
 12955  001E26                     ___ftmul:
 12956                           	opt stack 25
 12957                           
 12958                           ;incstack = 0
 12959  001E26  C01F  F023         	movff	___ftmul@f1+2,??___ftmul
 12960  001E2A  6A24               	clrf	(??___ftmul+1)& (0+255),c
 12961  001E2C  6A25               	clrf	(??___ftmul+2)& (0+255),c
 12962  001E2E  341E               	rlcf	___ftmul@f1+1,w,c
 12963  001E30  3623               	rlcf	??___ftmul& (0+255),f,c
 12964  001E32  E301               	bnc	u6431
 12965  001E34  8024               	bsf	(??___ftmul+1)& (0+255),0,c
 12966  001E36                     u6431:
 12967  001E36  5023               	movf	??___ftmul,w,c
 12968  001E38  6E26               	movwf	___ftmul@exp,c
 12969  001E3A  5026               	movf	___ftmul@exp,w,c
 12970  001E3C  A4D8               	btfss	status,2,c
 12971  001E3E  D002               	goto	l8738
 12972  001E40  D00E               	goto	l8740
 12973  001E42  D06C               	goto	l1909
 12974  001E44                     l8738:
 12975  001E44  C022  F023         	movff	___ftmul@f2+2,??___ftmul
 12976  001E48  6A24               	clrf	(??___ftmul+1)& (0+255),c
 12977  001E4A  6A25               	clrf	(??___ftmul+2)& (0+255),c
 12978  001E4C  3421               	rlcf	___ftmul@f2+1,w,c
 12979  001E4E  3623               	rlcf	??___ftmul& (0+255),f,c
 12980  001E50  E301               	bnc	u6451
 12981  001E52  8024               	bsf	(??___ftmul+1)& (0+255),0,c
 12982  001E54                     u6451:
 12983  001E54  5023               	movf	??___ftmul,w,c
 12984  001E56  6E2B               	movwf	___ftmul@sign,c
 12985  001E58  502B               	movf	___ftmul@sign,w,c
 12986  001E5A  A4D8               	btfss	status,2,c
 12987  001E5C  D007               	goto	l8744
 12988  001E5E                     l8740:
 12989  001E5E  0E00               	movlw	0
 12990  001E60  6E1D               	movwf	?___ftmul,c
 12991  001E62  0E00               	movlw	0
 12992  001E64  6E1E               	movwf	?___ftmul+1,c
 12993  001E66  0E00               	movlw	0
 12994  001E68  6E1F               	movwf	?___ftmul+2,c
 12995  001E6A  D058               	goto	l1909
 12996  001E6C                     l8744:
 12997  001E6C  502B               	movf	___ftmul@sign,w,c
 12998  001E6E  0F7B               	addlw	123
 12999  001E70  2626               	addwf	___ftmul@exp,f,c
 13000  001E72  C01F  F02B         	movff	___ftmul@f1+2,___ftmul@sign
 13001  001E76  5022               	movf	___ftmul@f2+2,w,c
 13002  001E78  1A2B               	xorwf	___ftmul@sign,f,c
 13003  001E7A  0E80               	movlw	128
 13004  001E7C  162B               	andwf	___ftmul@sign,f,c
 13005  001E7E  8E1E               	bsf	___ftmul@f1+1,7,c
 13006  001E80  8E21               	bsf	___ftmul@f2+1,7,c
 13007  001E82  0EFF               	movlw	255
 13008  001E84  1620               	andwf	___ftmul@f2,f,c
 13009  001E86  0EFF               	movlw	255
 13010  001E88  1621               	andwf	___ftmul@f2+1,f,c
 13011  001E8A  0E00               	movlw	0
 13012  001E8C  1622               	andwf	___ftmul@f2+2,f,c
 13013  001E8E  0E00               	movlw	0
 13014  001E90  6E27               	movwf	___ftmul@f3_as_product,c
 13015  001E92  0E00               	movlw	0
 13016  001E94  6E28               	movwf	___ftmul@f3_as_product+1,c
 13017  001E96  0E00               	movlw	0
 13018  001E98  6E29               	movwf	___ftmul@f3_as_product+2,c
 13019  001E9A  0E07               	movlw	7
 13020  001E9C  6E2A               	movwf	___ftmul@cntr,c
 13021  001E9E  D000               	goto	l8758
 13022  001EA0                     l8758:
 13023  001EA0  A01D               	btfss	___ftmul@f1,0,c
 13024  001EA2  D007               	goto	l8762
 13025  001EA4  5020               	movf	___ftmul@f2,w,c
 13026  001EA6  2627               	addwf	___ftmul@f3_as_product,f,c
 13027  001EA8  5021               	movf	___ftmul@f2+1,w,c
 13028  001EAA  2228               	addwfc	___ftmul@f3_as_product+1,f,c
 13029  001EAC  5022               	movf	___ftmul@f2+2,w,c
 13030  001EAE  2229               	addwfc	___ftmul@f3_as_product+2,f,c
 13031  001EB0  D000               	goto	l8762
 13032  001EB2                     l8762:
 13033  001EB2  90D8               	bcf	status,0,c
 13034  001EB4  321F               	rrcf	___ftmul@f1+2,f,c
 13035  001EB6  321E               	rrcf	___ftmul@f1+1,f,c
 13036  001EB8  321D               	rrcf	___ftmul@f1,f,c
 13037  001EBA  90D8               	bcf	status,0,c
 13038  001EBC  3620               	rlcf	___ftmul@f2,f,c
 13039  001EBE  3621               	rlcf	___ftmul@f2+1,f,c
 13040  001EC0  3622               	rlcf	___ftmul@f2+2,f,c
 13041  001EC2  2E2A               	decfsz	___ftmul@cntr,f,c
 13042  001EC4  D7ED               	goto	l8758
 13043  001EC6  D000               	goto	l8766
 13044  001EC8                     l8766:
 13045  001EC8  0E09               	movlw	9
 13046  001ECA  6E2A               	movwf	___ftmul@cntr,c
 13047  001ECC  D000               	goto	l8768
 13048  001ECE                     l8768:
 13049  001ECE  A01D               	btfss	___ftmul@f1,0,c
 13050  001ED0  D007               	goto	l8772
 13051  001ED2  5020               	movf	___ftmul@f2,w,c
 13052  001ED4  2627               	addwf	___ftmul@f3_as_product,f,c
 13053  001ED6  5021               	movf	___ftmul@f2+1,w,c
 13054  001ED8  2228               	addwfc	___ftmul@f3_as_product+1,f,c
 13055  001EDA  5022               	movf	___ftmul@f2+2,w,c
 13056  001EDC  2229               	addwfc	___ftmul@f3_as_product+2,f,c
 13057  001EDE  D000               	goto	l8772
 13058  001EE0                     l8772:
 13059  001EE0  90D8               	bcf	status,0,c
 13060  001EE2  321F               	rrcf	___ftmul@f1+2,f,c
 13061  001EE4  321E               	rrcf	___ftmul@f1+1,f,c
 13062  001EE6  321D               	rrcf	___ftmul@f1,f,c
 13063  001EE8  90D8               	bcf	status,0,c
 13064  001EEA  3229               	rrcf	___ftmul@f3_as_product+2,f,c
 13065  001EEC  3228               	rrcf	___ftmul@f3_as_product+1,f,c
 13066  001EEE  3227               	rrcf	___ftmul@f3_as_product,f,c
 13067  001EF0  2E2A               	decfsz	___ftmul@cntr,f,c
 13068  001EF2  D7ED               	goto	l8768
 13069  001EF4  D000               	goto	l8776
 13070  001EF6                     l8776:
 13071  001EF6  C027  F011         	movff	___ftmul@f3_as_product,___ftpack@arg
 13072  001EFA  C028  F012         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 13073  001EFE  C029  F013         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 13074  001F02  C026  F014         	movff	___ftmul@exp,___ftpack@exp
 13075  001F06  C02B  F015         	movff	___ftmul@sign,___ftpack@sign
 13076  001F0A  EC81  F013         	call	___ftpack	;wreg free
 13077  001F0E  C011  F01D         	movff	?___ftpack,?___ftmul
 13078  001F12  C012  F01E         	movff	?___ftpack+1,?___ftmul+1
 13079  001F16  C013  F01F         	movff	?___ftpack+2,?___ftmul+2
 13080  001F1A  D000               	goto	l1909
 13081  001F1C                     l1909:
 13082  001F1C  0012               	return		;funcret
 13083  001F1E                     __end_of___ftmul:
 13084                           	opt stack 0
 13085                           tblptru	equ	0xFF8
 13086                           tblptrh	equ	0xFF7
 13087                           tblptrl	equ	0xFF6
 13088                           tablat	equ	0xFF5
 13089                           prodh	equ	0xFF4
 13090                           prodl	equ	0xFF3
 13091                           intcon	equ	0xFF2
 13092                           intcon2	equ	0xFF1
 13093                           postinc0	equ	0xFEE
 13094                           wreg	equ	0xFE8
 13095                           postdec1	equ	0xFE5
 13096                           plusw1	equ	0xFE3
 13097                           fsr1l	equ	0xFE1
 13098                           indf2	equ	0xFDF
 13099                           postinc2	equ	0xFDE
 13100                           plusw2	equ	0xFDB
 13101                           fsr2h	equ	0xFDA
 13102                           fsr2l	equ	0xFD9
 13103                           status	equ	0xFD8
 13104                           
 13105 ;; *************** function ___ftdiv *****************
 13106 ;; Defined at:
 13107 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 13108 ;; Parameters:    Size  Location     Type
 13109 ;;  f1              3   43[COMRAM] float 
 13110 ;;  f2              3   46[COMRAM] float 
 13111 ;; Auto vars:     Size  Location     Type
 13112 ;;  f3              3   53[COMRAM] float 
 13113 ;;  sign            1   57[COMRAM] unsigned char 
 13114 ;;  exp             1   56[COMRAM] unsigned char 
 13115 ;;  cntr            1   52[COMRAM] unsigned char 
 13116 ;; Return value:  Size  Location     Type
 13117 ;;                  3   43[COMRAM] float 
 13118 ;; Registers used:
 13119 ;;		wreg, status,2, status,0, cstack
 13120 ;; Tracked objects:
 13121 ;;		On entry : 0/0
 13122 ;;		On exit  : 0/0
 13123 ;;		Unchanged: 0/0
 13124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13125 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13126 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13127 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13128 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13129 ;;Total ram usage:       15 bytes
 13130 ;; Hardware stack levels used:    1
 13131 ;; Hardware stack levels required when called:    4
 13132 ;; This function calls:
 13133 ;;		___ftpack
 13134 ;; This function is called by:
 13135 ;;		_do_update_pwm
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           	psect	text69
 13140  0022DA                     __ptext69:
 13141                           	opt stack 0
 13142  0022DA                     ___ftdiv:
 13143                           	opt stack 23
 13144                           
 13145                           ;incstack = 0
 13146  0022DA  C02E  F032         	movff	___ftdiv@f1+2,??___ftdiv
 13147  0022DE  6A33               	clrf	(??___ftdiv+1)& (0+255),c
 13148  0022E0  6A34               	clrf	(??___ftdiv+2)& (0+255),c
 13149  0022E2  342D               	rlcf	___ftdiv@f1+1,w,c
 13150  0022E4  3632               	rlcf	??___ftdiv& (0+255),f,c
 13151  0022E6  E301               	bnc	u6381
 13152  0022E8  8033               	bsf	(??___ftdiv+1)& (0+255),0,c
 13153  0022EA                     u6381:
 13154  0022EA  5032               	movf	??___ftdiv,w,c
 13155  0022EC  6E39               	movwf	___ftdiv@exp,c
 13156  0022EE  5039               	movf	___ftdiv@exp,w,c
 13157  0022F0  A4D8               	btfss	status,2,c
 13158  0022F2  D002               	goto	l8692
 13159  0022F4  D00E               	goto	l8694
 13160  0022F6  D061               	goto	l1894
 13161  0022F8                     l8692:
 13162  0022F8  C031  F032         	movff	___ftdiv@f2+2,??___ftdiv
 13163  0022FC  6A33               	clrf	(??___ftdiv+1)& (0+255),c
 13164  0022FE  6A34               	clrf	(??___ftdiv+2)& (0+255),c
 13165  002300  3430               	rlcf	___ftdiv@f2+1,w,c
 13166  002302  3632               	rlcf	??___ftdiv& (0+255),f,c
 13167  002304  E301               	bnc	u6401
 13168  002306  8033               	bsf	(??___ftdiv+1)& (0+255),0,c
 13169  002308                     u6401:
 13170  002308  5032               	movf	??___ftdiv,w,c
 13171  00230A  6E3A               	movwf	___ftdiv@sign,c
 13172  00230C  503A               	movf	___ftdiv@sign,w,c
 13173  00230E  A4D8               	btfss	status,2,c
 13174  002310  D007               	goto	l8698
 13175  002312                     l8694:
 13176  002312  0E00               	movlw	0
 13177  002314  6E2C               	movwf	?___ftdiv,c
 13178  002316  0E00               	movlw	0
 13179  002318  6E2D               	movwf	?___ftdiv+1,c
 13180  00231A  0E00               	movlw	0
 13181  00231C  6E2E               	movwf	?___ftdiv+2,c
 13182  00231E  D04D               	goto	l1894
 13183  002320                     l8698:
 13184  002320  0E00               	movlw	0
 13185  002322  6E36               	movwf	___ftdiv@f3,c
 13186  002324  0E00               	movlw	0
 13187  002326  6E37               	movwf	___ftdiv@f3+1,c
 13188  002328  0E00               	movlw	0
 13189  00232A  6E38               	movwf	___ftdiv@f3+2,c
 13190  00232C  503A               	movf	___ftdiv@sign,w,c
 13191  00232E  0F89               	addlw	137
 13192  002330  5E39               	subwf	___ftdiv@exp,f,c
 13193  002332  C02E  F03A         	movff	___ftdiv@f1+2,___ftdiv@sign
 13194  002336  5031               	movf	___ftdiv@f2+2,w,c
 13195  002338  1A3A               	xorwf	___ftdiv@sign,f,c
 13196  00233A  0E80               	movlw	128
 13197  00233C  163A               	andwf	___ftdiv@sign,f,c
 13198  00233E  8E2D               	bsf	___ftdiv@f1+1,7,c
 13199  002340  0EFF               	movlw	255
 13200  002342  162C               	andwf	___ftdiv@f1,f,c
 13201  002344  0EFF               	movlw	255
 13202  002346  162D               	andwf	___ftdiv@f1+1,f,c
 13203  002348  0E00               	movlw	0
 13204  00234A  162E               	andwf	___ftdiv@f1+2,f,c
 13205  00234C  8E30               	bsf	___ftdiv@f2+1,7,c
 13206  00234E  0EFF               	movlw	255
 13207  002350  162F               	andwf	___ftdiv@f2,f,c
 13208  002352  0EFF               	movlw	255
 13209  002354  1630               	andwf	___ftdiv@f2+1,f,c
 13210  002356  0E00               	movlw	0
 13211  002358  1631               	andwf	___ftdiv@f2+2,f,c
 13212  00235A  0E18               	movlw	24
 13213  00235C  6E35               	movwf	___ftdiv@cntr,c
 13214  00235E  D000               	goto	l8718
 13215  002360                     l8718:
 13216  002360  90D8               	bcf	status,0,c
 13217  002362  3636               	rlcf	___ftdiv@f3,f,c
 13218  002364  3637               	rlcf	___ftdiv@f3+1,f,c
 13219  002366  3638               	rlcf	___ftdiv@f3+2,f,c
 13220  002368  502F               	movf	___ftdiv@f2,w,c
 13221  00236A  5C2C               	subwf	___ftdiv@f1,w,c
 13222  00236C  5030               	movf	___ftdiv@f2+1,w,c
 13223  00236E  582D               	subwfb	___ftdiv@f1+1,w,c
 13224  002370  5031               	movf	___ftdiv@f2+2,w,c
 13225  002372  582E               	subwfb	___ftdiv@f1+2,w,c
 13226  002374  A0D8               	btfss	status,0,c
 13227  002376  D007               	goto	l1897
 13228  002378  502F               	movf	___ftdiv@f2,w,c
 13229  00237A  5E2C               	subwf	___ftdiv@f1,f,c
 13230  00237C  5030               	movf	___ftdiv@f2+1,w,c
 13231  00237E  5A2D               	subwfb	___ftdiv@f1+1,f,c
 13232  002380  5031               	movf	___ftdiv@f2+2,w,c
 13233  002382  5A2E               	subwfb	___ftdiv@f1+2,f,c
 13234  002384  8036               	bsf	___ftdiv@f3,0,c
 13235  002386                     l1897:
 13236  002386  90D8               	bcf	status,0,c
 13237  002388  362C               	rlcf	___ftdiv@f1,f,c
 13238  00238A  362D               	rlcf	___ftdiv@f1+1,f,c
 13239  00238C  362E               	rlcf	___ftdiv@f1+2,f,c
 13240  00238E  2E35               	decfsz	___ftdiv@cntr,f,c
 13241  002390  D7E7               	goto	l8718
 13242  002392  D000               	goto	l8728
 13243  002394                     l8728:
 13244  002394  C036  F011         	movff	___ftdiv@f3,___ftpack@arg
 13245  002398  C037  F012         	movff	___ftdiv@f3+1,___ftpack@arg+1
 13246  00239C  C038  F013         	movff	___ftdiv@f3+2,___ftpack@arg+2
 13247  0023A0  C039  F014         	movff	___ftdiv@exp,___ftpack@exp
 13248  0023A4  C03A  F015         	movff	___ftdiv@sign,___ftpack@sign
 13249  0023A8  EC81  F013         	call	___ftpack	;wreg free
 13250  0023AC  C011  F02C         	movff	?___ftpack,?___ftdiv
 13251  0023B0  C012  F02D         	movff	?___ftpack+1,?___ftdiv+1
 13252  0023B4  C013  F02E         	movff	?___ftpack+2,?___ftdiv+2
 13253  0023B8  D000               	goto	l1894
 13254  0023BA                     l1894:
 13255  0023BA  0012               	return		;funcret
 13256  0023BC                     __end_of___ftdiv:
 13257                           	opt stack 0
 13258                           tblptru	equ	0xFF8
 13259                           tblptrh	equ	0xFF7
 13260                           tblptrl	equ	0xFF6
 13261                           tablat	equ	0xFF5
 13262                           prodh	equ	0xFF4
 13263                           prodl	equ	0xFF3
 13264                           intcon	equ	0xFF2
 13265                           intcon2	equ	0xFF1
 13266                           postinc0	equ	0xFEE
 13267                           wreg	equ	0xFE8
 13268                           postdec1	equ	0xFE5
 13269                           plusw1	equ	0xFE3
 13270                           fsr1l	equ	0xFE1
 13271                           indf2	equ	0xFDF
 13272                           postinc2	equ	0xFDE
 13273                           plusw2	equ	0xFDB
 13274                           fsr2h	equ	0xFDA
 13275                           fsr2l	equ	0xFD9
 13276                           status	equ	0xFD8
 13277                           
 13278 ;; *************** function ___ftpack *****************
 13279 ;; Defined at:
 13280 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 13281 ;; Parameters:    Size  Location     Type
 13282 ;;  arg             3   16[COMRAM] unsigned um
 13283 ;;  exp             1   19[COMRAM] unsigned char 
 13284 ;;  sign            1   20[COMRAM] unsigned char 
 13285 ;; Auto vars:     Size  Location     Type
 13286 ;;		None
 13287 ;; Return value:  Size  Location     Type
 13288 ;;                  3   16[COMRAM] float 
 13289 ;; Registers used:
 13290 ;;		wreg, status,2, status,0
 13291 ;; Tracked objects:
 13292 ;;		On entry : 0/0
 13293 ;;		On exit  : 0/0
 13294 ;;		Unchanged: 0/0
 13295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13296 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13298 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13299 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13300 ;;Total ram usage:        8 bytes
 13301 ;; Hardware stack levels used:    1
 13302 ;; Hardware stack levels required when called:    3
 13303 ;; This function calls:
 13304 ;;		Nothing
 13305 ;; This function is called by:
 13306 ;;		___ftdiv
 13307 ;;		___ftmul
 13308 ;;		___lbtoft
 13309 ;;		___lwtoft
 13310 ;; This function uses a non-reentrant model
 13311 ;;
 13312                           
 13313                           	psect	text70
 13314  002702                     __ptext70:
 13315                           	opt stack 0
 13316  002702                     ___ftpack:
 13317                           	opt stack 25
 13318                           
 13319                           ;incstack = 0
 13320  002702  5014               	movf	___ftpack@exp,w,c
 13321  002704  B4D8               	btfsc	status,2,c
 13322  002706  D005               	goto	l8272
 13323  002708  5011               	movf	___ftpack@arg,w,c
 13324  00270A  1012               	iorwf	___ftpack@arg+1,w,c
 13325  00270C  1013               	iorwf	___ftpack@arg+2,w,c
 13326  00270E  A4D8               	btfss	status,2,c
 13327  002710  D00E               	goto	l8278
 13328  002712                     l8272:
 13329  002712  0E00               	movlw	0
 13330  002714  6E11               	movwf	?___ftpack,c
 13331  002716  0E00               	movlw	0
 13332  002718  6E12               	movwf	?___ftpack+1,c
 13333  00271A  0E00               	movlw	0
 13334  00271C  6E13               	movwf	?___ftpack+2,c
 13335  00271E  D053               	goto	l1822
 13336  002720  D006               	goto	l8278
 13337  002722                     l8276:
 13338  002722  2A14               	incf	___ftpack@exp,f,c
 13339  002724  90D8               	bcf	status,0,c
 13340  002726  3213               	rrcf	___ftpack@arg+2,f,c
 13341  002728  3212               	rrcf	___ftpack@arg+1,f,c
 13342  00272A  3211               	rrcf	___ftpack@arg,f,c
 13343  00272C  D000               	goto	l8278
 13344  00272E                     l8278:
 13345  00272E  0E00               	movlw	0
 13346  002730  1411               	andwf	___ftpack@arg,w,c
 13347  002732  6E16               	movwf	??___ftpack& (0+255),c
 13348  002734  0E00               	movlw	0
 13349  002736  1412               	andwf	___ftpack@arg+1,w,c
 13350  002738  6E17               	movwf	(??___ftpack+1)& (0+255),c
 13351  00273A  0EFE               	movlw	254
 13352  00273C  1413               	andwf	___ftpack@arg+2,w,c
 13353  00273E  6E18               	movwf	(??___ftpack+2)& (0+255),c
 13354  002740  5016               	movf	??___ftpack,w,c
 13355  002742  1017               	iorwf	??___ftpack+1,w,c
 13356  002744  1018               	iorwf	??___ftpack+2,w,c
 13357  002746  B4D8               	btfsc	status,2,c
 13358  002748  D00E               	goto	l8284
 13359  00274A  D7EB               	goto	l8276
 13360  00274C  D00C               	goto	l8284
 13361  00274E                     l8280:
 13362  00274E  2A14               	incf	___ftpack@exp,f,c
 13363  002750  0E01               	movlw	1
 13364  002752  2611               	addwf	___ftpack@arg,f,c
 13365  002754  0E00               	movlw	0
 13366  002756  2212               	addwfc	___ftpack@arg+1,f,c
 13367  002758  0E00               	movlw	0
 13368  00275A  2213               	addwfc	___ftpack@arg+2,f,c
 13369  00275C  90D8               	bcf	status,0,c
 13370  00275E  3213               	rrcf	___ftpack@arg+2,f,c
 13371  002760  3212               	rrcf	___ftpack@arg+1,f,c
 13372  002762  3211               	rrcf	___ftpack@arg,f,c
 13373  002764  D000               	goto	l8284
 13374  002766                     l8284:
 13375  002766  0E00               	movlw	0
 13376  002768  1411               	andwf	___ftpack@arg,w,c
 13377  00276A  6E16               	movwf	??___ftpack& (0+255),c
 13378  00276C  0E00               	movlw	0
 13379  00276E  1412               	andwf	___ftpack@arg+1,w,c
 13380  002770  6E17               	movwf	(??___ftpack+1)& (0+255),c
 13381  002772  0EFF               	movlw	255
 13382  002774  1413               	andwf	___ftpack@arg+2,w,c
 13383  002776  6E18               	movwf	(??___ftpack+2)& (0+255),c
 13384  002778  5016               	movf	??___ftpack,w,c
 13385  00277A  1017               	iorwf	??___ftpack+1,w,c
 13386  00277C  1018               	iorwf	??___ftpack+2,w,c
 13387  00277E  B4D8               	btfsc	status,2,c
 13388  002780  D008               	goto	l8288
 13389  002782  D7E5               	goto	l8280
 13390  002784  D006               	goto	l8288
 13391  002786                     l8286:
 13392  002786  0614               	decf	___ftpack@exp,f,c
 13393  002788  90D8               	bcf	status,0,c
 13394  00278A  3611               	rlcf	___ftpack@arg,f,c
 13395  00278C  3612               	rlcf	___ftpack@arg+1,f,c
 13396  00278E  3613               	rlcf	___ftpack@arg+2,f,c
 13397  002790  D000               	goto	l8288
 13398  002792                     l8288:
 13399  002792  BE12               	btfsc	___ftpack@arg+1,7,c
 13400  002794  D004               	goto	l1833
 13401  002796  0E02               	movlw	2
 13402  002798  6014               	cpfslt	___ftpack@exp,c
 13403  00279A  D7F5               	goto	l8286
 13404  00279C  D000               	goto	l1833
 13405  00279E                     l1833:
 13406  00279E  B014               	btfsc	___ftpack@exp,0,c
 13407  0027A0  D002               	goto	l8294
 13408  0027A2  9E12               	bcf	___ftpack@arg+1,7,c
 13409  0027A4  D000               	goto	l8294
 13410  0027A6                     l8294:
 13411  0027A6  90D8               	bcf	status,0,c
 13412  0027A8  3214               	rrcf	___ftpack@exp,f,c
 13413  0027AA  5014               	movf	___ftpack@exp,w,c
 13414  0027AC  1213               	iorwf	___ftpack@arg+2,f,c
 13415  0027AE  5015               	movf	___ftpack@sign,w,c
 13416  0027B0  B4D8               	btfsc	status,2,c
 13417  0027B2  D002               	goto	l8300
 13418  0027B4  8E13               	bsf	___ftpack@arg+2,7,c
 13419  0027B6  D000               	goto	l8300
 13420  0027B8                     l8300:
 13421  0027B8  C011  F011         	movff	___ftpack@arg,?___ftpack
 13422  0027BC  C012  F012         	movff	___ftpack@arg+1,?___ftpack+1
 13423  0027C0  C013  F013         	movff	___ftpack@arg+2,?___ftpack+2
 13424  0027C4  D000               	goto	l1822
 13425  0027C6                     l1822:
 13426  0027C6  0012               	return		;funcret
 13427  0027C8                     __end_of___ftpack:
 13428                           	opt stack 0
 13429                           tblptru	equ	0xFF8
 13430                           tblptrh	equ	0xFF7
 13431                           tblptrl	equ	0xFF6
 13432                           tablat	equ	0xFF5
 13433                           prodh	equ	0xFF4
 13434                           prodl	equ	0xFF3
 13435                           intcon	equ	0xFF2
 13436                           intcon2	equ	0xFF1
 13437                           postinc0	equ	0xFEE
 13438                           wreg	equ	0xFE8
 13439                           postdec1	equ	0xFE5
 13440                           plusw1	equ	0xFE3
 13441                           fsr1l	equ	0xFE1
 13442                           indf2	equ	0xFDF
 13443                           postinc2	equ	0xFDE
 13444                           plusw2	equ	0xFDB
 13445                           fsr2h	equ	0xFDA
 13446                           fsr2l	equ	0xFD9
 13447                           status	equ	0xFD8
 13448                           
 13449 ;; *************** function _Wait_One_Sec *****************
 13450 ;; Defined at:
 13451 ;;		line 92 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
 13452 ;; Parameters:    Size  Location     Type
 13453 ;;		None
 13454 ;; Auto vars:     Size  Location     Type
 13455 ;;  k               2   16[COMRAM] int 
 13456 ;; Return value:  Size  Location     Type
 13457 ;;		None               void
 13458 ;; Registers used:
 13459 ;;		wreg, status,2, status,0
 13460 ;; Tracked objects:
 13461 ;;		On entry : 0/0
 13462 ;;		On exit  : 0/0
 13463 ;;		Unchanged: 0/0
 13464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13469 ;;Total ram usage:        2 bytes
 13470 ;; Hardware stack levels used:    1
 13471 ;; Hardware stack levels required when called:    3
 13472 ;; This function calls:
 13473 ;;		Nothing
 13474 ;; This function is called by:
 13475 ;;		_Do_Beep_Good
 13476 ;;		_Do_Beep_Bad
 13477 ;;		_Set_RGB_Color
 13478 ;;		_Do_Beep
 13479 ;; This function uses a non-reentrant model
 13480 ;;
 13481                           
 13482                           	psect	text71
 13483  003AB6                     __ptext71:
 13484                           	opt stack 0
 13485  003AB6                     _Wait_One_Sec:
 13486                           	opt stack 25
 13487                           
 13488                           ;utils.c: 94: for (int k=0;k<0x8000;k++);
 13489                           
 13490                           ;incstack = 0
 13491  003AB6  0E00               	movlw	0
 13492  003AB8  6E12               	movwf	Wait_One_Sec@k+1,c
 13493  003ABA  0E00               	movlw	0
 13494  003ABC  6E11               	movwf	Wait_One_Sec@k,c
 13495  003ABE                     l6300:
 13496  003ABE  0E80               	movlw	128
 13497  003AC0  5C12               	subwf	Wait_One_Sec@k+1,w,c
 13498  003AC2  B0D8               	btfsc	status,0,c
 13499  003AC4  D005               	goto	l1033
 13500  003AC6  D001               	goto	l6304
 13501  003AC8  D003               	goto	l1033
 13502  003ACA                     l6304:
 13503  003ACA  4A11               	infsnz	Wait_One_Sec@k,f,c
 13504  003ACC  2A12               	incf	Wait_One_Sec@k+1,f,c
 13505  003ACE  D7F7               	goto	l6300
 13506  003AD0                     l1033:
 13507  003AD0  0012               	return		;funcret
 13508  003AD2                     __end_of_Wait_One_Sec:
 13509                           	opt stack 0
 13510                           tblptru	equ	0xFF8
 13511                           tblptrh	equ	0xFF7
 13512                           tblptrl	equ	0xFF6
 13513                           tablat	equ	0xFF5
 13514                           prodh	equ	0xFF4
 13515                           prodl	equ	0xFF3
 13516                           intcon	equ	0xFF2
 13517                           intcon2	equ	0xFF1
 13518                           postinc0	equ	0xFEE
 13519                           wreg	equ	0xFE8
 13520                           postdec1	equ	0xFE5
 13521                           plusw1	equ	0xFE3
 13522                           fsr1l	equ	0xFE1
 13523                           indf2	equ	0xFDF
 13524                           postinc2	equ	0xFDE
 13525                           plusw2	equ	0xFDB
 13526                           fsr2h	equ	0xFDA
 13527                           fsr2l	equ	0xFD9
 13528                           status	equ	0xFD8
 13529                           
 13530 ;; *************** function _Deactivate_Buzzer *****************
 13531 ;; Defined at:
 13532 ;;		line 129 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
 13533 ;; Parameters:    Size  Location     Type
 13534 ;;		None
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;		None
 13537 ;; Return value:  Size  Location     Type
 13538 ;;		None               void
 13539 ;; Registers used:
 13540 ;;		wreg, status,2
 13541 ;; Tracked objects:
 13542 ;;		On entry : 0/0
 13543 ;;		On exit  : 0/0
 13544 ;;		Unchanged: 0/0
 13545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13550 ;;Total ram usage:        0 bytes
 13551 ;; Hardware stack levels used:    1
 13552 ;; Hardware stack levels required when called:    3
 13553 ;; This function calls:
 13554 ;;		Nothing
 13555 ;; This function is called by:
 13556 ;;		_Test_Alarm
 13557 ;;		_Do_Beep_Good
 13558 ;;		_Do_Beep_Bad
 13559 ;;		_Do_Beep
 13560 ;; This function uses a non-reentrant model
 13561 ;;
 13562                           
 13563                           	psect	text72
 13564  003D82                     __ptext72:
 13565                           	opt stack 0
 13566  003D82                     _Deactivate_Buzzer:
 13567                           	opt stack 26
 13568                           
 13569                           ;utils.c: 131: CCP2CON = 0x0;
 13570                           
 13571                           ;incstack = 0
 13572  003D82  0E00               	movlw	0
 13573  003D84  6EBA               	movwf	4026,c	;volatile
 13574                           
 13575                           ;utils.c: 132: PORTBbits.RB3 = 0;
 13576  003D86  9681               	bcf	3969,3,c	;volatile
 13577  003D88  0012               	return		;funcret
 13578  003D8A                     __end_of_Deactivate_Buzzer:
 13579                           	opt stack 0
 13580                           tblptru	equ	0xFF8
 13581                           tblptrh	equ	0xFF7
 13582                           tblptrl	equ	0xFF6
 13583                           tablat	equ	0xFF5
 13584                           prodh	equ	0xFF4
 13585                           prodl	equ	0xFF3
 13586                           intcon	equ	0xFF2
 13587                           intcon2	equ	0xFF1
 13588                           postinc0	equ	0xFEE
 13589                           wreg	equ	0xFE8
 13590                           postdec1	equ	0xFE5
 13591                           plusw1	equ	0xFE3
 13592                           fsr1l	equ	0xFE1
 13593                           indf2	equ	0xFDF
 13594                           postinc2	equ	0xFDE
 13595                           plusw2	equ	0xFDB
 13596                           fsr2h	equ	0xFDA
 13597                           fsr2l	equ	0xFD9
 13598                           status	equ	0xFD8
 13599                           
 13600 ;; *************** function _Activate_Buzzer_500Hz *****************
 13601 ;; Defined at:
 13602 ;;		line 105 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
 13603 ;; Parameters:    Size  Location     Type
 13604 ;;		None
 13605 ;; Auto vars:     Size  Location     Type
 13606 ;;		None
 13607 ;; Return value:  Size  Location     Type
 13608 ;;		None               void
 13609 ;; Registers used:
 13610 ;;		wreg, status,2
 13611 ;; Tracked objects:
 13612 ;;		On entry : 0/0
 13613 ;;		On exit  : 0/0
 13614 ;;		Unchanged: 0/0
 13615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13620 ;;Total ram usage:        0 bytes
 13621 ;; Hardware stack levels used:    1
 13622 ;; Hardware stack levels required when called:    3
 13623 ;; This function calls:
 13624 ;;		Nothing
 13625 ;; This function is called by:
 13626 ;;		_Do_Beep_Bad
 13627 ;; This function uses a non-reentrant model
 13628 ;;
 13629                           
 13630                           	psect	text73
 13631  003C6A                     __ptext73:
 13632                           	opt stack 0
 13633  003C6A                     _Activate_Buzzer_500Hz:
 13634                           	opt stack 25
 13635                           
 13636                           ;utils.c: 107: PR2 = 0b11111001 ;
 13637                           
 13638                           ;incstack = 0
 13639  003C6A  0EF9               	movlw	249
 13640  003C6C  6ECB               	movwf	4043,c	;volatile
 13641                           
 13642                           ;utils.c: 108: T2CON = 0b00000111 ;
 13643  003C6E  0E07               	movlw	7
 13644  003C70  6ECA               	movwf	4042,c	;volatile
 13645                           
 13646                           ;utils.c: 109: CCPR2L = 0b01111100 ;
 13647  003C72  0E7C               	movlw	124
 13648  003C74  6EBB               	movwf	4027,c	;volatile
 13649                           
 13650                           ;utils.c: 110: CCP2CON = 0b00111100 ;
 13651  003C76  0E3C               	movlw	60
 13652  003C78  6EBA               	movwf	4026,c	;volatile
 13653  003C7A  0012               	return		;funcret
 13654  003C7C                     __end_of_Activate_Buzzer_500Hz:
 13655                           	opt stack 0
 13656                           tblptru	equ	0xFF8
 13657                           tblptrh	equ	0xFF7
 13658                           tblptrl	equ	0xFF6
 13659                           tablat	equ	0xFF5
 13660                           prodh	equ	0xFF4
 13661                           prodl	equ	0xFF3
 13662                           intcon	equ	0xFF2
 13663                           intcon2	equ	0xFF1
 13664                           postinc0	equ	0xFEE
 13665                           wreg	equ	0xFE8
 13666                           postdec1	equ	0xFE5
 13667                           plusw1	equ	0xFE3
 13668                           fsr1l	equ	0xFE1
 13669                           indf2	equ	0xFDF
 13670                           postinc2	equ	0xFDE
 13671                           plusw2	equ	0xFDB
 13672                           fsr2h	equ	0xFDA
 13673                           fsr2l	equ	0xFD9
 13674                           status	equ	0xFD8
 13675                           
 13676 ;; *************** function _Decrease_Alarm_Time *****************
 13677 ;; Defined at:
 13678 ;;		line 90 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Alarm_Time.c"
 13679 ;; Parameters:    Size  Location     Type
 13680 ;;		None
 13681 ;; Auto vars:     Size  Location     Type
 13682 ;;		None
 13683 ;; Return value:  Size  Location     Type
 13684 ;;		None               void
 13685 ;; Registers used:
 13686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13687 ;; Tracked objects:
 13688 ;;		On entry : 0/0
 13689 ;;		On exit  : 0/0
 13690 ;;		Unchanged: 0/0
 13691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13696 ;;Total ram usage:        0 bytes
 13697 ;; Hardware stack levels used:    1
 13698 ;; Hardware stack levels required when called:   11
 13699 ;; This function calls:
 13700 ;;		_Update_Setup_Alarm_Time_Screen
 13701 ;; This function is called by:
 13702 ;;		_Do_Setup_Alarm_Time
 13703 ;; This function uses a non-reentrant model
 13704 ;;
 13705                           
 13706                           	psect	text74
 13707  003548                     __ptext74:
 13708                           	opt stack 0
 13709  003548                     _Decrease_Alarm_Time:
 13710                           	opt stack 18
 13711                           
 13712                           ;Setup_Alarm_Time.c: 92: switch (Select_Alarm_Field)
 13713                           
 13714                           ;incstack = 0
 13715  003548  D018               	goto	l9288
 13716  00354A                     l9268:
 13717                           
 13718                           ;Setup_Alarm_Time.c: 95: if (setup_alarm_hour == 0) setup_alarm_hour = 23;
 13719  00354A  5063               	movf	_setup_alarm_hour,w,c
 13720  00354C  A4D8               	btfss	status,2,c
 13721  00354E  D003               	goto	l9272
 13722  003550  0E17               	movlw	23
 13723  003552  6E63               	movwf	_setup_alarm_hour,c
 13724  003554  D01D               	goto	l9290
 13725  003556                     l9272:
 13726                           
 13727                           ;Setup_Alarm_Time.c: 96: else --setup_alarm_hour;
 13728  003556  0663               	decf	_setup_alarm_hour,f,c
 13729                           
 13730                           ;Setup_Alarm_Time.c: 97: break;
 13731  003558  D01B               	goto	l9290
 13732  00355A                     l9274:
 13733                           
 13734                           ;Setup_Alarm_Time.c: 99: if (setup_alarm_minute == 0) setup_alarm_minute = 59;
 13735  00355A  5064               	movf	_setup_alarm_minute,w,c
 13736  00355C  A4D8               	btfss	status,2,c
 13737  00355E  D003               	goto	l9278
 13738  003560  0E3B               	movlw	59
 13739  003562  6E64               	movwf	_setup_alarm_minute,c
 13740  003564  D015               	goto	l9290
 13741  003566                     l9278:
 13742                           
 13743                           ;Setup_Alarm_Time.c: 100: else --setup_alarm_minute;
 13744  003566  0664               	decf	_setup_alarm_minute,f,c
 13745                           
 13746                           ;Setup_Alarm_Time.c: 101: break;
 13747  003568  D013               	goto	l9290
 13748  00356A                     l9280:
 13749                           
 13750                           ;Setup_Alarm_Time.c: 103: if (setup_alarm_second == 0) setup_alarm_second = 59;
 13751  00356A  5065               	movf	_setup_alarm_second,w,c
 13752  00356C  A4D8               	btfss	status,2,c
 13753  00356E  D003               	goto	l9284
 13754  003570  0E3B               	movlw	59
 13755  003572  6E65               	movwf	_setup_alarm_second,c
 13756  003574  D00D               	goto	l9290
 13757  003576                     l9284:
 13758                           
 13759                           ;Setup_Alarm_Time.c: 104: else --setup_alarm_second;
 13760  003576  0665               	decf	_setup_alarm_second,f,c
 13761                           
 13762                           ;Setup_Alarm_Time.c: 108: }
 13763                           
 13764                           ;Setup_Alarm_Time.c: 107: break;
 13765                           
 13766                           ;Setup_Alarm_Time.c: 106: default:
 13767                           
 13768                           ;Setup_Alarm_Time.c: 105: break;
 13769  003578  D00B               	goto	l9290
 13770  00357A                     l9288:
 13771  00357A  5052               	movf	_Select_Alarm_Field,w,c
 13772                           
 13773                           ; Switch size 1, requested type "space"
 13774                           ; Number of cases is 3, Range of values is 0 to 2
 13775                           ; switch strategies available:
 13776                           ; Name         Instructions Cycles
 13777                           ; simple_byte           10     6 (average)
 13778                           ;	Chosen strategy is simple_byte
 13779  00357C  0A00               	xorlw	0	; case 0
 13780  00357E  B4D8               	btfsc	status,2,c
 13781  003580  D7E4               	goto	l9268
 13782  003582  0A01               	xorlw	1	; case 1
 13783  003584  B4D8               	btfsc	status,2,c
 13784  003586  D7E9               	goto	l9274
 13785  003588  0A03               	xorlw	3	; case 2
 13786  00358A  B4D8               	btfsc	status,2,c
 13787  00358C  D7EE               	goto	l9280
 13788  00358E  D000               	goto	l9290
 13789  003590                     l9290:
 13790                           
 13791                           ;Setup_Alarm_Time.c: 109: Update_Setup_Alarm_Time_Screen();
 13792  003590  EC81  F010         	call	_Update_Setup_Alarm_Time_Screen	;wreg free
 13793  003594  0012               	return		;funcret
 13794  003596                     __end_of_Decrease_Alarm_Time:
 13795                           	opt stack 0
 13796                           tblptru	equ	0xFF8
 13797                           tblptrh	equ	0xFF7
 13798                           tblptrl	equ	0xFF6
 13799                           tablat	equ	0xFF5
 13800                           prodh	equ	0xFF4
 13801                           prodl	equ	0xFF3
 13802                           intcon	equ	0xFF2
 13803                           intcon2	equ	0xFF1
 13804                           postinc0	equ	0xFEE
 13805                           wreg	equ	0xFE8
 13806                           postdec1	equ	0xFE5
 13807                           plusw1	equ	0xFE3
 13808                           fsr1l	equ	0xFE1
 13809                           indf2	equ	0xFDF
 13810                           postinc2	equ	0xFDE
 13811                           plusw2	equ	0xFDB
 13812                           fsr2h	equ	0xFDA
 13813                           fsr2l	equ	0xFD9
 13814                           status	equ	0xFD8
 13815                           
 13816 ;; *************** function _Update_Setup_Alarm_Time_Screen *****************
 13817 ;; Defined at:
 13818 ;;		line 163 in file "../ECE3301L_Spring22_Final_Lab_Sample/Setup_Alarm_Time.c"
 13819 ;; Parameters:    Size  Location     Type
 13820 ;;		None
 13821 ;; Auto vars:     Size  Location     Type
 13822 ;;		None
 13823 ;; Return value:  Size  Location     Type
 13824 ;;		None               void
 13825 ;; Registers used:
 13826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13827 ;; Tracked objects:
 13828 ;;		On entry : 0/0
 13829 ;;		On exit  : 0/0
 13830 ;;		Unchanged: 0/0
 13831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13836 ;;Total ram usage:        0 bytes
 13837 ;; Hardware stack levels used:    1
 13838 ;; Hardware stack levels required when called:   10
 13839 ;; This function calls:
 13840 ;;		___awdiv
 13841 ;;		___awmod
 13842 ;;		_drawtext
 13843 ;;		_printf
 13844 ;; This function is called by:
 13845 ;;		_Do_Setup_Alarm_Time
 13846 ;;		_Increase_Alarm_Time
 13847 ;;		_Decrease_Alarm_Time
 13848 ;; This function uses a non-reentrant model
 13849 ;;
 13850                           
 13851                           	psect	text75
 13852  002102                     __ptext75:
 13853                           	opt stack 0
 13854  002102                     _Update_Setup_Alarm_Time_Screen:
 13855                           	opt stack 19
 13856                           
 13857                           ;Setup_Alarm_Time.c: 165: printf ("%x:%x:%x\r\n", setup_alarm_hour,setup_alarm_minute,se
      +                          tup_alarm_second);
 13858                           
 13859                           ;incstack = 0
 13860  002102  0E9F               	movlw	low STR_27
 13861  002104  6E1D               	movwf	printf@f,c
 13862  002106  0EFF               	movlw	high STR_27
 13863  002108  6E1E               	movwf	printf@f+1,c
 13864  00210A  C063  F01F         	movff	_setup_alarm_hour,?_printf+2
 13865  00210E  6A20               	clrf	?_printf+3,c
 13866  002110  C064  F021         	movff	_setup_alarm_minute,?_printf+4
 13867  002114  6A22               	clrf	?_printf+5,c
 13868  002116  C065  F023         	movff	_setup_alarm_second,?_printf+6
 13869  00211A  6A24               	clrf	?_printf+7,c
 13870  00211C  EC03  F005         	call	_printf	;wreg free
 13871                           
 13872                           ;Setup_Alarm_Time.c: 166: setup_alarm_time[0] = (setup_alarm_hour/10) + '0';
 13873  002120  C063  F153         	movff	_setup_alarm_hour,___awdiv@dividend
 13874  002124  0101               	movlb	1	; () banked
 13875  002126  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
 13876  002128  0E00               	movlw	0
 13877  00212A  0101               	movlb	1	; () banked
 13878  00212C  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
 13879  00212E  0E0A               	movlw	10
 13880  002130  6F55               	movwf	___awdiv@divisor& (0+255),b
 13881  002132  ECB4  F012         	call	___awdiv	;wreg free
 13882  002136  0101               	movlb	1	; () banked
 13883  002138  5153               	movf	?___awdiv& (0+255),w,b
 13884  00213A  0F30               	addlw	48
 13885  00213C  0100               	movlb	0	; () banked
 13886  00213E  6F93               	movwf	_setup_alarm_time& (0+255),b
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;Setup_Alarm_Time.c: 167: setup_alarm_time[1] = (setup_alarm_hour%10) + '0';
 13890  002140  C063  F03B         	movff	_setup_alarm_hour,___awmod@dividend
 13891  002144  6A3C               	clrf	___awmod@dividend+1,c
 13892  002146  0E00               	movlw	0
 13893  002148  6E3E               	movwf	___awmod@divisor+1,c
 13894  00214A  0E0A               	movlw	10
 13895  00214C  6E3D               	movwf	___awmod@divisor,c
 13896  00214E  EC5C  F017         	call	___awmod	;wreg free
 13897  002152  503B               	movf	?___awmod,w,c
 13898  002154  0F30               	addlw	48
 13899  002156  0100               	movlb	0	; () banked
 13900  002158  6F94               	movwf	(_setup_alarm_time+1)& (0+255),b
 13901                           
 13902                           ; BSR set to: 0
 13903                           ;Setup_Alarm_Time.c: 168: setup_alarm_time[3] = (setup_alarm_minute/10) + '0';
 13904  00215A  C064  F153         	movff	_setup_alarm_minute,___awdiv@dividend
 13905  00215E  0101               	movlb	1	; () banked
 13906  002160  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
 13907  002162  0E00               	movlw	0
 13908  002164  0101               	movlb	1	; () banked
 13909  002166  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
 13910  002168  0E0A               	movlw	10
 13911  00216A  6F55               	movwf	___awdiv@divisor& (0+255),b
 13912  00216C  ECB4  F012         	call	___awdiv	;wreg free
 13913  002170  0101               	movlb	1	; () banked
 13914  002172  5153               	movf	?___awdiv& (0+255),w,b
 13915  002174  0F30               	addlw	48
 13916  002176  0100               	movlb	0	; () banked
 13917  002178  6F96               	movwf	(_setup_alarm_time+3)& (0+255),b
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;Setup_Alarm_Time.c: 169: setup_alarm_time[4] = (setup_alarm_minute%10) + '0';
 13921  00217A  C064  F03B         	movff	_setup_alarm_minute,___awmod@dividend
 13922  00217E  6A3C               	clrf	___awmod@dividend+1,c
 13923  002180  0E00               	movlw	0
 13924  002182  6E3E               	movwf	___awmod@divisor+1,c
 13925  002184  0E0A               	movlw	10
 13926  002186  6E3D               	movwf	___awmod@divisor,c
 13927  002188  EC5C  F017         	call	___awmod	;wreg free
 13928  00218C  503B               	movf	?___awmod,w,c
 13929  00218E  0F30               	addlw	48
 13930  002190  0100               	movlb	0	; () banked
 13931  002192  6F97               	movwf	(_setup_alarm_time+4)& (0+255),b
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;Setup_Alarm_Time.c: 170: setup_alarm_time[6] = (setup_alarm_second/10) + '0';
 13935  002194  C065  F153         	movff	_setup_alarm_second,___awdiv@dividend
 13936  002198  0101               	movlb	1	; () banked
 13937  00219A  6B54               	clrf	(___awdiv@dividend+1)& (0+255),b
 13938  00219C  0E00               	movlw	0
 13939  00219E  0101               	movlb	1	; () banked
 13940  0021A0  6F56               	movwf	(___awdiv@divisor+1)& (0+255),b
 13941  0021A2  0E0A               	movlw	10
 13942  0021A4  6F55               	movwf	___awdiv@divisor& (0+255),b
 13943  0021A6  ECB4  F012         	call	___awdiv	;wreg free
 13944  0021AA  0101               	movlb	1	; () banked
 13945  0021AC  5153               	movf	?___awdiv& (0+255),w,b
 13946  0021AE  0F30               	addlw	48
 13947  0021B0  0100               	movlb	0	; () banked
 13948  0021B2  6F99               	movwf	(_setup_alarm_time+6)& (0+255),b
 13949                           
 13950                           ; BSR set to: 0
 13951                           ;Setup_Alarm_Time.c: 171: setup_alarm_time[7] = (setup_alarm_second%10) + '0';
 13952  0021B4  C065  F03B         	movff	_setup_alarm_second,___awmod@dividend
 13953  0021B8  6A3C               	clrf	___awmod@dividend+1,c
 13954  0021BA  0E00               	movlw	0
 13955  0021BC  6E3E               	movwf	___awmod@divisor+1,c
 13956  0021BE  0E0A               	movlw	10
 13957  0021C0  6E3D               	movwf	___awmod@divisor,c
 13958  0021C2  EC5C  F017         	call	___awmod	;wreg free
 13959  0021C6  503B               	movf	?___awmod,w,c
 13960  0021C8  0F30               	addlw	48
 13961  0021CA  0100               	movlb	0	; () banked
 13962  0021CC  6F9A               	movwf	(_setup_alarm_time+7)& (0+255),b
 13963                           
 13964                           ;Setup_Alarm_Time.c: 172: drawtext(15, 52, setup_alarm_time, 0x07FF, 0x0000, 2);
 13965  0021CE  0E34               	movlw	52
 13966  0021D0  6E39               	movwf	drawtext@y,c
 13967  0021D2  0E93               	movlw	low _setup_alarm_time
 13968  0021D4  6E3A               	movwf	drawtext@_text,c
 13969  0021D6  0E00               	movlw	high _setup_alarm_time
 13970  0021D8  6E3B               	movwf	drawtext@_text+1,c
 13971  0021DA  0E07               	movlw	7
 13972  0021DC  6E3D               	movwf	drawtext@color+1,c
 13973  0021DE  683C               	setf	drawtext@color,c
 13974  0021E0  0E00               	movlw	0
 13975  0021E2  6E3F               	movwf	drawtext@bg+1,c
 13976  0021E4  0E00               	movlw	0
 13977  0021E6  6E3E               	movwf	drawtext@bg,c
 13978  0021E8  0E02               	movlw	2
 13979  0021EA  6E40               	movwf	drawtext@size,c
 13980  0021EC  0E0F               	movlw	15
 13981  0021EE  ECFC  F00C         	call	_drawtext
 13982  0021F2  0012               	return		;funcret
 13983  0021F4                     __end_of_Update_Setup_Alarm_Time_Screen:
 13984                           	opt stack 0
 13985                           tblptru	equ	0xFF8
 13986                           tblptrh	equ	0xFF7
 13987                           tblptrl	equ	0xFF6
 13988                           tablat	equ	0xFF5
 13989                           prodh	equ	0xFF4
 13990                           prodl	equ	0xFF3
 13991                           intcon	equ	0xFF2
 13992                           intcon2	equ	0xFF1
 13993                           postinc0	equ	0xFEE
 13994                           wreg	equ	0xFE8
 13995                           postdec1	equ	0xFE5
 13996                           plusw1	equ	0xFE3
 13997                           fsr1l	equ	0xFE1
 13998                           indf2	equ	0xFDF
 13999                           postinc2	equ	0xFDE
 14000                           plusw2	equ	0xFDB
 14001                           fsr2h	equ	0xFDA
 14002                           fsr2l	equ	0xFD9
 14003                           status	equ	0xFD8
 14004                           
 14005 ;; *************** function _printf *****************
 14006 ;; Defined at:
 14007 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 14008 ;; Parameters:    Size  Location     Type
 14009 ;;  f               2   28[COMRAM] PTR const unsigned char 
 14010 ;;		 -> STR_36(22), STR_27(11), STR_4(20), STR_3(24), 
 14011 ;;		 -> STR_2(21), STR_1(30), 
 14012 ;; Auto vars:     Size  Location     Type
 14013 ;;  idx             1   46[COMRAM] unsigned char 
 14014 ;;  tmpval          4    0        struct .
 14015 ;;  cp              3    0        PTR const unsigned char 
 14016 ;;  width           2   53[COMRAM] int 
 14017 ;;  val             2   50[COMRAM] unsigned int 
 14018 ;;  ap              2   47[COMRAM] PTR void [1]
 14019 ;;		 -> ?_printf(2), 
 14020 ;;  len             2    0        unsigned int 
 14021 ;;  c               1   55[COMRAM] char 
 14022 ;;  flag            1   52[COMRAM] unsigned char 
 14023 ;;  prec            1   49[COMRAM] char 
 14024 ;; Return value:  Size  Location     Type
 14025 ;;                  2   28[COMRAM] int 
 14026 ;; Registers used:
 14027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14028 ;; Tracked objects:
 14029 ;;		On entry : 0/0
 14030 ;;		On exit  : 0/0
 14031 ;;		Unchanged: 0/0
 14032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14033 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14034 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14036 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14037 ;;Total ram usage:       28 bytes
 14038 ;; Hardware stack levels used:    1
 14039 ;; Hardware stack levels required when called:    4
 14040 ;; This function calls:
 14041 ;;		___lwdiv
 14042 ;;		___lwmod
 14043 ;;		___wmul
 14044 ;;		_isdigit
 14045 ;;		_putch
 14046 ;; This function is called by:
 14047 ;;		_main
 14048 ;;		_Update_Setup_Alarm_Time_Screen
 14049 ;;		_check_for_button_input
 14050 ;; This function uses a non-reentrant model
 14051 ;;
 14052                           
 14053                           	psect	text76
 14054  000A06                     __ptext76:
 14055                           	opt stack 0
 14056  000A06                     _printf:
 14057                           	opt stack 26
 14058                           
 14059                           ;doprnt.c: 466: va_list ap;
 14060                           ;doprnt.c: 499: signed char c;
 14061                           ;doprnt.c: 501: int width;
 14062                           ;doprnt.c: 506: signed char prec;
 14063                           ;doprnt.c: 508: unsigned char flag;
 14064                           ;doprnt.c: 523: union {
 14065                           ;doprnt.c: 524: unsigned long vd;
 14066                           ;doprnt.c: 525: double integ;
 14067                           ;doprnt.c: 526: } tmpval;
 14068                           ;doprnt.c: 528: unsigned int val;
 14069                           ;doprnt.c: 529: unsigned len;
 14070                           ;doprnt.c: 530: const char * cp;
 14071                           ;doprnt.c: 533: *ap = __va_start();
 14072                           
 14073                           ;incstack = 0
 14074  000A06  0E1F               	movlw	low (?_printf+2)
 14075  000A08  6E30               	movwf	printf@ap,c
 14076  000A0A  0E00               	movlw	high (?_printf+2)
 14077  000A0C  6E31               	movwf	printf@ap+1,c
 14078                           
 14079                           ;doprnt.c: 536: while(c = *f++) {
 14080  000A0E  D199               	goto	l8540
 14081  000A10                     l8414:
 14082                           
 14083                           ;doprnt.c: 538: if(c != '%')
 14084  000A10  0E25               	movlw	37
 14085  000A12  1838               	xorwf	printf@c,w,c
 14086  000A14  B4D8               	btfsc	status,2,c
 14087  000A16  D004               	goto	l8418
 14088                           
 14089                           ;doprnt.c: 540: {
 14090                           ;doprnt.c: 541: (putch(c) );
 14091  000A18  5038               	movf	printf@c,w,c
 14092  000A1A  EC89  F01E         	call	_putch
 14093                           
 14094                           ;doprnt.c: 542: continue;
 14095  000A1E  D191               	goto	l8540
 14096  000A20                     l8418:
 14097                           
 14098                           ;doprnt.c: 543: }
 14099                           ;doprnt.c: 546: width = 0;
 14100  000A20  0E00               	movlw	0
 14101  000A22  6E37               	movwf	printf@width+1,c
 14102  000A24  0E00               	movlw	0
 14103  000A26  6E36               	movwf	printf@width,c
 14104                           
 14105                           ;doprnt.c: 548: flag = 0;
 14106  000A28  0E00               	movlw	0
 14107  000A2A  6E35               	movwf	printf@flag,c
 14108                           
 14109                           ;doprnt.c: 551: switch(*f) {
 14110                           
 14111                           ;doprnt.c: 550: for(;;) {
 14112  000A2C  D005               	goto	l8424
 14113  000A2E                     l8420:
 14114                           
 14115                           ;doprnt.c: 580: flag |= 0x04;
 14116  000A2E  8435               	bsf	printf@flag,2,c
 14117                           
 14118                           ;doprnt.c: 581: f++;
 14119  000A30  4A1D               	infsnz	printf@f,f,c
 14120  000A32  2A1E               	incf	printf@f+1,f,c
 14121                           
 14122                           ;doprnt.c: 582: continue;
 14123  000A34  D001               	goto	l8424
 14124                           
 14125                           ;doprnt.c: 584: }
 14126  000A36  D00B               	goto	l8426
 14127  000A38                     l8424:
 14128  000A38  C01D  FFF6         	movff	printf@f,tblptrl
 14129  000A3C  C01E  FFF7         	movff	printf@f+1,tblptrh
 14130  000A40                     	if	0	;tblptru may be non-zero
 14131  000A40                     	endif
 14132  000A40                     	if	0	;tblptru may be non-zero
 14133  000A40                     	endif
 14134  000A40  0008               	tblrd		*
 14135  000A42  50F5               	movf	tablat,w,c
 14136                           
 14137                           ; Switch size 1, requested type "space"
 14138                           ; Number of cases is 1, Range of values is 48 to 48
 14139                           ; switch strategies available:
 14140                           ; Name         Instructions Cycles
 14141                           ; simple_byte            4     3 (average)
 14142                           ;	Chosen strategy is simple_byte
 14143  000A44  0A30               	xorlw	48	; case 48
 14144  000A46  B4D8               	btfsc	status,2,c
 14145  000A48  D7F2               	goto	l8420
 14146                           
 14147                           ;doprnt.c: 585: break;
 14148  000A4A  D001               	goto	l8426
 14149                           
 14150                           ;doprnt.c: 586: }
 14151  000A4C  D7F5               	goto	l8424
 14152  000A4E                     l8426:
 14153                           
 14154                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 14155  000A4E  C01D  FFF6         	movff	printf@f,tblptrl
 14156  000A52  C01E  FFF7         	movff	printf@f+1,tblptrh
 14157  000A56                     	if	0	;tblptru may be non-zero
 14158  000A56                     	endif
 14159  000A56                     	if	0	;tblptru may be non-zero
 14160  000A56                     	endif
 14161  000A56  0008               	tblrd		*
 14162  000A58  50F5               	movf	tablat,w,c
 14163  000A5A  EC0D  F01D         	call	_isdigit
 14164  000A5E  A0D8               	btfss	status,0,c
 14165  000A60  D03B               	goto	l8442
 14166                           
 14167                           ;doprnt.c: 598: width = 0;
 14168  000A62  0E00               	movlw	0
 14169  000A64  6E37               	movwf	printf@width+1,c
 14170  000A66  0E00               	movlw	0
 14171  000A68  6E36               	movwf	printf@width,c
 14172  000A6A  D000               	goto	l8430
 14173  000A6C                     l8430:
 14174                           
 14175                           ;doprnt.c: 600: width *= 10;
 14176  000A6C  C036  F011         	movff	printf@width,___wmul@multiplier
 14177  000A70  C037  F012         	movff	printf@width+1,___wmul@multiplier+1
 14178  000A74  0E00               	movlw	0
 14179  000A76  6E14               	movwf	___wmul@multiplicand+1,c
 14180  000A78  0E0A               	movlw	10
 14181  000A7A  6E13               	movwf	___wmul@multiplicand,c
 14182  000A7C  ECAE  F01C         	call	___wmul	;wreg free
 14183  000A80  C011  F036         	movff	?___wmul,printf@width
 14184  000A84  C012  F037         	movff	?___wmul+1,printf@width+1
 14185                           
 14186                           ;doprnt.c: 601: width += *f++ - '0';
 14187  000A88  0ED0               	movlw	208
 14188  000A8A  6E2B               	movwf	??_printf& (0+255),c
 14189  000A8C  0EFF               	movlw	255
 14190  000A8E  6E2C               	movwf	(??_printf+1)& (0+255),c
 14191  000A90  C01D  FFF6         	movff	printf@f,tblptrl
 14192  000A94  C01E  FFF7         	movff	printf@f+1,tblptrh
 14193  000A98                     	if	0	;tblptru may be non-zero
 14194  000A98                     	endif
 14195  000A98                     	if	0	;tblptru may be non-zero
 14196  000A98                     	endif
 14197  000A98  0008               	tblrd		*
 14198  000A9A  50F5               	movf	tablat,w,c
 14199  000A9C  6E2D               	movwf	(??_printf+2)& (0+255),c
 14200  000A9E  6A2E               	clrf	(??_printf+3)& (0+255),c
 14201  000AA0  502B               	movf	??_printf,w,c
 14202  000AA2  262D               	addwf	??_printf+2,f,c
 14203  000AA4  502C               	movf	??_printf+1,w,c
 14204  000AA6  222E               	addwfc	??_printf+3,f,c
 14205  000AA8  502D               	movf	??_printf+2,w,c
 14206  000AAA  2636               	addwf	printf@width,f,c
 14207  000AAC  502E               	movf	??_printf+3,w,c
 14208  000AAE  2237               	addwfc	printf@width+1,f,c
 14209  000AB0  4A1D               	infsnz	printf@f,f,c
 14210  000AB2  2A1E               	incf	printf@f+1,f,c
 14211                           
 14212                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 14213  000AB4  C01D  FFF6         	movff	printf@f,tblptrl
 14214  000AB8  C01E  FFF7         	movff	printf@f+1,tblptrh
 14215  000ABC                     	if	0	;tblptru may be non-zero
 14216  000ABC                     	endif
 14217  000ABC                     	if	0	;tblptru may be non-zero
 14218  000ABC                     	endif
 14219  000ABC  0008               	tblrd		*
 14220  000ABE  50F5               	movf	tablat,w,c
 14221  000AC0  EC0D  F01D         	call	_isdigit
 14222  000AC4  A0D8               	btfss	status,0,c
 14223  000AC6  D008               	goto	l8442
 14224  000AC8  D7D1               	goto	l8430
 14225                           
 14226                           ;doprnt.c: 608: }
 14227                           ;doprnt.c: 635: switch(c = *f++) {
 14228  000ACA  D006               	goto	l8442
 14229                           
 14230                           ;doprnt.c: 638: goto alldone;
 14231                           
 14232                           ;doprnt.c: 637: case 0:
 14233  000ACC  D148               	goto	l1478
 14234                           
 14235                           ;doprnt.c: 698: case 'i':
 14236                           ;doprnt.c: 699: break;
 14237                           
 14238                           ;doprnt.c: 697: case 'd':
 14239  000ACE  D01B               	goto	l1441
 14240  000AD0                     l8438:
 14241                           
 14242                           ;doprnt.c: 721: flag |= 0x80;
 14243  000AD0  8E35               	bsf	printf@flag,7,c
 14244                           
 14245                           ;doprnt.c: 723: break;
 14246  000AD2  D019               	goto	l1441
 14247                           
 14248                           ;doprnt.c: 813: continue;
 14249                           
 14250                           ;doprnt.c: 802: default:
 14251  000AD4  D136               	goto	l8540
 14252                           
 14253                           ;doprnt.c: 822: }
 14254  000AD6  D017               	goto	l1441
 14255  000AD8                     l8442:
 14256  000AD8  C01D  FFF6         	movff	printf@f,tblptrl
 14257  000ADC  C01E  FFF7         	movff	printf@f+1,tblptrh
 14258  000AE0  4A1D               	infsnz	printf@f,f,c
 14259  000AE2  2A1E               	incf	printf@f+1,f,c
 14260  000AE4                     	if	0	;tblptru may be non-zero
 14261  000AE4                     	endif
 14262  000AE4                     	if	0	;tblptru may be non-zero
 14263  000AE4                     	endif
 14264  000AE4  0008               	tblrd		*
 14265  000AE6  CFF5 F038          	movff	tablat,printf@c
 14266  000AEA  5038               	movf	printf@c,w,c
 14267                           
 14268                           ; Switch size 1, requested type "space"
 14269                           ; Number of cases is 4, Range of values is 0 to 120
 14270                           ; switch strategies available:
 14271                           ; Name         Instructions Cycles
 14272                           ; simple_byte           13     7 (average)
 14273                           ;	Chosen strategy is simple_byte
 14274  000AEC  0A00               	xorlw	0	; case 0
 14275  000AEE  B4D8               	btfsc	status,2,c
 14276  000AF0  D136               	goto	l1478
 14277  000AF2  0A64               	xorlw	100	; case 100
 14278  000AF4  B4D8               	btfsc	status,2,c
 14279  000AF6  D007               	goto	l1441
 14280  000AF8  0A0D               	xorlw	13	; case 105
 14281  000AFA  B4D8               	btfsc	status,2,c
 14282  000AFC  D004               	goto	l1441
 14283  000AFE  0A11               	xorlw	17	; case 120
 14284  000B00  B4D8               	btfsc	status,2,c
 14285  000B02  D7E6               	goto	l8438
 14286  000B04  D11E               	goto	l8540
 14287  000B06                     l1441:
 14288                           
 14289                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 14290  000B06  BE35               	btfsc	printf@flag,7,c
 14291  000B08  D015               	goto	l8454
 14292                           
 14293                           ;doprnt.c: 1253: {
 14294                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 14295  000B0A  C030  FFD9         	movff	printf@ap,fsr2l
 14296  000B0E  C031  FFDA         	movff	printf@ap+1,fsr2h
 14297  000B12  CFDE F033          	movff	postinc2,printf@val
 14298  000B16  CFDD F034          	movff	postdec2,printf@val+1
 14299  000B1A  0E02               	movlw	2
 14300  000B1C  2630               	addwf	printf@ap,f,c
 14301  000B1E  0E00               	movlw	0
 14302  000B20  2231               	addwfc	printf@ap+1,f,c
 14303                           
 14304                           ;doprnt.c: 1261: if((int)val < 0) {
 14305  000B22  AE34               	btfss	printf@val+1,7,c
 14306  000B24  D04E               	goto	l8488
 14307                           
 14308                           ;doprnt.c: 1262: flag |= 0x03;
 14309  000B26  0E03               	movlw	3
 14310  000B28  1235               	iorwf	printf@flag,f,c
 14311                           
 14312                           ;doprnt.c: 1263: val = -val;
 14313  000B2A  6C33               	negf	printf@val,c
 14314  000B2C  1E34               	comf	printf@val+1,f,c
 14315  000B2E  B0D8               	btfsc	status,0,c
 14316  000B30  2A34               	incf	printf@val+1,f,c
 14317                           
 14318                           ;doprnt.c: 1264: }
 14319                           ;doprnt.c: 1266: }
 14320  000B32  D047               	goto	l8488
 14321  000B34                     l8454:
 14322                           
 14323                           ;doprnt.c: 1268: else
 14324                           ;doprnt.c: 1273: {
 14325                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 14326  000B34  C030  FFD9         	movff	printf@ap,fsr2l
 14327  000B38  C031  FFDA         	movff	printf@ap+1,fsr2h
 14328  000B3C  CFDE F033          	movff	postinc2,printf@val
 14329  000B40  CFDD F034          	movff	postdec2,printf@val+1
 14330  000B44  0E02               	movlw	2
 14331  000B46  2630               	addwf	printf@ap,f,c
 14332  000B48  0E00               	movlw	0
 14333  000B4A  2231               	addwfc	printf@ap+1,f,c
 14334                           
 14335                           ;doprnt.c: 1287: }
 14336                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 14337  000B4C  D03A               	goto	l8488
 14338  000B4E                     l8458:
 14339                           
 14340                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14341  000B4E  0E01               	movlw	1
 14342  000B50  6E38               	movwf	printf@c,c
 14343  000B52                     l8460:
 14344  000B52  0E05               	movlw	5
 14345  000B54  1838               	xorwf	printf@c,w,c
 14346  000B56  B4D8               	btfsc	status,2,c
 14347  000B58  D03D               	goto	l8490
 14348  000B5A  D001               	goto	l8464
 14349  000B5C  D03B               	goto	l8490
 14350  000B5E                     l8464:
 14351                           
 14352                           ;doprnt.c: 1306: if(val < dpowers[c])
 14353  000B5E  5038               	movf	printf@c,w,c
 14354  000B60  0D02               	mullw	2
 14355  000B62  0EA0               	movlw	low _dpowers
 14356  000B64  24F3               	addwf	prodl,w,c
 14357  000B66  6EF6               	movwf	tblptrl,c
 14358  000B68  0EFE               	movlw	high _dpowers
 14359  000B6A  20F4               	addwfc	prodh,w,c
 14360  000B6C  6EF7               	movwf	tblptrh,c
 14361  000B6E                     	if	0	;There are less than 3 active tblptr bytes
 14362  000B6E                     	endif
 14363  000B6E  0009               	tblrd		*+
 14364  000B70  50F5               	movf	tablat,w,c
 14365  000B72  5C33               	subwf	printf@val,w,c
 14366  000B74  0009               	tblrd		*+
 14367  000B76  50F5               	movf	tablat,w,c
 14368  000B78  5834               	subwfb	printf@val+1,w,c
 14369  000B7A  A0D8               	btfss	status,0,c
 14370  000B7C  D02B               	goto	l8490
 14371  000B7E  D001               	goto	l8468
 14372                           
 14373                           ;doprnt.c: 1307: break;
 14374  000B80  D029               	goto	l8490
 14375  000B82                     l8468:
 14376  000B82  2A38               	incf	printf@c,f,c
 14377  000B84  D7E6               	goto	l8460
 14378                           
 14379                           ;doprnt.c: 1309: break;
 14380  000B86  D026               	goto	l8490
 14381  000B88                     l8472:
 14382                           
 14383                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 14384  000B88  0E01               	movlw	1
 14385  000B8A  6E38               	movwf	printf@c,c
 14386  000B8C                     l8474:
 14387  000B8C  0E04               	movlw	4
 14388  000B8E  1838               	xorwf	printf@c,w,c
 14389  000B90  B4D8               	btfsc	status,2,c
 14390  000B92  D020               	goto	l8490
 14391  000B94  D001               	goto	l8478
 14392  000B96  D01E               	goto	l8490
 14393  000B98                     l8478:
 14394                           
 14395                           ;doprnt.c: 1317: if(val < hexpowers[c])
 14396  000B98  5038               	movf	printf@c,w,c
 14397  000B9A  0D02               	mullw	2
 14398  000B9C  0EAA               	movlw	low _hexpowers
 14399  000B9E  24F3               	addwf	prodl,w,c
 14400  000BA0  6EF6               	movwf	tblptrl,c
 14401  000BA2  0EFE               	movlw	high _hexpowers
 14402  000BA4  20F4               	addwfc	prodh,w,c
 14403  000BA6  6EF7               	movwf	tblptrh,c
 14404  000BA8                     	if	0	;There are less than 3 active tblptr bytes
 14405  000BA8                     	endif
 14406  000BA8  0009               	tblrd		*+
 14407  000BAA  50F5               	movf	tablat,w,c
 14408  000BAC  5C33               	subwf	printf@val,w,c
 14409  000BAE  0009               	tblrd		*+
 14410  000BB0  50F5               	movf	tablat,w,c
 14411  000BB2  5834               	subwfb	printf@val+1,w,c
 14412  000BB4  A0D8               	btfss	status,0,c
 14413  000BB6  D00E               	goto	l8490
 14414  000BB8  D001               	goto	l8482
 14415                           
 14416                           ;doprnt.c: 1318: break;
 14417  000BBA  D00C               	goto	l8490
 14418  000BBC                     l8482:
 14419  000BBC  2A38               	incf	printf@c,f,c
 14420  000BBE  D7E6               	goto	l8474
 14421                           
 14422                           ;doprnt.c: 1336: }
 14423                           
 14424                           ;doprnt.c: 1320: break;
 14425  000BC0  D009               	goto	l8490
 14426  000BC2                     l8488:
 14427  000BC2  5035               	movf	printf@flag,w,c
 14428  000BC4  0B80               	andlw	128
 14429                           
 14430                           ; Switch size 1, requested type "space"
 14431                           ; Number of cases is 2, Range of values is 0 to 128
 14432                           ; switch strategies available:
 14433                           ; Name         Instructions Cycles
 14434                           ; simple_byte            7     4 (average)
 14435                           ;	Chosen strategy is simple_byte
 14436  000BC6  0A00               	xorlw	0	; case 0
 14437  000BC8  B4D8               	btfsc	status,2,c
 14438  000BCA  D7C1               	goto	l8458
 14439  000BCC  0A80               	xorlw	128	; case 128
 14440  000BCE  B4D8               	btfsc	status,2,c
 14441  000BD0  D7DB               	goto	l8472
 14442  000BD2  D000               	goto	l8490
 14443  000BD4                     l8490:
 14444                           
 14445                           ;doprnt.c: 1345: if(width && flag & 0x03)
 14446  000BD4  5036               	movf	printf@width,w,c
 14447  000BD6  1037               	iorwf	printf@width+1,w,c
 14448  000BD8  B4D8               	btfsc	status,2,c
 14449  000BDA  D00A               	goto	l8496
 14450  000BDC  C035  F02B         	movff	printf@flag,??_printf
 14451  000BE0  0E03               	movlw	3
 14452  000BE2  162B               	andwf	??_printf,f,c
 14453  000BE4  B4D8               	btfsc	status,2,c
 14454  000BE6  D004               	goto	l8496
 14455                           
 14456                           ;doprnt.c: 1346: width--;
 14457  000BE8  0636               	decf	printf@width,f,c
 14458  000BEA  A0D8               	btfss	status,0,c
 14459  000BEC  0637               	decf	printf@width+1,f,c
 14460  000BEE  D000               	goto	l8496
 14461  000BF0                     l8496:
 14462                           
 14463                           ;doprnt.c: 1381: if(width > c)
 14464  000BF0  0E80               	movlw	128
 14465  000BF2  BE38               	btfsc	printf@c,7,c
 14466  000BF4  0E7F               	movlw	127
 14467  000BF6  6E2B               	movwf	??_printf& (0+255),c
 14468  000BF8  5036               	movf	printf@width,w,c
 14469  000BFA  5C38               	subwf	printf@c,w,c
 14470  000BFC  5037               	movf	printf@width+1,w,c
 14471  000BFE  0A80               	xorlw	128
 14472  000C00  582B               	subwfb	??_printf& (0+255),w,c
 14473  000C02  B0D8               	btfsc	status,0,c
 14474  000C04  D007               	goto	l8500
 14475                           
 14476                           ;doprnt.c: 1382: width -= c;
 14477  000C06  5038               	movf	printf@c,w,c
 14478  000C08  5E36               	subwf	printf@width,f,c
 14479  000C0A  0E00               	movlw	0
 14480  000C0C  BE38               	btfsc	printf@c,7,c
 14481  000C0E  0EFF               	movlw	255
 14482  000C10  5A37               	subwfb	printf@width+1,f,c
 14483  000C12  D005               	goto	l8502
 14484  000C14                     l8500:
 14485                           
 14486                           ;doprnt.c: 1383: else
 14487                           ;doprnt.c: 1384: width = 0;
 14488  000C14  0E00               	movlw	0
 14489  000C16  6E37               	movwf	printf@width+1,c
 14490  000C18  0E00               	movlw	0
 14491  000C1A  6E36               	movwf	printf@width,c
 14492  000C1C  D000               	goto	l8502
 14493  000C1E                     l8502:
 14494                           
 14495                           ;doprnt.c: 1387: if(flag & 0x04) {
 14496  000C1E  A435               	btfss	printf@flag,2,c
 14497  000C20  D01A               	goto	l8514
 14498                           
 14499                           ;doprnt.c: 1392: if(flag & 0x03)
 14500  000C22  C035  F02B         	movff	printf@flag,??_printf
 14501  000C26  0E03               	movlw	3
 14502  000C28  162B               	andwf	??_printf,f,c
 14503  000C2A  B4D8               	btfsc	status,2,c
 14504  000C2C  D004               	goto	l8508
 14505                           
 14506                           ;doprnt.c: 1393: (putch('-') );
 14507  000C2E  0E2D               	movlw	45
 14508  000C30  EC89  F01E         	call	_putch
 14509  000C34  D000               	goto	l8508
 14510  000C36                     l8508:
 14511                           
 14512                           ;doprnt.c: 1415: if(width)
 14513  000C36  5036               	movf	printf@width,w,c
 14514  000C38  1037               	iorwf	printf@width+1,w,c
 14515  000C3A  B4D8               	btfsc	status,2,c
 14516  000C3C  D026               	goto	l8524
 14517  000C3E                     l8510:
 14518                           
 14519                           ;doprnt.c: 1417: (putch('0') );
 14520  000C3E  0E30               	movlw	48
 14521  000C40  EC89  F01E         	call	_putch
 14522                           
 14523                           ;doprnt.c: 1418: while(--width);
 14524  000C44  0636               	decf	printf@width,f,c
 14525  000C46  A0D8               	btfss	status,0,c
 14526  000C48  0637               	decf	printf@width+1,f,c
 14527  000C4A  5036               	movf	printf@width,w,c
 14528  000C4C  1037               	iorwf	printf@width+1,w,c
 14529  000C4E  B4D8               	btfsc	status,2,c
 14530  000C50  D01C               	goto	l8524
 14531  000C52  D7F5               	goto	l8510
 14532                           
 14533                           ;doprnt.c: 1420: } else
 14534  000C54  D01A               	goto	l8524
 14535  000C56                     l8514:
 14536                           
 14537                           ;doprnt.c: 1422: {
 14538                           ;doprnt.c: 1424: if(width
 14539                           ;doprnt.c: 1428: )
 14540  000C56  5036               	movf	printf@width,w,c
 14541  000C58  1037               	iorwf	printf@width+1,w,c
 14542  000C5A  B4D8               	btfsc	status,2,c
 14543  000C5C  D00C               	goto	l8520
 14544  000C5E                     l8516:
 14545                           
 14546                           ;doprnt.c: 1430: (putch(' ') );
 14547  000C5E  0E20               	movlw	32
 14548  000C60  EC89  F01E         	call	_putch
 14549                           
 14550                           ;doprnt.c: 1431: while(--width);
 14551  000C64  0636               	decf	printf@width,f,c
 14552  000C66  A0D8               	btfss	status,0,c
 14553  000C68  0637               	decf	printf@width+1,f,c
 14554  000C6A  5036               	movf	printf@width,w,c
 14555  000C6C  1037               	iorwf	printf@width+1,w,c
 14556  000C6E  B4D8               	btfsc	status,2,c
 14557  000C70  D002               	goto	l8520
 14558  000C72  D7F5               	goto	l8516
 14559  000C74  D000               	goto	l8520
 14560  000C76                     l8520:
 14561                           
 14562                           ;doprnt.c: 1438: if(flag & 0x03)
 14563  000C76  C035  F02B         	movff	printf@flag,??_printf
 14564  000C7A  0E03               	movlw	3
 14565  000C7C  162B               	andwf	??_printf,f,c
 14566  000C7E  B4D8               	btfsc	status,2,c
 14567  000C80  D004               	goto	l8524
 14568                           
 14569                           ;doprnt.c: 1439: (putch('-') );
 14570  000C82  0E2D               	movlw	45
 14571  000C84  EC89  F01E         	call	_putch
 14572  000C88  D000               	goto	l8524
 14573  000C8A                     l8524:
 14574                           
 14575                           ;doprnt.c: 1469: }
 14576                           ;doprnt.c: 1472: prec = c;
 14577  000C8A  C038  F032         	movff	printf@c,printf@prec
 14578                           
 14579                           ;doprnt.c: 1474: while(prec--) {
 14580  000C8E  D053               	goto	l8538
 14581                           
 14582                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
 14583  000C90  D045               	goto	l8534
 14584  000C92                     l8526:
 14585                           
 14586                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14587  000C92  5032               	movf	printf@prec,w,c
 14588  000C94  0D02               	mullw	2
 14589  000C96  0EA0               	movlw	low _dpowers
 14590  000C98  24F3               	addwf	prodl,w,c
 14591  000C9A  6EF6               	movwf	tblptrl,c
 14592  000C9C  0EFE               	movlw	high _dpowers
 14593  000C9E  20F4               	addwfc	prodh,w,c
 14594  000CA0  6EF7               	movwf	tblptrh,c
 14595  000CA2                     	if	0	;There are less than 3 active tblptr bytes
 14596  000CA2                     	endif
 14597  000CA2  0009               	tblrd		*+
 14598  000CA4  CFF5 F013          	movff	tablat,___lwdiv@divisor
 14599  000CA8  000A               	tblrd		*-
 14600  000CAA  CFF5 F014          	movff	tablat,___lwdiv@divisor+1
 14601  000CAE  C033  F011         	movff	printf@val,___lwdiv@dividend
 14602  000CB2  C034  F012         	movff	printf@val+1,___lwdiv@dividend+1
 14603  000CB6  EC28  F019         	call	___lwdiv	;wreg free
 14604  000CBA  C011  F018         	movff	?___lwdiv,___lwmod@dividend
 14605  000CBE  C012  F019         	movff	?___lwdiv+1,___lwmod@dividend+1
 14606  000CC2  0E00               	movlw	0
 14607  000CC4  6E1B               	movwf	___lwmod@divisor+1,c
 14608  000CC6  0E0A               	movlw	10
 14609  000CC8  6E1A               	movwf	___lwmod@divisor,c
 14610  000CCA  EC18  F01B         	call	___lwmod	;wreg free
 14611  000CCE  5018               	movf	?___lwmod,w,c
 14612  000CD0  0F30               	addlw	48
 14613  000CD2  6E38               	movwf	printf@c,c
 14614                           
 14615                           ;doprnt.c: 1491: break;
 14616  000CD4  D02C               	goto	l8536
 14617  000CD6                     l8528:
 14618                           
 14619                           ;doprnt.c: 1499: {
 14620                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 14621  000CD6  C033  F011         	movff	printf@val,___lwdiv@dividend
 14622  000CDA  C034  F012         	movff	printf@val+1,___lwdiv@dividend+1
 14623  000CDE  5032               	movf	printf@prec,w,c
 14624  000CE0  0D02               	mullw	2
 14625  000CE2  0EAA               	movlw	low _hexpowers
 14626  000CE4  24F3               	addwf	prodl,w,c
 14627  000CE6  6EF6               	movwf	tblptrl,c
 14628  000CE8  0EFE               	movlw	high _hexpowers
 14629  000CEA  20F4               	addwfc	prodh,w,c
 14630  000CEC  6EF7               	movwf	tblptrh,c
 14631  000CEE                     	if	0	;There are less than 3 active tblptr bytes
 14632  000CEE                     	endif
 14633  000CEE  0009               	tblrd		*+
 14634  000CF0  CFF5 F013          	movff	tablat,___lwdiv@divisor
 14635  000CF4  000A               	tblrd		*-
 14636  000CF6  CFF5 F014          	movff	tablat,___lwdiv@divisor+1
 14637  000CFA  EC28  F019         	call	___lwdiv	;wreg free
 14638  000CFE  5011               	movf	?___lwdiv,w,c
 14639  000D00  0B0F               	andlw	15
 14640  000D02  6E2F               	movwf	printf@idx,c
 14641                           
 14642                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 14643  000D04  502F               	movf	printf@idx,w,c
 14644  000D06  0D01               	mullw	1
 14645  000D08  0E4D               	movlw	low STR_37
 14646  000D0A  24F3               	addwf	prodl,w,c
 14647  000D0C  6EF6               	movwf	tblptrl,c
 14648  000D0E  0EFF               	movlw	high STR_37
 14649  000D10  20F4               	addwfc	prodh,w,c
 14650  000D12  6EF7               	movwf	tblptrh,c
 14651  000D14                     	if	0	;There are less than 3 active tblptr bytes
 14652  000D14                     	endif
 14653  000D14  0008               	tblrd		*
 14654  000D16  CFF5 F038          	movff	tablat,printf@c
 14655                           
 14656                           ;doprnt.c: 1523: }
 14657                           
 14658                           ;doprnt.c: 1508: }
 14659                           ;doprnt.c: 1510: break;
 14660  000D1A  D009               	goto	l8536
 14661  000D1C                     l8534:
 14662  000D1C  5035               	movf	printf@flag,w,c
 14663  000D1E  0B80               	andlw	128
 14664                           
 14665                           ; Switch size 1, requested type "space"
 14666                           ; Number of cases is 2, Range of values is 0 to 128
 14667                           ; switch strategies available:
 14668                           ; Name         Instructions Cycles
 14669                           ; simple_byte            7     4 (average)
 14670                           ;	Chosen strategy is simple_byte
 14671  000D20  0A00               	xorlw	0	; case 0
 14672  000D22  B4D8               	btfsc	status,2,c
 14673  000D24  D7B6               	goto	l8526
 14674  000D26  0A80               	xorlw	128	; case 128
 14675  000D28  B4D8               	btfsc	status,2,c
 14676  000D2A  D7D5               	goto	l8528
 14677  000D2C  D000               	goto	l8536
 14678  000D2E                     l8536:
 14679                           
 14680                           ;doprnt.c: 1524: (putch(c) );
 14681  000D2E  5038               	movf	printf@c,w,c
 14682  000D30  EC89  F01E         	call	_putch
 14683  000D34  D000               	goto	l8538
 14684  000D36                     l8538:
 14685  000D36  0632               	decf	printf@prec,f,c
 14686  000D38  2832               	incf	printf@prec,w,c
 14687  000D3A  B4D8               	btfsc	status,2,c
 14688  000D3C  D002               	goto	l8540
 14689  000D3E  D7EE               	goto	l8534
 14690  000D40  D000               	goto	l8540
 14691  000D42                     l8540:
 14692  000D42  C01D  FFF6         	movff	printf@f,tblptrl
 14693  000D46  C01E  FFF7         	movff	printf@f+1,tblptrh
 14694  000D4A  4A1D               	infsnz	printf@f,f,c
 14695  000D4C  2A1E               	incf	printf@f+1,f,c
 14696  000D4E                     	if	0	;tblptru may be non-zero
 14697  000D4E                     	endif
 14698  000D4E                     	if	0	;tblptru may be non-zero
 14699  000D4E                     	endif
 14700  000D4E  0008               	tblrd		*
 14701  000D50  CFF5 F038          	movff	tablat,printf@c
 14702  000D54  5038               	movf	printf@c,w,c
 14703  000D56  B4D8               	btfsc	status,2,c
 14704  000D58  D002               	goto	l1478
 14705  000D5A  D65A               	goto	l8414
 14706  000D5C  D000               	goto	l1478
 14707  000D5E                     l1478:
 14708  000D5E  0012               	return		;funcret
 14709  000D60                     __end_of_printf:
 14710                           	opt stack 0
 14711                           tblptru	equ	0xFF8
 14712                           tblptrh	equ	0xFF7
 14713                           tblptrl	equ	0xFF6
 14714                           tablat	equ	0xFF5
 14715                           prodh	equ	0xFF4
 14716                           prodl	equ	0xFF3
 14717                           intcon	equ	0xFF2
 14718                           intcon2	equ	0xFF1
 14719                           postinc0	equ	0xFEE
 14720                           wreg	equ	0xFE8
 14721                           postdec1	equ	0xFE5
 14722                           plusw1	equ	0xFE3
 14723                           fsr1l	equ	0xFE1
 14724                           indf2	equ	0xFDF
 14725                           postinc2	equ	0xFDE
 14726                           postdec2	equ	0xFDD
 14727                           plusw2	equ	0xFDB
 14728                           fsr2h	equ	0xFDA
 14729                           fsr2l	equ	0xFD9
 14730                           status	equ	0xFD8
 14731                           
 14732 ;; *************** function _putch *****************
 14733 ;; Defined at:
 14734 ;;		line 78 in file "../ECE3301L_Spring22_Final_Lab_Sample/Main.c"
 14735 ;; Parameters:    Size  Location     Type
 14736 ;;  c               1    wreg     unsigned char 
 14737 ;; Auto vars:     Size  Location     Type
 14738 ;;  c               1   16[COMRAM] unsigned char 
 14739 ;; Return value:  Size  Location     Type
 14740 ;;		None               void
 14741 ;; Registers used:
 14742 ;;		wreg
 14743 ;; Tracked objects:
 14744 ;;		On entry : 0/0
 14745 ;;		On exit  : 0/0
 14746 ;;		Unchanged: 0/0
 14747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14752 ;;Total ram usage:        1 bytes
 14753 ;; Hardware stack levels used:    1
 14754 ;; Hardware stack levels required when called:    3
 14755 ;; This function calls:
 14756 ;;		Nothing
 14757 ;; This function is called by:
 14758 ;;		_printf
 14759 ;; This function uses a non-reentrant model
 14760 ;;
 14761                           
 14762                           	psect	text77
 14763  003D12                     __ptext77:
 14764                           	opt stack 0
 14765  003D12                     _putch:
 14766                           	opt stack 26
 14767                           
 14768                           ;incstack = 0
 14769                           ;putch@c stored from wreg
 14770  003D12  6E11               	movwf	putch@c,c
 14771                           
 14772                           ;Main.c: 80: while (!TRMT);
 14773  003D14  D000               	goto	l207
 14774  003D16                     l207:
 14775  003D16  A2AC               	btfss	4012,1,c	;volatile
 14776  003D18  D7FE               	goto	l207
 14777                           
 14778                           ;Main.c: 81: TXREG = c;
 14779  003D1A  C011  FFAD         	movff	putch@c,4013	;volatile
 14780  003D1E  0012               	return		;funcret
 14781  003D20                     __end_of_putch:
 14782                           	opt stack 0
 14783                           tblptru	equ	0xFF8
 14784                           tblptrh	equ	0xFF7
 14785                           tblptrl	equ	0xFF6
 14786                           tablat	equ	0xFF5
 14787                           prodh	equ	0xFF4
 14788                           prodl	equ	0xFF3
 14789                           intcon	equ	0xFF2
 14790                           intcon2	equ	0xFF1
 14791                           postinc0	equ	0xFEE
 14792                           wreg	equ	0xFE8
 14793                           postdec1	equ	0xFE5
 14794                           plusw1	equ	0xFE3
 14795                           fsr1l	equ	0xFE1
 14796                           indf2	equ	0xFDF
 14797                           postinc2	equ	0xFDE
 14798                           postdec2	equ	0xFDD
 14799                           plusw2	equ	0xFDB
 14800                           fsr2h	equ	0xFDA
 14801                           fsr2l	equ	0xFD9
 14802                           status	equ	0xFD8
 14803                           
 14804 ;; *************** function _isdigit *****************
 14805 ;; Defined at:
 14806 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 14807 ;; Parameters:    Size  Location     Type
 14808 ;;  c               1    wreg     unsigned char 
 14809 ;; Auto vars:     Size  Location     Type
 14810 ;;  c               1   18[COMRAM] unsigned char 
 14811 ;; Return value:  Size  Location     Type
 14812 ;;		None               void
 14813 ;; Registers used:
 14814 ;;		wreg, status,2, status,0
 14815 ;; Tracked objects:
 14816 ;;		On entry : 0/0
 14817 ;;		On exit  : 0/0
 14818 ;;		Unchanged: 0/0
 14819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14823 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14824 ;;Total ram usage:        3 bytes
 14825 ;; Hardware stack levels used:    1
 14826 ;; Hardware stack levels required when called:    3
 14827 ;; This function calls:
 14828 ;;		Nothing
 14829 ;; This function is called by:
 14830 ;;		_printf
 14831 ;; This function uses a non-reentrant model
 14832 ;;
 14833                           
 14834                           	psect	text78
 14835  003A1A                     __ptext78:
 14836                           	opt stack 0
 14837  003A1A                     _isdigit:
 14838                           	opt stack 26
 14839                           
 14840                           ;incstack = 0
 14841                           ;isdigit@c stored from wreg
 14842  003A1A  6E13               	movwf	isdigit@c,c
 14843  003A1C  0E00               	movlw	0
 14844  003A1E  6E12               	movwf	_isdigit$2828,c
 14845  003A20  0E3A               	movlw	58
 14846  003A22  6013               	cpfslt	isdigit@c,c
 14847  003A24  D006               	goto	l5412
 14848  003A26  0E2F               	movlw	47
 14849  003A28  6413               	cpfsgt	isdigit@c,c
 14850  003A2A  D003               	goto	l5412
 14851  003A2C  0E01               	movlw	1
 14852  003A2E  6E12               	movwf	_isdigit$2828,c
 14853  003A30  D000               	goto	l5412
 14854  003A32                     l5412:
 14855  003A32  C012  F011         	movff	_isdigit$2828,??_isdigit
 14856  003A36  3011               	rrcf	??_isdigit,w,c
 14857  003A38  D000               	goto	l1945
 14858  003A3A                     l1945:
 14859  003A3A  0012               	return		;funcret
 14860  003A3C                     __end_of_isdigit:
 14861                           	opt stack 0
 14862                           tblptru	equ	0xFF8
 14863                           tblptrh	equ	0xFF7
 14864                           tblptrl	equ	0xFF6
 14865                           tablat	equ	0xFF5
 14866                           prodh	equ	0xFF4
 14867                           prodl	equ	0xFF3
 14868                           intcon	equ	0xFF2
 14869                           intcon2	equ	0xFF1
 14870                           postinc0	equ	0xFEE
 14871                           wreg	equ	0xFE8
 14872                           postdec1	equ	0xFE5
 14873                           plusw1	equ	0xFE3
 14874                           fsr1l	equ	0xFE1
 14875                           indf2	equ	0xFDF
 14876                           postinc2	equ	0xFDE
 14877                           postdec2	equ	0xFDD
 14878                           plusw2	equ	0xFDB
 14879                           fsr2h	equ	0xFDA
 14880                           fsr2l	equ	0xFD9
 14881                           status	equ	0xFD8
 14882                           
 14883 ;; *************** function ___lwmod *****************
 14884 ;; Defined at:
 14885 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 14886 ;; Parameters:    Size  Location     Type
 14887 ;;  dividend        2   23[COMRAM] unsigned int 
 14888 ;;  divisor         2   25[COMRAM] unsigned int 
 14889 ;; Auto vars:     Size  Location     Type
 14890 ;;  counter         1   27[COMRAM] unsigned char 
 14891 ;; Return value:  Size  Location     Type
 14892 ;;                  2   23[COMRAM] unsigned int 
 14893 ;; Registers used:
 14894 ;;		wreg, status,2, status,0
 14895 ;; Tracked objects:
 14896 ;;		On entry : 0/0
 14897 ;;		On exit  : 0/0
 14898 ;;		Unchanged: 0/0
 14899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14903 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14904 ;;Total ram usage:        5 bytes
 14905 ;; Hardware stack levels used:    1
 14906 ;; Hardware stack levels required when called:    3
 14907 ;; This function calls:
 14908 ;;		Nothing
 14909 ;; This function is called by:
 14910 ;;		_printf
 14911 ;; This function uses a non-reentrant model
 14912 ;;
 14913                           
 14914                           	psect	text79
 14915  003630                     __ptext79:
 14916                           	opt stack 0
 14917  003630                     ___lwmod:
 14918                           	opt stack 26
 14919                           
 14920                           ;incstack = 0
 14921  003630  501A               	movf	___lwmod@divisor,w,c
 14922  003632  101B               	iorwf	___lwmod@divisor+1,w,c
 14923  003634  B4D8               	btfsc	status,2,c
 14924  003636  D01D               	goto	l2047
 14925  003638  0E01               	movlw	1
 14926  00363A  6E1C               	movwf	___lwmod@counter,c
 14927  00363C  D005               	goto	l5560
 14928  00363E                     l5558:
 14929  00363E  90D8               	bcf	status,0,c
 14930  003640  361A               	rlcf	___lwmod@divisor,f,c
 14931  003642  361B               	rlcf	___lwmod@divisor+1,f,c
 14932  003644  2A1C               	incf	___lwmod@counter,f,c
 14933  003646  D000               	goto	l5560
 14934  003648                     l5560:
 14935  003648  BE1B               	btfsc	___lwmod@divisor+1,7,c
 14936  00364A  D002               	goto	l5562
 14937  00364C  D7F8               	goto	l5558
 14938  00364E  D000               	goto	l5562
 14939  003650                     l5562:
 14940  003650  501A               	movf	___lwmod@divisor,w,c
 14941  003652  5C18               	subwf	___lwmod@dividend,w,c
 14942  003654  501B               	movf	___lwmod@divisor+1,w,c
 14943  003656  5819               	subwfb	___lwmod@dividend+1,w,c
 14944  003658  A0D8               	btfss	status,0,c
 14945  00365A  D005               	goto	l5566
 14946  00365C  501A               	movf	___lwmod@divisor,w,c
 14947  00365E  5E18               	subwf	___lwmod@dividend,f,c
 14948  003660  501B               	movf	___lwmod@divisor+1,w,c
 14949  003662  5A19               	subwfb	___lwmod@dividend+1,f,c
 14950  003664  D000               	goto	l5566
 14951  003666                     l5566:
 14952  003666  90D8               	bcf	status,0,c
 14953  003668  321B               	rrcf	___lwmod@divisor+1,f,c
 14954  00366A  321A               	rrcf	___lwmod@divisor,f,c
 14955  00366C  2E1C               	decfsz	___lwmod@counter,f,c
 14956  00366E  D7F0               	goto	l5562
 14957  003670  D000               	goto	l2047
 14958  003672                     l2047:
 14959  003672  C018  F018         	movff	___lwmod@dividend,?___lwmod
 14960  003676  C019  F019         	movff	___lwmod@dividend+1,?___lwmod+1
 14961  00367A  0012               	return		;funcret
 14962  00367C                     __end_of___lwmod:
 14963                           	opt stack 0
 14964                           tblptru	equ	0xFF8
 14965                           tblptrh	equ	0xFF7
 14966                           tblptrl	equ	0xFF6
 14967                           tablat	equ	0xFF5
 14968                           prodh	equ	0xFF4
 14969                           prodl	equ	0xFF3
 14970                           intcon	equ	0xFF2
 14971                           intcon2	equ	0xFF1
 14972                           postinc0	equ	0xFEE
 14973                           wreg	equ	0xFE8
 14974                           postdec1	equ	0xFE5
 14975                           plusw1	equ	0xFE3
 14976                           fsr1l	equ	0xFE1
 14977                           indf2	equ	0xFDF
 14978                           postinc2	equ	0xFDE
 14979                           postdec2	equ	0xFDD
 14980                           plusw2	equ	0xFDB
 14981                           fsr2h	equ	0xFDA
 14982                           fsr2l	equ	0xFD9
 14983                           status	equ	0xFD8
 14984                           
 14985 ;; *************** function ___lwdiv *****************
 14986 ;; Defined at:
 14987 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 14988 ;; Parameters:    Size  Location     Type
 14989 ;;  dividend        2   16[COMRAM] unsigned int 
 14990 ;;  divisor         2   18[COMRAM] unsigned int 
 14991 ;; Auto vars:     Size  Location     Type
 14992 ;;  quotient        2   20[COMRAM] unsigned int 
 14993 ;;  counter         1   22[COMRAM] unsigned char 
 14994 ;; Return value:  Size  Location     Type
 14995 ;;                  2   16[COMRAM] unsigned int 
 14996 ;; Registers used:
 14997 ;;		wreg, status,2, status,0
 14998 ;; Tracked objects:
 14999 ;;		On entry : 0/0
 15000 ;;		On exit  : 0/0
 15001 ;;		Unchanged: 0/0
 15002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15003 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15004 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15006 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15007 ;;Total ram usage:        7 bytes
 15008 ;; Hardware stack levels used:    1
 15009 ;; Hardware stack levels required when called:    3
 15010 ;; This function calls:
 15011 ;;		Nothing
 15012 ;; This function is called by:
 15013 ;;		_printf
 15014 ;; This function uses a non-reentrant model
 15015 ;;
 15016                           
 15017                           	psect	text80
 15018  003250                     __ptext80:
 15019                           	opt stack 0
 15020  003250                     ___lwdiv:
 15021                           	opt stack 26
 15022                           
 15023                           ;incstack = 0
 15024  003250  0E00               	movlw	0
 15025  003252  6E16               	movwf	___lwdiv@quotient+1,c
 15026  003254  0E00               	movlw	0
 15027  003256  6E15               	movwf	___lwdiv@quotient,c
 15028  003258  5013               	movf	___lwdiv@divisor,w,c
 15029  00325A  1014               	iorwf	___lwdiv@divisor+1,w,c
 15030  00325C  B4D8               	btfsc	status,2,c
 15031  00325E  D021               	goto	l2037
 15032  003260  0E01               	movlw	1
 15033  003262  6E17               	movwf	___lwdiv@counter,c
 15034  003264  D005               	goto	l5540
 15035  003266                     l5538:
 15036  003266  90D8               	bcf	status,0,c
 15037  003268  3613               	rlcf	___lwdiv@divisor,f,c
 15038  00326A  3614               	rlcf	___lwdiv@divisor+1,f,c
 15039  00326C  2A17               	incf	___lwdiv@counter,f,c
 15040  00326E  D000               	goto	l5540
 15041  003270                     l5540:
 15042  003270  BE14               	btfsc	___lwdiv@divisor+1,7,c
 15043  003272  D002               	goto	l5542
 15044  003274  D7F8               	goto	l5538
 15045  003276  D000               	goto	l5542
 15046  003278                     l5542:
 15047  003278  90D8               	bcf	status,0,c
 15048  00327A  3615               	rlcf	___lwdiv@quotient,f,c
 15049  00327C  3616               	rlcf	___lwdiv@quotient+1,f,c
 15050  00327E  5013               	movf	___lwdiv@divisor,w,c
 15051  003280  5C11               	subwf	___lwdiv@dividend,w,c
 15052  003282  5014               	movf	___lwdiv@divisor+1,w,c
 15053  003284  5812               	subwfb	___lwdiv@dividend+1,w,c
 15054  003286  A0D8               	btfss	status,0,c
 15055  003288  D006               	goto	l5550
 15056  00328A  5013               	movf	___lwdiv@divisor,w,c
 15057  00328C  5E11               	subwf	___lwdiv@dividend,f,c
 15058  00328E  5014               	movf	___lwdiv@divisor+1,w,c
 15059  003290  5A12               	subwfb	___lwdiv@dividend+1,f,c
 15060  003292  8015               	bsf	___lwdiv@quotient,0,c
 15061  003294  D000               	goto	l5550
 15062  003296                     l5550:
 15063  003296  90D8               	bcf	status,0,c
 15064  003298  3214               	rrcf	___lwdiv@divisor+1,f,c
 15065  00329A  3213               	rrcf	___lwdiv@divisor,f,c
 15066  00329C  2E17               	decfsz	___lwdiv@counter,f,c
 15067  00329E  D7EC               	goto	l5542
 15068  0032A0  D000               	goto	l2037
 15069  0032A2                     l2037:
 15070  0032A2  C015  F011         	movff	___lwdiv@quotient,?___lwdiv
 15071  0032A6  C016  F012         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15072  0032AA  0012               	return		;funcret
 15073  0032AC                     __end_of___lwdiv:
 15074                           	opt stack 0
 15075                           tblptru	equ	0xFF8
 15076                           tblptrh	equ	0xFF7
 15077                           tblptrl	equ	0xFF6
 15078                           tablat	equ	0xFF5
 15079                           prodh	equ	0xFF4
 15080                           prodl	equ	0xFF3
 15081                           intcon	equ	0xFF2
 15082                           intcon2	equ	0xFF1
 15083                           postinc0	equ	0xFEE
 15084                           wreg	equ	0xFE8
 15085                           postdec1	equ	0xFE5
 15086                           plusw1	equ	0xFE3
 15087                           fsr1l	equ	0xFE1
 15088                           indf2	equ	0xFDF
 15089                           postinc2	equ	0xFDE
 15090                           postdec2	equ	0xFDD
 15091                           plusw2	equ	0xFDB
 15092                           fsr2h	equ	0xFDA
 15093                           fsr2l	equ	0xFD9
 15094                           status	equ	0xFD8
 15095                           
 15096 ;; *************** function _drawtext *****************
 15097 ;; Defined at:
 15098 ;;		line 474 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 15099 ;; Parameters:    Size  Location     Type
 15100 ;;  x               1    wreg     unsigned char 
 15101 ;;  y               1   56[COMRAM] unsigned char 
 15102 ;;  _text           2   57[COMRAM] PTR unsigned char 
 15103 ;;		 -> NULL(0), setup_date(9), setup_time(9), setup_heater_set_text(5), 
 15104 ;;		 -> setup_alarm_time(9), RPM_Txt(5), Volt_Txt(6), DC_Txt(4), 
 15105 ;;		 -> RTC_ALARM_Txt(2), Heater_SW_Txt(4), Heater_Set_Temp_Txt(5), Alarm_SW_Txt(4), 
 15106 ;;		 -> alarm_time(9), date(9), time(9), tempF(4), 
 15107 ;;		 -> tempC(4), 
 15108 ;;  color           2   59[COMRAM] unsigned int 
 15109 ;;  bg              2   61[COMRAM] unsigned int 
 15110 ;;  size            1   63[COMRAM] unsigned char 
 15111 ;; Auto vars:     Size  Location     Type
 15112 ;;  x               1    0[BANK1 ] unsigned char 
 15113 ;;  i               2    3[BANK1 ] unsigned int 
 15114 ;;  textsize        2    1[BANK1 ] unsigned int 
 15115 ;;  cursor_x        1    6[BANK1 ] unsigned char 
 15116 ;;  cursor_y        1    5[BANK1 ] unsigned char 
 15117 ;; Return value:  Size  Location     Type
 15118 ;;		None               void
 15119 ;; Registers used:
 15120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15121 ;; Tracked objects:
 15122 ;;		On entry : 0/0
 15123 ;;		On exit  : 0/0
 15124 ;;		Unchanged: 0/0
 15125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15126 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15127 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15129 ;;      Totals:        10       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15130 ;;Total ram usage:       17 bytes
 15131 ;; Hardware stack levels used:    1
 15132 ;; Hardware stack levels required when called:    9
 15133 ;; This function calls:
 15134 ;;		_drawChar
 15135 ;;		_strlen
 15136 ;; This function is called by:
 15137 ;;		_Initialize_Screen
 15138 ;;		_Update_Screen
 15139 ;;		_Initialize_Setup_Alarm_Time_Screen
 15140 ;;		_Update_Setup_Alarm_Time_Screen
 15141 ;;		_Initialize_Setup_Heater_Screen
 15142 ;;		_Update_Setup_Heater_Screen
 15143 ;;		_Initialize_Setup_Time_Screen
 15144 ;;		_Update_Setup_Time_Screen
 15145 ;; This function uses a non-reentrant model
 15146 ;;
 15147                           
 15148                           	psect	text81
 15149  0019F8                     __ptext81:
 15150                           	opt stack 0
 15151  0019F8                     _drawtext:
 15152                           	opt stack 20
 15153                           
 15154                           ;incstack = 0
 15155                           ;drawtext@x stored from wreg
 15156  0019F8  0101               	movlb	1	; () banked
 15157  0019FA  6F53               	movwf	drawtext@x& (0+255),b
 15158                           
 15159                           ; BSR set to: 1
 15160                           ;ST7735_TFT.c: 476: unsigned char cursor_x, cursor_y;
 15161                           ;ST7735_TFT.c: 477: unsigned int textsize, i;
 15162                           ;ST7735_TFT.c: 478: cursor_x = x, cursor_y = y;
 15163  0019FC  C153  F159         	movff	drawtext@x,drawtext@cursor_x
 15164                           
 15165                           ; BSR set to: 1
 15166  001A00  C039  F158         	movff	drawtext@y,drawtext@cursor_y
 15167                           
 15168                           ; BSR set to: 1
 15169                           ;ST7735_TFT.c: 479: textsize = strlen(_text);
 15170  001A04  C03A  F011         	movff	drawtext@_text,strlen@s
 15171  001A08  C03B  F012         	movff	drawtext@_text+1,strlen@s+1
 15172  001A0C  ECC7  F01B         	call	_strlen	;wreg free
 15173  001A10  C011  F154         	movff	?_strlen,drawtext@textsize
 15174  001A14  C012  F155         	movff	?_strlen+1,drawtext@textsize+1
 15175                           
 15176                           ;ST7735_TFT.c: 480: for(i = 0; i < textsize; i++){
 15177  001A18  0E00               	movlw	0
 15178  001A1A  0101               	movlb	1	; () banked
 15179  001A1C  6F57               	movwf	(drawtext@i+1)& (0+255),b
 15180  001A1E  0E00               	movlw	0
 15181  001A20  6F56               	movwf	drawtext@i& (0+255),b
 15182  001A22  D066               	goto	l8606
 15183  001A24                     l8580:
 15184                           
 15185                           ; BSR set to: 1
 15186                           ;ST7735_TFT.c: 481: if(wrap && ((cursor_x + size * 5) > 128)){
 15187  001A24  0100               	movlb	0	; () banked
 15188  001A26  5180               	movf	_wrap& (0+255),w,b
 15189  001A28  0100               	movlb	0	; () banked
 15190  001A2A  B4D8               	btfsc	status,2,c
 15191  001A2C  D034               	goto	l8596
 15192                           
 15193                           ; BSR set to: 0
 15194  001A2E  5040               	movf	drawtext@size,w,c
 15195  001A30  0D05               	mullw	5
 15196  001A32  0101               	movlb	1	; () banked
 15197  001A34  5159               	movf	drawtext@cursor_x& (0+255),w,b
 15198  001A36  6E41               	movwf	??_drawtext& (0+255),c
 15199  001A38  6A42               	clrf	(??_drawtext+1)& (0+255),c
 15200  001A3A  50F3               	movf	prodl,w,c
 15201  001A3C  2641               	addwf	??_drawtext,f,c
 15202  001A3E  50F4               	movf	prodh,w,c
 15203  001A40  2242               	addwfc	??_drawtext+1,f,c
 15204  001A42  BE42               	btfsc	??_drawtext+1,7,c
 15205  001A44  D028               	goto	l8596
 15206  001A46  5042               	movf	??_drawtext+1,w,c
 15207  001A48  E104               	bnz	u6310
 15208  001A4A  0E81               	movlw	129
 15209  001A4C  5C41               	subwf	??_drawtext,w,c
 15210  001A4E  A0D8               	btfss	status,0,c
 15211  001A50  D022               	goto	l8596
 15212  001A52                     u6310:
 15213                           
 15214                           ; BSR set to: 1
 15215                           ;ST7735_TFT.c: 482: cursor_x = 0;
 15216  001A52  0E00               	movlw	0
 15217  001A54  0101               	movlb	1	; () banked
 15218  001A56  6F59               	movwf	drawtext@cursor_x& (0+255),b
 15219                           
 15220                           ; BSR set to: 1
 15221                           ;ST7735_TFT.c: 483: cursor_y = cursor_y + size * 7 + 3 ;
 15222  001A58  5040               	movf	drawtext@size,w,c
 15223  001A5A  0D07               	mullw	7
 15224  001A5C  50F3               	movf	prodl,w,c
 15225  001A5E  0101               	movlb	1	; () banked
 15226  001A60  2558               	addwf	drawtext@cursor_y& (0+255),w,b
 15227  001A62  0F03               	addlw	3
 15228  001A64  0101               	movlb	1	; () banked
 15229  001A66  6F58               	movwf	drawtext@cursor_y& (0+255),b
 15230                           
 15231                           ; BSR set to: 1
 15232                           ;ST7735_TFT.c: 484: if(cursor_y > 160) cursor_y = 160;
 15233  001A68  0EA0               	movlw	160
 15234  001A6A  0101               	movlb	1	; () banked
 15235  001A6C  6558               	cpfsgt	drawtext@cursor_y& (0+255),b
 15236  001A6E  D004               	goto	l8592
 15237                           
 15238                           ; BSR set to: 1
 15239  001A70  0EA0               	movlw	160
 15240  001A72  0101               	movlb	1	; () banked
 15241  001A74  6F58               	movwf	drawtext@cursor_y& (0+255),b
 15242  001A76  D000               	goto	l8592
 15243  001A78                     l8592:
 15244                           
 15245                           ; BSR set to: 1
 15246                           ;ST7735_TFT.c: 485: if(_text[i] == 0x20) goto _skip; }
 15247  001A78  0101               	movlb	1	; () banked
 15248  001A7A  5156               	movf	drawtext@i& (0+255),w,b
 15249  001A7C  243A               	addwf	drawtext@_text,w,c
 15250  001A7E  6ED9               	movwf	fsr2l,c
 15251  001A80  0101               	movlb	1	; () banked
 15252  001A82  5157               	movf	(drawtext@i+1)& (0+255),w,b
 15253  001A84  203B               	addwfc	drawtext@_text+1,w,c
 15254  001A86  6EDA               	movwf	fsr2h,c
 15255  001A88  0E20               	movlw	32
 15256  001A8A  18DE               	xorwf	postinc2,w,c
 15257  001A8C  B4D8               	btfsc	status,2,c
 15258  001A8E  D02C               	goto	l8604
 15259  001A90  D002               	goto	l8596
 15260                           
 15261                           ; BSR set to: 1
 15262  001A92  D02A               	goto	l8604
 15263                           
 15264                           ; BSR set to: 1
 15265  001A94  D000               	goto	l8596
 15266  001A96                     l8596:
 15267                           
 15268                           ;ST7735_TFT.c: 486: drawChar(cursor_x, cursor_y, _text[i], color, bg, size);
 15269  001A96  C158  F02E         	movff	drawtext@cursor_y,drawChar@y
 15270  001A9A  0101               	movlb	1	; () banked
 15271  001A9C  5156               	movf	drawtext@i& (0+255),w,b
 15272  001A9E  243A               	addwf	drawtext@_text,w,c
 15273  001AA0  6ED9               	movwf	fsr2l,c
 15274  001AA2  0101               	movlb	1	; () banked
 15275  001AA4  5157               	movf	(drawtext@i+1)& (0+255),w,b
 15276  001AA6  203B               	addwfc	drawtext@_text+1,w,c
 15277  001AA8  6EDA               	movwf	fsr2h,c
 15278  001AAA  50DF               	movf	indf2,w,c
 15279  001AAC  6E2F               	movwf	drawChar@c,c
 15280  001AAE  C03C  F030         	movff	drawtext@color,drawChar@color
 15281  001AB2  C03D  F031         	movff	drawtext@color+1,drawChar@color+1
 15282  001AB6  C03E  F032         	movff	drawtext@bg,drawChar@bg
 15283  001ABA  C03F  F033         	movff	drawtext@bg+1,drawChar@bg+1
 15284  001ABE  C040  F034         	movff	drawtext@size,drawChar@size
 15285  001AC2  0101               	movlb	1	; () banked
 15286  001AC4  5159               	movf	drawtext@cursor_x& (0+255),w,b
 15287  001AC6  ECC9  F00B         	call	_drawChar
 15288                           
 15289                           ;ST7735_TFT.c: 487: cursor_x = cursor_x + size * 6;
 15290  001ACA  5040               	movf	drawtext@size,w,c
 15291  001ACC  0D06               	mullw	6
 15292  001ACE  50F3               	movf	prodl,w,c
 15293  001AD0  0101               	movlb	1	; () banked
 15294  001AD2  2559               	addwf	drawtext@cursor_x& (0+255),w,b
 15295  001AD4  0101               	movlb	1	; () banked
 15296  001AD6  6F59               	movwf	drawtext@cursor_x& (0+255),b
 15297                           
 15298                           ; BSR set to: 1
 15299                           ;ST7735_TFT.c: 488: if(cursor_x > 128) cursor_x = 128;
 15300  001AD8  0E80               	movlw	128
 15301  001ADA  0101               	movlb	1	; () banked
 15302  001ADC  6559               	cpfsgt	drawtext@cursor_x& (0+255),b
 15303  001ADE  D004               	goto	l8604
 15304                           
 15305                           ; BSR set to: 1
 15306  001AE0  0E80               	movlw	128
 15307  001AE2  0101               	movlb	1	; () banked
 15308  001AE4  6F59               	movwf	drawtext@cursor_x& (0+255),b
 15309                           
 15310                           ; BSR set to: 1
 15311  001AE6  D000               	goto	l8604
 15312  001AE8                     l8604:
 15313                           
 15314                           ; BSR set to: 1
 15315  001AE8  0101               	movlb	1	; () banked
 15316  001AEA  4B56               	infsnz	drawtext@i& (0+255),f,b
 15317  001AEC  2B57               	incf	(drawtext@i+1)& (0+255),f,b
 15318  001AEE  D000               	goto	l8606
 15319  001AF0                     l8606:
 15320                           
 15321                           ; BSR set to: 1
 15322  001AF0  0101               	movlb	1	; () banked
 15323  001AF2  5154               	movf	drawtext@textsize& (0+255),w,b
 15324  001AF4  0101               	movlb	1	; () banked
 15325  001AF6  5D56               	subwf	drawtext@i& (0+255),w,b
 15326  001AF8  0101               	movlb	1	; () banked
 15327  001AFA  5155               	movf	(drawtext@textsize+1)& (0+255),w,b
 15328  001AFC  0101               	movlb	1	; () banked
 15329  001AFE  5957               	subwfb	(drawtext@i+1)& (0+255),w,b
 15330  001B00  A0D8               	btfss	status,0,c
 15331  001B02  D790               	goto	l8580
 15332                           
 15333                           ; BSR set to: 1
 15334                           
 15335                           ; BSR set to: 1
 15336  001B04  0012               	return		;funcret
 15337  001B06                     __end_of_drawtext:
 15338                           	opt stack 0
 15339                           tblptru	equ	0xFF8
 15340                           tblptrh	equ	0xFF7
 15341                           tblptrl	equ	0xFF6
 15342                           tablat	equ	0xFF5
 15343                           prodh	equ	0xFF4
 15344                           prodl	equ	0xFF3
 15345                           intcon	equ	0xFF2
 15346                           intcon2	equ	0xFF1
 15347                           postinc0	equ	0xFEE
 15348                           wreg	equ	0xFE8
 15349                           postdec1	equ	0xFE5
 15350                           plusw1	equ	0xFE3
 15351                           fsr1l	equ	0xFE1
 15352                           indf2	equ	0xFDF
 15353                           postinc2	equ	0xFDE
 15354                           postdec2	equ	0xFDD
 15355                           plusw2	equ	0xFDB
 15356                           fsr2h	equ	0xFDA
 15357                           fsr2l	equ	0xFD9
 15358                           status	equ	0xFD8
 15359                           
 15360 ;; *************** function _strlen *****************
 15361 ;; Defined at:
 15362 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strlen.c"
 15363 ;; Parameters:    Size  Location     Type
 15364 ;;  s               2   16[COMRAM] PTR const unsigned char 
 15365 ;;		 -> NULL(0), setup_date(9), setup_time(9), setup_heater_set_text(5), 
 15366 ;;		 -> setup_alarm_time(9), RPM_Txt(5), Volt_Txt(6), DC_Txt(4), 
 15367 ;;		 -> RTC_ALARM_Txt(2), Heater_SW_Txt(4), Heater_Set_Temp_Txt(5), Alarm_SW_Txt(4), 
 15368 ;;		 -> alarm_time(9), date(9), time(9), tempF(4), 
 15369 ;;		 -> tempC(4), 
 15370 ;; Auto vars:     Size  Location     Type
 15371 ;;  cp              2   20[COMRAM] PTR const unsigned char 
 15372 ;;		 -> NULL(0), setup_date(9), setup_time(9), setup_heater_set_text(5), 
 15373 ;;		 -> setup_alarm_time(9), RPM_Txt(5), Volt_Txt(6), DC_Txt(4), 
 15374 ;;		 -> RTC_ALARM_Txt(2), Heater_SW_Txt(4), Heater_Set_Temp_Txt(5), Alarm_SW_Txt(4), 
 15375 ;;		 -> alarm_time(9), date(9), time(9), tempF(4), 
 15376 ;;		 -> tempC(4), 
 15377 ;; Return value:  Size  Location     Type
 15378 ;;                  2   16[COMRAM] unsigned int 
 15379 ;; Registers used:
 15380 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15381 ;; Tracked objects:
 15382 ;;		On entry : 0/0
 15383 ;;		On exit  : 0/0
 15384 ;;		Unchanged: 0/0
 15385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15389 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15390 ;;Total ram usage:        6 bytes
 15391 ;; Hardware stack levels used:    1
 15392 ;; Hardware stack levels required when called:    3
 15393 ;; This function calls:
 15394 ;;		Nothing
 15395 ;; This function is called by:
 15396 ;;		_drawtext
 15397 ;; This function uses a non-reentrant model
 15398 ;;
 15399                           
 15400                           	psect	text82
 15401  00378E                     __ptext82:
 15402                           	opt stack 0
 15403  00378E                     _strlen:
 15404                           	opt stack 25
 15405                           
 15406                           ; BSR set to: 1
 15407                           ;incstack = 0
 15408  00378E  C011  F015         	movff	strlen@s,strlen@cp
 15409  003792  C012  F016         	movff	strlen@s+1,strlen@cp+1
 15410  003796  D003               	goto	l8142
 15411  003798                     l8140:
 15412  003798  4A15               	infsnz	strlen@cp,f,c
 15413  00379A  2A16               	incf	strlen@cp+1,f,c
 15414  00379C  D000               	goto	l8142
 15415  00379E                     l8142:
 15416  00379E  C015  FFD9         	movff	strlen@cp,fsr2l
 15417  0037A2  C016  FFDA         	movff	strlen@cp+1,fsr2h
 15418  0037A6  50DF               	movf	indf2,w,c
 15419  0037A8  A4D8               	btfss	status,2,c
 15420  0037AA  D7F6               	goto	l8140
 15421  0037AC  C011  F013         	movff	strlen@s,??_strlen
 15422  0037B0  C012  F014         	movff	strlen@s+1,??_strlen+1
 15423  0037B4  1E13               	comf	??_strlen,f,c
 15424  0037B6  1E14               	comf	??_strlen+1,f,c
 15425  0037B8  4A13               	infsnz	??_strlen,f,c
 15426  0037BA  2A14               	incf	??_strlen+1,f,c
 15427  0037BC  5015               	movf	strlen@cp,w,c
 15428  0037BE  2413               	addwf	??_strlen,w,c
 15429  0037C0  6E11               	movwf	?_strlen,c
 15430  0037C2  5016               	movf	strlen@cp+1,w,c
 15431  0037C4  2014               	addwfc	??_strlen+1,w,c
 15432  0037C6  6E12               	movwf	?_strlen+1,c
 15433  0037C8  D000               	goto	l2076
 15434  0037CA                     l2076:
 15435  0037CA  0012               	return		;funcret
 15436  0037CC                     __end_of_strlen:
 15437                           	opt stack 0
 15438                           tblptru	equ	0xFF8
 15439                           tblptrh	equ	0xFF7
 15440                           tblptrl	equ	0xFF6
 15441                           tablat	equ	0xFF5
 15442                           prodh	equ	0xFF4
 15443                           prodl	equ	0xFF3
 15444                           intcon	equ	0xFF2
 15445                           intcon2	equ	0xFF1
 15446                           postinc0	equ	0xFEE
 15447                           wreg	equ	0xFE8
 15448                           postdec1	equ	0xFE5
 15449                           plusw1	equ	0xFE3
 15450                           fsr1l	equ	0xFE1
 15451                           indf2	equ	0xFDF
 15452                           postinc2	equ	0xFDE
 15453                           postdec2	equ	0xFDD
 15454                           plusw2	equ	0xFDB
 15455                           fsr2h	equ	0xFDA
 15456                           fsr2l	equ	0xFD9
 15457                           status	equ	0xFD8
 15458                           
 15459 ;; *************** function _drawChar *****************
 15460 ;; Defined at:
 15461 ;;		line 447 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 15462 ;; Parameters:    Size  Location     Type
 15463 ;;  x               1    wreg     unsigned char 
 15464 ;;  y               1   45[COMRAM] unsigned char 
 15465 ;;  c               1   46[COMRAM] unsigned char 
 15466 ;;  color           2   47[COMRAM] unsigned int 
 15467 ;;  bg              2   49[COMRAM] unsigned int 
 15468 ;;  size            1   51[COMRAM] unsigned char 
 15469 ;; Auto vars:     Size  Location     Type
 15470 ;;  x               1   53[COMRAM] unsigned char 
 15471 ;;  line            1   52[COMRAM] unsigned char 
 15472 ;;  i               1   55[COMRAM] unsigned char 
 15473 ;;  j               1   54[COMRAM] unsigned char 
 15474 ;; Return value:  Size  Location     Type
 15475 ;;		None               void
 15476 ;; Registers used:
 15477 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15478 ;; Tracked objects:
 15479 ;;		On entry : 0/0
 15480 ;;		On exit  : 0/0
 15481 ;;		Unchanged: 0/0
 15482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15483 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15484 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15486 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15487 ;;Total ram usage:       11 bytes
 15488 ;; Hardware stack levels used:    1
 15489 ;; Hardware stack levels required when called:    8
 15490 ;; This function calls:
 15491 ;;		___wmul
 15492 ;;		_drawPixel
 15493 ;;		_fillRect
 15494 ;; This function is called by:
 15495 ;;		_drawtext
 15496 ;; This function uses a non-reentrant model
 15497 ;;
 15498                           
 15499                           	psect	text83
 15500  001792                     __ptext83:
 15501                           	opt stack 0
 15502  001792                     _drawChar:
 15503                           	opt stack 20
 15504                           
 15505                           ;incstack = 0
 15506                           ;drawChar@x stored from wreg
 15507  001792  6E36               	movwf	drawChar@x,c
 15508                           
 15509                           ;ST7735_TFT.c: 449: char i, j;
 15510                           ;ST7735_TFT.c: 450: if((x >= 128) || (y >= 160))
 15511  001794  0E80               	movlw	128
 15512  001796  6036               	cpfslt	drawChar@x,c
 15513  001798  D0A6               	goto	l848
 15514  00179A  0E9F               	movlw	159
 15515  00179C  642E               	cpfsgt	drawChar@y,c
 15516  00179E  D001               	goto	l8088
 15517                           
 15518                           ;ST7735_TFT.c: 451: return;
 15519  0017A0  D0A2               	goto	l848
 15520  0017A2                     l8088:
 15521                           
 15522                           ;ST7735_TFT.c: 452: if(size < 1) size = 1;
 15523  0017A2  5034               	movf	drawChar@size,w,c
 15524  0017A4  A4D8               	btfss	status,2,c
 15525  0017A6  D003               	goto	l8092
 15526  0017A8  0E01               	movlw	1
 15527  0017AA  6E34               	movwf	drawChar@size,c
 15528  0017AC  D000               	goto	l8092
 15529  0017AE                     l8092:
 15530                           
 15531                           ;ST7735_TFT.c: 453: if((c < ' ') || (c > '~'))
 15532  0017AE  0E1F               	movlw	31
 15533  0017B0  642F               	cpfsgt	drawChar@c,c
 15534  0017B2  D004               	goto	l8096
 15535  0017B4  0E7E               	movlw	126
 15536  0017B6  642F               	cpfsgt	drawChar@c,c
 15537  0017B8  D003               	goto	l850
 15538  0017BA  D000               	goto	l8096
 15539  0017BC                     l8096:
 15540                           
 15541                           ;ST7735_TFT.c: 454: c = '?';
 15542  0017BC  0E3F               	movlw	63
 15543  0017BE  6E2F               	movwf	drawChar@c,c
 15544  0017C0                     l850:
 15545                           
 15546                           ;ST7735_TFT.c: 455: for(i=0; i<5; i++ ) {
 15547  0017C0  0E00               	movlw	0
 15548  0017C2  6E38               	movwf	drawChar@i,c
 15549  0017C4                     l8098:
 15550  0017C4  0E04               	movlw	4
 15551  0017C6  6438               	cpfsgt	drawChar@i,c
 15552  0017C8  D001               	goto	l8102
 15553  0017CA  D08D               	goto	l848
 15554  0017CC                     l8102:
 15555                           
 15556                           ;ST7735_TFT.c: 456: unsigned char line;
 15557                           ;ST7735_TFT.c: 457: if(c < 'S')
 15558  0017CC  0E53               	movlw	83
 15559  0017CE  602F               	cpfslt	drawChar@c,c
 15560  0017D0  D015               	goto	l8106
 15561                           
 15562                           ;ST7735_TFT.c: 458: line = font[(c - 32)*5 + i];
 15563  0017D2  0EE0               	movlw	224
 15564  0017D4  242F               	addwf	drawChar@c,w,c
 15565  0017D6  6E11               	movwf	___wmul@multiplier,c
 15566  0017D8  6A12               	clrf	___wmul@multiplier+1,c
 15567  0017DA  0EFF               	movlw	255
 15568  0017DC  2212               	addwfc	___wmul@multiplier+1,f,c
 15569  0017DE  0E00               	movlw	0
 15570  0017E0  6E14               	movwf	___wmul@multiplicand+1,c
 15571  0017E2  0E05               	movlw	5
 15572  0017E4  6E13               	movwf	___wmul@multiplicand,c
 15573  0017E6  ECAE  F01C         	call	___wmul	;wreg free
 15574  0017EA  5038               	movf	drawChar@i,w,c
 15575  0017EC  2611               	addwf	?___wmul,f,c
 15576  0017EE  0E00               	movlw	0
 15577  0017F0  2212               	addwfc	?___wmul+1,f,c
 15578  0017F2  0EC5               	movlw	low _font
 15579  0017F4  2411               	addwf	?___wmul,w,c
 15580  0017F6  6EF6               	movwf	tblptrl,c
 15581  0017F8  0EFC               	movlw	high _font
 15582  0017FA  D014               	goto	L9
 15583  0017FC                     l8106:
 15584                           
 15585                           ;ST7735_TFT.c: 459: else
 15586                           ;ST7735_TFT.c: 460: line = font2[(c - 'S')*5 + i];
 15587  0017FC  0EAD               	movlw	173
 15588  0017FE  242F               	addwf	drawChar@c,w,c
 15589  001800  6E11               	movwf	___wmul@multiplier,c
 15590  001802  6A12               	clrf	___wmul@multiplier+1,c
 15591  001804  0EFF               	movlw	255
 15592  001806  2212               	addwfc	___wmul@multiplier+1,f,c
 15593  001808  0E00               	movlw	0
 15594  00180A  6E14               	movwf	___wmul@multiplicand+1,c
 15595  00180C  0E05               	movlw	5
 15596  00180E  6E13               	movwf	___wmul@multiplicand,c
 15597  001810  ECAE  F01C         	call	___wmul	;wreg free
 15598  001814  5038               	movf	drawChar@i,w,c
 15599  001816  2611               	addwf	?___wmul,f,c
 15600  001818  0E00               	movlw	0
 15601  00181A  2212               	addwfc	?___wmul+1,f,c
 15602  00181C  0EC4               	movlw	low _font2
 15603  00181E  2411               	addwf	?___wmul,w,c
 15604  001820  6EF6               	movwf	tblptrl,c
 15605  001822  0EFD               	movlw	high _font2
 15606  001824                     L9:
 15607  001824  2012               	addwfc	?___wmul+1,w,c
 15608  001826  6EF7               	movwf	tblptrh,c
 15609  001828                     	if	0	;There are less than 3 active tblptr bytes
 15610  001828                     	endif
 15611  001828  0008               	tblrd		*
 15612  00182A  CFF5 F035          	movff	tablat,drawChar@line
 15613  00182E  D000               	goto	l8108
 15614  001830                     l8108:
 15615                           
 15616                           ;ST7735_TFT.c: 461: for(j=0; j<7; j++, line >>= 1) {
 15617  001830  0E00               	movlw	0
 15618  001832  6E37               	movwf	drawChar@j,c
 15619  001834                     l8110:
 15620  001834  0E06               	movlw	6
 15621  001836  6437               	cpfsgt	drawChar@j,c
 15622  001838  D001               	goto	l857
 15623  00183A  D053               	goto	l8134
 15624  00183C                     l857:
 15625                           
 15626                           ;ST7735_TFT.c: 462: if(line & 0x01) {
 15627  00183C  A035               	btfss	drawChar@line,0,c
 15628  00183E  D023               	goto	l8120
 15629                           
 15630                           ;ST7735_TFT.c: 463: if(size == 1) drawPixel(x+i, y+j, color);
 15631  001840  0434               	decf	drawChar@size,w,c
 15632  001842  A4D8               	btfss	status,2,c
 15633  001844  D00C               	goto	l8118
 15634  001846  502E               	movf	drawChar@y,w,c
 15635  001848  2437               	addwf	drawChar@j,w,c
 15636  00184A  6E18               	movwf	drawPixel@y,c
 15637  00184C  C030  F019         	movff	drawChar@color,drawPixel@color
 15638  001850  C031  F01A         	movff	drawChar@color+1,drawPixel@color+1
 15639  001854  5036               	movf	drawChar@x,w,c
 15640  001856  2438               	addwf	drawChar@i,w,c
 15641  001858  EC55  F01C         	call	_drawPixel
 15642  00185C  D03E               	goto	l8128
 15643  00185E                     l8118:
 15644                           
 15645                           ;ST7735_TFT.c: 464: else fillRect(x+(i*size), y+(j*size), size, size, color);
 15646  00185E  5037               	movf	drawChar@j,w,c
 15647  001860  0234               	mulwf	drawChar@size,c
 15648  001862  50F3               	movf	prodl,w,c
 15649  001864  242E               	addwf	drawChar@y,w,c
 15650  001866  6E23               	movwf	fillRect@y,c
 15651  001868  C034  F024         	movff	drawChar@size,fillRect@w
 15652  00186C  C034  F025         	movff	drawChar@size,fillRect@h
 15653  001870  C030  F026         	movff	drawChar@color,fillRect@color
 15654  001874  C031  F027         	movff	drawChar@color+1,fillRect@color+1
 15655  001878  5038               	movf	drawChar@i,w,c
 15656  00187A  0234               	mulwf	drawChar@size,c
 15657  00187C  50F3               	movf	prodl,w,c
 15658  00187E  2436               	addwf	drawChar@x,w,c
 15659  001880  EC3E  F01B         	call	_fillRect
 15660                           
 15661                           ;ST7735_TFT.c: 465: }
 15662  001884  D02A               	goto	l8128
 15663  001886                     l8120:
 15664                           
 15665                           ;ST7735_TFT.c: 466: else if(bg != color) {
 15666  001886  5030               	movf	drawChar@color,w,c
 15667  001888  1832               	xorwf	drawChar@bg,w,c
 15668  00188A  E104               	bnz	u5660
 15669  00188C  5031               	movf	drawChar@color+1,w,c
 15670  00188E  1833               	xorwf	drawChar@bg+1,w,c
 15671  001890  B4D8               	btfsc	status,2,c
 15672  001892  D023               	goto	l8128
 15673  001894                     u5660:
 15674                           
 15675                           ;ST7735_TFT.c: 467: if(size == 1) drawPixel(x+i, y+j, bg);
 15676  001894  0434               	decf	drawChar@size,w,c
 15677  001896  A4D8               	btfss	status,2,c
 15678  001898  D00C               	goto	l8126
 15679  00189A  502E               	movf	drawChar@y,w,c
 15680  00189C  2437               	addwf	drawChar@j,w,c
 15681  00189E  6E18               	movwf	drawPixel@y,c
 15682  0018A0  C032  F019         	movff	drawChar@bg,drawPixel@color
 15683  0018A4  C033  F01A         	movff	drawChar@bg+1,drawPixel@color+1
 15684  0018A8  5036               	movf	drawChar@x,w,c
 15685  0018AA  2438               	addwf	drawChar@i,w,c
 15686  0018AC  EC55  F01C         	call	_drawPixel
 15687  0018B0  D014               	goto	l8128
 15688  0018B2                     l8126:
 15689                           
 15690                           ;ST7735_TFT.c: 468: else fillRect(x+i*size, y+j*size, size, size, bg);
 15691  0018B2  5037               	movf	drawChar@j,w,c
 15692  0018B4  0234               	mulwf	drawChar@size,c
 15693  0018B6  50F3               	movf	prodl,w,c
 15694  0018B8  242E               	addwf	drawChar@y,w,c
 15695  0018BA  6E23               	movwf	fillRect@y,c
 15696  0018BC  C034  F024         	movff	drawChar@size,fillRect@w
 15697  0018C0  C034  F025         	movff	drawChar@size,fillRect@h
 15698  0018C4  C032  F026         	movff	drawChar@bg,fillRect@color
 15699  0018C8  C033  F027         	movff	drawChar@bg+1,fillRect@color+1
 15700  0018CC  5038               	movf	drawChar@i,w,c
 15701  0018CE  0234               	mulwf	drawChar@size,c
 15702  0018D0  50F3               	movf	prodl,w,c
 15703  0018D2  2436               	addwf	drawChar@x,w,c
 15704  0018D4  EC3E  F01B         	call	_fillRect
 15705  0018D8  D000               	goto	l8128
 15706  0018DA                     l8128:
 15707  0018DA  2A37               	incf	drawChar@j,f,c
 15708  0018DC  90D8               	bcf	status,0,c
 15709  0018DE  3235               	rrcf	drawChar@line,f,c
 15710  0018E0  D7A9               	goto	l8110
 15711  0018E2                     l8134:
 15712  0018E2  2A38               	incf	drawChar@i,f,c
 15713  0018E4  D76F               	goto	l8098
 15714  0018E6                     l848:
 15715  0018E6  0012               	return		;funcret
 15716  0018E8                     __end_of_drawChar:
 15717                           	opt stack 0
 15718                           tblptru	equ	0xFF8
 15719                           tblptrh	equ	0xFF7
 15720                           tblptrl	equ	0xFF6
 15721                           tablat	equ	0xFF5
 15722                           prodh	equ	0xFF4
 15723                           prodl	equ	0xFF3
 15724                           intcon	equ	0xFF2
 15725                           intcon2	equ	0xFF1
 15726                           postinc0	equ	0xFEE
 15727                           wreg	equ	0xFE8
 15728                           postdec1	equ	0xFE5
 15729                           plusw1	equ	0xFE3
 15730                           fsr1l	equ	0xFE1
 15731                           indf2	equ	0xFDF
 15732                           postinc2	equ	0xFDE
 15733                           postdec2	equ	0xFDD
 15734                           plusw2	equ	0xFDB
 15735                           fsr2h	equ	0xFDA
 15736                           fsr2l	equ	0xFD9
 15737                           status	equ	0xFD8
 15738                           
 15739 ;; *************** function _fillRect *****************
 15740 ;; Defined at:
 15741 ;;		line 437 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;  x               1    wreg     unsigned char 
 15744 ;;  y               1   34[COMRAM] unsigned char 
 15745 ;;  w               1   35[COMRAM] unsigned char 
 15746 ;;  h               1   36[COMRAM] unsigned char 
 15747 ;;  color           2   37[COMRAM] unsigned int 
 15748 ;; Auto vars:     Size  Location     Type
 15749 ;;  x               1   42[COMRAM] unsigned char 
 15750 ;;  i               2   43[COMRAM] int 
 15751 ;; Return value:  Size  Location     Type
 15752 ;;		None               void
 15753 ;; Registers used:
 15754 ;;		wreg, status,2, status,0, cstack
 15755 ;; Tracked objects:
 15756 ;;		On entry : 0/0
 15757 ;;		On exit  : 0/0
 15758 ;;		Unchanged: 0/0
 15759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15760 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15761 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15762 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15763 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15764 ;;Total ram usage:       11 bytes
 15765 ;; Hardware stack levels used:    1
 15766 ;; Hardware stack levels required when called:    7
 15767 ;; This function calls:
 15768 ;;		_drawFastVLine
 15769 ;; This function is called by:
 15770 ;;		_Initialize_Setup_Alarm_Time_Screen
 15771 ;;		_Initialize_Setup_Time_Screen
 15772 ;;		_Update_Setup_Screen_Cursor_Forward
 15773 ;;		_Update_Setup_Screen_Cursor_Backward
 15774 ;;		_drawChar
 15775 ;; This function uses a non-reentrant model
 15776 ;;
 15777                           
 15778                           	psect	text84
 15779  00367C                     __ptext84:
 15780                           	opt stack 0
 15781  00367C                     _fillRect:
 15782                           	opt stack 20
 15783                           
 15784                           ;incstack = 0
 15785                           ;fillRect@x stored from wreg
 15786  00367C  6E2B               	movwf	fillRect@x,c
 15787                           
 15788                           ;ST7735_TFT.c: 439: signed int i;
 15789                           ;ST7735_TFT.c: 441: for (i = x; i < x + w; i++)
 15790  00367E  C02B  F02C         	movff	fillRect@x,fillRect@i
 15791  003682  6A2D               	clrf	fillRect@i+1,c
 15792  003684  D00E               	goto	l7954
 15793  003686                     l7950:
 15794                           
 15795                           ;ST7735_TFT.c: 442: {
 15796                           ;ST7735_TFT.c: 443: drawFastVLine(i, y, h, color);
 15797  003686  C023  F018         	movff	fillRect@y,drawFastVLine@y
 15798  00368A  C025  F019         	movff	fillRect@h,drawFastVLine@h
 15799  00368E  C026  F01A         	movff	fillRect@color,drawFastVLine@color
 15800  003692  C027  F01B         	movff	fillRect@color+1,drawFastVLine@color+1
 15801  003696  502C               	movf	fillRect@i,w,c
 15802  003698  EC18  F017         	call	_drawFastVLine
 15803  00369C  4A2C               	infsnz	fillRect@i,f,c
 15804  00369E  2A2D               	incf	fillRect@i+1,f,c
 15805  0036A0  D000               	goto	l7954
 15806  0036A2                     l7954:
 15807  0036A2  5024               	movf	fillRect@w,w,c
 15808  0036A4  C02B  F028         	movff	fillRect@x,??_fillRect
 15809  0036A8  6A29               	clrf	(??_fillRect+1)& (0+255),c
 15810  0036AA  2628               	addwf	??_fillRect,f,c
 15811  0036AC  0E00               	movlw	0
 15812  0036AE  2229               	addwfc	??_fillRect+1,f,c
 15813  0036B0  5028               	movf	??_fillRect,w,c
 15814  0036B2  5C2C               	subwf	fillRect@i,w,c
 15815  0036B4  502D               	movf	fillRect@i+1,w,c
 15816  0036B6  0A80               	xorlw	128
 15817  0036B8  6E2A               	movwf	(??_fillRect+2)& (0+255),c
 15818  0036BA  5029               	movf	??_fillRect+1,w,c
 15819  0036BC  0A80               	xorlw	128
 15820  0036BE  582A               	subwfb	(??_fillRect+2)& (0+255),w,c
 15821  0036C0  A0D8               	btfss	status,0,c
 15822  0036C2  D7E1               	goto	l7950
 15823  0036C4  0012               	return		;funcret
 15824  0036C6                     __end_of_fillRect:
 15825                           	opt stack 0
 15826                           tblptru	equ	0xFF8
 15827                           tblptrh	equ	0xFF7
 15828                           tblptrl	equ	0xFF6
 15829                           tablat	equ	0xFF5
 15830                           prodh	equ	0xFF4
 15831                           prodl	equ	0xFF3
 15832                           intcon	equ	0xFF2
 15833                           intcon2	equ	0xFF1
 15834                           postinc0	equ	0xFEE
 15835                           wreg	equ	0xFE8
 15836                           postdec1	equ	0xFE5
 15837                           plusw1	equ	0xFE3
 15838                           fsr1l	equ	0xFE1
 15839                           indf2	equ	0xFDF
 15840                           postinc2	equ	0xFDE
 15841                           postdec2	equ	0xFDD
 15842                           plusw2	equ	0xFDB
 15843                           fsr2h	equ	0xFDA
 15844                           fsr2l	equ	0xFD9
 15845                           status	equ	0xFD8
 15846                           
 15847 ;; *************** function _drawFastVLine *****************
 15848 ;; Defined at:
 15849 ;;		line 416 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 15850 ;; Parameters:    Size  Location     Type
 15851 ;;  x               1    wreg     unsigned char 
 15852 ;;  y               1   23[COMRAM] unsigned char 
 15853 ;;  h               1   24[COMRAM] unsigned char 
 15854 ;;  color           2   25[COMRAM] unsigned int 
 15855 ;; Auto vars:     Size  Location     Type
 15856 ;;  x               1   33[COMRAM] unsigned char 
 15857 ;;  lo              1   32[COMRAM] unsigned char 
 15858 ;;  hi              1   31[COMRAM] unsigned char 
 15859 ;; Return value:  Size  Location     Type
 15860 ;;		None               void
 15861 ;; Registers used:
 15862 ;;		wreg, status,2, status,0, cstack
 15863 ;; Tracked objects:
 15864 ;;		On entry : 0/0
 15865 ;;		On exit  : 0/0
 15866 ;;		Unchanged: 0/0
 15867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15869 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15870 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15871 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15872 ;;Total ram usage:       11 bytes
 15873 ;; Hardware stack levels used:    1
 15874 ;; Hardware stack levels required when called:    6
 15875 ;; This function calls:
 15876 ;;		_setAddrWindow
 15877 ;;		_spiwrite
 15878 ;; This function is called by:
 15879 ;;		_fillRect
 15880 ;;		_fillCircleHelper
 15881 ;;		_fillCircle
 15882 ;;		_drawRect
 15883 ;; This function uses a non-reentrant model
 15884 ;;
 15885                           
 15886                           	psect	text85
 15887  002E30                     __ptext85:
 15888                           	opt stack 0
 15889  002E30                     _drawFastVLine:
 15890                           	opt stack 20
 15891                           
 15892                           ;incstack = 0
 15893                           ;drawFastVLine@x stored from wreg
 15894  002E30  6E22               	movwf	drawFastVLine@x,c
 15895                           
 15896                           ;ST7735_TFT.c: 418: unsigned char hi, lo;
 15897                           ;ST7735_TFT.c: 419: if((x >= 128) || (y >= 160))
 15898  002E32  0E80               	movlw	128
 15899  002E34  6022               	cpfslt	drawFastVLine@x,c
 15900  002E36  D03F               	goto	l832
 15901  002E38  0E9F               	movlw	159
 15902  002E3A  6418               	cpfsgt	drawFastVLine@y,c
 15903  002E3C  D001               	goto	l7914
 15904                           
 15905                           ;ST7735_TFT.c: 420: return;
 15906  002E3E  D03B               	goto	l832
 15907  002E40                     l7914:
 15908                           
 15909                           ;ST7735_TFT.c: 421: if((y + h - 1) >= 160)
 15910  002E40  0EFF               	movlw	255
 15911  002E42  6E1C               	movwf	??_drawFastVLine& (0+255),c
 15912  002E44  0EFF               	movlw	255
 15913  002E46  6E1D               	movwf	(??_drawFastVLine+1)& (0+255),c
 15914  002E48  5019               	movf	drawFastVLine@h,w,c
 15915  002E4A  C018  F01E         	movff	drawFastVLine@y,??_drawFastVLine+2
 15916  002E4E  6A1F               	clrf	(??_drawFastVLine+3)& (0+255),c
 15917  002E50  261E               	addwf	??_drawFastVLine+2,f,c
 15918  002E52  0E00               	movlw	0
 15919  002E54  221F               	addwfc	??_drawFastVLine+3,f,c
 15920  002E56  501C               	movf	??_drawFastVLine,w,c
 15921  002E58  261E               	addwf	??_drawFastVLine+2,f,c
 15922  002E5A  501D               	movf	??_drawFastVLine+1,w,c
 15923  002E5C  221F               	addwfc	??_drawFastVLine+3,f,c
 15924  002E5E  BE1F               	btfsc	??_drawFastVLine+3,7,c
 15925  002E60  D00B               	goto	l7918
 15926  002E62  501F               	movf	??_drawFastVLine+3,w,c
 15927  002E64  E104               	bnz	u5500
 15928  002E66  0EA0               	movlw	160
 15929  002E68  5C1E               	subwf	??_drawFastVLine+2,w,c
 15930  002E6A  A0D8               	btfss	status,0,c
 15931  002E6C  D005               	goto	l7918
 15932  002E6E                     u5500:
 15933                           
 15934                           ;ST7735_TFT.c: 422: h = 160 - y;
 15935  002E6E  5018               	movf	drawFastVLine@y,w,c
 15936  002E70  0800               	sublw	0
 15937  002E72  0FA0               	addlw	160
 15938  002E74  6E19               	movwf	drawFastVLine@h,c
 15939  002E76  D000               	goto	l7918
 15940  002E78                     l7918:
 15941                           
 15942                           ;ST7735_TFT.c: 423: hi = color >> 8; lo = color;
 15943  002E78  501B               	movf	drawFastVLine@color+1,w,c
 15944  002E7A  6E20               	movwf	drawFastVLine@hi,c
 15945  002E7C  C01A  F021         	movff	drawFastVLine@color,drawFastVLine@lo
 15946                           
 15947                           ;ST7735_TFT.c: 424: setAddrWindow(x, y, x, y + h - 1);
 15948  002E80  C018  F014         	movff	drawFastVLine@y,setAddrWindow@y0
 15949  002E84  C022  F015         	movff	drawFastVLine@x,setAddrWindow@x1
 15950  002E88  5018               	movf	drawFastVLine@y,w,c
 15951  002E8A  2419               	addwf	drawFastVLine@h,w,c
 15952  002E8C  6E1C               	movwf	??_drawFastVLine& (0+255),c
 15953  002E8E  041C               	decf	??_drawFastVLine,w,c
 15954  002E90  6E16               	movwf	setAddrWindow@y1,c
 15955  002E92  5022               	movf	drawFastVLine@x,w,c
 15956  002E94  ECCB  F01A         	call	_setAddrWindow
 15957                           
 15958                           ;ST7735_TFT.c: 425: PORTDbits.RD0 = 1;
 15959  002E98  8083               	bsf	3971,0,c	;volatile
 15960                           
 15961                           ;ST7735_TFT.c: 426: PORTDbits.RD1 = 0;
 15962  002E9A  9283               	bcf	3971,1,c	;volatile
 15963                           
 15964                           ;ST7735_TFT.c: 428: while (h--) {
 15965  002E9C  D007               	goto	l7930
 15966  002E9E                     l7928:
 15967                           
 15968                           ;ST7735_TFT.c: 429: spiwrite(hi);
 15969  002E9E  5020               	movf	drawFastVLine@hi,w,c
 15970  002EA0  ECFD  F01D         	call	_spiwrite
 15971                           
 15972                           ;ST7735_TFT.c: 430: spiwrite(lo);
 15973  002EA4  5021               	movf	drawFastVLine@lo,w,c
 15974  002EA6  ECFD  F01D         	call	_spiwrite
 15975  002EAA  D000               	goto	l7930
 15976  002EAC                     l7930:
 15977  002EAC  0619               	decf	drawFastVLine@h,f,c
 15978  002EAE  2819               	incf	drawFastVLine@h,w,c
 15979  002EB0  A4D8               	btfss	status,2,c
 15980  002EB2  D7F5               	goto	l7928
 15981                           
 15982                           ;ST7735_TFT.c: 431: }
 15983                           ;ST7735_TFT.c: 432: PORTDbits.RD1 = 1;
 15984  002EB4  8283               	bsf	3971,1,c	;volatile
 15985  002EB6                     l832:
 15986  002EB6  0012               	return		;funcret
 15987  002EB8                     __end_of_drawFastVLine:
 15988                           	opt stack 0
 15989                           tblptru	equ	0xFF8
 15990                           tblptrh	equ	0xFF7
 15991                           tblptrl	equ	0xFF6
 15992                           tablat	equ	0xFF5
 15993                           prodh	equ	0xFF4
 15994                           prodl	equ	0xFF3
 15995                           intcon	equ	0xFF2
 15996                           intcon2	equ	0xFF1
 15997                           postinc0	equ	0xFEE
 15998                           wreg	equ	0xFE8
 15999                           postdec1	equ	0xFE5
 16000                           plusw1	equ	0xFE3
 16001                           fsr1l	equ	0xFE1
 16002                           indf2	equ	0xFDF
 16003                           postinc2	equ	0xFDE
 16004                           postdec2	equ	0xFDD
 16005                           plusw2	equ	0xFDB
 16006                           fsr2h	equ	0xFDA
 16007                           fsr2l	equ	0xFD9
 16008                           status	equ	0xFD8
 16009                           
 16010 ;; *************** function _drawPixel *****************
 16011 ;; Defined at:
 16012 ;;		line 407 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 16013 ;; Parameters:    Size  Location     Type
 16014 ;;  x               1    wreg     unsigned char 
 16015 ;;  y               1   23[COMRAM] unsigned char 
 16016 ;;  color           2   24[COMRAM] unsigned int 
 16017 ;; Auto vars:     Size  Location     Type
 16018 ;;  x               1   26[COMRAM] unsigned char 
 16019 ;; Return value:  Size  Location     Type
 16020 ;;		None               void
 16021 ;; Registers used:
 16022 ;;		wreg, status,2, status,0, cstack
 16023 ;; Tracked objects:
 16024 ;;		On entry : 0/0
 16025 ;;		On exit  : 0/0
 16026 ;;		Unchanged: 0/0
 16027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16028 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16032 ;;Total ram usage:        4 bytes
 16033 ;; Hardware stack levels used:    1
 16034 ;; Hardware stack levels required when called:    6
 16035 ;; This function calls:
 16036 ;;		_setAddrWindow
 16037 ;;		_write_data
 16038 ;; This function is called by:
 16039 ;;		_drawChar
 16040 ;;		_drawCircle
 16041 ;;		_drawCircleHelper
 16042 ;; This function uses a non-reentrant model
 16043 ;;
 16044                           
 16045                           	psect	text86
 16046  0038AA                     __ptext86:
 16047                           	opt stack 0
 16048  0038AA                     _drawPixel:
 16049                           	opt stack 21
 16050                           
 16051                           ;incstack = 0
 16052                           ;drawPixel@x stored from wreg
 16053  0038AA  6E1B               	movwf	drawPixel@x,c
 16054                           
 16055                           ;ST7735_TFT.c: 409: if((x >= 128) || (y >= 160))
 16056  0038AC  0E80               	movlw	128
 16057  0038AE  601B               	cpfslt	drawPixel@x,c
 16058  0038B0  D013               	goto	l826
 16059  0038B2  0E9F               	movlw	159
 16060  0038B4  6418               	cpfsgt	drawPixel@y,c
 16061  0038B6  D001               	goto	l7974
 16062                           
 16063                           ;ST7735_TFT.c: 410: return;
 16064  0038B8  D00F               	goto	l826
 16065  0038BA                     l7974:
 16066                           
 16067                           ;ST7735_TFT.c: 411: setAddrWindow(x,y,x+1,y+1);
 16068  0038BA  C018  F014         	movff	drawPixel@y,setAddrWindow@y0
 16069  0038BE  281B               	incf	drawPixel@x,w,c
 16070  0038C0  6E15               	movwf	setAddrWindow@x1,c
 16071  0038C2  2818               	incf	drawPixel@y,w,c
 16072  0038C4  6E16               	movwf	setAddrWindow@y1,c
 16073  0038C6  501B               	movf	drawPixel@x,w,c
 16074  0038C8  ECCB  F01A         	call	_setAddrWindow
 16075                           
 16076                           ;ST7735_TFT.c: 412: write_data(color >> 8);
 16077  0038CC  501A               	movf	drawPixel@color+1,w,c
 16078  0038CE  EC79  F01E         	call	_write_data
 16079                           
 16080                           ;ST7735_TFT.c: 413: write_data(color & 0xFF);
 16081  0038D2  5019               	movf	drawPixel@color,w,c
 16082  0038D4  EC79  F01E         	call	_write_data
 16083  0038D8                     l826:
 16084  0038D8  0012               	return		;funcret
 16085  0038DA                     __end_of_drawPixel:
 16086                           	opt stack 0
 16087                           tblptru	equ	0xFF8
 16088                           tblptrh	equ	0xFF7
 16089                           tblptrl	equ	0xFF6
 16090                           tablat	equ	0xFF5
 16091                           prodh	equ	0xFF4
 16092                           prodl	equ	0xFF3
 16093                           intcon	equ	0xFF2
 16094                           intcon2	equ	0xFF1
 16095                           postinc0	equ	0xFEE
 16096                           wreg	equ	0xFE8
 16097                           postdec1	equ	0xFE5
 16098                           plusw1	equ	0xFE3
 16099                           fsr1l	equ	0xFE1
 16100                           indf2	equ	0xFDF
 16101                           postinc2	equ	0xFDE
 16102                           postdec2	equ	0xFDD
 16103                           plusw2	equ	0xFDB
 16104                           fsr2h	equ	0xFDA
 16105                           fsr2l	equ	0xFD9
 16106                           status	equ	0xFD8
 16107                           
 16108 ;; *************** function _setAddrWindow *****************
 16109 ;; Defined at:
 16110 ;;		line 392 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 16111 ;; Parameters:    Size  Location     Type
 16112 ;;  x0              1    wreg     unsigned char 
 16113 ;;  y0              1   19[COMRAM] unsigned char 
 16114 ;;  x1              1   20[COMRAM] unsigned char 
 16115 ;;  y1              1   21[COMRAM] unsigned char 
 16116 ;; Auto vars:     Size  Location     Type
 16117 ;;  x0              1   22[COMRAM] unsigned char 
 16118 ;; Return value:  Size  Location     Type
 16119 ;;		None               void
 16120 ;; Registers used:
 16121 ;;		wreg, status,2, status,0, cstack
 16122 ;; Tracked objects:
 16123 ;;		On entry : 0/0
 16124 ;;		On exit  : 0/0
 16125 ;;		Unchanged: 0/0
 16126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16127 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16130 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16131 ;;Total ram usage:        4 bytes
 16132 ;; Hardware stack levels used:    1
 16133 ;; Hardware stack levels required when called:    5
 16134 ;; This function calls:
 16135 ;;		_write_command
 16136 ;;		_write_data
 16137 ;; This function is called by:
 16138 ;;		_drawPixel
 16139 ;;		_drawFastVLine
 16140 ;;		_fillRectangle
 16141 ;;		_drawFastHLine
 16142 ;; This function uses a non-reentrant model
 16143 ;;
 16144                           
 16145                           	psect	text87
 16146  003596                     __ptext87:
 16147                           	opt stack 0
 16148  003596                     _setAddrWindow:
 16149                           	opt stack 20
 16150                           
 16151                           ;incstack = 0
 16152                           ;setAddrWindow@x0 stored from wreg
 16153  003596  6E17               	movwf	setAddrWindow@x0,c
 16154                           
 16155                           ;ST7735_TFT.c: 394: write_command(0x2A);
 16156  003598  0E2A               	movlw	42
 16157  00359A  EC81  F01E         	call	_write_command
 16158                           
 16159                           ;ST7735_TFT.c: 395: write_data(0);
 16160  00359E  0E00               	movlw	0
 16161  0035A0  EC79  F01E         	call	_write_data
 16162                           
 16163                           ;ST7735_TFT.c: 396: write_data(x0 + colstart);
 16164  0035A4  5017               	movf	setAddrWindow@x0,w,c
 16165  0035A6  2459               	addwf	_colstart,w,c
 16166  0035A8  EC79  F01E         	call	_write_data
 16167                           
 16168                           ;ST7735_TFT.c: 397: write_data(0);
 16169  0035AC  0E00               	movlw	0
 16170  0035AE  EC79  F01E         	call	_write_data
 16171                           
 16172                           ;ST7735_TFT.c: 398: write_data(x1 + colstart);
 16173  0035B2  5015               	movf	setAddrWindow@x1,w,c
 16174  0035B4  2459               	addwf	_colstart,w,c
 16175  0035B6  EC79  F01E         	call	_write_data
 16176                           
 16177                           ;ST7735_TFT.c: 399: write_command(0x2B);
 16178  0035BA  0E2B               	movlw	43
 16179  0035BC  EC81  F01E         	call	_write_command
 16180                           
 16181                           ;ST7735_TFT.c: 400: write_data(0);
 16182  0035C0  0E00               	movlw	0
 16183  0035C2  EC79  F01E         	call	_write_data
 16184                           
 16185                           ;ST7735_TFT.c: 401: write_data(y0 + rowstart);
 16186  0035C6  5014               	movf	setAddrWindow@y0,w,c
 16187  0035C8  2461               	addwf	_rowstart,w,c
 16188  0035CA  EC79  F01E         	call	_write_data
 16189                           
 16190                           ;ST7735_TFT.c: 402: write_data(0);
 16191  0035CE  0E00               	movlw	0
 16192  0035D0  EC79  F01E         	call	_write_data
 16193                           
 16194                           ;ST7735_TFT.c: 403: write_data(y1 + rowstart);
 16195  0035D4  5016               	movf	setAddrWindow@y1,w,c
 16196  0035D6  2461               	addwf	_rowstart,w,c
 16197  0035D8  EC79  F01E         	call	_write_data
 16198                           
 16199                           ;ST7735_TFT.c: 404: write_command(0x2C);
 16200  0035DC  0E2C               	movlw	44
 16201  0035DE  EC81  F01E         	call	_write_command
 16202  0035E2  0012               	return		;funcret
 16203  0035E4                     __end_of_setAddrWindow:
 16204                           	opt stack 0
 16205                           tblptru	equ	0xFF8
 16206                           tblptrh	equ	0xFF7
 16207                           tblptrl	equ	0xFF6
 16208                           tablat	equ	0xFF5
 16209                           prodh	equ	0xFF4
 16210                           prodl	equ	0xFF3
 16211                           intcon	equ	0xFF2
 16212                           intcon2	equ	0xFF1
 16213                           postinc0	equ	0xFEE
 16214                           wreg	equ	0xFE8
 16215                           postdec1	equ	0xFE5
 16216                           plusw1	equ	0xFE3
 16217                           fsr1l	equ	0xFE1
 16218                           indf2	equ	0xFDF
 16219                           postinc2	equ	0xFDE
 16220                           postdec2	equ	0xFDD
 16221                           plusw2	equ	0xFDB
 16222                           fsr2h	equ	0xFDA
 16223                           fsr2l	equ	0xFD9
 16224                           status	equ	0xFD8
 16225                           
 16226 ;; *************** function _write_data *****************
 16227 ;; Defined at:
 16228 ;;		line 209 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 16229 ;; Parameters:    Size  Location     Type
 16230 ;;  data_           1    wreg     unsigned char 
 16231 ;; Auto vars:     Size  Location     Type
 16232 ;;  data_           1   18[COMRAM] unsigned char 
 16233 ;; Return value:  Size  Location     Type
 16234 ;;		None               void
 16235 ;; Registers used:
 16236 ;;		wreg, status,2, cstack
 16237 ;; Tracked objects:
 16238 ;;		On entry : 0/0
 16239 ;;		On exit  : 0/0
 16240 ;;		Unchanged: 0/0
 16241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16246 ;;Total ram usage:        1 bytes
 16247 ;; Hardware stack levels used:    1
 16248 ;; Hardware stack levels required when called:    4
 16249 ;; This function calls:
 16250 ;;		_spiwrite
 16251 ;; This function is called by:
 16252 ;;		_Rcmd1
 16253 ;;		_Rcmd2red
 16254 ;;		_Rcmd3
 16255 ;;		_setAddrWindow
 16256 ;;		_drawPixel
 16257 ;;		_TFT_GreenTab_Initialize
 16258 ;;		_Bcmd
 16259 ;;		_setScrollDefinition
 16260 ;;		_Rcmd2green
 16261 ;;		_VerticalScroll
 16262 ;; This function uses a non-reentrant model
 16263 ;;
 16264                           
 16265                           	psect	text88
 16266  003CF2                     __ptext88:
 16267                           	opt stack 0
 16268  003CF2                     _write_data:
 16269                           	opt stack 20
 16270                           
 16271                           ;incstack = 0
 16272                           ;write_data@data_ stored from wreg
 16273  003CF2  6E13               	movwf	write_data@data_,c
 16274                           
 16275                           ;ST7735_TFT.c: 211: PORTDbits.RD1 = 0;
 16276  003CF4  9283               	bcf	3971,1,c	;volatile
 16277                           
 16278                           ;ST7735_TFT.c: 212: PORTDbits.RD0 = 1;
 16279  003CF6  8083               	bsf	3971,0,c	;volatile
 16280                           
 16281                           ;ST7735_TFT.c: 213: spiwrite(data_);
 16282  003CF8  5013               	movf	write_data@data_,w,c
 16283  003CFA  ECFD  F01D         	call	_spiwrite
 16284                           
 16285                           ;ST7735_TFT.c: 214: PORTDbits.RD1 = 1;
 16286  003CFE  8283               	bsf	3971,1,c	;volatile
 16287  003D00  0012               	return		;funcret
 16288  003D02                     __end_of_write_data:
 16289                           	opt stack 0
 16290                           tblptru	equ	0xFF8
 16291                           tblptrh	equ	0xFF7
 16292                           tblptrl	equ	0xFF6
 16293                           tablat	equ	0xFF5
 16294                           prodh	equ	0xFF4
 16295                           prodl	equ	0xFF3
 16296                           intcon	equ	0xFF2
 16297                           intcon2	equ	0xFF1
 16298                           postinc0	equ	0xFEE
 16299                           wreg	equ	0xFE8
 16300                           postdec1	equ	0xFE5
 16301                           plusw1	equ	0xFE3
 16302                           fsr1l	equ	0xFE1
 16303                           indf2	equ	0xFDF
 16304                           postinc2	equ	0xFDE
 16305                           postdec2	equ	0xFDD
 16306                           plusw2	equ	0xFDB
 16307                           fsr2h	equ	0xFDA
 16308                           fsr2l	equ	0xFD9
 16309                           status	equ	0xFD8
 16310                           
 16311 ;; *************** function _write_command *****************
 16312 ;; Defined at:
 16313 ;;		line 198 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 16314 ;; Parameters:    Size  Location     Type
 16315 ;;  cmd_            1    wreg     unsigned char 
 16316 ;; Auto vars:     Size  Location     Type
 16317 ;;  cmd_            1   18[COMRAM] unsigned char 
 16318 ;; Return value:  Size  Location     Type
 16319 ;;		None               void
 16320 ;; Registers used:
 16321 ;;		wreg, status,2, cstack
 16322 ;; Tracked objects:
 16323 ;;		On entry : 0/0
 16324 ;;		On exit  : 0/0
 16325 ;;		Unchanged: 0/0
 16326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16331 ;;Total ram usage:        1 bytes
 16332 ;; Hardware stack levels used:    1
 16333 ;; Hardware stack levels required when called:    4
 16334 ;; This function calls:
 16335 ;;		_spiwrite
 16336 ;; This function is called by:
 16337 ;;		_Rcmd1
 16338 ;;		_Rcmd2red
 16339 ;;		_Rcmd3
 16340 ;;		_setAddrWindow
 16341 ;;		_TFT_GreenTab_Initialize
 16342 ;;		_Bcmd
 16343 ;;		_setScrollDefinition
 16344 ;;		_Rcmd2green
 16345 ;;		_VerticalScroll
 16346 ;; This function uses a non-reentrant model
 16347 ;;
 16348                           
 16349                           	psect	text89
 16350  003D02                     __ptext89:
 16351                           	opt stack 0
 16352  003D02                     _write_command:
 16353                           	opt stack 20
 16354                           
 16355                           ;incstack = 0
 16356                           ;write_command@cmd_ stored from wreg
 16357  003D02  6E13               	movwf	write_command@cmd_,c
 16358                           
 16359                           ;ST7735_TFT.c: 200: PORTDbits.RD1 = 0;
 16360  003D04  9283               	bcf	3971,1,c	;volatile
 16361                           
 16362                           ;ST7735_TFT.c: 202: PORTDbits.RD0 = 0;
 16363  003D06  9083               	bcf	3971,0,c	;volatile
 16364                           
 16365                           ;ST7735_TFT.c: 203: spiwrite(cmd_);
 16366  003D08  5013               	movf	write_command@cmd_,w,c
 16367  003D0A  ECFD  F01D         	call	_spiwrite
 16368                           
 16369                           ;ST7735_TFT.c: 205: PORTDbits.RD1 = 1;
 16370  003D0E  8283               	bsf	3971,1,c	;volatile
 16371  003D10  0012               	return		;funcret
 16372  003D12                     __end_of_write_command:
 16373                           	opt stack 0
 16374                           tblptru	equ	0xFF8
 16375                           tblptrh	equ	0xFF7
 16376                           tblptrl	equ	0xFF6
 16377                           tablat	equ	0xFF5
 16378                           prodh	equ	0xFF4
 16379                           prodl	equ	0xFF3
 16380                           intcon	equ	0xFF2
 16381                           intcon2	equ	0xFF1
 16382                           postinc0	equ	0xFEE
 16383                           wreg	equ	0xFE8
 16384                           postdec1	equ	0xFE5
 16385                           plusw1	equ	0xFE3
 16386                           fsr1l	equ	0xFE1
 16387                           indf2	equ	0xFDF
 16388                           postinc2	equ	0xFDE
 16389                           postdec2	equ	0xFDD
 16390                           plusw2	equ	0xFDB
 16391                           fsr2h	equ	0xFDA
 16392                           fsr2l	equ	0xFD9
 16393                           status	equ	0xFD8
 16394                           
 16395 ;; *************** function _spiwrite *****************
 16396 ;; Defined at:
 16397 ;;		line 189 in file "../ECE3301L_Spring22_Final_Lab_Sample/ST7735_TFT.c"
 16398 ;; Parameters:    Size  Location     Type
 16399 ;;  spidata         1    wreg     unsigned char 
 16400 ;; Auto vars:     Size  Location     Type
 16401 ;;  spidata         1   17[COMRAM] unsigned char 
 16402 ;;  x               1   16[COMRAM] unsigned char 
 16403 ;; Return value:  Size  Location     Type
 16404 ;;		None               void
 16405 ;; Registers used:
 16406 ;;		wreg
 16407 ;; Tracked objects:
 16408 ;;		On entry : 0/0
 16409 ;;		On exit  : 0/0
 16410 ;;		Unchanged: 0/0
 16411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16416 ;;Total ram usage:        2 bytes
 16417 ;; Hardware stack levels used:    1
 16418 ;; Hardware stack levels required when called:    3
 16419 ;; This function calls:
 16420 ;;		Nothing
 16421 ;; This function is called by:
 16422 ;;		_write_command
 16423 ;;		_write_data
 16424 ;;		_drawFastVLine
 16425 ;;		_fillRectangle
 16426 ;;		_drawFastHLine
 16427 ;; This function uses a non-reentrant model
 16428 ;;
 16429                           
 16430                           	psect	text90
 16431  003BFA                     __ptext90:
 16432                           	opt stack 0
 16433  003BFA                     _spiwrite:
 16434                           	opt stack 22
 16435                           
 16436                           ;incstack = 0
 16437                           ;spiwrite@spidata stored from wreg
 16438  003BFA  6E12               	movwf	spiwrite@spidata,c
 16439                           
 16440                           ;ST7735_TFT.c: 191: char x;
 16441                           ;ST7735_TFT.c: 192: PIR1bits.SSPIF = 0;
 16442  003BFC  969E               	bcf	3998,3,c	;volatile
 16443                           
 16444                           ;ST7735_TFT.c: 193: x = SSPBUF;
 16445  003BFE  CFC9 F011          	movff	4041,spiwrite@x	;volatile
 16446                           
 16447                           ;ST7735_TFT.c: 194: SSPBUF = spidata;
 16448  003C02  C012  FFC9         	movff	spiwrite@spidata,4041	;volatile
 16449                           
 16450                           ;ST7735_TFT.c: 195: while (!SSPSTATbits.BF);
 16451  003C06  D000               	goto	l782
 16452  003C08                     l782:
 16453  003C08  A0C7               	btfss	4039,0,c	;volatile
 16454  003C0A  D7FE               	goto	l782
 16455  003C0C  0012               	return		;funcret
 16456  003C0E                     __end_of_spiwrite:
 16457                           	opt stack 0
 16458                           tblptru	equ	0xFF8
 16459                           tblptrh	equ	0xFF7
 16460                           tblptrl	equ	0xFF6
 16461                           tablat	equ	0xFF5
 16462                           prodh	equ	0xFF4
 16463                           prodl	equ	0xFF3
 16464                           intcon	equ	0xFF2
 16465                           intcon2	equ	0xFF1
 16466                           postinc0	equ	0xFEE
 16467                           wreg	equ	0xFE8
 16468                           postdec1	equ	0xFE5
 16469                           plusw1	equ	0xFE3
 16470                           fsr1l	equ	0xFE1
 16471                           indf2	equ	0xFDF
 16472                           postinc2	equ	0xFDE
 16473                           postdec2	equ	0xFDD
 16474                           plusw2	equ	0xFDB
 16475                           fsr2h	equ	0xFDA
 16476                           fsr2l	equ	0xFD9
 16477                           status	equ	0xFD8
 16478                           
 16479 ;; *************** function ___wmul *****************
 16480 ;; Defined at:
 16481 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 16482 ;; Parameters:    Size  Location     Type
 16483 ;;  multiplier      2   16[COMRAM] unsigned int 
 16484 ;;  multiplicand    2   18[COMRAM] unsigned int 
 16485 ;; Auto vars:     Size  Location     Type
 16486 ;;  product         2   20[COMRAM] unsigned int 
 16487 ;; Return value:  Size  Location     Type
 16488 ;;                  2   16[COMRAM] unsigned int 
 16489 ;; Registers used:
 16490 ;;		wreg, status,2, status,0, prodl, prodh
 16491 ;; Tracked objects:
 16492 ;;		On entry : 0/0
 16493 ;;		On exit  : 0/0
 16494 ;;		Unchanged: 0/0
 16495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16496 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16499 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16500 ;;Total ram usage:        6 bytes
 16501 ;; Hardware stack levels used:    1
 16502 ;; Hardware stack levels required when called:    3
 16503 ;; This function calls:
 16504 ;;		Nothing
 16505 ;; This function is called by:
 16506 ;;		_main
 16507 ;;		_delay_ms
 16508 ;;		_drawChar
 16509 ;;		_get_RPM
 16510 ;;		_printf
 16511 ;; This function uses a non-reentrant model
 16512 ;;
 16513                           
 16514                           	psect	text91
 16515  00395C                     __ptext91:
 16516                           	opt stack 0
 16517  00395C                     ___wmul:
 16518                           	opt stack 26
 16519                           
 16520                           ;incstack = 0
 16521  00395C  5011               	movf	___wmul@multiplier,w,c
 16522  00395E  0213               	mulwf	___wmul@multiplicand,c
 16523  003960  CFF3 F015          	movff	prodl,___wmul@product
 16524  003964  CFF4 F016          	movff	prodh,___wmul@product+1
 16525  003968  5011               	movf	___wmul@multiplier,w,c
 16526  00396A  0214               	mulwf	___wmul@multiplicand+1,c
 16527  00396C  50F3               	movf	prodl,w,c
 16528  00396E  2616               	addwf	___wmul@product+1,f,c
 16529  003970  5012               	movf	___wmul@multiplier+1,w,c
 16530  003972  0213               	mulwf	___wmul@multiplicand,c
 16531  003974  50F3               	movf	prodl,w,c
 16532  003976  2616               	addwf	___wmul@product+1,f,c
 16533  003978  C015  F011         	movff	___wmul@product,?___wmul
 16534  00397C  C016  F012         	movff	___wmul@product+1,?___wmul+1
 16535  003980  D000               	goto	l1514
 16536  003982                     l1514:
 16537  003982  0012               	return		;funcret
 16538  003984                     __end_of___wmul:
 16539                           	opt stack 0
 16540                           tblptru	equ	0xFF8
 16541                           tblptrh	equ	0xFF7
 16542                           tblptrl	equ	0xFF6
 16543                           tablat	equ	0xFF5
 16544                           prodh	equ	0xFF4
 16545                           prodl	equ	0xFF3
 16546                           intcon	equ	0xFF2
 16547                           intcon2	equ	0xFF1
 16548                           postinc0	equ	0xFEE
 16549                           wreg	equ	0xFE8
 16550                           postdec1	equ	0xFE5
 16551                           plusw1	equ	0xFE3
 16552                           fsr1l	equ	0xFE1
 16553                           indf2	equ	0xFDF
 16554                           postinc2	equ	0xFDE
 16555                           postdec2	equ	0xFDD
 16556                           plusw2	equ	0xFDB
 16557                           fsr2h	equ	0xFDA
 16558                           fsr2l	equ	0xFD9
 16559                           status	equ	0xFD8
 16560                           
 16561 ;; *************** function ___awmod *****************
 16562 ;; Defined at:
 16563 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 16564 ;; Parameters:    Size  Location     Type
 16565 ;;  dividend        2   58[COMRAM] int 
 16566 ;;  divisor         2   60[COMRAM] int 
 16567 ;; Auto vars:     Size  Location     Type
 16568 ;;  sign            1   63[COMRAM] unsigned char 
 16569 ;;  counter         1   62[COMRAM] unsigned char 
 16570 ;; Return value:  Size  Location     Type
 16571 ;;                  2   58[COMRAM] int 
 16572 ;; Registers used:
 16573 ;;		wreg, status,2, status,0
 16574 ;; Tracked objects:
 16575 ;;		On entry : 0/0
 16576 ;;		On exit  : 0/0
 16577 ;;		Unchanged: 0/0
 16578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16579 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16580 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16582 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16583 ;;Total ram usage:        6 bytes
 16584 ;; Hardware stack levels used:    1
 16585 ;; Hardware stack levels required when called:    3
 16586 ;; This function calls:
 16587 ;;		Nothing
 16588 ;; This function is called by:
 16589 ;;		_Update_Screen
 16590 ;;		_Update_Setup_Alarm_Time_Screen
 16591 ;;		_Update_Setup_Heater_Screen
 16592 ;;		_Update_Setup_Time_Screen
 16593 ;;		_dec_2_bcd
 16594 ;; This function uses a non-reentrant model
 16595 ;;
 16596                           
 16597                           	psect	text92
 16598  002EB8                     __ptext92:
 16599                           	opt stack 0
 16600  002EB8                     ___awmod:
 16601                           	opt stack 26
 16602                           
 16603                           ;incstack = 0
 16604  002EB8  0E00               	movlw	0
 16605  002EBA  6E40               	movwf	___awmod@sign,c
 16606  002EBC  AE3C               	btfss	___awmod@dividend+1,7,c
 16607  002EBE  D007               	goto	l8356
 16608  002EC0  6C3B               	negf	___awmod@dividend,c
 16609  002EC2  1E3C               	comf	___awmod@dividend+1,f,c
 16610  002EC4  B0D8               	btfsc	status,0,c
 16611  002EC6  2A3C               	incf	___awmod@dividend+1,f,c
 16612  002EC8  0E01               	movlw	1
 16613  002ECA  6E40               	movwf	___awmod@sign,c
 16614  002ECC  D000               	goto	l8356
 16615  002ECE                     l8356:
 16616  002ECE  AE3E               	btfss	___awmod@divisor+1,7,c
 16617  002ED0  D005               	goto	l8360
 16618  002ED2  6C3D               	negf	___awmod@divisor,c
 16619  002ED4  1E3E               	comf	___awmod@divisor+1,f,c
 16620  002ED6  B0D8               	btfsc	status,0,c
 16621  002ED8  2A3E               	incf	___awmod@divisor+1,f,c
 16622  002EDA  D000               	goto	l8360
 16623  002EDC                     l8360:
 16624  002EDC  503D               	movf	___awmod@divisor,w,c
 16625  002EDE  103E               	iorwf	___awmod@divisor+1,w,c
 16626  002EE0  B4D8               	btfsc	status,2,c
 16627  002EE2  D01D               	goto	l8376
 16628  002EE4  0E01               	movlw	1
 16629  002EE6  6E3F               	movwf	___awmod@counter,c
 16630  002EE8  D005               	goto	l8366
 16631  002EEA                     l8364:
 16632  002EEA  90D8               	bcf	status,0,c
 16633  002EEC  363D               	rlcf	___awmod@divisor,f,c
 16634  002EEE  363E               	rlcf	___awmod@divisor+1,f,c
 16635  002EF0  2A3F               	incf	___awmod@counter,f,c
 16636  002EF2  D000               	goto	l8366
 16637  002EF4                     l8366:
 16638  002EF4  BE3E               	btfsc	___awmod@divisor+1,7,c
 16639  002EF6  D002               	goto	l8368
 16640  002EF8  D7F8               	goto	l8364
 16641  002EFA  D000               	goto	l8368
 16642  002EFC                     l8368:
 16643  002EFC  503D               	movf	___awmod@divisor,w,c
 16644  002EFE  5C3B               	subwf	___awmod@dividend,w,c
 16645  002F00  503E               	movf	___awmod@divisor+1,w,c
 16646  002F02  583C               	subwfb	___awmod@dividend+1,w,c
 16647  002F04  A0D8               	btfss	status,0,c
 16648  002F06  D005               	goto	l8372
 16649  002F08  503D               	movf	___awmod@divisor,w,c
 16650  002F0A  5E3B               	subwf	___awmod@dividend,f,c
 16651  002F0C  503E               	movf	___awmod@divisor+1,w,c
 16652  002F0E  5A3C               	subwfb	___awmod@dividend+1,f,c
 16653  002F10  D000               	goto	l8372
 16654  002F12                     l8372:
 16655  002F12  90D8               	bcf	status,0,c
 16656  002F14  323E               	rrcf	___awmod@divisor+1,f,c
 16657  002F16  323D               	rrcf	___awmod@divisor,f,c
 16658  002F18  2E3F               	decfsz	___awmod@counter,f,c
 16659  002F1A  D7F0               	goto	l8368
 16660  002F1C  D000               	goto	l8376
 16661  002F1E                     l8376:
 16662  002F1E  5040               	movf	___awmod@sign,w,c
 16663  002F20  B4D8               	btfsc	status,2,c
 16664  002F22  D005               	goto	l8380
 16665  002F24  6C3B               	negf	___awmod@dividend,c
 16666  002F26  1E3C               	comf	___awmod@dividend+1,f,c
 16667  002F28  B0D8               	btfsc	status,0,c
 16668  002F2A  2A3C               	incf	___awmod@dividend+1,f,c
 16669  002F2C  D000               	goto	l8380
 16670  002F2E                     l8380:
 16671  002F2E  C03B  F03B         	movff	___awmod@dividend,?___awmod
 16672  002F32  C03C  F03C         	movff	___awmod@dividend+1,?___awmod+1
 16673  002F36  D000               	goto	l1720
 16674  002F38                     l1720:
 16675  002F38  0012               	return		;funcret
 16676  002F3A                     __end_of___awmod:
 16677                           	opt stack 0
 16678                           tblptru	equ	0xFF8
 16679                           tblptrh	equ	0xFF7
 16680                           tblptrl	equ	0xFF6
 16681                           tablat	equ	0xFF5
 16682                           prodh	equ	0xFF4
 16683                           prodl	equ	0xFF3
 16684                           intcon	equ	0xFF2
 16685                           intcon2	equ	0xFF1
 16686                           postinc0	equ	0xFEE
 16687                           wreg	equ	0xFE8
 16688                           postdec1	equ	0xFE5
 16689                           plusw1	equ	0xFE3
 16690                           fsr1l	equ	0xFE1
 16691                           indf2	equ	0xFDF
 16692                           postinc2	equ	0xFDE
 16693                           postdec2	equ	0xFDD
 16694                           plusw2	equ	0xFDB
 16695                           fsr2h	equ	0xFDA
 16696                           fsr2l	equ	0xFD9
 16697                           status	equ	0xFD8
 16698                           
 16699 ;; *************** function ___awdiv *****************
 16700 ;; Defined at:
 16701 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 16702 ;; Parameters:    Size  Location     Type
 16703 ;;  dividend        2    0[BANK1 ] int 
 16704 ;;  divisor         2    2[BANK1 ] int 
 16705 ;; Auto vars:     Size  Location     Type
 16706 ;;  quotient        2    6[BANK1 ] int 
 16707 ;;  sign            1    5[BANK1 ] unsigned char 
 16708 ;;  counter         1    4[BANK1 ] unsigned char 
 16709 ;; Return value:  Size  Location     Type
 16710 ;;                  2    0[BANK1 ] int 
 16711 ;; Registers used:
 16712 ;;		wreg, status,2, status,0
 16713 ;; Tracked objects:
 16714 ;;		On entry : 0/0
 16715 ;;		On exit  : 0/0
 16716 ;;		Unchanged: 0/0
 16717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16718 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16719 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16721 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16722 ;;Total ram usage:        8 bytes
 16723 ;; Hardware stack levels used:    1
 16724 ;; Hardware stack levels required when called:    3
 16725 ;; This function calls:
 16726 ;;		Nothing
 16727 ;; This function is called by:
 16728 ;;		_main
 16729 ;;		_Update_Screen
 16730 ;;		_Update_Setup_Alarm_Time_Screen
 16731 ;;		_Update_Setup_Heater_Screen
 16732 ;;		_Update_Setup_Time_Screen
 16733 ;;		_dec_2_bcd
 16734 ;;		_get_RPM
 16735 ;;		_Set_DC_RGB
 16736 ;;		_Set_RPM_RGB
 16737 ;; This function uses a non-reentrant model
 16738 ;;
 16739                           
 16740                           	psect	text93
 16741  002568                     __ptext93:
 16742                           	opt stack 0
 16743  002568                     ___awdiv:
 16744                           	opt stack 26
 16745                           
 16746                           ;incstack = 0
 16747  002568  0E00               	movlw	0
 16748  00256A  0101               	movlb	1	; () banked
 16749  00256C  6F58               	movwf	___awdiv@sign& (0+255),b
 16750                           
 16751                           ; BSR set to: 1
 16752  00256E  0101               	movlb	1	; () banked
 16753  002570  AF56               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16754  002572  D009               	goto	l8312
 16755                           
 16756                           ; BSR set to: 1
 16757  002574  0101               	movlb	1	; () banked
 16758  002576  6D55               	negf	___awdiv@divisor& (0+255),b
 16759  002578  1F56               	comf	(___awdiv@divisor+1)& (0+255),f,b
 16760  00257A  B0D8               	btfsc	status,0,c
 16761  00257C  2B56               	incf	(___awdiv@divisor+1)& (0+255),f,b
 16762                           
 16763                           ; BSR set to: 1
 16764  00257E  0E01               	movlw	1
 16765  002580  0101               	movlb	1	; () banked
 16766  002582  6F58               	movwf	___awdiv@sign& (0+255),b
 16767  002584  D000               	goto	l8312
 16768  002586                     l8312:
 16769                           
 16770                           ; BSR set to: 1
 16771  002586  0101               	movlb	1	; () banked
 16772  002588  AF54               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 16773  00258A  D009               	goto	l8318
 16774                           
 16775                           ; BSR set to: 1
 16776  00258C  0101               	movlb	1	; () banked
 16777  00258E  6D53               	negf	___awdiv@dividend& (0+255),b
 16778  002590  1F54               	comf	(___awdiv@dividend+1)& (0+255),f,b
 16779  002592  B0D8               	btfsc	status,0,c
 16780  002594  2B54               	incf	(___awdiv@dividend+1)& (0+255),f,b
 16781                           
 16782                           ; BSR set to: 1
 16783  002596  0E01               	movlw	1
 16784  002598  0101               	movlb	1	; () banked
 16785  00259A  1B58               	xorwf	___awdiv@sign& (0+255),f,b
 16786  00259C  D000               	goto	l8318
 16787  00259E                     l8318:
 16788                           
 16789                           ; BSR set to: 1
 16790  00259E  0E00               	movlw	0
 16791  0025A0  0101               	movlb	1	; () banked
 16792  0025A2  6F5A               	movwf	(___awdiv@quotient+1)& (0+255),b
 16793  0025A4  0E00               	movlw	0
 16794  0025A6  6F59               	movwf	___awdiv@quotient& (0+255),b
 16795                           
 16796                           ; BSR set to: 1
 16797  0025A8  0101               	movlb	1	; () banked
 16798  0025AA  5155               	movf	___awdiv@divisor& (0+255),w,b
 16799  0025AC  0101               	movlb	1	; () banked
 16800  0025AE  1156               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 16801  0025B0  B4D8               	btfsc	status,2,c
 16802  0025B2  D031               	goto	l8340
 16803                           
 16804                           ; BSR set to: 1
 16805  0025B4  0E01               	movlw	1
 16806  0025B6  0101               	movlb	1	; () banked
 16807  0025B8  6F57               	movwf	___awdiv@counter& (0+255),b
 16808  0025BA  D007               	goto	l8326
 16809  0025BC                     l8324:
 16810                           
 16811                           ; BSR set to: 1
 16812  0025BC  0101               	movlb	1	; () banked
 16813  0025BE  90D8               	bcf	status,0,c
 16814  0025C0  3755               	rlcf	___awdiv@divisor& (0+255),f,b
 16815  0025C2  3756               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 16816  0025C4  0101               	movlb	1	; () banked
 16817  0025C6  2B57               	incf	___awdiv@counter& (0+255),f,b
 16818  0025C8  D000               	goto	l8326
 16819  0025CA                     l8326:
 16820                           
 16821                           ; BSR set to: 1
 16822  0025CA  0101               	movlb	1	; () banked
 16823  0025CC  BF56               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 16824  0025CE  D002               	goto	l8328
 16825  0025D0  D7F5               	goto	l8324
 16826                           
 16827                           ; BSR set to: 1
 16828  0025D2  D000               	goto	l8328
 16829  0025D4                     l8328:
 16830                           
 16831                           ; BSR set to: 1
 16832  0025D4  0101               	movlb	1	; () banked
 16833  0025D6  90D8               	bcf	status,0,c
 16834  0025D8  3759               	rlcf	___awdiv@quotient& (0+255),f,b
 16835  0025DA  375A               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 16836                           
 16837                           ; BSR set to: 1
 16838  0025DC  0101               	movlb	1	; () banked
 16839  0025DE  5155               	movf	___awdiv@divisor& (0+255),w,b
 16840  0025E0  0101               	movlb	1	; () banked
 16841  0025E2  5D53               	subwf	___awdiv@dividend& (0+255),w,b
 16842  0025E4  0101               	movlb	1	; () banked
 16843  0025E6  5156               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16844  0025E8  0101               	movlb	1	; () banked
 16845  0025EA  5954               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 16846  0025EC  A0D8               	btfss	status,0,c
 16847  0025EE  D00B               	goto	l8336
 16848                           
 16849                           ; BSR set to: 1
 16850  0025F0  0101               	movlb	1	; () banked
 16851  0025F2  5155               	movf	___awdiv@divisor& (0+255),w,b
 16852  0025F4  0101               	movlb	1	; () banked
 16853  0025F6  5F53               	subwf	___awdiv@dividend& (0+255),f,b
 16854  0025F8  0101               	movlb	1	; () banked
 16855  0025FA  5156               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16856  0025FC  0101               	movlb	1	; () banked
 16857  0025FE  5B54               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 16858                           
 16859                           ; BSR set to: 1
 16860  002600  0101               	movlb	1	; () banked
 16861  002602  8159               	bsf	___awdiv@quotient& (0+255),0,b
 16862  002604  D000               	goto	l8336
 16863  002606                     l8336:
 16864                           
 16865                           ; BSR set to: 1
 16866  002606  0101               	movlb	1	; () banked
 16867  002608  90D8               	bcf	status,0,c
 16868  00260A  3356               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 16869  00260C  3355               	rrcf	___awdiv@divisor& (0+255),f,b
 16870                           
 16871                           ; BSR set to: 1
 16872  00260E  0101               	movlb	1	; () banked
 16873  002610  2F57               	decfsz	___awdiv@counter& (0+255),f,b
 16874  002612  D7E0               	goto	l8328
 16875                           
 16876                           ; BSR set to: 1
 16877  002614  D000               	goto	l8340
 16878  002616                     l8340:
 16879                           
 16880                           ; BSR set to: 1
 16881  002616  0101               	movlb	1	; () banked
 16882  002618  5158               	movf	___awdiv@sign& (0+255),w,b
 16883  00261A  0101               	movlb	1	; () banked
 16884  00261C  B4D8               	btfsc	status,2,c
 16885  00261E  D006               	goto	l8344
 16886                           
 16887                           ; BSR set to: 1
 16888  002620  0101               	movlb	1	; () banked
 16889  002622  6D59               	negf	___awdiv@quotient& (0+255),b
 16890  002624  1F5A               	comf	(___awdiv@quotient+1)& (0+255),f,b
 16891  002626  B0D8               	btfsc	status,0,c
 16892  002628  2B5A               	incf	(___awdiv@quotient+1)& (0+255),f,b
 16893  00262A  D000               	goto	l8344
 16894  00262C                     l8344:
 16895                           
 16896                           ; BSR set to: 1
 16897  00262C  C159  F153         	movff	___awdiv@quotient,?___awdiv
 16898  002630  C15A  F154         	movff	___awdiv@quotient+1,?___awdiv+1
 16899  002634  D000               	goto	l1707
 16900  002636                     l1707:
 16901                           
 16902                           ; BSR set to: 1
 16903  002636  0012               	return		;funcret
 16904  002638                     __end_of___awdiv:
 16905                           	opt stack 0
 16906                           tblptru	equ	0xFF8
 16907                           tblptrh	equ	0xFF7
 16908                           tblptrl	equ	0xFF6
 16909                           tablat	equ	0xFF5
 16910                           prodh	equ	0xFF4
 16911                           prodl	equ	0xFF3
 16912                           intcon	equ	0xFF2
 16913                           intcon2	equ	0xFF1
 16914                           postinc0	equ	0xFEE
 16915                           wreg	equ	0xFE8
 16916                           postdec1	equ	0xFE5
 16917                           plusw1	equ	0xFE3
 16918                           fsr1l	equ	0xFE1
 16919                           indf2	equ	0xFDF
 16920                           postinc2	equ	0xFDE
 16921                           postdec2	equ	0xFDD
 16922                           plusw2	equ	0xFDB
 16923                           fsr2h	equ	0xFDA
 16924                           fsr2l	equ	0xFD9
 16925                           status	equ	0xFD8
 16926                           
 16927 ;; *************** function _Do_Init *****************
 16928 ;; Defined at:
 16929 ;;		line 92 in file "../ECE3301L_Spring22_Final_Lab_Sample/Main.c"
 16930 ;; Parameters:    Size  Location     Type
 16931 ;;		None
 16932 ;; Auto vars:     Size  Location     Type
 16933 ;;		None
 16934 ;; Return value:  Size  Location     Type
 16935 ;;		None               void
 16936 ;; Registers used:
 16937 ;;		wreg, status,2, status,0, cstack
 16938 ;; Tracked objects:
 16939 ;;		On entry : 0/0
 16940 ;;		On exit  : 0/0
 16941 ;;		Unchanged: 0/0
 16942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16947 ;;Total ram usage:        0 bytes
 16948 ;; Hardware stack levels used:    1
 16949 ;; Hardware stack levels required when called:    7
 16950 ;; This function calls:
 16951 ;;		_DS1621_Init
 16952 ;;		_I2C_Init
 16953 ;;		_Init_ADC
 16954 ;;		_Init_Interrupt
 16955 ;;		_Turn_Off_Fan
 16956 ;;		_init_UART
 16957 ;; This function is called by:
 16958 ;;		_main
 16959 ;; This function uses a non-reentrant model
 16960 ;;
 16961                           
 16962                           	psect	text94
 16963  0032AC                     __ptext94:
 16964                           	opt stack 0
 16965  0032AC                     _Do_Init:
 16966                           	opt stack 23
 16967                           
 16968                           ;Main.c: 94: init_UART();
 16969                           
 16970                           ; BSR set to: 1
 16971                           ;incstack = 0
 16972  0032AC  EC07  F01E         	call	_init_UART	;wreg free
 16973                           
 16974                           ;Main.c: 95: Init_ADC();
 16975  0032B0  EC90  F01E         	call	_Init_ADC	;wreg free
 16976                           
 16977                           ;Main.c: 96: OSCCON=0x70;
 16978  0032B4  0E70               	movlw	112
 16979  0032B6  6ED3               	movwf	4051,c	;volatile
 16980                           
 16981                           ;Main.c: 98: ADCON1=0x0E;
 16982  0032B8  0E0E               	movlw	14
 16983  0032BA  6EC1               	movwf	4033,c	;volatile
 16984                           
 16985                           ;Main.c: 99: TRISA = 0x11;
 16986  0032BC  0E11               	movlw	17
 16987  0032BE  6E92               	movwf	3986,c	;volatile
 16988                           
 16989                           ;Main.c: 100: TRISB = 0x07;
 16990  0032C0  0E07               	movlw	7
 16991  0032C2  6E93               	movwf	3987,c	;volatile
 16992                           
 16993                           ;Main.c: 101: TRISC = 0x01;
 16994  0032C4  0E01               	movlw	1
 16995  0032C6  6E94               	movwf	3988,c	;volatile
 16996                           
 16997                           ;Main.c: 102: TRISD = 0x00;
 16998  0032C8  0E00               	movlw	0
 16999  0032CA  6E95               	movwf	3989,c	;volatile
 17000                           
 17001                           ;Main.c: 103: TRISE = 0x00;
 17002  0032CC  0E00               	movlw	0
 17003  0032CE  6E96               	movwf	3990,c	;volatile
 17004                           
 17005                           ;Main.c: 104: PORTE = 0x00;
 17006  0032D0  0E00               	movlw	0
 17007  0032D2  6E84               	movwf	3972,c	;volatile
 17008                           
 17009                           ;Main.c: 106: HEATER = 0;
 17010  0032D4  0E00               	movlw	0
 17011  0032D6  6E50               	movwf	_HEATER,c
 17012                           
 17013                           ;Main.c: 107: RBPU=0;
 17014  0032D8  9EF1               	bcf	intcon2,7,c	;volatile
 17015                           
 17016                           ;Main.c: 109: TMR3L = 0x00;
 17017  0032DA  0E00               	movlw	0
 17018  0032DC  6EB2               	movwf	4018,c	;volatile
 17019                           
 17020                           ;Main.c: 110: T3CON = 0x03;
 17021  0032DE  0E03               	movlw	3
 17022  0032E0  6EB1               	movwf	4017,c	;volatile
 17023                           
 17024                           ;Main.c: 111: I2C_Init(100000);
 17025  0032E2  0EA0               	movlw	160
 17026  0032E4  6E11               	movwf	I2C_Init@c,c
 17027  0032E6  0E86               	movlw	134
 17028  0032E8  6E12               	movwf	I2C_Init@c+1,c
 17029  0032EA  0E01               	movlw	1
 17030  0032EC  6E13               	movwf	I2C_Init@c+2,c
 17031  0032EE  0E00               	movlw	0
 17032  0032F0  6E14               	movwf	I2C_Init@c+3,c
 17033  0032F2  ECA8  F01E         	call	_I2C_Init	;wreg free
 17034                           
 17035                           ;Main.c: 113: DS1621_Init();
 17036  0032F6  EC3E  F01D         	call	_DS1621_Init	;wreg free
 17037                           
 17038                           ;Main.c: 114: Init_Interrupt();
 17039  0032FA  ECFB  F01C         	call	_Init_Interrupt	;wreg free
 17040                           
 17041                           ;Main.c: 115: Turn_Off_Fan();
 17042  0032FE  ECA3  F01E         	call	_Turn_Off_Fan	;wreg free
 17043                           
 17044                           ;Main.c: 116: heater_set_temp = 75;
 17045  003302  0E4B               	movlw	75
 17046  003304  6E6E               	movwf	_heater_set_temp,c
 17047  003306  0012               	return		;funcret
 17048  003308                     __end_of_Do_Init:
 17049                           	opt stack 0
 17050                           tblptru	equ	0xFF8
 17051                           tblptrh	equ	0xFF7
 17052                           tblptrl	equ	0xFF6
 17053                           tablat	equ	0xFF5
 17054                           prodh	equ	0xFF4
 17055                           prodl	equ	0xFF3
 17056                           intcon	equ	0xFF2
 17057                           intcon2	equ	0xFF1
 17058                           postinc0	equ	0xFEE
 17059                           wreg	equ	0xFE8
 17060                           postdec1	equ	0xFE5
 17061                           plusw1	equ	0xFE3
 17062                           fsr1l	equ	0xFE1
 17063                           indf2	equ	0xFDF
 17064                           postinc2	equ	0xFDE
 17065                           postdec2	equ	0xFDD
 17066                           plusw2	equ	0xFDB
 17067                           fsr2h	equ	0xFDA
 17068                           fsr2l	equ	0xFD9
 17069                           status	equ	0xFD8
 17070                           
 17071 ;; *************** function _init_UART *****************
 17072 ;; Defined at:
 17073 ;;		line 84 in file "../ECE3301L_Spring22_Final_Lab_Sample/Main.c"
 17074 ;; Parameters:    Size  Location     Type
 17075 ;;		None
 17076 ;; Auto vars:     Size  Location     Type
 17077 ;;		None
 17078 ;; Return value:  Size  Location     Type
 17079 ;;		None               void
 17080 ;; Registers used:
 17081 ;;		wreg, status,2, cstack
 17082 ;; Tracked objects:
 17083 ;;		On entry : 0/0
 17084 ;;		On exit  : 0/0
 17085 ;;		Unchanged: 0/0
 17086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17091 ;;Total ram usage:        0 bytes
 17092 ;; Hardware stack levels used:    1
 17093 ;; Hardware stack levels required when called:    4
 17094 ;; This function calls:
 17095 ;;		_OpenUSART
 17096 ;; This function is called by:
 17097 ;;		_Do_Init
 17098 ;; This function uses a non-reentrant model
 17099 ;;
 17100                           
 17101                           	psect	text95
 17102  003C0E                     __ptext95:
 17103                           	opt stack 0
 17104  003C0E                     _init_UART:
 17105                           	opt stack 25
 17106                           
 17107                           ;Main.c: 86: OpenUSART (0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111111 &
      +                           0b11111111, 25);
 17108                           
 17109                           ;incstack = 0
 17110  003C0E  0E00               	movlw	0
 17111  003C10  6E12               	movwf	OpenUSART@spbrg+1,c
 17112  003C12  0E19               	movlw	25
 17113  003C14  6E11               	movwf	OpenUSART@spbrg,c
 17114  003C16  0E3C               	movlw	60
 17115  003C18  EC59  F018         	call	_OpenUSART
 17116                           
 17117                           ;Main.c: 87: OSCCON = 0x70;
 17118  003C1C  0E70               	movlw	112
 17119  003C1E  6ED3               	movwf	4051,c	;volatile
 17120  003C20  0012               	return		;funcret
 17121  003C22                     __end_of_init_UART:
 17122                           	opt stack 0
 17123                           tblptru	equ	0xFF8
 17124                           tblptrh	equ	0xFF7
 17125                           tblptrl	equ	0xFF6
 17126                           tablat	equ	0xFF5
 17127                           prodh	equ	0xFF4
 17128                           prodl	equ	0xFF3
 17129                           intcon	equ	0xFF2
 17130                           intcon2	equ	0xFF1
 17131                           postinc0	equ	0xFEE
 17132                           wreg	equ	0xFE8
 17133                           postdec1	equ	0xFE5
 17134                           plusw1	equ	0xFE3
 17135                           fsr1l	equ	0xFE1
 17136                           indf2	equ	0xFDF
 17137                           postinc2	equ	0xFDE
 17138                           postdec2	equ	0xFDD
 17139                           plusw2	equ	0xFDB
 17140                           fsr2h	equ	0xFDA
 17141                           fsr2l	equ	0xFD9
 17142                           status	equ	0xFD8
 17143                           
 17144 ;; *************** function _OpenUSART *****************
 17145 ;; Defined at:
 17146 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
 17147 ;; Parameters:    Size  Location     Type
 17148 ;;  config          1    wreg     unsigned char 
 17149 ;;  spbrg           2   16[COMRAM] unsigned int 
 17150 ;; Auto vars:     Size  Location     Type
 17151 ;;  config          1   18[COMRAM] unsigned char 
 17152 ;; Return value:  Size  Location     Type
 17153 ;;		None               void
 17154 ;; Registers used:
 17155 ;;		wreg, status,2
 17156 ;; Tracked objects:
 17157 ;;		On entry : 0/0
 17158 ;;		On exit  : 0/0
 17159 ;;		Unchanged: 0/0
 17160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17164 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17165 ;;Total ram usage:        3 bytes
 17166 ;; Hardware stack levels used:    1
 17167 ;; Hardware stack levels required when called:    3
 17168 ;; This function calls:
 17169 ;;		Nothing
 17170 ;; This function is called by:
 17171 ;;		_init_UART
 17172 ;; This function uses a non-reentrant model
 17173 ;;
 17174                           
 17175                           	psect	text96
 17176  0030B2                     __ptext96:
 17177                           	opt stack 0
 17178  0030B2                     _OpenUSART:
 17179                           	opt stack 25
 17180                           
 17181                           ;incstack = 0
 17182                           ;OpenUSART@config stored from wreg
 17183  0030B2  6E13               	movwf	OpenUSART@config,c
 17184  0030B4  0E00               	movlw	0
 17185  0030B6  6EAC               	movwf	4012,c	;volatile
 17186  0030B8  0E00               	movlw	0
 17187  0030BA  6EAB               	movwf	4011,c	;volatile
 17188  0030BC  A013               	btfss	OpenUSART@config,0,c
 17189  0030BE  D002               	goto	l6022
 17190  0030C0  88AC               	bsf	4012,4,c	;volatile
 17191  0030C2  D000               	goto	l6022
 17192  0030C4                     l6022:
 17193  0030C4  A213               	btfss	OpenUSART@config,1,c
 17194  0030C6  D003               	goto	l6026
 17195  0030C8  8CAC               	bsf	4012,6,c	;volatile
 17196  0030CA  8CAB               	bsf	4011,6,c	;volatile
 17197  0030CC  D000               	goto	l6026
 17198  0030CE                     l6026:
 17199  0030CE  A413               	btfss	OpenUSART@config,2,c
 17200  0030D0  D002               	goto	l6030
 17201  0030D2  8EAC               	bsf	4012,7,c	;volatile
 17202  0030D4  D000               	goto	l6030
 17203  0030D6                     l6030:
 17204  0030D6  A613               	btfss	OpenUSART@config,3,c
 17205  0030D8  D002               	goto	l1502
 17206  0030DA  88AB               	bsf	4011,4,c	;volatile
 17207  0030DC  D002               	goto	l6034
 17208  0030DE                     l1502:
 17209  0030DE  8AAB               	bsf	4011,5,c	;volatile
 17210  0030E0  D000               	goto	l6034
 17211  0030E2                     l6034:
 17212  0030E2  B813               	btfsc	OpenUSART@config,4,c
 17213  0030E4  84AC               	bsf	4012,2,c	;volatile
 17214  0030E6  989E               	bcf	3998,4,c	;volatile
 17215  0030E8  AA13               	btfss	OpenUSART@config,5,c
 17216  0030EA  D002               	goto	l6042
 17217  0030EC  86AB               	bsf	4011,3,c	;volatile
 17218  0030EE  D000               	goto	l6042
 17219  0030F0                     l6042:
 17220  0030F0  AC13               	btfss	OpenUSART@config,6,c
 17221  0030F2  D002               	goto	l1506
 17222  0030F4  8A9D               	bsf	3997,5,c	;volatile
 17223  0030F6  D001               	goto	l1507
 17224  0030F8                     l1506:
 17225  0030F8  9A9D               	bcf	3997,5,c	;volatile
 17226  0030FA                     l1507:
 17227  0030FA  9A9E               	bcf	3998,5,c	;volatile
 17228  0030FC  AE13               	btfss	OpenUSART@config,7,c
 17229  0030FE  D002               	goto	l1508
 17230  003100  889D               	bsf	3997,4,c	;volatile
 17231  003102  D001               	goto	l1509
 17232  003104                     l1508:
 17233  003104  989D               	bcf	3997,4,c	;volatile
 17234  003106                     l1509:
 17235  003106  C011  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 17236  00310A  5012               	movf	OpenUSART@spbrg+1,w,c
 17237  00310C  6EB0               	movwf	4016,c	;volatile
 17238  00310E  8AAC               	bsf	4012,5,c	;volatile
 17239  003110  8EAB               	bsf	4011,7,c	;volatile
 17240  003112  9C94               	bcf	3988,6,c	;volatile
 17241  003114  8E94               	bsf	3988,7,c	;volatile
 17242  003116  B8AC               	btfsc	4012,4,c	;volatile
 17243  003118  BEAC               	btfsc	4012,7,c	;volatile
 17244  00311A  D002               	goto	l1511
 17245  00311C  8C94               	bsf	3988,6,c	;volatile
 17246  00311E  D000               	goto	l1511
 17247  003120                     l1511:
 17248  003120  0012               	return		;funcret
 17249  003122                     __end_of_OpenUSART:
 17250                           	opt stack 0
 17251                           tblptru	equ	0xFF8
 17252                           tblptrh	equ	0xFF7
 17253                           tblptrl	equ	0xFF6
 17254                           tablat	equ	0xFF5
 17255                           prodh	equ	0xFF4
 17256                           prodl	equ	0xFF3
 17257                           intcon	equ	0xFF2
 17258                           intcon2	equ	0xFF1
 17259                           postinc0	equ	0xFEE
 17260                           wreg	equ	0xFE8
 17261                           postdec1	equ	0xFE5
 17262                           plusw1	equ	0xFE3
 17263                           fsr1l	equ	0xFE1
 17264                           indf2	equ	0xFDF
 17265                           postinc2	equ	0xFDE
 17266                           postdec2	equ	0xFDD
 17267                           plusw2	equ	0xFDB
 17268                           fsr2h	equ	0xFDA
 17269                           fsr2l	equ	0xFD9
 17270                           status	equ	0xFD8
 17271                           
 17272 ;; *************** function _Turn_Off_Fan *****************
 17273 ;; Defined at:
 17274 ;;		line 50 in file "../ECE3301L_Spring22_Final_Lab_Sample/Fan_Support.c"
 17275 ;; Parameters:    Size  Location     Type
 17276 ;;		None
 17277 ;; Auto vars:     Size  Location     Type
 17278 ;;		None
 17279 ;; Return value:  Size  Location     Type
 17280 ;;		None               void
 17281 ;; Registers used:
 17282 ;;		wreg, status,2
 17283 ;; Tracked objects:
 17284 ;;		On entry : 0/0
 17285 ;;		On exit  : 0/0
 17286 ;;		Unchanged: 0/0
 17287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17292 ;;Total ram usage:        0 bytes
 17293 ;; Hardware stack levels used:    1
 17294 ;; Hardware stack levels required when called:    3
 17295 ;; This function calls:
 17296 ;;		Nothing
 17297 ;; This function is called by:
 17298 ;;		_Do_Init
 17299 ;;		_Monitor_Heater
 17300 ;;		_Toggle_Heater
 17301 ;; This function uses a non-reentrant model
 17302 ;;
 17303                           
 17304                           	psect	text97
 17305  003D46                     __ptext97:
 17306                           	opt stack 0
 17307  003D46                     _Turn_Off_Fan:
 17308                           	opt stack 26
 17309                           
 17310                           ;Fan_Support.c: 52: HEATER = 0;
 17311                           
 17312                           ;incstack = 0
 17313  003D46  0E00               	movlw	0
 17314  003D48  6E50               	movwf	_HEATER,c
 17315                           
 17316                           ;Fan_Support.c: 53: PORTDbits.RD7 = 0;
 17317  003D4A  9E83               	bcf	3971,7,c	;volatile
 17318                           
 17319                           ;Fan_Support.c: 54: PORTBbits.RB5=0;
 17320  003D4C  9A81               	bcf	3969,5,c	;volatile
 17321  003D4E  0012               	return		;funcret
 17322  003D50                     __end_of_Turn_Off_Fan:
 17323                           	opt stack 0
 17324                           tblptru	equ	0xFF8
 17325                           tblptrh	equ	0xFF7
 17326                           tblptrl	equ	0xFF6
 17327                           tablat	equ	0xFF5
 17328                           prodh	equ	0xFF4
 17329                           prodl	equ	0xFF3
 17330                           intcon	equ	0xFF2
 17331                           intcon2	equ	0xFF1
 17332                           postinc0	equ	0xFEE
 17333                           wreg	equ	0xFE8
 17334                           postdec1	equ	0xFE5
 17335                           plusw1	equ	0xFE3
 17336                           fsr1l	equ	0xFE1
 17337                           indf2	equ	0xFDF
 17338                           postinc2	equ	0xFDE
 17339                           postdec2	equ	0xFDD
 17340                           plusw2	equ	0xFDB
 17341                           fsr2h	equ	0xFDA
 17342                           fsr2l	equ	0xFD9
 17343                           status	equ	0xFD8
 17344                           
 17345 ;; *************** function _Init_Interrupt *****************
 17346 ;; Defined at:
 17347 ;;		line 17 in file "../ECE3301L_Spring22_Final_Lab_Sample/Interrupt.c"
 17348 ;; Parameters:    Size  Location     Type
 17349 ;;		None
 17350 ;; Auto vars:     Size  Location     Type
 17351 ;;		None
 17352 ;; Return value:  Size  Location     Type
 17353 ;;		None               void
 17354 ;; Registers used:
 17355 ;;		wreg, status,2
 17356 ;; Tracked objects:
 17357 ;;		On entry : 0/0
 17358 ;;		On exit  : 0/0
 17359 ;;		Unchanged: 0/0
 17360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17365 ;;Total ram usage:        0 bytes
 17366 ;; Hardware stack levels used:    1
 17367 ;; Hardware stack levels required when called:    3
 17368 ;; This function calls:
 17369 ;;		Nothing
 17370 ;; This function is called by:
 17371 ;;		_Do_Init
 17372 ;; This function uses a non-reentrant model
 17373 ;;
 17374                           
 17375                           	psect	text98
 17376  0039F6                     __ptext98:
 17377                           	opt stack 0
 17378  0039F6                     _Init_Interrupt:
 17379                           	opt stack 26
 17380                           
 17381                           ;Interrupt.c: 20: INTCONbits.INT0IF = 0 ;
 17382                           
 17383                           ;incstack = 0
 17384  0039F6  92F2               	bcf	intcon,1,c	;volatile
 17385                           
 17386                           ;Interrupt.c: 21: INTCON3bits.INT1IF = 0;
 17387  0039F8  90F0               	bcf	intcon3,0,c	;volatile
 17388                           
 17389                           ;Interrupt.c: 22: INTCON3bits.INT2IF = 0;
 17390  0039FA  92F0               	bcf	intcon3,1,c	;volatile
 17391                           
 17392                           ;Interrupt.c: 23: INTCONbits.INT0IE = 1;
 17393  0039FC  88F2               	bsf	intcon,4,c	;volatile
 17394                           
 17395                           ;Interrupt.c: 24: INTCON3bits.INT1IE = 1;
 17396  0039FE  86F0               	bsf	intcon3,3,c	;volatile
 17397                           
 17398                           ;Interrupt.c: 25: INTCON3bits.INT2IE = 1;
 17399  003A00  88F0               	bsf	intcon3,4,c	;volatile
 17400                           
 17401                           ;Interrupt.c: 26: INTCON2bits.INTEDG0 = 0;
 17402  003A02  9CF1               	bcf	intcon2,6,c	;volatile
 17403                           
 17404                           ;Interrupt.c: 27: INTCON2bits.INTEDG1 = 0;
 17405  003A04  9AF1               	bcf	intcon2,5,c	;volatile
 17406                           
 17407                           ;Interrupt.c: 28: INTCON2bits.INTEDG2 = 0;
 17408  003A06  98F1               	bcf	intcon2,4,c	;volatile
 17409                           
 17410                           ;Interrupt.c: 29: TMR1H = 0;
 17411  003A08  0E00               	movlw	0
 17412  003A0A  6ECF               	movwf	4047,c	;volatile
 17413                           
 17414                           ;Interrupt.c: 30: TMR1L = 0;
 17415  003A0C  0E00               	movlw	0
 17416  003A0E  6ECE               	movwf	4046,c	;volatile
 17417                           
 17418                           ;Interrupt.c: 31: PIR1bits.TMR1IF = 0;
 17419  003A10  909E               	bcf	3998,0,c	;volatile
 17420                           
 17421                           ;Interrupt.c: 32: PIE1bits.TMR1IE = 1;
 17422  003A12  809D               	bsf	3997,0,c	;volatile
 17423                           
 17424                           ;Interrupt.c: 33: INTCONbits.PEIE = 1;
 17425  003A14  8CF2               	bsf	intcon,6,c	;volatile
 17426                           
 17427                           ;Interrupt.c: 34: INTCONbits.GIE = 1;
 17428  003A16  8EF2               	bsf	intcon,7,c	;volatile
 17429  003A18  0012               	return		;funcret
 17430  003A1A                     __end_of_Init_Interrupt:
 17431                           	opt stack 0
 17432                           tblptru	equ	0xFF8
 17433                           tblptrh	equ	0xFF7
 17434                           tblptrl	equ	0xFF6
 17435                           tablat	equ	0xFF5
 17436                           prodh	equ	0xFF4
 17437                           prodl	equ	0xFF3
 17438                           intcon	equ	0xFF2
 17439                           intcon2	equ	0xFF1
 17440                           intcon3	equ	0xFF0
 17441                           postinc0	equ	0xFEE
 17442                           wreg	equ	0xFE8
 17443                           postdec1	equ	0xFE5
 17444                           plusw1	equ	0xFE3
 17445                           fsr1l	equ	0xFE1
 17446                           indf2	equ	0xFDF
 17447                           postinc2	equ	0xFDE
 17448                           postdec2	equ	0xFDD
 17449                           plusw2	equ	0xFDB
 17450                           fsr2h	equ	0xFDA
 17451                           fsr2l	equ	0xFD9
 17452                           status	equ	0xFD8
 17453                           
 17454 ;; *************** function _Init_ADC *****************
 17455 ;; Defined at:
 17456 ;;		line 168 in file "../ECE3301L_Spring22_Final_Lab_Sample/utils.c"
 17457 ;; Parameters:    Size  Location     Type
 17458 ;;		None
 17459 ;; Auto vars:     Size  Location     Type
 17460 ;;		None
 17461 ;; Return value:  Size  Location     Type
 17462 ;;		None               void
 17463 ;; Registers used:
 17464 ;;		wreg, status,2
 17465 ;; Tracked objects:
 17466 ;;		On entry : 0/0
 17467 ;;		On exit  : 0/0
 17468 ;;		Unchanged: 0/0
 17469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17474 ;;Total ram usage:        0 bytes
 17475 ;; Hardware stack levels used:    1
 17476 ;; Hardware stack levels required when called:    3
 17477 ;; This function calls:
 17478 ;;		Nothing
 17479 ;; This function is called by:
 17480 ;;		_Do_Init
 17481 ;; This function uses a non-reentrant model
 17482 ;;
 17483                           
 17484                           	psect	text99
 17485  003D20                     __ptext99:
 17486                           	opt stack 0
 17487  003D20                     _Init_ADC:
 17488                           	opt stack 26
 17489                           
 17490                           ;utils.c: 169: ADCON0 = 0x01;
 17491                           
 17492                           ;incstack = 0
 17493  003D20  0E01               	movlw	1
 17494  003D22  6EC2               	movwf	4034,c	;volatile
 17495                           
 17496                           ;utils.c: 170: ADCON1 = 0x0E;
 17497  003D24  0E0E               	movlw	14
 17498  003D26  6EC1               	movwf	4033,c	;volatile
 17499                           
 17500                           ;utils.c: 171: ADCON2 = 0xA9;
 17501  003D28  0EA9               	movlw	169
 17502  003D2A  6EC0               	movwf	4032,c	;volatile
 17503  003D2C  0012               	return		;funcret
 17504  003D2E                     __end_of_Init_ADC:
 17505                           	opt stack 0
 17506                           tblptru	equ	0xFF8
 17507                           tblptrh	equ	0xFF7
 17508                           tblptrl	equ	0xFF6
 17509                           tablat	equ	0xFF5
 17510                           prodh	equ	0xFF4
 17511                           prodl	equ	0xFF3
 17512                           intcon	equ	0xFF2
 17513                           intcon2	equ	0xFF1
 17514                           intcon3	equ	0xFF0
 17515                           postinc0	equ	0xFEE
 17516                           wreg	equ	0xFE8
 17517                           postdec1	equ	0xFE5
 17518                           plusw1	equ	0xFE3
 17519                           fsr1l	equ	0xFE1
 17520                           indf2	equ	0xFDF
 17521                           postinc2	equ	0xFDE
 17522                           postdec2	equ	0xFDD
 17523                           plusw2	equ	0xFDB
 17524                           fsr2h	equ	0xFDA
 17525                           fsr2l	equ	0xFD9
 17526                           status	equ	0xFD8
 17527                           
 17528 ;; *************** function _I2C_Init *****************
 17529 ;; Defined at:
 17530 ;;		line 10 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 17531 ;; Parameters:    Size  Location     Type
 17532 ;;  c               4   16[COMRAM] unsigned long 
 17533 ;; Auto vars:     Size  Location     Type
 17534 ;;		None
 17535 ;; Return value:  Size  Location     Type
 17536 ;;		None               void
 17537 ;; Registers used:
 17538 ;;		wreg, cstack
 17539 ;; Tracked objects:
 17540 ;;		On entry : 0/0
 17541 ;;		On exit  : 0/0
 17542 ;;		Unchanged: 0/0
 17543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17547 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17548 ;;Total ram usage:        4 bytes
 17549 ;; Hardware stack levels used:    1
 17550 ;; Hardware stack levels required when called:    4
 17551 ;; This function calls:
 17552 ;;		_i2cHighScl
 17553 ;;		_i2cHighSda
 17554 ;; This function is called by:
 17555 ;;		_Do_Init
 17556 ;; This function uses a non-reentrant model
 17557 ;;
 17558                           
 17559                           	psect	text100
 17560  003D50                     __ptext100:
 17561                           	opt stack 0
 17562  003D50                     _I2C_Init:
 17563                           	opt stack 25
 17564                           
 17565                           ;I2C_Soft.c: 12: i2cHighScl();
 17566                           
 17567                           ;incstack = 0
 17568  003D50  EC97  F01E         	call	_i2cHighScl	;wreg free
 17569                           
 17570                           ;I2C_Soft.c: 13: i2cHighSda();
 17571  003D54  ECC9  F01E         	call	_i2cHighSda	;wreg free
 17572  003D58  0012               	return		;funcret
 17573  003D5A                     __end_of_I2C_Init:
 17574                           	opt stack 0
 17575                           tblptru	equ	0xFF8
 17576                           tblptrh	equ	0xFF7
 17577                           tblptrl	equ	0xFF6
 17578                           tablat	equ	0xFF5
 17579                           prodh	equ	0xFF4
 17580                           prodl	equ	0xFF3
 17581                           intcon	equ	0xFF2
 17582                           intcon2	equ	0xFF1
 17583                           intcon3	equ	0xFF0
 17584                           postinc0	equ	0xFEE
 17585                           wreg	equ	0xFE8
 17586                           postdec1	equ	0xFE5
 17587                           plusw1	equ	0xFE3
 17588                           fsr1l	equ	0xFE1
 17589                           indf2	equ	0xFDF
 17590                           postinc2	equ	0xFDE
 17591                           postdec2	equ	0xFDD
 17592                           plusw2	equ	0xFDB
 17593                           fsr2h	equ	0xFDA
 17594                           fsr2l	equ	0xFD9
 17595                           status	equ	0xFD8
 17596                           
 17597 ;; *************** function _DS1621_Init *****************
 17598 ;; Defined at:
 17599 ;;		line 22 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Support.c"
 17600 ;; Parameters:    Size  Location     Type
 17601 ;;		None
 17602 ;; Auto vars:     Size  Location     Type
 17603 ;;  Device          1   21[COMRAM] unsigned char 
 17604 ;; Return value:  Size  Location     Type
 17605 ;;		None               void
 17606 ;; Registers used:
 17607 ;;		wreg, status,2, status,0, cstack
 17608 ;; Tracked objects:
 17609 ;;		On entry : 0/0
 17610 ;;		On exit  : 0/0
 17611 ;;		Unchanged: 0/0
 17612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17617 ;;Total ram usage:        1 bytes
 17618 ;; Hardware stack levels used:    1
 17619 ;; Hardware stack levels required when called:    6
 17620 ;; This function calls:
 17621 ;;		_I2C_Write_Cmd_Only
 17622 ;;		_I2C_Write_Cmd_Write_Data
 17623 ;; This function is called by:
 17624 ;;		_Do_Init
 17625 ;; This function uses a non-reentrant model
 17626 ;;
 17627                           
 17628                           	psect	text101
 17629  003A7C                     __ptext101:
 17630                           	opt stack 0
 17631  003A7C                     _DS1621_Init:
 17632                           	opt stack 23
 17633                           
 17634                           ;I2C_Support.c: 24: char Device = 0x48;
 17635                           
 17636                           ;incstack = 0
 17637  003A7C  0E48               	movlw	72
 17638  003A7E  6E16               	movwf	DS1621_Init@Device,c
 17639                           
 17640                           ;I2C_Support.c: 25: I2C_Write_Cmd_Write_Data (Device, 0xAC, 0x02);
 17641  003A80  0EAC               	movlw	172
 17642  003A82  6E13               	movwf	I2C_Write_Cmd_Write_Data@Cmd,c
 17643  003A84  0E02               	movlw	2
 17644  003A86  6E14               	movwf	I2C_Write_Cmd_Write_Data@Data_Out,c
 17645  003A88  5016               	movf	DS1621_Init@Device,w,c
 17646  003A8A  EC2E  F01D         	call	_I2C_Write_Cmd_Write_Data
 17647                           
 17648                           ;I2C_Support.c: 26: I2C_Write_Cmd_Only(Device, 0xEE);
 17649  003A8E  0EEE               	movlw	238
 17650  003A90  6E13               	movwf	I2C_Write_Cmd_Only@Cmd,c
 17651  003A92  5016               	movf	DS1621_Init@Device,w,c
 17652  003A94  EC69  F01D         	call	_I2C_Write_Cmd_Only
 17653  003A98  0012               	return		;funcret
 17654  003A9A                     __end_of_DS1621_Init:
 17655                           	opt stack 0
 17656                           tblptru	equ	0xFF8
 17657                           tblptrh	equ	0xFF7
 17658                           tblptrl	equ	0xFF6
 17659                           tablat	equ	0xFF5
 17660                           prodh	equ	0xFF4
 17661                           prodl	equ	0xFF3
 17662                           intcon	equ	0xFF2
 17663                           intcon2	equ	0xFF1
 17664                           intcon3	equ	0xFF0
 17665                           postinc0	equ	0xFEE
 17666                           wreg	equ	0xFE8
 17667                           postdec1	equ	0xFE5
 17668                           plusw1	equ	0xFE3
 17669                           fsr1l	equ	0xFE1
 17670                           indf2	equ	0xFDF
 17671                           postinc2	equ	0xFDE
 17672                           postdec2	equ	0xFDD
 17673                           plusw2	equ	0xFDB
 17674                           fsr2h	equ	0xFDA
 17675                           fsr2l	equ	0xFD9
 17676                           status	equ	0xFD8
 17677                           
 17678 ;; *************** function _I2C_Write_Cmd_Write_Data *****************
 17679 ;; Defined at:
 17680 ;;		line 148 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;  Device          1    wreg     unsigned char 
 17683 ;;  Cmd             1   18[COMRAM] unsigned char 
 17684 ;;  Data_Out        1   19[COMRAM] unsigned char 
 17685 ;; Auto vars:     Size  Location     Type
 17686 ;;  Device          1   20[COMRAM] unsigned char 
 17687 ;; Return value:  Size  Location     Type
 17688 ;;		None               void
 17689 ;; Registers used:
 17690 ;;		wreg, status,2, status,0, cstack
 17691 ;; Tracked objects:
 17692 ;;		On entry : 0/0
 17693 ;;		On exit  : 0/0
 17694 ;;		Unchanged: 0/0
 17695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17696 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17699 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17700 ;;Total ram usage:        3 bytes
 17701 ;; Hardware stack levels used:    1
 17702 ;; Hardware stack levels required when called:    5
 17703 ;; This function calls:
 17704 ;;		_I2C_Start
 17705 ;;		_I2C_Stop
 17706 ;;		_I2C_Write
 17707 ;; This function is called by:
 17708 ;;		_DS1621_Init
 17709 ;; This function uses a non-reentrant model
 17710 ;;
 17711                           
 17712                           	psect	text102
 17713  003A5C                     __ptext102:
 17714                           	opt stack 0
 17715  003A5C                     _I2C_Write_Cmd_Write_Data:
 17716                           	opt stack 23
 17717                           
 17718                           ;incstack = 0
 17719                           ;I2C_Write_Cmd_Write_Data@Device stored from wreg
 17720  003A5C  6E15               	movwf	I2C_Write_Cmd_Write_Data@Device,c
 17721                           
 17722                           ;I2C_Soft.c: 150: I2C_Start();
 17723  003A5E  EC47  F01E         	call	_I2C_Start	;wreg free
 17724                           
 17725                           ;I2C_Soft.c: 151: I2C_Write((Device << 1) | 0);
 17726  003A62  5015               	movf	I2C_Write_Cmd_Write_Data@Device,w,c
 17727  003A64  2415               	addwf	I2C_Write_Cmd_Write_Data@Device,w,c
 17728  003A66  ECE6  F01B         	call	_I2C_Write
 17729                           
 17730                           ;I2C_Soft.c: 152: I2C_Write(Cmd);
 17731  003A6A  5013               	movf	I2C_Write_Cmd_Write_Data@Cmd,w,c
 17732  003A6C  ECE6  F01B         	call	_I2C_Write
 17733                           
 17734                           ;I2C_Soft.c: 153: I2C_Write(Data_Out);
 17735  003A70  5014               	movf	I2C_Write_Cmd_Write_Data@Data_Out,w,c
 17736  003A72  ECE6  F01B         	call	_I2C_Write
 17737                           
 17738                           ;I2C_Soft.c: 154: I2C_Stop();
 17739  003A76  EC3E  F01E         	call	_I2C_Stop	;wreg free
 17740  003A7A  0012               	return		;funcret
 17741  003A7C                     __end_of_I2C_Write_Cmd_Write_Data:
 17742                           	opt stack 0
 17743                           tblptru	equ	0xFF8
 17744                           tblptrh	equ	0xFF7
 17745                           tblptrl	equ	0xFF6
 17746                           tablat	equ	0xFF5
 17747                           prodh	equ	0xFF4
 17748                           prodl	equ	0xFF3
 17749                           intcon	equ	0xFF2
 17750                           intcon2	equ	0xFF1
 17751                           intcon3	equ	0xFF0
 17752                           postinc0	equ	0xFEE
 17753                           wreg	equ	0xFE8
 17754                           postdec1	equ	0xFE5
 17755                           plusw1	equ	0xFE3
 17756                           fsr1l	equ	0xFE1
 17757                           indf2	equ	0xFDF
 17758                           postinc2	equ	0xFDE
 17759                           postdec2	equ	0xFDD
 17760                           plusw2	equ	0xFDB
 17761                           fsr2h	equ	0xFDA
 17762                           fsr2l	equ	0xFD9
 17763                           status	equ	0xFD8
 17764                           
 17765 ;; *************** function _I2C_Write_Cmd_Only *****************
 17766 ;; Defined at:
 17767 ;;		line 140 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 17768 ;; Parameters:    Size  Location     Type
 17769 ;;  Device          1    wreg     unsigned char 
 17770 ;;  Cmd             1   18[COMRAM] unsigned char 
 17771 ;; Auto vars:     Size  Location     Type
 17772 ;;  Device          1   19[COMRAM] unsigned char 
 17773 ;; Return value:  Size  Location     Type
 17774 ;;		None               void
 17775 ;; Registers used:
 17776 ;;		wreg, status,2, status,0, cstack
 17777 ;; Tracked objects:
 17778 ;;		On entry : 0/0
 17779 ;;		On exit  : 0/0
 17780 ;;		Unchanged: 0/0
 17781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17782 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17786 ;;Total ram usage:        2 bytes
 17787 ;; Hardware stack levels used:    1
 17788 ;; Hardware stack levels required when called:    5
 17789 ;; This function calls:
 17790 ;;		_I2C_Start
 17791 ;;		_I2C_Stop
 17792 ;;		_I2C_Write
 17793 ;; This function is called by:
 17794 ;;		_DS1621_Init
 17795 ;; This function uses a non-reentrant model
 17796 ;;
 17797                           
 17798                           	psect	text103
 17799  003AD2                     __ptext103:
 17800                           	opt stack 0
 17801  003AD2                     _I2C_Write_Cmd_Only:
 17802                           	opt stack 23
 17803                           
 17804                           ;incstack = 0
 17805                           ;I2C_Write_Cmd_Only@Device stored from wreg
 17806  003AD2  6E14               	movwf	I2C_Write_Cmd_Only@Device,c
 17807                           
 17808                           ;I2C_Soft.c: 142: I2C_Start();
 17809  003AD4  EC47  F01E         	call	_I2C_Start	;wreg free
 17810                           
 17811                           ;I2C_Soft.c: 143: I2C_Write((Device << 1) | 0);
 17812  003AD8  5014               	movf	I2C_Write_Cmd_Only@Device,w,c
 17813  003ADA  2414               	addwf	I2C_Write_Cmd_Only@Device,w,c
 17814  003ADC  ECE6  F01B         	call	_I2C_Write
 17815                           
 17816                           ;I2C_Soft.c: 144: I2C_Write(Cmd);
 17817  003AE0  5013               	movf	I2C_Write_Cmd_Only@Cmd,w,c
 17818  003AE2  ECE6  F01B         	call	_I2C_Write
 17819                           
 17820                           ;I2C_Soft.c: 145: I2C_Stop();
 17821  003AE6  EC3E  F01E         	call	_I2C_Stop	;wreg free
 17822  003AEA  0012               	return		;funcret
 17823  003AEC                     __end_of_I2C_Write_Cmd_Only:
 17824                           	opt stack 0
 17825                           tblptru	equ	0xFF8
 17826                           tblptrh	equ	0xFF7
 17827                           tblptrl	equ	0xFF6
 17828                           tablat	equ	0xFF5
 17829                           prodh	equ	0xFF4
 17830                           prodl	equ	0xFF3
 17831                           intcon	equ	0xFF2
 17832                           intcon2	equ	0xFF1
 17833                           intcon3	equ	0xFF0
 17834                           postinc0	equ	0xFEE
 17835                           wreg	equ	0xFE8
 17836                           postdec1	equ	0xFE5
 17837                           plusw1	equ	0xFE3
 17838                           fsr1l	equ	0xFE1
 17839                           indf2	equ	0xFDF
 17840                           postinc2	equ	0xFDE
 17841                           postdec2	equ	0xFDD
 17842                           plusw2	equ	0xFDB
 17843                           fsr2h	equ	0xFDA
 17844                           fsr2l	equ	0xFD9
 17845                           status	equ	0xFD8
 17846                           
 17847 ;; *************** function _DS1621_Read_Temp *****************
 17848 ;; Defined at:
 17849 ;;		line 29 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Support.c"
 17850 ;; Parameters:    Size  Location     Type
 17851 ;;		None
 17852 ;; Auto vars:     Size  Location     Type
 17853 ;;  Device          1   23[COMRAM] unsigned char 
 17854 ;;  Data_Ret        1   22[COMRAM] unsigned char 
 17855 ;;  Cmd             1   21[COMRAM] unsigned char 
 17856 ;; Return value:  Size  Location     Type
 17857 ;;                  2   19[COMRAM] int 
 17858 ;; Registers used:
 17859 ;;		wreg, status,2, status,0, cstack
 17860 ;; Tracked objects:
 17861 ;;		On entry : 0/0
 17862 ;;		On exit  : 0/0
 17863 ;;		Unchanged: 0/0
 17864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17866 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17868 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17869 ;;Total ram usage:        5 bytes
 17870 ;; Hardware stack levels used:    1
 17871 ;; Hardware stack levels required when called:    6
 17872 ;; This function calls:
 17873 ;;		_I2C_ReStart
 17874 ;;		_I2C_Read
 17875 ;;		_I2C_Start
 17876 ;;		_I2C_Stop
 17877 ;;		_I2C_Write
 17878 ;; This function is called by:
 17879 ;;		_main
 17880 ;; This function uses a non-reentrant model
 17881 ;;
 17882                           
 17883                           	psect	text104
 17884  00380A                     __ptext104:
 17885                           	opt stack 0
 17886  00380A                     _DS1621_Read_Temp:
 17887                           	opt stack 24
 17888                           
 17889                           ;I2C_Support.c: 32: char Device = 0x48;
 17890                           
 17891                           ;incstack = 0
 17892  00380A  0E48               	movlw	72
 17893  00380C  6E18               	movwf	DS1621_Read_Temp@Device,c
 17894                           
 17895                           ;I2C_Support.c: 33: char Cmd = 0xAA;
 17896  00380E  0EAA               	movlw	170
 17897  003810  6E16               	movwf	DS1621_Read_Temp@Cmd,c
 17898                           
 17899                           ;I2C_Support.c: 34: char Data_Ret;
 17900                           ;I2C_Support.c: 35: I2C_Start();
 17901  003812  EC47  F01E         	call	_I2C_Start	;wreg free
 17902                           
 17903                           ;I2C_Support.c: 36: I2C_Write((Device << 1) | 0);
 17904  003816  5018               	movf	DS1621_Read_Temp@Device,w,c
 17905  003818  2418               	addwf	DS1621_Read_Temp@Device,w,c
 17906  00381A  ECE6  F01B         	call	_I2C_Write
 17907                           
 17908                           ;I2C_Support.c: 37: I2C_Write(Cmd);
 17909  00381E  5016               	movf	DS1621_Read_Temp@Cmd,w,c
 17910  003820  ECE6  F01B         	call	_I2C_Write
 17911                           
 17912                           ;I2C_Support.c: 38: I2C_ReStart();
 17913  003824  ECCA  F01D         	call	_I2C_ReStart	;wreg free
 17914                           
 17915                           ;I2C_Support.c: 39: I2C_Write((Device << 1) | 1);
 17916  003828  80D8               	bsf	status,0,c
 17917  00382A  3418               	rlcf	DS1621_Read_Temp@Device,w,c
 17918  00382C  ECE6  F01B         	call	_I2C_Write
 17919                           
 17920                           ;I2C_Support.c: 40: Data_Ret = I2C_Read(0);
 17921  003830  0E00               	movlw	0
 17922  003832  EC63  F01B         	call	_I2C_Read
 17923  003836  6E17               	movwf	DS1621_Read_Temp@Data_Ret,c
 17924                           
 17925                           ;I2C_Support.c: 41: I2C_Stop();
 17926  003838  EC3E  F01E         	call	_I2C_Stop	;wreg free
 17927                           
 17928                           ;I2C_Support.c: 42: return Data_Ret;
 17929  00383C  C017  F014         	movff	DS1621_Read_Temp@Data_Ret,?_DS1621_Read_Temp
 17930  003840  6A15               	clrf	?_DS1621_Read_Temp+1,c
 17931  003842  D000               	goto	l1303
 17932  003844                     l1303:
 17933  003844  0012               	return		;funcret
 17934  003846                     __end_of_DS1621_Read_Temp:
 17935                           	opt stack 0
 17936                           tblptru	equ	0xFF8
 17937                           tblptrh	equ	0xFF7
 17938                           tblptrl	equ	0xFF6
 17939                           tablat	equ	0xFF5
 17940                           prodh	equ	0xFF4
 17941                           prodl	equ	0xFF3
 17942                           intcon	equ	0xFF2
 17943                           intcon2	equ	0xFF1
 17944                           intcon3	equ	0xFF0
 17945                           postinc0	equ	0xFEE
 17946                           wreg	equ	0xFE8
 17947                           postdec1	equ	0xFE5
 17948                           plusw1	equ	0xFE3
 17949                           fsr1l	equ	0xFE1
 17950                           indf2	equ	0xFDF
 17951                           postinc2	equ	0xFDE
 17952                           postdec2	equ	0xFDD
 17953                           plusw2	equ	0xFDB
 17954                           fsr2h	equ	0xFDA
 17955                           fsr2l	equ	0xFD9
 17956                           status	equ	0xFD8
 17957                           
 17958 ;; *************** function _I2C_Write *****************
 17959 ;; Defined at:
 17960 ;;		line 37 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 17961 ;; Parameters:    Size  Location     Type
 17962 ;;  outByte         1    wreg     unsigned char 
 17963 ;; Auto vars:     Size  Location     Type
 17964 ;;  outByte         1   16[COMRAM] unsigned char 
 17965 ;;  n               1   17[COMRAM] unsigned char 
 17966 ;; Return value:  Size  Location     Type
 17967 ;;		None               void
 17968 ;; Registers used:
 17969 ;;		wreg, status,2, status,0, cstack
 17970 ;; Tracked objects:
 17971 ;;		On entry : 0/0
 17972 ;;		On exit  : 0/0
 17973 ;;		Unchanged: 0/0
 17974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17979 ;;Total ram usage:        2 bytes
 17980 ;; Hardware stack levels used:    1
 17981 ;; Hardware stack levels required when called:    4
 17982 ;; This function calls:
 17983 ;;		_i2cHighScl
 17984 ;;		_i2cHighSda
 17985 ;;		_i2cLowScl
 17986 ;;		_i2cLowSda
 17987 ;; This function is called by:
 17988 ;;		_I2C_Write_Address_Read_One_Byte
 17989 ;;		_I2C_Write_Address_Write_One_Byte
 17990 ;;		_I2C_Write_Cmd_Only
 17991 ;;		_I2C_Write_Cmd_Write_Data
 17992 ;;		_DS1621_Read_Temp
 17993 ;;		_DS3231_Read_Time
 17994 ;;		_DS3231_Write_Time
 17995 ;;		_DS3231_Read_Alarm_Time
 17996 ;;		_DS3231_Init
 17997 ;;		_DS3231_Write_Alarm_Time
 17998 ;;		_I2C_Write_Cmd_Read_One_Byte
 17999 ;;		_DS3231_Setup_Time
 18000 ;; This function uses a non-reentrant model
 18001 ;;
 18002                           
 18003                           	psect	text105
 18004  0037CC                     __ptext105:
 18005                           	opt stack 0
 18006  0037CC                     _I2C_Write:
 18007                           	opt stack 23
 18008                           
 18009                           ;incstack = 0
 18010                           ;I2C_Write@outByte stored from wreg
 18011  0037CC  6E11               	movwf	I2C_Write@outByte,c
 18012                           
 18013                           ;I2C_Soft.c: 39: unsigned char n;
 18014                           ;I2C_Soft.c: 40: for(n=0; n<8; n++)
 18015  0037CE  0E00               	movlw	0
 18016  0037D0  6E12               	movwf	I2C_Write@n,c
 18017  0037D2                     l8222:
 18018  0037D2  0E07               	movlw	7
 18019  0037D4  6412               	cpfsgt	I2C_Write@n,c
 18020  0037D6  D001               	goto	l1191
 18021  0037D8  D011               	goto	l8240
 18022  0037DA                     l1191:
 18023                           
 18024                           ;I2C_Soft.c: 41: {
 18025                           ;I2C_Soft.c: 42: if(outByte&0x80) i2cHighSda();
 18026  0037DA  AE11               	btfss	I2C_Write@outByte,7,c
 18027  0037DC  D003               	goto	l8228
 18028  0037DE  ECC9  F01E         	call	_i2cHighSda	;wreg free
 18029  0037E2  D003               	goto	l8230
 18030  0037E4                     l8228:
 18031                           
 18032                           ;I2C_Soft.c: 43: else i2cLowSda();
 18033  0037E4  ECB2  F01E         	call	_i2cLowSda	;wreg free
 18034  0037E8  D000               	goto	l8230
 18035  0037EA                     l8230:
 18036                           
 18037                           ;I2C_Soft.c: 44: i2cHighScl();
 18038  0037EA  EC97  F01E         	call	_i2cHighScl	;wreg free
 18039                           
 18040                           ;I2C_Soft.c: 45: i2cLowScl();
 18041  0037EE  ECC5  F01E         	call	_i2cLowScl	;wreg free
 18042                           
 18043                           ;I2C_Soft.c: 46: outByte = outByte << 1;
 18044  0037F2  5011               	movf	I2C_Write@outByte,w,c
 18045  0037F4  2411               	addwf	I2C_Write@outByte,w,c
 18046  0037F6  6E11               	movwf	I2C_Write@outByte,c
 18047  0037F8  2A12               	incf	I2C_Write@n,f,c
 18048  0037FA  D7EB               	goto	l8222
 18049  0037FC                     l8240:
 18050                           
 18051                           ;I2C_Soft.c: 47: }
 18052                           ;I2C_Soft.c: 48: i2cHighSda();
 18053  0037FC  ECC9  F01E         	call	_i2cHighSda	;wreg free
 18054                           
 18055                           ;I2C_Soft.c: 49: i2cHighScl();
 18056  003800  EC97  F01E         	call	_i2cHighScl	;wreg free
 18057                           
 18058                           ;I2C_Soft.c: 50: i2cLowScl();
 18059  003804  ECC5  F01E         	call	_i2cLowScl	;wreg free
 18060  003808  0012               	return		;funcret
 18061  00380A                     __end_of_I2C_Write:
 18062                           	opt stack 0
 18063                           tblptru	equ	0xFF8
 18064                           tblptrh	equ	0xFF7
 18065                           tblptrl	equ	0xFF6
 18066                           tablat	equ	0xFF5
 18067                           prodh	equ	0xFF4
 18068                           prodl	equ	0xFF3
 18069                           intcon	equ	0xFF2
 18070                           intcon2	equ	0xFF1
 18071                           intcon3	equ	0xFF0
 18072                           postinc0	equ	0xFEE
 18073                           wreg	equ	0xFE8
 18074                           postdec1	equ	0xFE5
 18075                           plusw1	equ	0xFE3
 18076                           fsr1l	equ	0xFE1
 18077                           indf2	equ	0xFDF
 18078                           postinc2	equ	0xFDE
 18079                           postdec2	equ	0xFDD
 18080                           plusw2	equ	0xFDB
 18081                           fsr2h	equ	0xFDA
 18082                           fsr2l	equ	0xFD9
 18083                           status	equ	0xFD8
 18084                           
 18085 ;; *************** function _I2C_Stop *****************
 18086 ;; Defined at:
 18087 ;;		line 84 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 18088 ;; Parameters:    Size  Location     Type
 18089 ;;		None
 18090 ;; Auto vars:     Size  Location     Type
 18091 ;;		None
 18092 ;; Return value:  Size  Location     Type
 18093 ;;		None               void
 18094 ;; Registers used:
 18095 ;;		wreg, cstack
 18096 ;; Tracked objects:
 18097 ;;		On entry : 0/0
 18098 ;;		On exit  : 0/0
 18099 ;;		Unchanged: 0/0
 18100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18105 ;;Total ram usage:        0 bytes
 18106 ;; Hardware stack levels used:    1
 18107 ;; Hardware stack levels required when called:    4
 18108 ;; This function calls:
 18109 ;;		_i2cHighScl
 18110 ;;		_i2cHighSda
 18111 ;;		_i2cLowScl
 18112 ;;		_i2cLowSda
 18113 ;; This function is called by:
 18114 ;;		_I2C_Write_Address_Read_One_Byte
 18115 ;;		_I2C_Write_Address_Write_One_Byte
 18116 ;;		_I2C_Write_Cmd_Only
 18117 ;;		_I2C_Write_Cmd_Write_Data
 18118 ;;		_DS1621_Read_Temp
 18119 ;;		_DS3231_Read_Time
 18120 ;;		_DS3231_Write_Time
 18121 ;;		_DS3231_Read_Alarm_Time
 18122 ;;		_DS3231_Init
 18123 ;;		_DS3231_Write_Alarm_Time
 18124 ;;		_I2C_Write_Cmd_Read_One_Byte
 18125 ;;		_DS3231_Setup_Time
 18126 ;; This function uses a non-reentrant model
 18127 ;;
 18128                           
 18129                           	psect	text106
 18130  003C7C                     __ptext106:
 18131                           	opt stack 0
 18132  003C7C                     _I2C_Stop:
 18133                           	opt stack 23
 18134                           
 18135                           ;I2C_Soft.c: 86: i2cLowScl();
 18136                           
 18137                           ;incstack = 0
 18138  003C7C  ECC5  F01E         	call	_i2cLowScl	;wreg free
 18139                           
 18140                           ;I2C_Soft.c: 87: i2cLowSda();
 18141  003C80  ECB2  F01E         	call	_i2cLowSda	;wreg free
 18142                           
 18143                           ;I2C_Soft.c: 88: i2cHighScl();
 18144  003C84  EC97  F01E         	call	_i2cHighScl	;wreg free
 18145                           
 18146                           ;I2C_Soft.c: 89: i2cHighSda();
 18147  003C88  ECC9  F01E         	call	_i2cHighSda	;wreg free
 18148  003C8C  0012               	return		;funcret
 18149  003C8E                     __end_of_I2C_Stop:
 18150                           	opt stack 0
 18151                           tblptru	equ	0xFF8
 18152                           tblptrh	equ	0xFF7
 18153                           tblptrl	equ	0xFF6
 18154                           tablat	equ	0xFF5
 18155                           prodh	equ	0xFF4
 18156                           prodl	equ	0xFF3
 18157                           intcon	equ	0xFF2
 18158                           intcon2	equ	0xFF1
 18159                           intcon3	equ	0xFF0
 18160                           postinc0	equ	0xFEE
 18161                           wreg	equ	0xFE8
 18162                           postdec1	equ	0xFE5
 18163                           plusw1	equ	0xFE3
 18164                           fsr1l	equ	0xFE1
 18165                           indf2	equ	0xFDF
 18166                           postinc2	equ	0xFDE
 18167                           postdec2	equ	0xFDD
 18168                           plusw2	equ	0xFDB
 18169                           fsr2h	equ	0xFDA
 18170                           fsr2l	equ	0xFD9
 18171                           status	equ	0xFD8
 18172                           
 18173 ;; *************** function _I2C_Start *****************
 18174 ;; Defined at:
 18175 ;;		line 67 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 18176 ;; Parameters:    Size  Location     Type
 18177 ;;		None
 18178 ;; Auto vars:     Size  Location     Type
 18179 ;;		None
 18180 ;; Return value:  Size  Location     Type
 18181 ;;		None               void
 18182 ;; Registers used:
 18183 ;;		wreg, cstack
 18184 ;; Tracked objects:
 18185 ;;		On entry : 0/0
 18186 ;;		On exit  : 0/0
 18187 ;;		Unchanged: 0/0
 18188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18193 ;;Total ram usage:        0 bytes
 18194 ;; Hardware stack levels used:    1
 18195 ;; Hardware stack levels required when called:    4
 18196 ;; This function calls:
 18197 ;;		_i2cHighScl
 18198 ;;		_i2cHighSda
 18199 ;;		_i2cLowScl
 18200 ;;		_i2cLowSda
 18201 ;; This function is called by:
 18202 ;;		_I2C_Write_Address_Read_One_Byte
 18203 ;;		_I2C_Write_Address_Write_One_Byte
 18204 ;;		_I2C_Write_Cmd_Only
 18205 ;;		_I2C_Write_Cmd_Write_Data
 18206 ;;		_DS1621_Read_Temp
 18207 ;;		_DS3231_Read_Time
 18208 ;;		_DS3231_Write_Time
 18209 ;;		_DS3231_Read_Alarm_Time
 18210 ;;		_DS3231_Init
 18211 ;;		_DS3231_Write_Alarm_Time
 18212 ;;		_I2C_Write_Cmd_Read_One_Byte
 18213 ;;		_DS3231_Setup_Time
 18214 ;; This function uses a non-reentrant model
 18215 ;;
 18216                           
 18217                           	psect	text107
 18218  003C8E                     __ptext107:
 18219                           	opt stack 0
 18220  003C8E                     _I2C_Start:
 18221                           	opt stack 23
 18222                           
 18223                           ;I2C_Soft.c: 69: i2cHighSda();
 18224                           
 18225                           ;incstack = 0
 18226  003C8E  ECC9  F01E         	call	_i2cHighSda	;wreg free
 18227                           
 18228                           ;I2C_Soft.c: 70: i2cHighScl();
 18229  003C92  EC97  F01E         	call	_i2cHighScl	;wreg free
 18230                           
 18231                           ;I2C_Soft.c: 71: i2cLowSda();
 18232  003C96  ECB2  F01E         	call	_i2cLowSda	;wreg free
 18233                           
 18234                           ;I2C_Soft.c: 72: i2cLowScl();
 18235  003C9A  ECC5  F01E         	call	_i2cLowScl	;wreg free
 18236  003C9E  0012               	return		;funcret
 18237  003CA0                     __end_of_I2C_Start:
 18238                           	opt stack 0
 18239                           tblptru	equ	0xFF8
 18240                           tblptrh	equ	0xFF7
 18241                           tblptrl	equ	0xFF6
 18242                           tablat	equ	0xFF5
 18243                           prodh	equ	0xFF4
 18244                           prodl	equ	0xFF3
 18245                           intcon	equ	0xFF2
 18246                           intcon2	equ	0xFF1
 18247                           intcon3	equ	0xFF0
 18248                           postinc0	equ	0xFEE
 18249                           wreg	equ	0xFE8
 18250                           postdec1	equ	0xFE5
 18251                           plusw1	equ	0xFE3
 18252                           fsr1l	equ	0xFE1
 18253                           indf2	equ	0xFDF
 18254                           postinc2	equ	0xFDE
 18255                           postdec2	equ	0xFDD
 18256                           plusw2	equ	0xFDB
 18257                           fsr2h	equ	0xFDA
 18258                           fsr2l	equ	0xFD9
 18259                           status	equ	0xFD8
 18260                           
 18261 ;; *************** function _I2C_Read *****************
 18262 ;; Defined at:
 18263 ;;		line 16 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 18264 ;; Parameters:    Size  Location     Type
 18265 ;;  ack             1    wreg     unsigned char 
 18266 ;; Auto vars:     Size  Location     Type
 18267 ;;  ack             1   16[COMRAM] unsigned char 
 18268 ;;  inByte          1   18[COMRAM] unsigned char 
 18269 ;;  n               1   17[COMRAM] unsigned char 
 18270 ;; Return value:  Size  Location     Type
 18271 ;;                  1    wreg      unsigned char 
 18272 ;; Registers used:
 18273 ;;		wreg, status,2, status,0, cstack
 18274 ;; Tracked objects:
 18275 ;;		On entry : 0/0
 18276 ;;		On exit  : 0/0
 18277 ;;		Unchanged: 0/0
 18278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18280 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18282 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18283 ;;Total ram usage:        3 bytes
 18284 ;; Hardware stack levels used:    1
 18285 ;; Hardware stack levels required when called:    5
 18286 ;; This function calls:
 18287 ;;		_i2cAck
 18288 ;;		_i2cHighScl
 18289 ;;		_i2cHighSda
 18290 ;;		_i2cLowScl
 18291 ;;		_i2cNack
 18292 ;; This function is called by:
 18293 ;;		_I2C_Write_Address_Read_One_Byte
 18294 ;;		_DS1621_Read_Temp
 18295 ;;		_DS3231_Read_Time
 18296 ;;		_DS3231_Read_Alarm_Time
 18297 ;;		_DS3231_Init
 18298 ;;		_I2C_Write_Cmd_Read_One_Byte
 18299 ;; This function uses a non-reentrant model
 18300 ;;
 18301                           
 18302                           	psect	text108
 18303  0036C6                     __ptext108:
 18304                           	opt stack 0
 18305  0036C6                     _I2C_Read:
 18306                           	opt stack 22
 18307                           
 18308                           ;incstack = 0
 18309                           ;I2C_Read@ack stored from wreg
 18310  0036C6  6E11               	movwf	I2C_Read@ack,c
 18311                           
 18312                           ;I2C_Soft.c: 18: unsigned char inByte, n;
 18313                           ;I2C_Soft.c: 19: i2cHighSda();
 18314  0036C8  ECC9  F01E         	call	_i2cHighSda	;wreg free
 18315                           
 18316                           ;I2C_Soft.c: 20: for (n=0; n<8; n++)
 18317  0036CC  0E00               	movlw	0
 18318  0036CE  6E12               	movwf	I2C_Read@n,c
 18319  0036D0                     l8192:
 18320  0036D0  0E07               	movlw	7
 18321  0036D2  6412               	cpfsgt	I2C_Read@n,c
 18322  0036D4  D001               	goto	l8196
 18323  0036D6  D00F               	goto	l8210
 18324  0036D8                     l8196:
 18325                           
 18326                           ;I2C_Soft.c: 21: {
 18327                           ;I2C_Soft.c: 22: i2cHighScl();
 18328  0036D8  EC97  F01E         	call	_i2cHighScl	;wreg free
 18329                           
 18330                           ;I2C_Soft.c: 24: if (PORTDbits.RD6)
 18331  0036DC  AC83               	btfss	3971,6,c	;volatile
 18332  0036DE  D003               	goto	l8202
 18333                           
 18334                           ;I2C_Soft.c: 25: inByte = (inByte << 1) | 0x01;
 18335  0036E0  80D8               	bsf	status,0,c
 18336  0036E2  3613               	rlcf	I2C_Read@inByte,f,c
 18337  0036E4  D004               	goto	l8204
 18338  0036E6                     l8202:
 18339                           
 18340                           ;I2C_Soft.c: 26: else
 18341                           ;I2C_Soft.c: 27: inByte = inByte << 1;
 18342  0036E6  5013               	movf	I2C_Read@inByte,w,c
 18343  0036E8  2413               	addwf	I2C_Read@inByte,w,c
 18344  0036EA  6E13               	movwf	I2C_Read@inByte,c
 18345  0036EC  D000               	goto	l8204
 18346  0036EE                     l8204:
 18347                           
 18348                           ;I2C_Soft.c: 28: i2cLowScl();
 18349  0036EE  ECC5  F01E         	call	_i2cLowScl	;wreg free
 18350  0036F2  2A12               	incf	I2C_Read@n,f,c
 18351  0036F4  D7ED               	goto	l8192
 18352  0036F6                     l8210:
 18353                           
 18354                           ;I2C_Soft.c: 29: }
 18355                           ;I2C_Soft.c: 30: if (ack) i2cAck();
 18356  0036F6  5011               	movf	I2C_Read@ack,w,c
 18357  0036F8  B4D8               	btfsc	status,2,c
 18358  0036FA  D003               	goto	l8214
 18359  0036FC  EC50  F01E         	call	_i2cAck	;wreg free
 18360  003700  D003               	goto	l8216
 18361  003702                     l8214:
 18362                           
 18363                           ;I2C_Soft.c: 31: else i2cNack();
 18364  003702  ECAD  F01E         	call	_i2cNack	;wreg free
 18365  003706  D000               	goto	l8216
 18366  003708                     l8216:
 18367                           
 18368                           ;I2C_Soft.c: 34: return(inByte);
 18369  003708  5013               	movf	I2C_Read@inByte,w,c
 18370  00370A  D000               	goto	l1188
 18371  00370C                     l1188:
 18372  00370C  0012               	return		;funcret
 18373  00370E                     __end_of_I2C_Read:
 18374                           	opt stack 0
 18375                           tblptru	equ	0xFF8
 18376                           tblptrh	equ	0xFF7
 18377                           tblptrl	equ	0xFF6
 18378                           tablat	equ	0xFF5
 18379                           prodh	equ	0xFF4
 18380                           prodl	equ	0xFF3
 18381                           intcon	equ	0xFF2
 18382                           intcon2	equ	0xFF1
 18383                           intcon3	equ	0xFF0
 18384                           postinc0	equ	0xFEE
 18385                           wreg	equ	0xFE8
 18386                           postdec1	equ	0xFE5
 18387                           plusw1	equ	0xFE3
 18388                           fsr1l	equ	0xFE1
 18389                           indf2	equ	0xFDF
 18390                           postinc2	equ	0xFDE
 18391                           postdec2	equ	0xFDD
 18392                           plusw2	equ	0xFDB
 18393                           fsr2h	equ	0xFDA
 18394                           fsr2l	equ	0xFD9
 18395                           status	equ	0xFD8
 18396                           
 18397 ;; *************** function _i2cNack *****************
 18398 ;; Defined at:
 18399 ;;		line 53 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 18400 ;; Parameters:    Size  Location     Type
 18401 ;;		None
 18402 ;; Auto vars:     Size  Location     Type
 18403 ;;		None
 18404 ;; Return value:  Size  Location     Type
 18405 ;;		None               void
 18406 ;; Registers used:
 18407 ;;		wreg, cstack
 18408 ;; Tracked objects:
 18409 ;;		On entry : 0/0
 18410 ;;		On exit  : 0/0
 18411 ;;		Unchanged: 0/0
 18412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18417 ;;Total ram usage:        0 bytes
 18418 ;; Hardware stack levels used:    1
 18419 ;; Hardware stack levels required when called:    4
 18420 ;; This function calls:
 18421 ;;		_i2cHighScl
 18422 ;;		_i2cLowScl
 18423 ;; This function is called by:
 18424 ;;		_I2C_Read
 18425 ;; This function uses a non-reentrant model
 18426 ;;
 18427                           
 18428                           	psect	text109
 18429  003D5A                     __ptext109:
 18430                           	opt stack 0
 18431  003D5A                     _i2cNack:
 18432                           	opt stack 22
 18433                           
 18434                           ;I2C_Soft.c: 55: i2cHighScl();
 18435                           
 18436                           ;incstack = 0
 18437  003D5A  EC97  F01E         	call	_i2cHighScl	;wreg free
 18438                           
 18439                           ;I2C_Soft.c: 56: i2cLowScl();
 18440  003D5E  ECC5  F01E         	call	_i2cLowScl	;wreg free
 18441  003D62  0012               	return		;funcret
 18442  003D64                     __end_of_i2cNack:
 18443                           	opt stack 0
 18444                           tblptru	equ	0xFF8
 18445                           tblptrh	equ	0xFF7
 18446                           tblptrl	equ	0xFF6
 18447                           tablat	equ	0xFF5
 18448                           prodh	equ	0xFF4
 18449                           prodl	equ	0xFF3
 18450                           intcon	equ	0xFF2
 18451                           intcon2	equ	0xFF1
 18452                           intcon3	equ	0xFF0
 18453                           postinc0	equ	0xFEE
 18454                           wreg	equ	0xFE8
 18455                           postdec1	equ	0xFE5
 18456                           plusw1	equ	0xFE3
 18457                           fsr1l	equ	0xFE1
 18458                           indf2	equ	0xFDF
 18459                           postinc2	equ	0xFDE
 18460                           postdec2	equ	0xFDD
 18461                           plusw2	equ	0xFDB
 18462                           fsr2h	equ	0xFDA
 18463                           fsr2l	equ	0xFD9
 18464                           status	equ	0xFD8
 18465                           
 18466 ;; *************** function _i2cAck *****************
 18467 ;; Defined at:
 18468 ;;		line 59 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 18469 ;; Parameters:    Size  Location     Type
 18470 ;;		None
 18471 ;; Auto vars:     Size  Location     Type
 18472 ;;		None
 18473 ;; Return value:  Size  Location     Type
 18474 ;;		None               void
 18475 ;; Registers used:
 18476 ;;		wreg, cstack
 18477 ;; Tracked objects:
 18478 ;;		On entry : 0/0
 18479 ;;		On exit  : 0/0
 18480 ;;		Unchanged: 0/0
 18481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18486 ;;Total ram usage:        0 bytes
 18487 ;; Hardware stack levels used:    1
 18488 ;; Hardware stack levels required when called:    4
 18489 ;; This function calls:
 18490 ;;		_i2cHighScl
 18491 ;;		_i2cHighSda
 18492 ;;		_i2cLowScl
 18493 ;;		_i2cLowSda
 18494 ;; This function is called by:
 18495 ;;		_I2C_Read
 18496 ;; This function uses a non-reentrant model
 18497 ;;
 18498                           
 18499                           	psect	text110
 18500  003CA0                     __ptext110:
 18501                           	opt stack 0
 18502  003CA0                     _i2cAck:
 18503                           	opt stack 22
 18504                           
 18505                           ;I2C_Soft.c: 61: i2cLowSda();
 18506                           
 18507                           ;incstack = 0
 18508  003CA0  ECB2  F01E         	call	_i2cLowSda	;wreg free
 18509                           
 18510                           ;I2C_Soft.c: 62: i2cHighScl();
 18511  003CA4  EC97  F01E         	call	_i2cHighScl	;wreg free
 18512                           
 18513                           ;I2C_Soft.c: 63: i2cLowScl();
 18514  003CA8  ECC5  F01E         	call	_i2cLowScl	;wreg free
 18515                           
 18516                           ;I2C_Soft.c: 64: i2cHighSda();
 18517  003CAC  ECC9  F01E         	call	_i2cHighSda	;wreg free
 18518  003CB0  0012               	return		;funcret
 18519  003CB2                     __end_of_i2cAck:
 18520                           	opt stack 0
 18521                           tblptru	equ	0xFF8
 18522                           tblptrh	equ	0xFF7
 18523                           tblptrl	equ	0xFF6
 18524                           tablat	equ	0xFF5
 18525                           prodh	equ	0xFF4
 18526                           prodl	equ	0xFF3
 18527                           intcon	equ	0xFF2
 18528                           intcon2	equ	0xFF1
 18529                           intcon3	equ	0xFF0
 18530                           postinc0	equ	0xFEE
 18531                           wreg	equ	0xFE8
 18532                           postdec1	equ	0xFE5
 18533                           plusw1	equ	0xFE3
 18534                           fsr1l	equ	0xFE1
 18535                           indf2	equ	0xFDF
 18536                           postinc2	equ	0xFDE
 18537                           postdec2	equ	0xFDD
 18538                           plusw2	equ	0xFDB
 18539                           fsr2h	equ	0xFDA
 18540                           fsr2l	equ	0xFD9
 18541                           status	equ	0xFD8
 18542                           
 18543 ;; *************** function _I2C_ReStart *****************
 18544 ;; Defined at:
 18545 ;;		line 75 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 18546 ;; Parameters:    Size  Location     Type
 18547 ;;		None
 18548 ;; Auto vars:     Size  Location     Type
 18549 ;;		None
 18550 ;; Return value:  Size  Location     Type
 18551 ;;		None               void
 18552 ;; Registers used:
 18553 ;;		wreg, cstack
 18554 ;; Tracked objects:
 18555 ;;		On entry : 0/0
 18556 ;;		On exit  : 0/0
 18557 ;;		Unchanged: 0/0
 18558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18563 ;;Total ram usage:        0 bytes
 18564 ;; Hardware stack levels used:    1
 18565 ;; Hardware stack levels required when called:    4
 18566 ;; This function calls:
 18567 ;;		_i2cHighScl
 18568 ;;		_i2cHighSda
 18569 ;;		_i2cLowScl
 18570 ;;		_i2cLowSda
 18571 ;; This function is called by:
 18572 ;;		_I2C_Write_Address_Read_One_Byte
 18573 ;;		_DS1621_Read_Temp
 18574 ;;		_DS3231_Read_Time
 18575 ;;		_DS3231_Read_Alarm_Time
 18576 ;;		_DS3231_Init
 18577 ;;		_I2C_Write_Cmd_Read_One_Byte
 18578 ;; This function uses a non-reentrant model
 18579 ;;
 18580                           
 18581                           	psect	text111
 18582  003B94                     __ptext111:
 18583                           	opt stack 0
 18584  003B94                     _I2C_ReStart:
 18585                           	opt stack 23
 18586                           
 18587                           ;I2C_Soft.c: 77: i2cLowScl();
 18588                           
 18589                           ;incstack = 0
 18590  003B94  ECC5  F01E         	call	_i2cLowScl	;wreg free
 18591                           
 18592                           ;I2C_Soft.c: 78: i2cHighSda();
 18593  003B98  ECC9  F01E         	call	_i2cHighSda	;wreg free
 18594                           
 18595                           ;I2C_Soft.c: 79: i2cHighScl();
 18596  003B9C  EC97  F01E         	call	_i2cHighScl	;wreg free
 18597                           
 18598                           ;I2C_Soft.c: 80: i2cLowSda();
 18599  003BA0  ECB2  F01E         	call	_i2cLowSda	;wreg free
 18600                           
 18601                           ;I2C_Soft.c: 81: i2cLowScl();
 18602  003BA4  ECC5  F01E         	call	_i2cLowScl	;wreg free
 18603  003BA8  0012               	return		;funcret
 18604  003BAA                     __end_of_I2C_ReStart:
 18605                           	opt stack 0
 18606                           tblptru	equ	0xFF8
 18607                           tblptrh	equ	0xFF7
 18608                           tblptrl	equ	0xFF6
 18609                           tablat	equ	0xFF5
 18610                           prodh	equ	0xFF4
 18611                           prodl	equ	0xFF3
 18612                           intcon	equ	0xFF2
 18613                           intcon2	equ	0xFF1
 18614                           intcon3	equ	0xFF0
 18615                           postinc0	equ	0xFEE
 18616                           wreg	equ	0xFE8
 18617                           postdec1	equ	0xFE5
 18618                           plusw1	equ	0xFE3
 18619                           fsr1l	equ	0xFE1
 18620                           indf2	equ	0xFDF
 18621                           postinc2	equ	0xFDE
 18622                           postdec2	equ	0xFDD
 18623                           plusw2	equ	0xFDB
 18624                           fsr2h	equ	0xFDA
 18625                           fsr2l	equ	0xFD9
 18626                           status	equ	0xFD8
 18627                           
 18628 ;; *************** function _i2cLowSda *****************
 18629 ;; Defined at:
 18630 ;;		line 98 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 18631 ;; Parameters:    Size  Location     Type
 18632 ;;		None
 18633 ;; Auto vars:     Size  Location     Type
 18634 ;;		None
 18635 ;; Return value:  Size  Location     Type
 18636 ;;		None               void
 18637 ;; Registers used:
 18638 ;;		None
 18639 ;; Tracked objects:
 18640 ;;		On entry : 0/0
 18641 ;;		On exit  : 0/0
 18642 ;;		Unchanged: 0/0
 18643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18648 ;;Total ram usage:        0 bytes
 18649 ;; Hardware stack levels used:    1
 18650 ;; Hardware stack levels required when called:    3
 18651 ;; This function calls:
 18652 ;;		Nothing
 18653 ;; This function is called by:
 18654 ;;		_I2C_Write
 18655 ;;		_i2cAck
 18656 ;;		_I2C_Start
 18657 ;;		_I2C_ReStart
 18658 ;;		_I2C_Stop
 18659 ;; This function uses a non-reentrant model
 18660 ;;
 18661                           
 18662                           	psect	text112
 18663  003D64                     __ptext112:
 18664                           	opt stack 0
 18665  003D64                     _i2cLowSda:
 18666                           	opt stack 23
 18667                           
 18668                           ;I2C_Soft.c: 100: PORTDbits.RD6 = 0;
 18669                           
 18670                           ;incstack = 0
 18671  003D64  9C83               	bcf	3971,6,c	;volatile
 18672                           
 18673                           ;I2C_Soft.c: 101: TRISDbits.RD6 = 0;
 18674  003D66  9C95               	bcf	3989,6,c	;volatile
 18675                           
 18676                           ;I2C_Soft.c: 102: _delay((unsigned long)((2)*(8000000/4000000.0)));
 18677  003D68  D000               	nop2		;2 cycle nop
 18678  003D6A  D000               	nop2		;2 cycle nop
 18679  003D6C  0012               	return		;funcret
 18680  003D6E                     __end_of_i2cLowSda:
 18681                           	opt stack 0
 18682                           tblptru	equ	0xFF8
 18683                           tblptrh	equ	0xFF7
 18684                           tblptrl	equ	0xFF6
 18685                           tablat	equ	0xFF5
 18686                           prodh	equ	0xFF4
 18687                           prodl	equ	0xFF3
 18688                           intcon	equ	0xFF2
 18689                           intcon2	equ	0xFF1
 18690                           intcon3	equ	0xFF0
 18691                           postinc0	equ	0xFEE
 18692                           wreg	equ	0xFE8
 18693                           postdec1	equ	0xFE5
 18694                           plusw1	equ	0xFE3
 18695                           fsr1l	equ	0xFE1
 18696                           indf2	equ	0xFDF
 18697                           postinc2	equ	0xFDE
 18698                           postdec2	equ	0xFDD
 18699                           plusw2	equ	0xFDB
 18700                           fsr2h	equ	0xFDA
 18701                           fsr2l	equ	0xFD9
 18702                           status	equ	0xFD8
 18703                           
 18704 ;; *************** function _i2cLowScl *****************
 18705 ;; Defined at:
 18706 ;;		line 111 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 18707 ;; Parameters:    Size  Location     Type
 18708 ;;		None
 18709 ;; Auto vars:     Size  Location     Type
 18710 ;;		None
 18711 ;; Return value:  Size  Location     Type
 18712 ;;		None               void
 18713 ;; Registers used:
 18714 ;;		None
 18715 ;; Tracked objects:
 18716 ;;		On entry : 0/0
 18717 ;;		On exit  : 0/0
 18718 ;;		Unchanged: 0/0
 18719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18724 ;;Total ram usage:        0 bytes
 18725 ;; Hardware stack levels used:    1
 18726 ;; Hardware stack levels required when called:    3
 18727 ;; This function calls:
 18728 ;;		Nothing
 18729 ;; This function is called by:
 18730 ;;		_I2C_Read
 18731 ;;		_I2C_Write
 18732 ;;		_i2cNack
 18733 ;;		_i2cAck
 18734 ;;		_I2C_Start
 18735 ;;		_I2C_ReStart
 18736 ;;		_I2C_Stop
 18737 ;; This function uses a non-reentrant model
 18738 ;;
 18739                           
 18740                           	psect	text113
 18741  003D8A                     __ptext113:
 18742                           	opt stack 0
 18743  003D8A                     _i2cLowScl:
 18744                           	opt stack 23
 18745                           
 18746                           ;I2C_Soft.c: 113: PORTBbits.RB4 = 0;
 18747                           
 18748                           ;incstack = 0
 18749  003D8A  9881               	bcf	3969,4,c	;volatile
 18750                           
 18751                           ;I2C_Soft.c: 114: TRISBbits.RB4 = 0;
 18752  003D8C  9893               	bcf	3987,4,c	;volatile
 18753                           
 18754                           ;I2C_Soft.c: 115: _delay((unsigned long)((1)*(8000000/4000000.0)));
 18755  003D8E  D000               	nop2		;2 cycle nop
 18756  003D90  0012               	return		;funcret
 18757  003D92                     __end_of_i2cLowScl:
 18758                           	opt stack 0
 18759                           tblptru	equ	0xFF8
 18760                           tblptrh	equ	0xFF7
 18761                           tblptrl	equ	0xFF6
 18762                           tablat	equ	0xFF5
 18763                           prodh	equ	0xFF4
 18764                           prodl	equ	0xFF3
 18765                           intcon	equ	0xFF2
 18766                           intcon2	equ	0xFF1
 18767                           intcon3	equ	0xFF0
 18768                           postinc0	equ	0xFEE
 18769                           wreg	equ	0xFE8
 18770                           postdec1	equ	0xFE5
 18771                           plusw1	equ	0xFE3
 18772                           fsr1l	equ	0xFE1
 18773                           indf2	equ	0xFDF
 18774                           postinc2	equ	0xFDE
 18775                           postdec2	equ	0xFDD
 18776                           plusw2	equ	0xFDB
 18777                           fsr2h	equ	0xFDA
 18778                           fsr2l	equ	0xFD9
 18779                           status	equ	0xFD8
 18780                           
 18781 ;; *************** function _i2cHighSda *****************
 18782 ;; Defined at:
 18783 ;;		line 92 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 18784 ;; Parameters:    Size  Location     Type
 18785 ;;		None
 18786 ;; Auto vars:     Size  Location     Type
 18787 ;;		None
 18788 ;; Return value:  Size  Location     Type
 18789 ;;		None               void
 18790 ;; Registers used:
 18791 ;;		None
 18792 ;; Tracked objects:
 18793 ;;		On entry : 0/0
 18794 ;;		On exit  : 0/0
 18795 ;;		Unchanged: 0/0
 18796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18801 ;;Total ram usage:        0 bytes
 18802 ;; Hardware stack levels used:    1
 18803 ;; Hardware stack levels required when called:    3
 18804 ;; This function calls:
 18805 ;;		Nothing
 18806 ;; This function is called by:
 18807 ;;		_I2C_Init
 18808 ;;		_I2C_Read
 18809 ;;		_I2C_Write
 18810 ;;		_i2cAck
 18811 ;;		_I2C_Start
 18812 ;;		_I2C_ReStart
 18813 ;;		_I2C_Stop
 18814 ;; This function uses a non-reentrant model
 18815 ;;
 18816                           
 18817                           	psect	text114
 18818  003D92                     __ptext114:
 18819                           	opt stack 0
 18820  003D92                     _i2cHighSda:
 18821                           	opt stack 23
 18822                           
 18823                           ;I2C_Soft.c: 94: TRISDbits.RD6 = 1;
 18824                           
 18825                           ;incstack = 0
 18826  003D92  8C95               	bsf	3989,6,c	;volatile
 18827                           
 18828                           ;I2C_Soft.c: 95: _delay((unsigned long)((2)*(8000000/4000000.0)));
 18829  003D94  D000               	nop2		;2 cycle nop
 18830  003D96  D000               	nop2		;2 cycle nop
 18831  003D98  0012               	return		;funcret
 18832  003D9A                     __end_of_i2cHighSda:
 18833                           	opt stack 0
 18834                           tblptru	equ	0xFF8
 18835                           tblptrh	equ	0xFF7
 18836                           tblptrl	equ	0xFF6
 18837                           tablat	equ	0xFF5
 18838                           prodh	equ	0xFF4
 18839                           prodl	equ	0xFF3
 18840                           intcon	equ	0xFF2
 18841                           intcon2	equ	0xFF1
 18842                           intcon3	equ	0xFF0
 18843                           postinc0	equ	0xFEE
 18844                           wreg	equ	0xFE8
 18845                           postdec1	equ	0xFE5
 18846                           plusw1	equ	0xFE3
 18847                           fsr1l	equ	0xFE1
 18848                           indf2	equ	0xFDF
 18849                           postinc2	equ	0xFDE
 18850                           postdec2	equ	0xFDD
 18851                           plusw2	equ	0xFDB
 18852                           fsr2h	equ	0xFDA
 18853                           fsr2l	equ	0xFD9
 18854                           status	equ	0xFD8
 18855                           
 18856 ;; *************** function _i2cHighScl *****************
 18857 ;; Defined at:
 18858 ;;		line 105 in file "../ECE3301L_Spring22_Final_Lab_Sample/I2C_Soft.c"
 18859 ;; Parameters:    Size  Location     Type
 18860 ;;		None
 18861 ;; Auto vars:     Size  Location     Type
 18862 ;;		None
 18863 ;; Return value:  Size  Location     Type
 18864 ;;		None               void
 18865 ;; Registers used:
 18866 ;;		wreg
 18867 ;; Tracked objects:
 18868 ;;		On entry : 0/0
 18869 ;;		On exit  : 0/0
 18870 ;;		Unchanged: 0/0
 18871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18876 ;;Total ram usage:        0 bytes
 18877 ;; Hardware stack levels used:    1
 18878 ;; Hardware stack levels required when called:    3
 18879 ;; This function calls:
 18880 ;;		Nothing
 18881 ;; This function is called by:
 18882 ;;		_I2C_Init
 18883 ;;		_I2C_Read
 18884 ;;		_I2C_Write
 18885 ;;		_i2cNack
 18886 ;;		_i2cAck
 18887 ;;		_I2C_Start
 18888 ;;		_I2C_ReStart
 18889 ;;		_I2C_Stop
 18890 ;; This function uses a non-reentrant model
 18891 ;;
 18892                           
 18893                           	psect	text115
 18894  003D2E                     __ptext115:
 18895                           	opt stack 0
 18896  003D2E                     _i2cHighScl:
 18897                           	opt stack 23
 18898                           
 18899                           ;I2C_Soft.c: 107: TRISBbits.RB4 = 1;
 18900                           
 18901                           ;incstack = 0
 18902  003D2E  8893               	bsf	3987,4,c	;volatile
 18903                           
 18904                           ;I2C_Soft.c: 108: _delay((unsigned long)((10)*(8000000/4000000.0)));
 18905  003D30  0E06               	movlw	6
 18906  003D32                     u7707:
 18907  003D32  2EE8               	decfsz	wreg,f,c
 18908  003D34  D7FE               	goto	u7707
 18909  003D36  D000               	nop2		;nop
 18910  003D38  0012               	return		;funcret
 18911  003D3A                     __end_of_i2cHighScl:
 18912                           	opt stack 0
 18913                           tblptru	equ	0xFF8
 18914                           tblptrh	equ	0xFF7
 18915                           tblptrl	equ	0xFF6
 18916                           tablat	equ	0xFF5
 18917                           prodh	equ	0xFF4
 18918                           prodl	equ	0xFF3
 18919                           intcon	equ	0xFF2
 18920                           intcon2	equ	0xFF1
 18921                           intcon3	equ	0xFF0
 18922                           postinc0	equ	0xFEE
 18923                           wreg	equ	0xFE8
 18924                           postdec1	equ	0xFE5
 18925                           plusw1	equ	0xFE3
 18926                           fsr1l	equ	0xFE1
 18927                           indf2	equ	0xFDF
 18928                           postinc2	equ	0xFDE
 18929                           postdec2	equ	0xFDD
 18930                           plusw2	equ	0xFDB
 18931                           fsr2h	equ	0xFDA
 18932                           fsr2l	equ	0xFD9
 18933                           status	equ	0xFD8
 18934                           
 18935 ;; *************** function _chkisr *****************
 18936 ;; Defined at:
 18937 ;;		line 38 in file "../ECE3301L_Spring22_Final_Lab_Sample/Interrupt.c"
 18938 ;; Parameters:    Size  Location     Type
 18939 ;;		None
 18940 ;; Auto vars:     Size  Location     Type
 18941 ;;		None
 18942 ;; Return value:  Size  Location     Type
 18943 ;;		None               void
 18944 ;; Registers used:
 18945 ;;		wreg, status,2, status,0, cstack
 18946 ;; Tracked objects:
 18947 ;;		On entry : 0/0
 18948 ;;		On exit  : 0/0
 18949 ;;		Unchanged: 0/0
 18950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18953 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18954 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18955 ;;Total ram usage:       14 bytes
 18956 ;; Hardware stack levels used:    1
 18957 ;; Hardware stack levels required when called:    2
 18958 ;; This function calls:
 18959 ;;		_INT0_isr
 18960 ;;		_INT1_isr
 18961 ;;		_INT2_isr
 18962 ;;		_TIMER1_isr
 18963 ;; This function is called by:
 18964 ;;		Interrupt level 2
 18965 ;; This function uses a non-reentrant model
 18966 ;;
 18967                           
 18968                           	psect	intcode
 18969  000008                     __pintcode:
 18970                           	opt stack 0
 18971  000008                     _chkisr:
 18972                           	opt stack 18
 18973                           
 18974                           ;incstack = 0
 18975  000008  CFFA F003          	movff	pclath,??_chkisr
 18976  00000C  CFFB F004          	movff	pclatu,??_chkisr+1
 18977  000010  CFE9 F005          	movff	fsr0l,??_chkisr+2
 18978  000014  EDD0  F016         	call	int_func,f	;refresh shadow registers
 18979                           pclatu	equ	0xFFB
 18980                           pclath	equ	0xFFA
 18981                           tblptru	equ	0xFF8
 18982                           tblptrh	equ	0xFF7
 18983                           tblptrl	equ	0xFF6
 18984                           tablat	equ	0xFF5
 18985                           prodh	equ	0xFF4
 18986                           prodl	equ	0xFF3
 18987                           intcon	equ	0xFF2
 18988                           intcon2	equ	0xFF1
 18989                           intcon3	equ	0xFF0
 18990                           postinc0	equ	0xFEE
 18991                           fsr0l	equ	0xFE9
 18992                           wreg	equ	0xFE8
 18993                           postdec1	equ	0xFE5
 18994                           plusw1	equ	0xFE3
 18995                           fsr1l	equ	0xFE1
 18996                           indf2	equ	0xFDF
 18997                           postinc2	equ	0xFDE
 18998                           postdec2	equ	0xFDD
 18999                           plusw2	equ	0xFDB
 19000                           fsr2h	equ	0xFDA
 19001                           fsr2l	equ	0xFD9
 19002                           status	equ	0xFD8
 19003                           
 19004                           	psect	intcode_body
 19005  002DA0                     __pintcode_body:
 19006                           	opt stack 18
 19007  002DA0                     int_func:
 19008                           	opt stack 18
 19009  002DA0  0006               	pop		; remove dummy address from shadow register refresh
 19010  002DA2  CFEA F006          	movff	fsr0h,??_chkisr+3
 19011  002DA6  CFE1 F007          	movff	fsr1l,??_chkisr+4
 19012  002DAA  CFE2 F008          	movff	fsr1h,??_chkisr+5
 19013  002DAE  CFD9 F009          	movff	fsr2l,??_chkisr+6
 19014  002DB2  CFDA F00A          	movff	fsr2h,??_chkisr+7
 19015  002DB6  CFF3 F00B          	movff	prodl,??_chkisr+8
 19016  002DBA  CFF4 F00C          	movff	prodh,??_chkisr+9
 19017  002DBE  CFF6 F00D          	movff	tblptrl,??_chkisr+10
 19018  002DC2  CFF7 F00E          	movff	tblptrh,??_chkisr+11
 19019  002DC6  CFF8 F00F          	movff	tblptru,??_chkisr+12
 19020  002DCA  CFF5 F010          	movff	tablat,??_chkisr+13
 19021                           
 19022                           ;Interrupt.c: 40: if (PIR1bits.TMR1IF == 1)
 19023  002DCE  A09E               	btfss	3998,0,c	;volatile
 19024  002DD0  D003               	goto	i2l7796
 19025                           
 19026                           ;Interrupt.c: 41: TIMER1_isr();
 19027  002DD2  EC9D  F01E         	call	_TIMER1_isr	;wreg free
 19028  002DD6  D000               	goto	i2l7796
 19029  002DD8                     i2l7796:
 19030                           
 19031                           ;Interrupt.c: 42: if (INTCONbits.INT0IF == 1)
 19032  002DD8  A2F2               	btfss	intcon,1,c	;volatile
 19033  002DDA  D003               	goto	i2l7800
 19034                           
 19035                           ;Interrupt.c: 43: INT0_isr();
 19036  002DDC  EC0F  F00B         	call	_INT0_isr	;wreg free
 19037  002DE0  D000               	goto	i2l7800
 19038  002DE2                     i2l7800:
 19039                           
 19040                           ;Interrupt.c: 44: if (INTCON3bits.INT1IF == 1)
 19041  002DE2  A0F0               	btfss	intcon3,0,c	;volatile
 19042  002DE4  D003               	goto	i2l7804
 19043                           
 19044                           ;Interrupt.c: 45: INT1_isr();
 19045  002DE6  ECBC  F01E         	call	_INT1_isr	;wreg free
 19046  002DEA  D000               	goto	i2l7804
 19047  002DEC                     i2l7804:
 19048                           
 19049                           ;Interrupt.c: 46: if (INTCON3bits.INT2IF == 1)
 19050  002DEC  A2F0               	btfss	intcon3,1,c	;volatile
 19051  002DEE  D003               	goto	i2l1121
 19052                           
 19053                           ;Interrupt.c: 47: INT2_isr();
 19054  002DF0  ECB7  F01E         	call	_INT2_isr	;wreg free
 19055  002DF4  D000               	goto	i2l1121
 19056  002DF6                     i2l1121:
 19057  002DF6  C010  FFF5         	movff	??_chkisr+13,tablat
 19058  002DFA  C00F  FFF8         	movff	??_chkisr+12,tblptru
 19059  002DFE  C00E  FFF7         	movff	??_chkisr+11,tblptrh
 19060  002E02  C00D  FFF6         	movff	??_chkisr+10,tblptrl
 19061  002E06  C00C  FFF4         	movff	??_chkisr+9,prodh
 19062  002E0A  C00B  FFF3         	movff	??_chkisr+8,prodl
 19063  002E0E  C00A  FFDA         	movff	??_chkisr+7,fsr2h
 19064  002E12  C009  FFD9         	movff	??_chkisr+6,fsr2l
 19065  002E16  C008  FFE2         	movff	??_chkisr+5,fsr1h
 19066  002E1A  C007  FFE1         	movff	??_chkisr+4,fsr1l
 19067  002E1E  C006  FFEA         	movff	??_chkisr+3,fsr0h
 19068  002E22  C005  FFE9         	movff	??_chkisr+2,fsr0l
 19069  002E26  C004  FFFB         	movff	??_chkisr+1,pclatu
 19070  002E2A  C003  FFFA         	movff	??_chkisr,pclath
 19071  002E2E  0011               	retfie		f
 19072  002E30                     __end_of_chkisr:
 19073                           	opt stack 0
 19074                           pclatu	equ	0xFFB
 19075                           pclath	equ	0xFFA
 19076                           tblptru	equ	0xFF8
 19077                           tblptrh	equ	0xFF7
 19078                           tblptrl	equ	0xFF6
 19079                           tablat	equ	0xFF5
 19080                           prodh	equ	0xFF4
 19081                           prodl	equ	0xFF3
 19082                           intcon	equ	0xFF2
 19083                           intcon2	equ	0xFF1
 19084                           intcon3	equ	0xFF0
 19085                           postinc0	equ	0xFEE
 19086                           fsr0h	equ	0xFEA
 19087                           fsr0l	equ	0xFE9
 19088                           wreg	equ	0xFE8
 19089                           postdec1	equ	0xFE5
 19090                           plusw1	equ	0xFE3
 19091                           fsr1h	equ	0xFE2
 19092                           fsr1l	equ	0xFE1
 19093                           indf2	equ	0xFDF
 19094                           postinc2	equ	0xFDE
 19095                           postdec2	equ	0xFDD
 19096                           plusw2	equ	0xFDB
 19097                           fsr2h	equ	0xFDA
 19098                           fsr2l	equ	0xFD9
 19099                           status	equ	0xFD8
 19100                           
 19101 ;; *************** function _TIMER1_isr *****************
 19102 ;; Defined at:
 19103 ;;		line 50 in file "../ECE3301L_Spring22_Final_Lab_Sample/Interrupt.c"
 19104 ;; Parameters:    Size  Location     Type
 19105 ;;		None
 19106 ;; Auto vars:     Size  Location     Type
 19107 ;;		None
 19108 ;; Return value:  Size  Location     Type
 19109 ;;		None               void
 19110 ;; Registers used:
 19111 ;;		wreg, status,2
 19112 ;; Tracked objects:
 19113 ;;		On entry : 0/0
 19114 ;;		On exit  : 0/0
 19115 ;;		Unchanged: 0/0
 19116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19121 ;;Total ram usage:        0 bytes
 19122 ;; Hardware stack levels used:    1
 19123 ;; This function calls:
 19124 ;;		Nothing
 19125 ;; This function is called by:
 19126 ;;		_chkisr
 19127 ;; This function uses a non-reentrant model
 19128 ;;
 19129                           
 19130                           	psect	text117
 19131  003D3A                     __ptext117:
 19132                           	opt stack 0
 19133  003D3A                     _TIMER1_isr:
 19134                           	opt stack 19
 19135                           
 19136                           ;Interrupt.c: 52: Nec_state = 0;
 19137                           
 19138                           ;incstack = 0
 19139  003D3A  0E00               	movlw	0
 19140  003D3C  6E51               	movwf	_Nec_state,c
 19141                           
 19142                           ;Interrupt.c: 53: INTCON2bits.INTEDG0 = 0;
 19143  003D3E  9CF1               	bcf	intcon2,6,c	;volatile
 19144                           
 19145                           ;Interrupt.c: 54: T1CONbits.TMR1ON = 0;
 19146  003D40  90CD               	bcf	4045,0,c	;volatile
 19147                           
 19148                           ;Interrupt.c: 55: PIR1bits.TMR1IF = 0;
 19149  003D42  909E               	bcf	3998,0,c	;volatile
 19150  003D44  0012               	return		;funcret
 19151  003D46                     __end_of_TIMER1_isr:
 19152                           	opt stack 0
 19153                           pclatu	equ	0xFFB
 19154                           pclath	equ	0xFFA
 19155                           tblptru	equ	0xFF8
 19156                           tblptrh	equ	0xFF7
 19157                           tblptrl	equ	0xFF6
 19158                           tablat	equ	0xFF5
 19159                           prodh	equ	0xFF4
 19160                           prodl	equ	0xFF3
 19161                           intcon	equ	0xFF2
 19162                           intcon2	equ	0xFF1
 19163                           intcon3	equ	0xFF0
 19164                           postinc0	equ	0xFEE
 19165                           fsr0h	equ	0xFEA
 19166                           fsr0l	equ	0xFE9
 19167                           wreg	equ	0xFE8
 19168                           postdec1	equ	0xFE5
 19169                           plusw1	equ	0xFE3
 19170                           fsr1h	equ	0xFE2
 19171                           fsr1l	equ	0xFE1
 19172                           indf2	equ	0xFDF
 19173                           postinc2	equ	0xFDE
 19174                           postdec2	equ	0xFDD
 19175                           plusw2	equ	0xFDB
 19176                           fsr2h	equ	0xFDA
 19177                           fsr2l	equ	0xFD9
 19178                           status	equ	0xFD8
 19179                           
 19180 ;; *************** function _INT2_isr *****************
 19181 ;; Defined at:
 19182 ;;		line 154 in file "../ECE3301L_Spring22_Final_Lab_Sample/Interrupt.c"
 19183 ;; Parameters:    Size  Location     Type
 19184 ;;		None
 19185 ;; Auto vars:     Size  Location     Type
 19186 ;;		None
 19187 ;; Return value:  Size  Location     Type
 19188 ;;		None               void
 19189 ;; Registers used:
 19190 ;;		wreg, status,2
 19191 ;; Tracked objects:
 19192 ;;		On entry : 0/0
 19193 ;;		On exit  : 0/0
 19194 ;;		Unchanged: 0/0
 19195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19200 ;;Total ram usage:        0 bytes
 19201 ;; Hardware stack levels used:    1
 19202 ;; This function calls:
 19203 ;;		Nothing
 19204 ;; This function is called by:
 19205 ;;		_chkisr
 19206 ;; This function uses a non-reentrant model
 19207 ;;
 19208                           
 19209                           	psect	text118
 19210  003D6E                     __ptext118:
 19211                           	opt stack 0
 19212  003D6E                     _INT2_isr:
 19213                           	opt stack 19
 19214                           
 19215                           ;Interrupt.c: 156: INTCON3bits.INT2IF = 0;
 19216                           
 19217                           ;incstack = 0
 19218  003D6E  92F0               	bcf	intcon3,1,c	;volatile
 19219                           
 19220                           ;Interrupt.c: 157: INT2_flag = 1;
 19221  003D70  0E01               	movlw	1
 19222  003D72  0100               	movlb	0	; () banked
 19223  003D74  6FF6               	movwf	_INT2_flag& (0+255),b
 19224                           
 19225                           ; BSR set to: 0
 19226  003D76  0012               	return		;funcret
 19227  003D78                     __end_of_INT2_isr:
 19228                           	opt stack 0
 19229                           pclatu	equ	0xFFB
 19230                           pclath	equ	0xFFA
 19231                           tblptru	equ	0xFF8
 19232                           tblptrh	equ	0xFF7
 19233                           tblptrl	equ	0xFF6
 19234                           tablat	equ	0xFF5
 19235                           prodh	equ	0xFF4
 19236                           prodl	equ	0xFF3
 19237                           intcon	equ	0xFF2
 19238                           intcon2	equ	0xFF1
 19239                           intcon3	equ	0xFF0
 19240                           postinc0	equ	0xFEE
 19241                           fsr0h	equ	0xFEA
 19242                           fsr0l	equ	0xFE9
 19243                           wreg	equ	0xFE8
 19244                           postdec1	equ	0xFE5
 19245                           plusw1	equ	0xFE3
 19246                           fsr1h	equ	0xFE2
 19247                           fsr1l	equ	0xFE1
 19248                           indf2	equ	0xFDF
 19249                           postinc2	equ	0xFDE
 19250                           postdec2	equ	0xFDD
 19251                           plusw2	equ	0xFDB
 19252                           fsr2h	equ	0xFDA
 19253                           fsr2l	equ	0xFD9
 19254                           status	equ	0xFD8
 19255                           
 19256 ;; *************** function _INT1_isr *****************
 19257 ;; Defined at:
 19258 ;;		line 148 in file "../ECE3301L_Spring22_Final_Lab_Sample/Interrupt.c"
 19259 ;; Parameters:    Size  Location     Type
 19260 ;;		None
 19261 ;; Auto vars:     Size  Location     Type
 19262 ;;		None
 19263 ;; Return value:  Size  Location     Type
 19264 ;;		None               void
 19265 ;; Registers used:
 19266 ;;		wreg, status,2
 19267 ;; Tracked objects:
 19268 ;;		On entry : 0/0
 19269 ;;		On exit  : 0/0
 19270 ;;		Unchanged: 0/0
 19271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19276 ;;Total ram usage:        0 bytes
 19277 ;; Hardware stack levels used:    1
 19278 ;; This function calls:
 19279 ;;		Nothing
 19280 ;; This function is called by:
 19281 ;;		_chkisr
 19282 ;; This function uses a non-reentrant model
 19283 ;;
 19284                           
 19285                           	psect	text119
 19286  003D78                     __ptext119:
 19287                           	opt stack 0
 19288  003D78                     _INT1_isr:
 19289                           	opt stack 19
 19290                           
 19291                           ;Interrupt.c: 150: INTCON3bits.INT1IF = 0;
 19292                           
 19293                           ; BSR set to: 0
 19294                           ;incstack = 0
 19295  003D78  90F0               	bcf	intcon3,0,c	;volatile
 19296                           
 19297                           ;Interrupt.c: 151: INT1_flag = 1;
 19298  003D7A  0E01               	movlw	1
 19299  003D7C  0100               	movlb	0	; () banked
 19300  003D7E  6FF5               	movwf	_INT1_flag& (0+255),b
 19301                           
 19302                           ; BSR set to: 0
 19303  003D80  0012               	return		;funcret
 19304  003D82                     __end_of_INT1_isr:
 19305                           	opt stack 0
 19306                           pclatu	equ	0xFFB
 19307                           pclath	equ	0xFFA
 19308                           tblptru	equ	0xFF8
 19309                           tblptrh	equ	0xFF7
 19310                           tblptrl	equ	0xFF6
 19311                           tablat	equ	0xFF5
 19312                           prodh	equ	0xFF4
 19313                           prodl	equ	0xFF3
 19314                           intcon	equ	0xFF2
 19315                           intcon2	equ	0xFF1
 19316                           intcon3	equ	0xFF0
 19317                           postinc0	equ	0xFEE
 19318                           fsr0h	equ	0xFEA
 19319                           fsr0l	equ	0xFE9
 19320                           wreg	equ	0xFE8
 19321                           postdec1	equ	0xFE5
 19322                           plusw1	equ	0xFE3
 19323                           fsr1h	equ	0xFE2
 19324                           fsr1l	equ	0xFE1
 19325                           indf2	equ	0xFDF
 19326                           postinc2	equ	0xFDE
 19327                           postdec2	equ	0xFDD
 19328                           plusw2	equ	0xFDB
 19329                           fsr2h	equ	0xFDA
 19330                           fsr2l	equ	0xFD9
 19331                           status	equ	0xFD8
 19332                           
 19333 ;; *************** function _INT0_isr *****************
 19334 ;; Defined at:
 19335 ;;		line 64 in file "../ECE3301L_Spring22_Final_Lab_Sample/Interrupt.c"
 19336 ;; Parameters:    Size  Location     Type
 19337 ;;		None
 19338 ;; Auto vars:     Size  Location     Type
 19339 ;;		None
 19340 ;; Return value:  Size  Location     Type
 19341 ;;		None               void
 19342 ;; Registers used:
 19343 ;;		wreg, status,2, status,0, cstack
 19344 ;; Tracked objects:
 19345 ;;		On entry : 0/0
 19346 ;;		On exit  : 0/0
 19347 ;;		Unchanged: 0/0
 19348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19353 ;;Total ram usage:        2 bytes
 19354 ;; Hardware stack levels used:    1
 19355 ;; Hardware stack levels required when called:    1
 19356 ;; This function calls:
 19357 ;;		_force_nec_state0
 19358 ;; This function is called by:
 19359 ;;		_chkisr
 19360 ;; This function uses a non-reentrant model
 19361 ;;
 19362                           
 19363                           	psect	text120
 19364  00161E                     __ptext120:
 19365                           	opt stack 0
 19366  00161E                     _INT0_isr:
 19367                           	opt stack 18
 19368                           
 19369                           ;Interrupt.c: 67: INTCONbits.INT0IF = 0;
 19370                           
 19371                           ; BSR set to: 0
 19372                           ;incstack = 0
 19373  00161E  92F2               	bcf	intcon,1,c	;volatile
 19374                           
 19375                           ;Interrupt.c: 68: if (Nec_state != 0)
 19376  001620  5051               	movf	_Nec_state,w,c
 19377  001622  B4D8               	btfsc	status,2,c
 19378  001624  D0A4               	goto	i2l7466
 19379                           
 19380                           ;Interrupt.c: 69: {
 19381                           ;Interrupt.c: 70: Time_Elapsed = (TMR1H << 8) | TMR1L;
 19382  001626  50CE               	movf	4046,w,c	;volatile
 19383  001628  CFCF F001          	movff	4047,??_INT0_isr	;volatile
 19384  00162C  6A02               	clrf	(??_INT0_isr+1)& (0+255),c
 19385  00162E  C001  F002         	movff	??_INT0_isr,??_INT0_isr+1
 19386  001632  6A01               	clrf	??_INT0_isr,c
 19387  001634  1001               	iorwf	??_INT0_isr,w,c
 19388  001636  6E4A               	movwf	_Time_Elapsed,c
 19389  001638  5002               	movf	??_INT0_isr+1,w,c
 19390  00163A  6E4B               	movwf	_Time_Elapsed+1,c
 19391                           
 19392                           ;Interrupt.c: 71: TMR1H = 0;
 19393  00163C  0E00               	movlw	0
 19394  00163E  6ECF               	movwf	4047,c	;volatile
 19395                           
 19396                           ;Interrupt.c: 72: TMR1L = 0;
 19397  001640  0E00               	movlw	0
 19398  001642  6ECE               	movwf	4046,c	;volatile
 19399                           
 19400                           ;Interrupt.c: 73: }
 19401                           ;Interrupt.c: 75: switch(Nec_state)
 19402  001644  D094               	goto	i2l7466
 19403  001646                     i2l7394:
 19404                           
 19405                           ;Interrupt.c: 78: {
 19406                           ;Interrupt.c: 80: TMR1H = 0;
 19407  001646  0E00               	movlw	0
 19408  001648  6ECF               	movwf	4047,c	;volatile
 19409                           
 19410                           ;Interrupt.c: 81: TMR1L = 0;
 19411  00164A  0E00               	movlw	0
 19412  00164C  6ECE               	movwf	4046,c	;volatile
 19413                           
 19414                           ;Interrupt.c: 82: PIR1bits.TMR1IF = 0;
 19415  00164E  909E               	bcf	3998,0,c	;volatile
 19416                           
 19417                           ;Interrupt.c: 83: T1CON= 0x90;
 19418  001650  0E90               	movlw	144
 19419  001652  6ECD               	movwf	4045,c	;volatile
 19420                           
 19421                           ;Interrupt.c: 84: T1CONbits.TMR1ON = 1;
 19422  001654  80CD               	bsf	4045,0,c	;volatile
 19423                           
 19424                           ;Interrupt.c: 85: bit_count = 0;
 19425  001656  0E00               	movlw	0
 19426  001658  0100               	movlb	0	; () banked
 19427  00165A  6FFC               	movwf	_bit_count& (0+255),b
 19428                           
 19429                           ;Interrupt.c: 86: Nec_code = 0;
 19430  00165C  0E00               	movlw	0
 19431  00165E  0100               	movlb	0	; () banked
 19432  001660  6FE2               	movwf	_Nec_code& (0+255),b
 19433  001662  0E00               	movlw	0
 19434  001664  6FE3               	movwf	(_Nec_code+1)& (0+255),b
 19435  001666  0E00               	movlw	0
 19436  001668  6FE4               	movwf	(_Nec_code+2)& (0+255),b
 19437  00166A  0E00               	movlw	0
 19438  00166C  6FE5               	movwf	(_Nec_code+3)& (0+255),b
 19439                           
 19440                           ;Interrupt.c: 87: Nec_state = 1;
 19441  00166E  0E01               	movlw	1
 19442  001670  6E51               	movwf	_Nec_state,c
 19443  001672  D07B               	goto	i2l7460
 19444                           
 19445                           ; BSR set to: 0
 19446                           ;Interrupt.c: 89: return;
 19447                           
 19448                           ; BSR set to: 0
 19449                           ;Interrupt.c: 88: INTCON2bits.INTEDG0 = 1;
 19450  001674  D08D               	goto	i2l1133
 19451  001676                     i2l7404:
 19452                           
 19453                           ;Interrupt.c: 93: {
 19454                           ;Interrupt.c: 94: if ((Time_Elapsed > 8500) && (Time_Elapsed < 9500))
 19455  001676  0E35               	movlw	53
 19456  001678  5C4A               	subwf	_Time_Elapsed,w,c
 19457  00167A  0E21               	movlw	33
 19458  00167C  584B               	subwfb	_Time_Elapsed+1,w,c
 19459  00167E  A0D8               	btfss	status,0,c
 19460  001680  D009               	goto	i2l7410
 19461  001682  0E1C               	movlw	28
 19462  001684  5C4A               	subwf	_Time_Elapsed,w,c
 19463  001686  0E25               	movlw	37
 19464  001688  584B               	subwfb	_Time_Elapsed+1,w,c
 19465  00168A  B0D8               	btfsc	status,0,c
 19466  00168C  D003               	goto	i2l7410
 19467                           
 19468                           ;Interrupt.c: 95: Nec_state = 2;
 19469  00168E  0E02               	movlw	2
 19470  001690  6E51               	movwf	_Nec_state,c
 19471  001692  D02A               	goto	i2l7436
 19472  001694                     i2l7410:
 19473                           
 19474                           ;Interrupt.c: 96: else
 19475                           ;Interrupt.c: 97: force_nec_state0();
 19476  001694  ECCD  F01E         	call	_force_nec_state0	;wreg free
 19477  001698  D027               	goto	i2l7436
 19478  00169A  D026               	goto	i2l7436
 19479                           
 19480                           ;Interrupt.c: 99: return;
 19481                           
 19482                           ;Interrupt.c: 98: INTCON2bits.INTEDG0 = 0;
 19483  00169C  D079               	goto	i2l1133
 19484  00169E                     i2l7416:
 19485                           
 19486                           ;Interrupt.c: 103: {
 19487                           ;Interrupt.c: 104: if ((Time_Elapsed > 4000) && (Time_Elapsed < 5000))
 19488  00169E  0EA1               	movlw	161
 19489  0016A0  5C4A               	subwf	_Time_Elapsed,w,c
 19490  0016A2  0E0F               	movlw	15
 19491  0016A4  584B               	subwfb	_Time_Elapsed+1,w,c
 19492  0016A6  A0D8               	btfss	status,0,c
 19493  0016A8  D009               	goto	i2l7422
 19494  0016AA  0E88               	movlw	136
 19495  0016AC  5C4A               	subwf	_Time_Elapsed,w,c
 19496  0016AE  0E13               	movlw	19
 19497  0016B0  584B               	subwfb	_Time_Elapsed+1,w,c
 19498  0016B2  B0D8               	btfsc	status,0,c
 19499  0016B4  D003               	goto	i2l7422
 19500  0016B6                     
 19501                           ;Interrupt.c: 105: Nec_state = 3;
 19502  0016B6  0E03               	movlw	3
 19503  0016B8  6E51               	movwf	_Nec_state,c
 19504  0016BA  D057               	goto	i2l7460
 19505  0016BC                     i2l7422:
 19506                           
 19507                           ;Interrupt.c: 106: else
 19508                           ;Interrupt.c: 107: force_nec_state0();
 19509  0016BC  ECCD  F01E         	call	_force_nec_state0	;wreg free
 19510  0016C0  D054               	goto	i2l7460
 19511  0016C2  D053               	goto	i2l7460
 19512                           
 19513                           ;Interrupt.c: 109: return;
 19514                           
 19515                           ;Interrupt.c: 108: INTCON2bits.INTEDG0 = 1;
 19516  0016C4  D065               	goto	i2l1133
 19517  0016C6                     i2l7428:
 19518                           
 19519                           ;Interrupt.c: 113: {
 19520                           ;Interrupt.c: 114: if ((Time_Elapsed > 400) && (Time_Elapsed < 700))
 19521  0016C6  0E91               	movlw	145
 19522  0016C8  5C4A               	subwf	_Time_Elapsed,w,c
 19523  0016CA  0E01               	movlw	1
 19524  0016CC  584B               	subwfb	_Time_Elapsed+1,w,c
 19525  0016CE  A0D8               	btfss	status,0,c
 19526  0016D0  D008               	goto	i2l7434
 19527  0016D2  0EBC               	movlw	188
 19528  0016D4  5C4A               	subwf	_Time_Elapsed,w,c
 19529  0016D6  0E02               	movlw	2
 19530  0016D8  584B               	subwfb	_Time_Elapsed+1,w,c
 19531  0016DA  B0D8               	btfsc	status,0,c
 19532  0016DC  D002               	goto	i2l7434
 19533                           
 19534                           ;Interrupt.c: 115: Nec_state = 4;
 19535  0016DE  0E04               	movlw	4
 19536  0016E0  D7D7               	goto	L10
 19537  0016E2                     i2l7434:
 19538                           
 19539                           ;Interrupt.c: 116: else
 19540                           ;Interrupt.c: 117: force_nec_state0();
 19541  0016E2  ECCD  F01E         	call	_force_nec_state0	;wreg free
 19542  0016E6  D000               	goto	i2l7436
 19543  0016E8                     i2l7436:
 19544                           
 19545                           ;Interrupt.c: 118: INTCON2bits.INTEDG0 = 0;
 19546  0016E8  9CF1               	bcf	intcon2,6,c	;volatile
 19547                           
 19548                           ;Interrupt.c: 119: return;
 19549  0016EA  D052               	goto	i2l1133
 19550  0016EC                     i2l7440:
 19551                           
 19552                           ;Interrupt.c: 123: {
 19553                           ;Interrupt.c: 124: if (Time_Elapsed > 400 && Time_Elapsed < 1800)
 19554  0016EC  0E91               	movlw	145
 19555  0016EE  5C4A               	subwf	_Time_Elapsed,w,c
 19556  0016F0  0E01               	movlw	1
 19557  0016F2  584B               	subwfb	_Time_Elapsed+1,w,c
 19558  0016F4  A0D8               	btfss	status,0,c
 19559  0016F6  D036               	goto	i2l7458
 19560  0016F8  0E08               	movlw	8
 19561  0016FA  5C4A               	subwf	_Time_Elapsed,w,c
 19562  0016FC  0E07               	movlw	7
 19563  0016FE  584B               	subwfb	_Time_Elapsed+1,w,c
 19564  001700  B0D8               	btfsc	status,0,c
 19565  001702  D030               	goto	i2l7458
 19566                           
 19567                           ;Interrupt.c: 125: {
 19568                           ;Interrupt.c: 126: Nec_code = Nec_code << 1;
 19569  001704  90D8               	bcf	status,0,c
 19570  001706  0100               	movlb	0	; () banked
 19571  001708  35E2               	rlcf	_Nec_code& (0+255),w,b
 19572  00170A  0100               	movlb	0	; () banked
 19573  00170C  6FE2               	movwf	_Nec_code& (0+255),b
 19574  00170E  0100               	movlb	0	; () banked
 19575  001710  35E3               	rlcf	(_Nec_code+1)& (0+255),w,b
 19576  001712  0100               	movlb	0	; () banked
 19577  001714  6FE3               	movwf	(_Nec_code+1)& (0+255),b
 19578  001716  0100               	movlb	0	; () banked
 19579  001718  35E4               	rlcf	(_Nec_code+2)& (0+255),w,b
 19580  00171A  0100               	movlb	0	; () banked
 19581  00171C  6FE4               	movwf	(_Nec_code+2)& (0+255),b
 19582  00171E  0100               	movlb	0	; () banked
 19583  001720  35E5               	rlcf	(_Nec_code+3)& (0+255),w,b
 19584  001722  0100               	movlb	0	; () banked
 19585  001724  6FE5               	movwf	(_Nec_code+3)& (0+255),b
 19586                           
 19587                           ;Interrupt.c: 127: if (Time_Elapsed > 1000)
 19588  001726  0EE9               	movlw	233
 19589  001728  5C4A               	subwf	_Time_Elapsed,w,c
 19590  00172A  0E03               	movlw	3
 19591  00172C  584B               	subwfb	_Time_Elapsed+1,w,c
 19592  00172E  A0D8               	btfss	status,0,c
 19593  001730  D008               	goto	i2l7448
 19594                           
 19595                           ; BSR set to: 0
 19596                           ;Interrupt.c: 128: Nec_code++;
 19597  001732  0E01               	movlw	1
 19598  001734  0100               	movlb	0	; () banked
 19599  001736  27E2               	addwf	_Nec_code& (0+255),f,b
 19600  001738  0E00               	movlw	0
 19601  00173A  23E3               	addwfc	(_Nec_code+1)& (0+255),f,b
 19602  00173C  23E4               	addwfc	(_Nec_code+2)& (0+255),f,b
 19603  00173E  23E5               	addwfc	(_Nec_code+3)& (0+255),f,b
 19604  001740  D000               	goto	i2l7448
 19605  001742                     i2l7448:
 19606                           
 19607                           ; BSR set to: 0
 19608                           ;Interrupt.c: 130: bit_count++;
 19609  001742  0100               	movlb	0	; () banked
 19610  001744  2BFC               	incf	_bit_count& (0+255),f,b
 19611                           
 19612                           ; BSR set to: 0
 19613                           ;Interrupt.c: 131: if (bit_count > 31)
 19614  001746  0E1F               	movlw	31
 19615  001748  0100               	movlb	0	; () banked
 19616  00174A  65FC               	cpfsgt	_bit_count& (0+255),b
 19617  00174C  D7B4               	goto	L11
 19618                           
 19619                           ; BSR set to: 0
 19620                           ;Interrupt.c: 132: {
 19621                           ;Interrupt.c: 133: nec_ok = 1;
 19622  00174E  0E00               	movlw	0
 19623  001750  0100               	movlb	0	; () banked
 19624  001752  6FF2               	movwf	(_nec_ok+1)& (0+255),b
 19625  001754  0E01               	movlw	1
 19626  001756  6FF1               	movwf	_nec_ok& (0+255),b
 19627                           
 19628                           ; BSR set to: 0
 19629                           ;Interrupt.c: 134: Nec_code1 = (char) ((Nec_code >> 8));
 19630  001758  C0E3  F0FA         	movff	_Nec_code+1,_Nec_code1
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;Interrupt.c: 135: INTCONbits.INT0IE = 0;
 19634  00175C  98F2               	bcf	intcon,4,c	;volatile
 19635                           
 19636                           ;Interrupt.c: 136: Nec_state = 0;
 19637  00175E  0E00               	movlw	0
 19638  001760  6E51               	movwf	_Nec_state,c
 19639  001762  D7A9               	goto	L11
 19640  001764                     i2l7458:
 19641                           
 19642                           ;Interrupt.c: 140: else
 19643                           ;Interrupt.c: 141: force_nec_state0();
 19644  001764  ECCD  F01E         	call	_force_nec_state0	;wreg free
 19645  001768  D000               	goto	i2l7460
 19646  00176A                     i2l7460:
 19647                           
 19648                           ;Interrupt.c: 142: INTCON2bits.INTEDG0 = 1;
 19649  00176A  8CF1               	bsf	intcon2,6,c	;volatile
 19650                           
 19651                           ;Interrupt.c: 144: }
 19652                           ;Interrupt.c: 145: }
 19653                           
 19654                           ;Interrupt.c: 143: return;
 19655  00176C  D011               	goto	i2l1133
 19656  00176E                     i2l7466:
 19657  00176E  5051               	movf	_Nec_state,w,c
 19658                           
 19659                           ; Switch size 1, requested type "space"
 19660                           ; Number of cases is 5, Range of values is 0 to 4
 19661                           ; switch strategies available:
 19662                           ; Name         Instructions Cycles
 19663                           ; simple_byte           16     9 (average)
 19664                           ;	Chosen strategy is simple_byte
 19665  001770  0A00               	xorlw	0	; case 0
 19666  001772  B4D8               	btfsc	status,2,c
 19667  001774  D768               	goto	i2l7394
 19668  001776  0A01               	xorlw	1	; case 1
 19669  001778  B4D8               	btfsc	status,2,c
 19670  00177A  D77D               	goto	i2l7404
 19671  00177C  0A03               	xorlw	3	; case 2
 19672  00177E  B4D8               	btfsc	status,2,c
 19673  001780  D78E               	goto	i2l7416
 19674  001782  0A01               	xorlw	1	; case 3
 19675  001784  B4D8               	btfsc	status,2,c
 19676  001786  D79F               	goto	i2l7428
 19677  001788  0A07               	xorlw	7	; case 4
 19678  00178A  B4D8               	btfsc	status,2,c
 19679  00178C  D7AF               	goto	i2l7440
 19680  00178E  D000               	goto	i2l1133
 19681  001790                     i2l1133:
 19682  001790  0012               	return		;funcret
 19683  001792                     __end_of_INT0_isr:
 19684                           	opt stack 0
 19685                           pclatu	equ	0xFFB
 19686                           pclath	equ	0xFFA
 19687                           tblptru	equ	0xFF8
 19688                           tblptrh	equ	0xFF7
 19689                           tblptrl	equ	0xFF6
 19690                           tablat	equ	0xFF5
 19691                           prodh	equ	0xFF4
 19692                           prodl	equ	0xFF3
 19693                           intcon	equ	0xFF2
 19694                           intcon2	equ	0xFF1
 19695                           intcon3	equ	0xFF0
 19696                           postinc0	equ	0xFEE
 19697                           fsr0h	equ	0xFEA
 19698                           fsr0l	equ	0xFE9
 19699                           wreg	equ	0xFE8
 19700                           postdec1	equ	0xFE5
 19701                           plusw1	equ	0xFE3
 19702                           fsr1h	equ	0xFE2
 19703                           fsr1l	equ	0xFE1
 19704                           indf2	equ	0xFDF
 19705                           postinc2	equ	0xFDE
 19706                           postdec2	equ	0xFDD
 19707                           plusw2	equ	0xFDB
 19708                           fsr2h	equ	0xFDA
 19709                           fsr2l	equ	0xFD9
 19710                           status	equ	0xFD8
 19711                           
 19712 ;; *************** function _force_nec_state0 *****************
 19713 ;; Defined at:
 19714 ;;		line 58 in file "../ECE3301L_Spring22_Final_Lab_Sample/Interrupt.c"
 19715 ;; Parameters:    Size  Location     Type
 19716 ;;		None
 19717 ;; Auto vars:     Size  Location     Type
 19718 ;;		None
 19719 ;; Return value:  Size  Location     Type
 19720 ;;		None               void
 19721 ;; Registers used:
 19722 ;;		wreg, status,2
 19723 ;; Tracked objects:
 19724 ;;		On entry : 0/0
 19725 ;;		On exit  : 0/0
 19726 ;;		Unchanged: 0/0
 19727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19732 ;;Total ram usage:        0 bytes
 19733 ;; Hardware stack levels used:    1
 19734 ;; This function calls:
 19735 ;;		Nothing
 19736 ;; This function is called by:
 19737 ;;		_INT0_isr
 19738 ;; This function uses a non-reentrant model
 19739 ;;
 19740                           
 19741                           	psect	text121
 19742  003D9A                     __ptext121:
 19743                           	opt stack 0
 19744  003D9A                     _force_nec_state0:
 19745                           	opt stack 18
 19746                           
 19747                           ;Interrupt.c: 60: Nec_state=0;
 19748                           
 19749                           ;incstack = 0
 19750  003D9A  0E00               	movlw	0
 19751  003D9C  6E51               	movwf	_Nec_state,c
 19752                           
 19753                           ;Interrupt.c: 61: T1CONbits.TMR1ON = 0;
 19754  003D9E  90CD               	bcf	4045,0,c	;volatile
 19755  003DA0  0012               	return		;funcret
 19756  003DA2                     __end_of_force_nec_state0:
 19757                           	opt stack 0
 19758                           pclatu	equ	0xFFB
 19759                           pclath	equ	0xFFA
 19760                           tblptru	equ	0xFF8
 19761                           tblptrh	equ	0xFF7
 19762                           tblptrl	equ	0xFF6
 19763                           tablat	equ	0xFF5
 19764                           prodh	equ	0xFF4
 19765                           prodl	equ	0xFF3
 19766                           intcon	equ	0xFF2
 19767                           intcon2	equ	0xFF1
 19768                           intcon3	equ	0xFF0
 19769                           postinc0	equ	0xFEE
 19770                           fsr0h	equ	0xFEA
 19771                           fsr0l	equ	0xFE9
 19772                           wreg	equ	0xFE8
 19773                           postdec1	equ	0xFE5
 19774                           plusw1	equ	0xFE3
 19775                           fsr1h	equ	0xFE2
 19776                           fsr1l	equ	0xFE1
 19777                           indf2	equ	0xFDF
 19778                           postinc2	equ	0xFDE
 19779                           postdec2	equ	0xFDD
 19780                           plusw2	equ	0xFDB
 19781                           fsr2h	equ	0xFDA
 19782                           fsr2l	equ	0xFD9
 19783                           status	equ	0xFD8
 19784                           pclatu	equ	0xFFB
 19785                           pclath	equ	0xFFA
 19786                           tblptru	equ	0xFF8
 19787                           tblptrh	equ	0xFF7
 19788                           tblptrl	equ	0xFF6
 19789                           tablat	equ	0xFF5
 19790                           prodh	equ	0xFF4
 19791                           prodl	equ	0xFF3
 19792                           intcon	equ	0xFF2
 19793                           intcon2	equ	0xFF1
 19794                           intcon3	equ	0xFF0
 19795                           postinc0	equ	0xFEE
 19796                           fsr0h	equ	0xFEA
 19797                           fsr0l	equ	0xFE9
 19798                           wreg	equ	0xFE8
 19799                           postdec1	equ	0xFE5
 19800                           plusw1	equ	0xFE3
 19801                           fsr1h	equ	0xFE2
 19802                           fsr1l	equ	0xFE1
 19803                           indf2	equ	0xFDF
 19804                           postinc2	equ	0xFDE
 19805                           postdec2	equ	0xFDD
 19806                           plusw2	equ	0xFDB
 19807                           fsr2h	equ	0xFDA
 19808                           fsr2l	equ	0xFD9
 19809                           status	equ	0xFD8
 19810                           
 19811                           	psect	rparam
 19812  0000                     pclatu	equ	0xFFB
 19813                           pclath	equ	0xFFA
 19814                           tblptru	equ	0xFF8
 19815                           tblptrh	equ	0xFF7
 19816                           tblptrl	equ	0xFF6
 19817                           tablat	equ	0xFF5
 19818                           prodh	equ	0xFF4
 19819                           prodl	equ	0xFF3
 19820                           intcon	equ	0xFF2
 19821                           intcon2	equ	0xFF1
 19822                           intcon3	equ	0xFF0
 19823                           postinc0	equ	0xFEE
 19824                           fsr0h	equ	0xFEA
 19825                           fsr0l	equ	0xFE9
 19826                           wreg	equ	0xFE8
 19827                           postdec1	equ	0xFE5
 19828                           plusw1	equ	0xFE3
 19829                           fsr1h	equ	0xFE2
 19830                           fsr1l	equ	0xFE1
 19831                           indf2	equ	0xFDF
 19832                           postinc2	equ	0xFDE
 19833                           postdec2	equ	0xFDD
 19834                           plusw2	equ	0xFDB
 19835                           fsr2h	equ	0xFDA
 19836                           fsr2l	equ	0xFD9
 19837                           status	equ	0xFD8


Data Sizes:
    Strings     332
    Constant    493
    Data        183
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     67     111
    BANK0           128      3     128
    BANK1           256     15      98
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), setup_date(BANK0[9]), setup_time(BANK0[9]), setup_heater_set_text(BANK0[5]), 
		 -> setup_alarm_time(BANK0[9]), RPM_Txt(BANK0[5]), Volt_Txt(BANK0[6]), DC_Txt(BANK0[4]), 
		 -> RTC_ALARM_Txt(BANK0[2]), Heater_SW_Txt(BANK0[4]), Heater_Set_Temp_Txt(BANK0[5]), Alarm_SW_Txt(BANK0[4]), 
		 -> alarm_time(BANK0[9]), date(BANK0[9]), time(BANK0[9]), tempF(BANK0[4]), 
		 -> tempC(BANK0[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), setup_date(BANK0[9]), setup_time(BANK0[9]), setup_heater_set_text(BANK0[5]), 
		 -> setup_alarm_time(BANK0[9]), RPM_Txt(BANK0[5]), Volt_Txt(BANK0[6]), DC_Txt(BANK0[4]), 
		 -> RTC_ALARM_Txt(BANK0[2]), Heater_SW_Txt(BANK0[4]), Heater_Set_Temp_Txt(BANK0[5]), Alarm_SW_Txt(BANK0[4]), 
		 -> alarm_time(BANK0[9]), date(BANK0[9]), time(BANK0[9]), tempF(BANK0[4]), 
		 -> tempC(BANK0[4]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_35(CODE[5]), STR_34(CODE[5]), STR_33(CODE[12]), STR_32(CODE[19]), 
		 -> STR_31(CODE[16]), STR_30(CODE[10]), STR_29(CODE[11]), STR_28(CODE[19]), 
		 -> STR_26(CODE[5]), STR_25(CODE[8]), STR_24(CODE[8]), STR_23(CODE[18]), 
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> STR_18(CODE[4]), STR_17(CODE[5]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[7]), STR_13(CODE[13]), STR_12(CODE[9]), STR_11(CODE[11]), 
		 -> STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[3]), 
		 -> STR_6(CODE[13]), STR_5(CODE[20]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), Heater_SW_Txt(BANK0[4]), Alarm_SW_Txt(BANK0[4]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), Heater_SW_Txt(BANK0[4]), Alarm_SW_Txt(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_36(CODE[22]), STR_27(CODE[11]), STR_4(CODE[20]), STR_3(CODE[24]), 
		 -> STR_2(CODE[21]), STR_1(CODE[30]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    drawtext@_text	PTR unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), setup_date(BANK0[9]), setup_time(BANK0[9]), setup_heater_set_text(BANK0[5]), 
		 -> setup_alarm_time(BANK0[9]), RPM_Txt(BANK0[5]), Volt_Txt(BANK0[6]), DC_Txt(BANK0[4]), 
		 -> RTC_ALARM_Txt(BANK0[2]), Heater_SW_Txt(BANK0[4]), Heater_Set_Temp_Txt(BANK0[5]), Alarm_SW_Txt(BANK0[4]), 
		 -> alarm_time(BANK0[9]), date(BANK0[9]), time(BANK0[9]), tempF(BANK0[4]), 
		 -> tempC(BANK0[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), Heater_SW_Txt(BANK0[4]), Alarm_SW_Txt(BANK0[4]), 

    txt	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _read_volt->___ftmul
    ___lwtoft->___ftpack
    _Update_Screen->_drawtext
    _Test_Alarm->_do_update_pwm
    _Set_RGB_Color->_Wait_One_Sec
    _DS3231_Turn_On_Alarm->_DS3231_Init
    _DS3231_Turn_Off_Alarm->_DS3231_Init
    _DS3231_Init->_I2C_Write_Address_Read_One_Byte
    _I2C_Write_Address_Write_One_Byte->_I2C_Write
    _I2C_Write_Address_Read_One_Byte->_I2C_Read
    _Monitor_Heater->_do_update_pwm
    _Turn_On_Fan->_do_update_pwm
    _Initialize_Setup_Time_Screen->_drawtext
    _Go_Prev_Field->_Update_Setup_Screen_Cursor_Backward
    _Go_Next_Field->_Update_Setup_Screen_Cursor_Forward
    _DS3231_Write_Time->_dec_2_bcd
    _Update_Setup_Time_Screen->_drawtext
    _Initialize_Setup_Heater_Screen->_drawtext
    _Update_Setup_Heater_Screen->_drawtext
    _check_for_button_input->_printf
    _Initialize_Setup_Alarm_Time_Screen->_drawtext
    _Go_Prev_Alarm_Field->_Update_Setup_Screen_Cursor_Backward
    _Update_Setup_Screen_Cursor_Backward->_fillRect
    _Go_Next_Alarm_Field->_Update_Setup_Screen_Cursor_Forward
    _Update_Setup_Screen_Cursor_Forward->_fillRect
    _Initialize_Screen->_drawtext
    _fillScreen->_fillRectangle
    _fillRectangle->_setAddrWindow
    _drawCircle->_drawPixel
    _Rcmd3->_delay_ms
    _Rcmd2red->_write_command
    _Rcmd2red->_write_data
    _Rcmd1->_delay_ms
    _LCD_Reset->_delay_ms
    _delay_ms->___wmul
    _DS3231_Write_Alarm_Time->_dec_2_bcd
    _dec_2_bcd->___awmod
    _DS3231_Read_Time->_I2C_Read
    _DS3231_Read_Alarm_Time->_I2C_Read
    _Do_Beep_Good->_do_update_pwm
    _Do_Beep_Bad->_do_update_pwm
    _do_update_pwm->___ftdiv
    _do_update_pwm->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul
    _Update_Setup_Alarm_Time_Screen->_drawtext
    _printf->___lwmod
    ___lwmod->___lwdiv
    _drawtext->_drawChar
    _drawChar->_fillRect
    _fillRect->_drawFastVLine
    _drawFastVLine->_setAddrWindow
    _drawPixel->_setAddrWindow
    _setAddrWindow->_write_command
    _setAddrWindow->_write_data
    _write_data->_spiwrite
    _write_command->_spiwrite
    ___awmod->___fttol
    ___awdiv->___awmod
    _Do_Init->_DS1621_Init
    _init_UART->_OpenUSART
    _DS1621_Init->_I2C_Write_Cmd_Write_Data
    _I2C_Write_Cmd_Write_Data->_I2C_Write
    _I2C_Write_Cmd_Only->_I2C_Write
    _DS1621_Read_Temp->_I2C_Read

Critical Paths under _chkisr in COMRAM

    _chkisr->_INT0_isr

Critical Paths under _main in BANK0

    _main->_Monitor_Heater
    _DS3231_Write_Time->_dec_2_bcd
    _Do_Setup_Heater_Temp->_Update_Setup_Heater_Screen
    _Increase_Heater_Temp->_Update_Setup_Heater_Screen
    _Decrease_Heater_Temp->_Update_Setup_Heater_Screen
    _DS3231_Write_Alarm_Time->_dec_2_bcd

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    _get_RPM->___awdiv
    _Update_Screen->___awdiv
    _Initialize_Setup_Time_Screen->_drawtext
    _Do_Save_New_Time->_DS3231_Write_Time
    _DS3231_Write_Time->_dec_2_bcd
    _Update_Setup_Time_Screen->___awdiv
    _Initialize_Setup_Heater_Screen->_drawtext
    _Update_Setup_Heater_Screen->___awdiv
    _Initialize_Setup_Alarm_Time_Screen->_drawtext
    _Do_Save_New_Alarm_Time->_DS3231_Write_Alarm_Time
    _Initialize_Screen->_drawtext
    _DS3231_Write_Alarm_Time->_dec_2_bcd
    _dec_2_bcd->___awdiv
    _Update_Setup_Alarm_Time_Screen->___awdiv

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1155313
                                             13 BANK1      2     2      0
                   _DS1621_Read_Temp
             _DS3231_Read_Alarm_Time
                   _DS3231_Read_Time
              _DS3231_Turn_Off_Alarm
                        _Do_Beep_Bad
                       _Do_Beep_Good
                            _Do_Init
                _Do_Setup_Alarm_Time
               _Do_Setup_Heater_Temp
                      _Do_Setup_Time
                  _Initialize_Screen
                     _Monitor_Heater
                         _Test_Alarm
                      _Toggle_Heater
                      _Update_Screen
                            ___awdiv
                             ___wmul
             _check_for_button_input
                            _get_RPM
                             _printf
                          _read_volt
 ---------------------------------------------------------------------------------
 (1) _read_volt                                            9     6      3    5421
                                             43 COMRAM     9     6      3
                            ___ftmul
                           ___lwtoft
                       _get_full_ADC
 ---------------------------------------------------------------------------------
 (2) _get_full_ADC                                         6     4      2      23
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2164
                                             24 COMRAM     3     0      3
                           ___ftpack
                       _get_full_ADC (ARG)
 ---------------------------------------------------------------------------------
 (1) _get_RPM                                              4     2      2    5131
                                             64 COMRAM     2     0      2
                                              0 BANK0      2     2      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Update_Screen                                        5     5      0   48445
                                              0 BANK0      2     2      0
                                              8 BANK1      3     3      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol
                           _drawtext
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _Toggle_Heater                                        0     0      0    8799
                       _Turn_Off_Fan
                        _Turn_On_Fan
 ---------------------------------------------------------------------------------
 (1) _Test_Alarm                                           0     0      0   17997
                    _Activate_Buzzer
              _DS3231_Turn_Off_Alarm
               _DS3231_Turn_On_Alarm
                  _Deactivate_Buzzer
                      _Set_RGB_Color
                             ___ftge
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     242
                                             16 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) _Set_RGB_Color                                       17    17      0      92
                                             18 COMRAM    17    17      0
                       _Wait_One_Sec
 ---------------------------------------------------------------------------------
 (2) _DS3231_Turn_On_Alarm                                 5     5      0    4432
                                             26 COMRAM     5     5      0
                        _DS3231_Init
    _I2C_Write_Address_Read_One_Byte
   _I2C_Write_Address_Write_One_Byte
 ---------------------------------------------------------------------------------
 (2) _DS3231_Turn_Off_Alarm                                5     5      0    4432
                                             26 COMRAM     5     5      0
                        _DS3231_Init
    _I2C_Write_Address_Read_One_Byte
   _I2C_Write_Address_Write_One_Byte
 ---------------------------------------------------------------------------------
 (3) _DS3231_Init                                          4     4      0    2380
                                             22 COMRAM     4     4      0
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
    _I2C_Write_Address_Read_One_Byte
   _I2C_Write_Address_Write_One_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Address_Write_One_Byte                     3     1      2     876
                                             18 COMRAM     3     1      2
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Address_Read_One_Byte                      3     2      1     783
                                             19 COMRAM     3     2      1
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Monitor_Heater                                       3     3      0   18057
                                              0 BANK0      3     3      0
                       _Turn_Off_Fan
                        _Turn_On_Fan
                      _do_update_pwm
                     _get_duty_cycle
 ---------------------------------------------------------------------------------
 (2) _get_duty_cycle                                       8     4      4     459
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Turn_On_Fan                                          0     0      0    8799
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (1) _Do_Setup_Time                                        0     0      0  331046
                   _DS3231_Read_Time
                      _Decrease_Time
                        _Do_Beep_Bad
                       _Do_Beep_Good
                   _Do_Save_New_Time
                    _Exit_Time_Setup
                      _Go_Next_Field
                      _Go_Prev_Field
                      _Increase_Time
       _Initialize_Setup_Time_Screen
           _Update_Setup_Time_Screen
                          _bcd_2_dec
             _check_for_button_input
 ---------------------------------------------------------------------------------
 (2) _Initialize_Setup_Time_Screen                         0     0      0   50293
                           _drawtext
                           _fillRect
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Increase_Time                                        0     0      0   40509
           _Update_Setup_Time_Screen
 ---------------------------------------------------------------------------------
 (2) _Go_Prev_Field                                        0     0      0   11627
_Update_Setup_Screen_Cursor_Backward
 ---------------------------------------------------------------------------------
 (2) _Go_Next_Field                                        0     0      0   11658
 _Update_Setup_Screen_Cursor_Forward
 ---------------------------------------------------------------------------------
 (2) _Exit_Time_Setup                                      0     0      0   52987
                   _DS3231_Read_Time
                  _Initialize_Screen
 ---------------------------------------------------------------------------------
 (2) _Do_Save_New_Time                                     0     0      0   61052
                   _DS3231_Read_Time
                  _DS3231_Write_Time
                  _Initialize_Screen
 ---------------------------------------------------------------------------------
 (3) _DS3231_Write_Time                                    2     2      0    8065
                                             11 BANK1      2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                          _dec_2_bcd
 ---------------------------------------------------------------------------------
 (2) _Decrease_Time                                        0     0      0   40509
           _Update_Setup_Time_Screen
 ---------------------------------------------------------------------------------
 (2) _Update_Setup_Time_Screen                             0     0      0   40509
                            ___awdiv
                            ___awmod
                           _drawtext
 ---------------------------------------------------------------------------------
 (1) _Do_Setup_Heater_Temp                                 2     2      0  288349
                                              8 BANK1      2     2      0
               _Decrease_Heater_Temp
                        _Do_Beep_Bad
                       _Do_Beep_Good
            _Do_Save_New_Heater_Temp
             _Exit_Setup_Heater_Temp
               _Increase_Heater_Temp
     _Initialize_Setup_Heater_Screen
         _Update_Setup_Heater_Screen
             _check_for_button_input
 ---------------------------------------------------------------------------------
 (2) _Initialize_Setup_Heater_Screen                       0     0      0   39137
                           _drawtext
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Increase_Heater_Temp                                 0     0      0   40611
         _Update_Setup_Heater_Screen
 ---------------------------------------------------------------------------------
 (2) _Exit_Setup_Heater_Temp                               0     0      0   52987
                   _DS3231_Read_Time
                  _Initialize_Screen
 ---------------------------------------------------------------------------------
 (2) _Do_Save_New_Heater_Temp                              0     0      0   52987
                   _DS3231_Read_Time
                  _Initialize_Screen
 ---------------------------------------------------------------------------------
 (2) _Decrease_Heater_Temp                                 0     0      0   40611
         _Update_Setup_Heater_Screen
 ---------------------------------------------------------------------------------
 (2) _Update_Setup_Heater_Screen                           3     3      0   40611
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                           _drawtext
 ---------------------------------------------------------------------------------
 (1) _Do_Setup_Alarm_Time                                  0     0      0  342652
             _DS3231_Read_Alarm_Time
                _Decrease_Alarm_Time
                        _Do_Beep_Bad
                       _Do_Beep_Good
             _Do_Save_New_Alarm_Time
              _Exit_Setup_Alarm_Time
                _Go_Next_Alarm_Field
                _Go_Prev_Alarm_Field
                _Increase_Alarm_Time
 _Initialize_Setup_Alarm_Time_Screen
     _Update_Setup_Alarm_Time_Screen
                          _bcd_2_dec
             _check_for_button_input
 ---------------------------------------------------------------------------------
 (1) _check_for_button_input                               3     3      0    3715
                                             56 COMRAM     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _bcd_2_dec                                            5     5      0      67
                                             16 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _Initialize_Setup_Alarm_Time_Screen                   0     0      0   50293
                           _drawtext
                           _fillRect
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Increase_Alarm_Time                                  0     0      0   44091
     _Update_Setup_Alarm_Time_Screen
 ---------------------------------------------------------------------------------
 (2) _Go_Prev_Alarm_Field                                  0     0      0   11627
_Update_Setup_Screen_Cursor_Backward
 ---------------------------------------------------------------------------------
 (3) _Update_Setup_Screen_Cursor_Backward                  3     3      0   11627
                                             45 COMRAM     3     3      0
                           _fillRect
 ---------------------------------------------------------------------------------
 (2) _Go_Next_Alarm_Field                                  0     0      0   11658
 _Update_Setup_Screen_Cursor_Forward
 ---------------------------------------------------------------------------------
 (3) _Update_Setup_Screen_Cursor_Forward                   3     3      0   11658
                                             45 COMRAM     3     3      0
                           _fillRect
 ---------------------------------------------------------------------------------
 (2) _Exit_Setup_Alarm_Time                                0     0      0   52987
                   _DS3231_Read_Time
                  _Initialize_Screen
 ---------------------------------------------------------------------------------
 (2) _Do_Save_New_Alarm_Time                               0     0      0   61912
             _DS3231_Read_Alarm_Time
                   _DS3231_Read_Time
            _DS3231_Write_Alarm_Time
                  _Initialize_Screen
 ---------------------------------------------------------------------------------
 (1) _Initialize_Screen                                    0     0      0   52557
                          _LCD_Reset
            _TFT_GreenTab_Initialize
                         _drawCircle
                           _drawtext
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4    4009
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _fillScreen                                           2     0      2    2387
                                             35 COMRAM     2     0      2
                      _fillRectangle
 ---------------------------------------------------------------------------------
 (3) _fillRectangle                                       12     7      5    2096
                                             23 COMRAM    12     7      5
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (2) _drawCircle                                          20    12      8    6744
                                             27 COMRAM    20    12      8
                          _drawPixel
 ---------------------------------------------------------------------------------
 (2) _TFT_GreenTab_Initialize                              0     0      0    4624
                              _Rcmd1
                           _Rcmd2red
                              _Rcmd3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd3                                                0     0      0    2182
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd2red                                             0     0      0     130
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd1                                                0     0      0    2182
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _LCD_Reset                                            0     0      0    2052
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2    2052
                                             22 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _DS3231_Write_Alarm_Time                              2     2      0    8495
                                             11 BANK1      2     2      0
                   _DS3231_Read_Time
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                          _dec_2_bcd
 ---------------------------------------------------------------------------------
 (4) _dec_2_bcd                                            7     5      2    7864
                                             64 COMRAM     2     0      2
                                              0 BANK0      2     2      0
                                              8 BANK1      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _DS3231_Read_Time                                     2     2      0     430
                                             19 COMRAM     2     2      0
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _DS3231_Read_Alarm_Time                               2     2      0     430
                                             19 COMRAM     2     2      0
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _Do_Beep_Good                                         0     0      0    8845
               _Activate_Buzzer_2KHz
                  _Deactivate_Buzzer
                       _Wait_One_Sec
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (3) _Activate_Buzzer_2KHz                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Do_Beep_Bad                                          0     0      0    8845
              _Activate_Buzzer_500Hz
                  _Deactivate_Buzzer
                       _Wait_One_Sec
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (3) _do_update_pwm                                        9     9      0    8799
                                             58 COMRAM     9     9      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (4) ___lbtoft                                             4     1      3    2099
                                             24 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     631
                                             43 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3166
                                             28 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    2708
                                             43 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2068
                                             16 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _Wait_One_Sec                                         2     2      0      46
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Activate_Buzzer_500Hz                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Decrease_Alarm_Time                                  0     0      0   44091
     _Update_Setup_Alarm_Time_Screen
 ---------------------------------------------------------------------------------
 (2) _Update_Setup_Alarm_Time_Screen                       0     0      0   44091
                            ___awdiv
                            ___awmod
                           _drawtext
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              37    23     14    3582
                                             28 COMRAM    28    14     14
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     265
                                             23 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     374
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _drawtext                                            17     9      8   32741
                                             56 COMRAM    10     2      8
                                              0 BANK1      7     7      0
                           _drawChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     195
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _drawChar                                            11     4      7   18184
                                             45 COMRAM    11     4      7
                             ___wmul
                          _drawPixel
                           _fillRect
 ---------------------------------------------------------------------------------
 (4) _fillRect                                            11     6      5   11156
                                             34 COMRAM    11     6      5
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (5) _drawFastVLine                                       11     7      4    3102
                                             23 COMRAM    11     7      4
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (4) _drawPixel                                            4     1      3    4207
                                             23 COMRAM     4     1      3
                      _setAddrWindow
                         _write_data
 ---------------------------------------------------------------------------------
 (6) _setAddrWindow                                        4     1      3    1034
                                             19 COMRAM     4     1      3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (7) _write_data                                           1     1      0      65
                                             18 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (7) _write_command                                        1     1      0      65
                                             18 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (6) _spiwrite                                             2     2      0      34
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1012
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    3683
                                             58 COMRAM     6     2      4
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    4085
                                              0 BANK1      8     4      4
                            ___awmod (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Do_Init                                              0     0      0    1019
                        _DS1621_Init
                           _I2C_Init
                           _Init_ADC
                     _Init_Interrupt
                       _Turn_Off_Fan
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     273
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _Turn_Off_Fan                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             4     0      4      65
                                             16 COMRAM     4     0      4
                         _i2cHighScl
                         _i2cHighSda
 ---------------------------------------------------------------------------------
 (2) _DS1621_Init                                          1     1      0     681
                                             21 COMRAM     1     1      0
                 _I2C_Write_Cmd_Only
           _I2C_Write_Cmd_Write_Data
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Write_Data                             3     1      2     356
                                             18 COMRAM     3     1      2
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Only                                   2     1      1     260
                                             18 COMRAM     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS1621_Read_Temp                                     5     3      2     464
                                             19 COMRAM     5     3      2
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            2     2      0     133
                                             16 COMRAM     2     2      0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Read                                             3     3      0     198
                                             16 COMRAM     3     3      0
                             _i2cAck
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                            _i2cNack
 ---------------------------------------------------------------------------------
 (5) _i2cNack                                              0     0      0       0
                         _i2cHighScl
                          _i2cLowScl
 ---------------------------------------------------------------------------------
 (5) _i2cAck                                               0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_ReStart                                          0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (5) _i2cLowSda                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cLowScl                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cHighSda                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cHighScl                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _chkisr                                             14    14      0       0
                                              2 COMRAM    14    14      0
                           _INT0_isr
                           _INT1_isr
                           _INT2_isr
                         _TIMER1_isr
 ---------------------------------------------------------------------------------
 (12) _TIMER1_isr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT2_isr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT1_isr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT0_isr                                            2     2      0       0
                                              0 COMRAM     2     2      0
                   _force_nec_state0
 ---------------------------------------------------------------------------------
 (13) _force_nec_state0                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1621_Read_Temp
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Read_Alarm_Time
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Read_Time
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Turn_Off_Alarm
     _DS3231_Init
       _I2C_ReStart
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Read
         _i2cAck
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cNack
           _i2cHighScl
           _i2cLowScl
       _I2C_Start
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Stop
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Write
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Write_Address_Read_One_Byte
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Address_Write_One_Byte
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _I2C_Write_Address_Read_One_Byte
       _I2C_ReStart
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Read
         _i2cAck
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cNack
           _i2cHighScl
           _i2cLowScl
       _I2C_Start
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Stop
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Write
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
     _I2C_Write_Address_Write_One_Byte
       _I2C_Start
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Stop
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Write
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
   _Do_Beep_Bad
     _Activate_Buzzer_500Hz
     _Deactivate_Buzzer
     _Wait_One_Sec
     _do_update_pwm
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___lbtoft
         ___ftpack
   _Do_Beep_Good
     _Activate_Buzzer_2KHz
     _Deactivate_Buzzer
     _Wait_One_Sec
     _do_update_pwm
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___lbtoft
         ___ftpack
   _Do_Init
     _DS1621_Init
       _I2C_Write_Cmd_Only
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Cmd_Write_Data
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _I2C_Init
       _i2cHighScl
       _i2cHighSda
     _Init_ADC
     _Init_Interrupt
     _Turn_Off_Fan
     _init_UART
       _OpenUSART
   _Do_Setup_Alarm_Time
     _DS3231_Read_Alarm_Time
       _I2C_ReStart
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Read
         _i2cAck
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cNack
           _i2cHighScl
           _i2cLowScl
       _I2C_Start
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Stop
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Write
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
     _Decrease_Alarm_Time
       _Update_Setup_Alarm_Time_Screen
         ___awdiv
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
           ___wmul (ARG)
         ___awmod
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
           _putch
     _Do_Beep_Bad
       _Activate_Buzzer_500Hz
       _Deactivate_Buzzer
       _Wait_One_Sec
       _do_update_pwm
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___lbtoft
           ___ftpack
     _Do_Beep_Good
       _Activate_Buzzer_2KHz
       _Deactivate_Buzzer
       _Wait_One_Sec
       _do_update_pwm
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___lbtoft
           ___ftpack
     _Do_Save_New_Alarm_Time
       _DS3231_Read_Alarm_Time
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _DS3231_Read_Time
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _DS3231_Write_Alarm_Time
         _DS3231_Read_Time
           _I2C_ReStart
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Read
             _i2cAck
               _i2cHighScl
               _i2cHighSda
               _i2cLowScl
               _i2cLowSda
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cNack
               _i2cHighScl
               _i2cLowScl
           _I2C_Start
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Stop
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Write
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _dec_2_bcd
           ___awdiv
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___lbtoft (ARG)
                     ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
             ___wmul (ARG)
           ___awmod
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
       _Initialize_Screen
         _LCD_Reset
           _delay_ms
             ___wmul
         _TFT_GreenTab_Initialize
           _Rcmd1
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd2red
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd3
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _fillScreen
           _fillRectangle
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
         _strcpy
     _Exit_Setup_Alarm_Time
       _DS3231_Read_Time
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _Initialize_Screen
         _LCD_Reset
           _delay_ms
             ___wmul
         _TFT_GreenTab_Initialize
           _Rcmd1
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd2red
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd3
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _fillScreen
           _fillRectangle
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
         _strcpy
     _Go_Next_Alarm_Field
       _Update_Setup_Screen_Cursor_Forward
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
     _Go_Prev_Alarm_Field
       _Update_Setup_Screen_Cursor_Backward
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
     _Increase_Alarm_Time
       _Update_Setup_Alarm_Time_Screen
         ___awdiv
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
           ___wmul (ARG)
         ___awmod
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
           _putch
     _Initialize_Setup_Alarm_Time_Screen
       _drawtext
         _drawChar
           ___wmul
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
           _fillRect
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
         _strlen
       _fillRect
         _drawFastVLine
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite
       _fillScreen
         _fillRectangle
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite
       _strcpy
     _Update_Setup_Alarm_Time_Screen
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___wmul (ARG)
       ___awmod
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
       _drawtext
         _drawChar
           ___wmul
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
           _fillRect
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
         _strlen
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
         _putch
     _bcd_2_dec
     _check_for_button_input
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
         _putch
   _Do_Setup_Heater_Temp
     _Decrease_Heater_Temp
       _Update_Setup_Heater_Screen
         ___awdiv
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
           ___wmul (ARG)
         ___awmod
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
     _Do_Beep_Bad
       _Activate_Buzzer_500Hz
       _Deactivate_Buzzer
       _Wait_One_Sec
       _do_update_pwm
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___lbtoft
           ___ftpack
     _Do_Beep_Good
       _Activate_Buzzer_2KHz
       _Deactivate_Buzzer
       _Wait_One_Sec
       _do_update_pwm
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___lbtoft
           ___ftpack
     _Do_Save_New_Heater_Temp
       _DS3231_Read_Time
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _Initialize_Screen
         _LCD_Reset
           _delay_ms
             ___wmul
         _TFT_GreenTab_Initialize
           _Rcmd1
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd2red
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd3
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _fillScreen
           _fillRectangle
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
         _strcpy
     _Exit_Setup_Heater_Temp
       _DS3231_Read_Time
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _Initialize_Screen
         _LCD_Reset
           _delay_ms
             ___wmul
         _TFT_GreenTab_Initialize
           _Rcmd1
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd2red
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd3
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _fillScreen
           _fillRectangle
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
         _strcpy
     _Increase_Heater_Temp
       _Update_Setup_Heater_Screen
         ___awdiv
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
           ___wmul (ARG)
         ___awmod
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
     _Initialize_Setup_Heater_Screen
       _drawtext
         _drawChar
           ___wmul
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
           _fillRect
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
         _strlen
       _fillScreen
         _fillRectangle
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite
       _strcpy
     _Update_Setup_Heater_Screen
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___wmul (ARG)
       ___awmod
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
       _drawtext
         _drawChar
           ___wmul
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
           _fillRect
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
         _strlen
     _check_for_button_input
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
         _putch
   _Do_Setup_Time
     _DS3231_Read_Time
       _I2C_ReStart
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Read
         _i2cAck
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cNack
           _i2cHighScl
           _i2cLowScl
       _I2C_Start
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Stop
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Write
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
     _Decrease_Time
       _Update_Setup_Time_Screen
         ___awdiv
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
           ___wmul (ARG)
         ___awmod
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
     _Do_Beep_Bad
       _Activate_Buzzer_500Hz
       _Deactivate_Buzzer
       _Wait_One_Sec
       _do_update_pwm
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___lbtoft
           ___ftpack
     _Do_Beep_Good
       _Activate_Buzzer_2KHz
       _Deactivate_Buzzer
       _Wait_One_Sec
       _do_update_pwm
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___lbtoft
           ___ftpack
     _Do_Save_New_Time
       _DS3231_Read_Time
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _DS3231_Write_Time
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _dec_2_bcd
           ___awdiv
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___lbtoft (ARG)
                     ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
             ___wmul (ARG)
           ___awmod
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
       _Initialize_Screen
         _LCD_Reset
           _delay_ms
             ___wmul
         _TFT_GreenTab_Initialize
           _Rcmd1
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd2red
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd3
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _fillScreen
           _fillRectangle
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
         _strcpy
     _Exit_Time_Setup
       _DS3231_Read_Time
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _Initialize_Screen
         _LCD_Reset
           _delay_ms
             ___wmul
         _TFT_GreenTab_Initialize
           _Rcmd1
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd2red
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd3
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _fillScreen
           _fillRectangle
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
         _strcpy
     _Go_Next_Field
       _Update_Setup_Screen_Cursor_Forward
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
     _Go_Prev_Field
       _Update_Setup_Screen_Cursor_Backward
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
     _Increase_Time
       _Update_Setup_Time_Screen
         ___awdiv
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
           ___wmul (ARG)
         ___awmod
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
     _Initialize_Setup_Time_Screen
       _drawtext
         _drawChar
           ___wmul
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
           _fillRect
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
         _strlen
       _fillRect
         _drawFastVLine
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite
       _fillScreen
         _fillRectangle
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite
       _strcpy
     _Update_Setup_Time_Screen
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___wmul (ARG)
       ___awmod
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
       _drawtext
         _drawChar
           ___wmul
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
           _fillRect
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
         _strlen
     _bcd_2_dec
     _check_for_button_input
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
         _putch
   _Initialize_Screen
     _LCD_Reset
       _delay_ms
         ___wmul
     _TFT_GreenTab_Initialize
       _Rcmd1
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd2red
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd3
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_command
         _spiwrite
       _write_data
         _spiwrite
     _drawCircle
       _drawPixel
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _write_data
           _spiwrite
     _drawtext
       _drawChar
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
       _strlen
     _fillScreen
       _fillRectangle
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
     _strcpy
   _Monitor_Heater
     _Turn_Off_Fan
     _Turn_On_Fan
       _do_update_pwm
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___lbtoft
           ___ftpack
     _do_update_pwm
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___lbtoft
         ___ftpack
     _get_duty_cycle
   _Test_Alarm
     _Activate_Buzzer
     _DS3231_Turn_Off_Alarm
       _DS3231_Init
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write_Address_Read_One_Byte
           _I2C_ReStart
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Read
             _i2cAck
               _i2cHighScl
               _i2cHighSda
               _i2cLowScl
               _i2cLowSda
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cNack
               _i2cHighScl
               _i2cLowScl
           _I2C_Start
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Stop
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Write
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
         _I2C_Write_Address_Write_One_Byte
           _I2C_Start
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Stop
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Write
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
       _I2C_Write_Address_Read_One_Byte
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Address_Write_One_Byte
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _DS3231_Turn_On_Alarm
       _DS3231_Init
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write_Address_Read_One_Byte
           _I2C_ReStart
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Read
             _i2cAck
               _i2cHighScl
               _i2cHighSda
               _i2cLowScl
               _i2cLowSda
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cNack
               _i2cHighScl
               _i2cLowScl
           _I2C_Start
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Stop
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Write
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
         _I2C_Write_Address_Write_One_Byte
           _I2C_Start
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Stop
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Write
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
       _I2C_Write_Address_Read_One_Byte
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Address_Write_One_Byte
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _Deactivate_Buzzer
     _Set_RGB_Color
       _Wait_One_Sec
     ___ftge
     _do_update_pwm
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___lbtoft
         ___ftpack
   _Toggle_Heater
     _Turn_Off_Fan
     _Turn_On_Fan
       _do_update_pwm
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___lbtoft
           ___ftpack
   _Update_Screen
     ___awdiv
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___wmul (ARG)
     ___awmod
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
     ___ftmul
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
     _drawtext
       _drawChar
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
       _strlen
     _strcpy
   ___awdiv
     ___awmod (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
     ___wmul (ARG)
   ___wmul
   _check_for_button_input
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
   _get_RPM
     ___awdiv
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___wmul (ARG)
     ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
   _read_volt
     ___ftmul
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
       _get_full_ADC (ARG)
     _get_full_ADC

 _chkisr (ROOT)
   _INT0_isr
     _force_nec_state0
   _INT1_isr
   _INT2_isr
   _TIMER1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      F      62       7       38.3%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      3      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     43      6F       1       87.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     151      34        0.0%
DATA                 0      0     151       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu May 12 19:11:05 2022

                                 drawCircle@f 002A                                   drawCircle@r 0020  
                                 drawCircle@x 002C                                   drawCircle@y 002E  
                          __size_of_I2C_Start 0012                                   _SSPSTATbits 000FC7  
                          __size_of_I2C_Write 003E                                  drawCircle@x0 001C  
                                drawCircle@y0 001E                                            _D1 0144  
                                          _D2 014C                  __size_of_Do_Setup_Alarm_Time 00BE  
                                ___awdiv@sign 0158                          __size_of_Turn_On_Fan 0010  
                         ___wmul@multiplicand 0013                               ??_Update_Screen 00FD  
                                         l207 3D16                                           l246 1E24  
                                         l726 1112                                           l832 2EB6  
                                         l737 12C6                                           l826 38D8  
                                         l850 17C0                                           l683 2AEA  
                                         l772 34F2                                           l782 3C08  
                                         l848 18E6                                           l857 183C  
                                         l885 2496                                           l886 2402  
                                         l896 138A                                           l888 2472  
                                         l889 2494                                           _PR2 000FCB  
                        DS3231_Init@Address_7 0017                          DS3231_Init@Address_E 0018  
                                         _day 005A                             _Deactivate_Buzzer 3D82  
                        __size_of_I2C_ReStart 0016                     __size_of_Do_Save_New_Time 0014  
                                         _dow 005B                                           _nbr 00EF  
                                         _rpm 004C                         __size_of_Turn_Off_Fan 000A  
                                         _rps 00F3                                           _txt 004E  
                                ___awmod@sign 0040                                           prod 000FF3  
                                         wreg 000FE8                                 _Increase_Time 2B4A  
                __size_of_Go_Next_Alarm_Field 0018                            ?_Deactivate_Buzzer 0001  
                 __end_of_Decrease_Alarm_Time 3596        Update_Setup_Screen_Cursor_Forward@xinc 0030  
      Update_Setup_Screen_Cursor_Forward@yinc 002F                               ??_fillRectangle 001D  
                                __CFG_LVP$OFF 000000                       _TFT_GreenTab_Initialize 3932  
                                ___ftdiv@cntr 0035                                  ___ftdiv@sign 003A  
                                __CFG_WDT$OFF 000000                                          l1012 2FB8  
                                        l1016 3930                                          l1033 3AD0  
                                        l1019 3188                                drawFastVLine@h 0019  
                                        l1061 39A8                                          l1303 3844  
                                        l1055 335A                                          l1225 3876  
                                        l1058 3988                                          l2037 32A2  
                                        l1502 30DE                                          l1191 37DA  
                                        l1511 3120                                          l2047 3672  
                                        l2064 39CE                                          l1441 0B06  
                                        l1361 2560                                          l1506 30F8  
                                        l1514 3982                                          l1507 30FA  
                                        l1188 370C                                          l1508 3104  
                                        l2076 37CA                                drawFastVLine@x 0022  
                                        l1509 3106                                          l1381 3C32  
                              drawFastVLine@y 0018                                          l1720 2F38  
                                        l1376 33AE                                          l1384 374E  
                                        l1707 2636                                          l1478 0D5E  
                                        l1822 27C6                                          l1903 2C78  
                                        l1833 279E                                          l1930 22D8  
                                        l1909 1F1C                                          l6030 30D6  
                                        l6022 30C4                                          l1945 3A3A  
                                        l6042 30F0                                          l6034 30E2  
                                        l6026 30CE                                          l1971 39F4  
                                        l5412 3A32                                          l6300 3ABE  
                                        l1894 23BA                                          l6304 3ACA  
                                        l1897 2386                                          l5540 3270  
                                        l8110 1834                                          l8102 17CC  
                                        l5550 3296                                          l5542 3278  
              I2C_Write_Cmd_Write_Data@Device 0015                                          l8120 1886  
                                        l5560 3648                                          l8202 36E6  
                                        l8210 36F6                                          l8106 17FC  
                                        l5538 3266                                          l5562 3650  
                                        l8204 36EE                                          l8108 1830  
                                        l8140 3798                                          l8300 27B8  
                                        l8214 3702                                          l8230 37EA  
                                        l8222 37D2                                          l8126 18B2  
                                        l8118 185E                                          l8134 18E2  
                                        l8142 379E                                          l5566 3666  
                                        l5558 363E                                          l8216 3708  
                                        l8240 37FC                                          l8312 2586  
                                        l8128 18DA                                          l8152 23CC  
                                        l8170 2468                                          l8228 37E4  
                                        l8324 25BC                                          l8340 2616  
                                        l8092 17AE                                          l8500 0C14  
                                        l8420 0A2E                                          l9300 350C  
                                        l8326 25CA                                          l8318 259E  
                                        l8510 0C3E                                          l8502 0C1E  
                                        l8430 0A6C                                          l8414 0A10  
                                        l8174 2476                                          l8158 243A  
                                        l6830 24B0                                          l8192 36D0  
                                        l8344 262C                                          l8336 2606  
                                        l8328 25D4                                          l8360 2EDC  
                                        l8096 17BC                                          l8088 17A2  
                                        l8520 0C76                                          l8424 0A38  
                                        l8280 274E                                          l8272 2712  
                                        l8184 2490                                          l6840 2514  
                                        l8098 17C4                                          l8514 0C56  
                                        l8442 0AD8                                          l8426 0A4E  
                                        l8418 0A20                                          l8178 2480  
                                        l9250 3B2C                                          l9306 351C  
                                        l9314 352C                                          l9162 2F5E  
                                        l6842 251C                                          l8196 36D8  
                                        l8380 2F2E                                          l8372 2F12  
                                        l8364 2EEA                                          l8356 2ECE  
                                        l8604 1AE8                                          l8516 0C5E  
                                        l8524 0C8A                                          l8508 0C36  
                                        l8460 0B52                                          l8540 0D42  
                                        l8284 2766                                          l8276 2722  
                                        l9316 3542                                          l9172 2F96  
                                        l9420 2AB2                                          l9404 3B14  
                                        l9500 2BA0                                          l6852 255A  
                                        l6836 24F4                                          l8366 2EF4  
                                        l8606 1AF0                                          l8526 0C92  
                                        l8534 0D1C                                          l8454 0B34  
                                        l8438 0AD0                                          l8294 27A6  
                                        l8286 2786                                          l8278 272E  
                                        l9166 2F72                                          l9414 2AA2  
                                        l6846 253C                                          l6870 2C48  
                                        l8368 2EFC                                          l8376 2F1E  
                                        l8528 0CD6                                          l8536 0D2E  
                                        l8472 0B88                                          l8464 0B5E  
                                        l9280 356A                                          l9272 3556  
                                        l8288 2792                                          l9248 3B28  
                                        l9176 2F9E                                          l9440 2AE6  
                                        l9504 2BA6                                          l9512 2BB6  
                                        l6848 2546                                          l7930 2EAC  
                                        l7914 2E40                                          l8538 0D36  
                                        l8482 0BBC                                          l8474 0B8C  
                                        l8490 0BD4                                          l8458 0B4E  
                                        l9274 355A                                          l9290 3590  
                                        l8810 2282                                          l8626 1370  
                                        l8570 388C                                          l9258 3B44  
                                        l9186 2FB4                                          l9434 2AD6  
                                        l9426 2AC2                                          l9418 2AAE  
                                        l9514 2BDE                                          l6866 2C16  
                                        l8580 1A24                                          l8468 0B82  
                                        l9284 3576                                          l9268 354A  
                                        l8740 1E5E                                          l8804 226C  
                                        l9356 3BF4                                          l9364 3BCC  
                                        l9452 2B08                                          l9436 2ADA  
                                        l9428 2AC6                                          l6876 2C74  
                                        l9700 015C                                          l7918 2E78  
                                        l7950 3686                                          l8478 0B98  
                                        l9278 3566                                          l8718 2360  
                                        l8822 22C6                                          l8814 2296  
                                        l8910 29CA                                          l8654 1460  
                                        l9294 34FC                                          l9454 2B0C  
                                        l9462 2B1C                                          l9614 33A8  
                                        l7928 2E9E                                          l8592 1A78  
                                        l8496 0BF0                                          l8488 0BC2  
                                        l9288 357A                                          l8728 2394  
                                        l8744 1E6C                                          l8816 22A4  
                                        l8808 227C                                          l8568 3882  
                                        l9448 2AFC                                          l9464 2B44  
                                        l9480 2B6C                                          l9624 1D40  
                                        l7954 36A2                                          l8762 1EB2  
                                        l8738 1E44                                          l8818 22AE  
                                        l8930 0F66                                          l9458 2B18  
                                        l9394 3AF8                                          l9474 2B5C  
                                        l8596 1A96                                          l8692 22F8  
                                        l8772 1EE0                                          l8940 1034  
                                        l9900 283A                                          l9396 3AFC  
                                        l9492 2B8C                                          l9468 2B4C  
                                        l9636 1D6E                                          l9740 022E  
                                        l7974 38BA                                          l8694 2312  
                                        l8766 1EC8                                          l8758 1EA0  
                                        l8934 0FC2                                          l9486 2B7C  
                                        l9646 1D96                                          l9742 0244  
                                        l8776 1EF6                                          l8768 1ECE  
                                        l8944 1070                                          l8936 0FF8  
                                        l8952 10EA                                          l9912 2864  
                                        l9904 2848                                          l9920 287C  
                                        l9656 1DD2                                          l9760 02F2  
                                        l9752 02CC                                          l8698 2320  
                                        l8786 2212                                          l8946 10AA  
                                        l8962 1192                                          l9930 2C8E  
                                        l9850 26D2                                          l9842 26B6  
                                        l9826 2680                                          l9754 02E2  
                                        l8972 1262                                          l8956 1120  
                                        l9908 2856                                          l9916 2872  
                                        l9860 26F2                                          l9684 00AA  
                                        l8966 11E8                                          l8958 1156  
                                        l9918 2876                                          l9854 26E0  
                                        l9846 26C4                                          l9838 26A8  
                                        l9862 26F8                                          l9758 02EA  
                                        l9694 0118                                          l9678 0066  
                                        STR_1 FEB2                                          l8968 1222  
                                        l9952 2CEC                                          l9944 2CD0  
                                        l9960 2D04                                          STR_2 FEFE  
                                        STR_3 FED0                                          l8978 129E  
                                        l9858 26EE                                          STR_4 FF27  
                                        STR_5 FF13                                          l9884 2804  
                                        l9948 2CDE                                          l9956 2CFA  
                                        STR_6 FF6E                                          STR_7 FFF5  
                                        l9958 2CFE                                          l9966 3C2C  
                                        STR_8 FFEF                                          STR_9 FFB0  
                                        l9896 282C                                          u4111 38E6  
                                        u4430 24F0                                          u4440 2504  
                                        u7010 1DC6                                          u5500 2E6E  
                                        u4460 252C                                          u6310 1A52  
                                        u6401 2308                                          u6510 2230  
                                        u6431 1E36                                          u5730 23FA  
                                        u6451 1E54                                          u6515 2228  
                                        u5660 1894                                          u5740 2430  
                                        u6381 22EA                                          u7510 0F48  
                __end_of_Activate_Buzzer_2KHz 3C6A                                          u7520 0F4A  
                                        u6491 2204                                          u7470 0E84  
                                        u7707 3D32                                          _RBPU 007F8F  
                                        u7478 0E88                                          _TRMT 007D61  
                    ??_Do_Save_New_Alarm_Time 0043                         _setup_heater_set_temp 0067  
                                _DS1621_tempC 0046                                  _DS1621_tempF 0048  
                       _setup_heater_set_text 00C7                           ??_Deactivate_Buzzer 0011  
                                        _date 008A                                          _main 0D60  
                                        _font FCC5       Update_Setup_Screen_Cursor_Backward@xinc 0030  
                                ___ftpack@arg 0011       Update_Setup_Screen_Cursor_Backward@yinc 002F  
                                        _hour 005E                                  ___ftpack@exp 0014  
                            __end_of_I2C_Init 3D5A                              __end_of_I2C_Read 370E  
                                        _time 00AE                                          _year 006D  
                                        fsr0h 000FEA                                          fsr1h 000FE2  
                              ??_get_full_ADC 0013                                          fsr0l 000FE9  
                                        fsr2h 000FDA                                          fsr1l 000FE1  
                                        indf2 000FDF                                          fsr2l 000FD9  
                                        _wrap 0080                                          _volt 00E6  
                            __end_of_I2C_Stop 3C8E                        ?_DS3231_Turn_Off_Alarm 0001  
                                        pclat 000FFA                            __size_of_LCD_Reset 0012  
                                        prodh 000FF4                                          prodl 000FF3  
                                        start 0018                   __size_of_I2C_Write_Cmd_Only 001A  
                              _Monitor_Heater 335C                               __end_of_Do_Init 3308  
                                 _Do_Beep_Bad 3B7C                               ??_drawFastVLine 001C  
                                ___ftmul@cntr 002A                               __end_of_i2cNack 3D64  
                                ___param_bank 000010                                  ___ftmul@sign 002B  
     Update_Setup_Screen_Cursor_Forward@field 002E                                  ___fttol@exp1 003A  
                   ??_DS3231_Write_Alarm_Time 0043                         __size_of_Do_Beep_Good 0018  
                                _Turn_Off_Fan 3D46                                  ___fttol@lval 0036  
             __size_of_Exit_Setup_Heater_Temp 0010                                   ?_TIMER1_isr 0001  
                            __end_of_INT0_isr 1792                              __end_of_INT1_isr 3D82  
                                       l10100 0F24                                         l10104 0F34  
                            __end_of_INT2_isr 3D78                                         l10060 0DEA  
                                       l10044 0D74                                         l10080 0ED8  
                                       l10092 0EF6                                         l10084 0EE2  
                                       l10076 0EC2                                         l10094 0F00  
                                       l10088 0EEC                                         l10098 0F06  
              __size_of_Activate_Buzzer_500Hz 0012                     __end_of_Deactivate_Buzzer 3D8A  
                             ??_do_update_pwm 003B                               drawFastVLine@hi 0020  
                             drawFastVLine@lo 0021                 __end_of_Activate_Buzzer_500Hz 3C7C  
                                       ?_main 0001                               __end_of___awdiv 2638  
                             drawCircle@ddF_x 0026                                         STR_10 FFDF  
                             drawCircle@ddF_y 0028                                         STR_11 FFAA  
                                       STR_20 FFED                                         STR_12 FFBF  
                                       STR_21 FFE9                                         STR_13 FF7B  
                                       STR_22 FFED                                         STR_14 FFD8  
                                       STR_30 FFB5                                         STR_15 FFF8  
                                       STR_31 FF5E                                         STR_23 FF3B  
                                       STR_32 FF14                                         STR_16 FFFB  
                                       STR_24 FFC8                                         STR_17 FFE4  
                                       STR_25 FFD0                                         STR_33 FF88  
                                       STR_34 FFB0                                         STR_26 FFB0  
                                       STR_18 FFF1                                         STR_35 FFDF  
                                       STR_19 FFE9                                         STR_27 FF9F  
                                       STR_28 FF14                                         STR_36 FEE8  
                             __end_of___awmod 2F3A                                         STR_29 FF94  
                                       STR_37 FF4D                               __end_of___ftdiv 23BC  
                             __end_of___ftmul 1F1E                                         _T0CON 000FD5  
                             ___awdiv@divisor 0155                                         _T1CON 000FCD  
                             __end_of___fttol 22DA                                         _T2CON 000FCA  
                                       _T3CON 000FB1                 __size_of_Do_Setup_Heater_Temp 0094  
                             __end_of___lwdiv 32AC                               __end_of___lwmod 367C  
                             ___awdiv@counter 0157                               drawCircle@color 0022  
                                       _RCSTA 000FAB                                         _TMR0H 000FD7  
                                       _TMR1H 000FCF                                         _TMR0L 000FD6  
                                       _TMR1L 000FCE                                         _TMR3L 000FB2  
                                       _SPBRG 000FAF                                         _PORTA 000F80  
                                       _PORTD 000F83                                         _PORTE 000F84  
                              ?_Increase_Time 0001                                         _TRISA 000F92  
                                       _TRISB 000F93                                         _TRISC 000F94  
                                       _TRISD 000F95                                         _TRISE 000F96  
                                       _TXREG 000FAD                                         _TXSTA 000FAC  
                             __end_of_get_RPM 3750                                         _Rcmd1 18E8  
                                       _Rcmd3 2010      Update_Setup_Screen_Cursor_Backward@field 002E  
                                  _i2cHighSda 3D92                                    _i2cHighScl 3D2E  
                                bcd_2_dec@bcd 0015                                  bcd_2_dec@dec 0013  
                             __end_of_dpowers FEAA                                         _color 00ED  
                                       _font2 FDC4                                         _found 005D  
                             __end_of_isdigit 3A3C                                         _tempC 00D8  
                                       _tempF 00DC                                         _month 0060  
                               ___ftpack@sign 0015                            Set_RGB_Color@F4248 0134  
                                       _putch 3D12                             __end_of_I2C_Start 3CA0  
                           __end_of_I2C_Write 380A                                __CFG_BOREN$OFF 000000  
                                       tablat 000FF5                                         plusw1 000FE3  
                                       plusw2 000FDB                        __end_of_Monitor_Heater 33B0  
                                       status 000FD8                             ?_DS1621_Read_Temp 0014  
                                _Do_Beep_Good 3B64               __size_of_check_for_button_input 0080  
                       __end_of_Go_Next_Field 3B1C                               write_data@data_ 0013  
                          ??_DS1621_Read_Temp 0016                            Set_RGB_Color@color 0023  
                             __initialization 3038                                  __end_of_main 0F5A  
                                __end_of_font FDC4                      ?_Do_Save_New_Heater_Temp 0001  
                __end_of_Decrease_Heater_Temp 3BFA                              __end_of_Init_ADC 3D2E  
                            __end_of_Rcmd2red 378E                            _Select_Alarm_Field 0052  
                                      ??_main 0160                                 ___fttol@sign1 0035  
                               __activetblptr 000002                             ?_DS3231_Read_Time 0001  
                           __end_of_LCD_Reset 3C58       I2C_Write_Address_Write_One_Byte@Address 0013  
                       __end_of_Go_Prev_Field 3B04                     ??_TFT_GreenTab_Initialize 001D  
                 ?_Update_Setup_Heater_Screen 0001                    ??_Update_Setup_Time_Screen 0043  
                              _Init_Interrupt 39F6                            ??_DS3231_Read_Time 0014  
                                      ?_Rcmd1 0001                                        ?_Rcmd3 0001  
                                   I2C_Init@c 0011                           _In_Alarm_Time_Setup 00F7  
                                   I2C_Read@n 0012                   DS3231_Turn_Off_Alarm@Device 001F  
                                      _ADCON0 000FC2                                        _ADCON1 000FC1  
                                      _ADCON2 000FC0                           DS1621_Read_Temp@Cmd 0016  
                                      _ADRESH 000FC4                                        _ADRESL 000FC3  
                                      _CCPR1L 000FBE                                        _CCPR2L 000FBB  
                            ___awdiv@dividend 0153                        _Exit_Setup_Heater_Temp 3CD2  
                          __size_of_i2cLowSda 000A                            __size_of_i2cLowScl 0008  
                                      _HEATER 0050                                        ?_putch 0001  
                            __end_of___ftpack 27C8                              __end_of___lbtoft 39F6  
                                      _DC_Txt 00D0                                        i2l1121 2DF6  
                                      i2l1133 1790                 __size_of_Increase_Heater_Temp 0014  
                                   ??_Do_Init 0017                                        i2l7410 1694  
                                      i2l7404 1676                                        i2l7422 16BC  
                                      i2l7440 16EC                                        i2l7416 169E  
                                      i2l7434 16E2                                        i2l7460 176A  
                                      i2l7436 16E8                                        i2l7428 16C6  
                                      i2l7448 1742                                        i2l7800 2DE2  
                                      i2l7458 1764                                        i2l7394 1646  
                                      i2l7466 176E                                        i2l7804 2DEC  
                                      i2l7796 2DD8                              __end_of___lwtoft 39D0  
                                      _OSCCON 000FD3               __size_of_Do_Save_New_Alarm_Time 0018  
                         __size_of_TIMER1_isr 000C                                        _SPBRGH 000FB0  
                             ?_Monitor_Heater 0001                                        _SSPBUF 000FC9  
                                   ??_i2cNack 0011                                  _Alarm_SW_Txt 00CC  
                            _force_nec_state0 3D9A                              __end_of_delay_ms 34FA  
                                      _i2cAck 3CA0              ??_Initialize_Setup_Heater_Screen 0043  
             ?_Initialize_Setup_Heater_Screen 0001                  __size_of_Go_Prev_Alarm_Field 0018  
                            __end_of_fillRect 36C6                              __end_of_drawChar 18E8  
                          __size_of_OpenUSART 0070                                        ___ftge 2BE4  
                 __end_of_Increase_Alarm_Time 3548                          DS3231_Init@control_E 0019  
                    __size_of_Activate_Buzzer 0012                                        ___wmul 395C  
                                   ??___awdiv 0041                              __end_of_drawtext 1B06  
                                   ??___awmod 003F                                     ??___ftdiv 0032  
                                  _Test_Alarm 1D1E                                     ??___ftmul 0023  
                                   ??___fttol 0030                                        _chkisr 0008  
                                   ??___lwdiv 0015                                        _array1 011F  
                                   ??___lwmod 001C                                        _buffer 0100  
              __size_of_Exit_Setup_Alarm_Time 0010                                        _nec_ok 00F1  
               __end_of_Exit_Setup_Alarm_Time 3CF2                                        clear_0 303E  
                                      clear_1 304A                              ___awdiv@quotient 0159  
                                      _minute 005F                                        _second 0062  
                             ___awmod@divisor 003D                          _Activate_Buzzer_2KHz 3C58  
                           read_volt@num_step 002F                                     ??_get_RPM 0043  
                  __size_of_Deactivate_Buzzer 0008                               ___awmod@counter 003F  
                                      _printf 0A06                                  drawtext@size 0040  
                             ??_Increase_Time 0043                                        _strcpy 3878  
                                      _strlen 378E                         ___ftmul@f3_as_product 0027  
                      __end_of_Init_Interrupt 3A1A                          __end_of_get_full_ADC 39AA  
                      _check_for_button_input 2F3A                              _Do_Save_New_Time 3BAA  
                                __pdataCOMRAM 006E                                     ??_isdigit 0011  
                                   ?_I2C_Init 0011                                     ?_I2C_Read 0001  
                      get_duty_cycle@set_temp 0013                                     ?_I2C_Stop 0001  
                                __mediumconst FCC4                                        tblptrh 000FF7  
                                      tblptrl 000FF6                                        tblptru 000FF8  
            __end_of_I2C_Write_Cmd_Write_Data 3A7C                                   ?_i2cHighSda 0001  
                                 ?_i2cHighScl 0001                                        putch@c 0011  
                      __size_of_Set_RGB_Color 002E                              __end_of_spiwrite 3C0E  
                    __size_of_Exit_Time_Setup 0010                            __size_of_bcd_2_dec 002A  
                         _Do_Setup_Alarm_Time 27C8                                    __accesstop 0080  
                     __end_of__initialization 30A8                              ??_get_duty_cycle 0015  
       I2C_Write_Address_Read_One_Byte@Device 0016                            __size_of_dec_2_bcd 0068  
                                  ___ftge@ff1 0011                                    ___ftge@ff2 0014  
                                   ?_INT0_isr 0001                                     ?_INT1_isr 0001  
                                   ?_INT2_isr 0001                            _setup_alarm_minute 0064  
                          _setup_alarm_second 0065                                 ___rparam_used 000001  
                                  ___ftdiv@f1 002C               __end_of_Do_Save_New_Heater_Temp 3BE6  
                                  ___ftdiv@f2 002F                                    ___ftdiv@f3 0036  
                                  ___lbtoft@c 001C                           _Go_Next_Alarm_Field 3B34  
                                  ___ftmul@f1 001D                                    ___ftmul@f2 0020  
                                  ___fttol@f1 002C                                 __end_of_Rcmd1 19F8  
                               __end_of_Rcmd3 2102                                __pcstackCOMRAM 0001  
               DS3231_Turn_On_Alarm@Address_E 001B                 DS3231_Turn_On_Alarm@Address_F 001C  
                                __pidataBANK0 31EE                                  __pidataBANK1 33B0  
                               __end_of_font2 FEA0                             __end_of_i2cLowSda 3D6E  
                           __end_of_i2cLowScl 3D92                          ?_Do_Setup_Alarm_Time 0001  
                               __end_of_putch 3D20                         ?_Activate_Buzzer_2KHz 0001  
                      _Do_Save_New_Alarm_Time 3B4C                                    ___lwtoft@c 0019  
                              drawPixel@color 0019                                  dec_2_bcd@bcd 015B  
                                dec_2_bcd@dec 015D                        __size_of_Decrease_Time 00AA  
                             ?_Init_Interrupt 0001                        __size_of_write_command 0010  
                                  ??_I2C_Init 0015                                    ??_I2C_Read 0011  
                                _alarm_minute 0057                                  _alarm_second 0058  
            ??_Update_Setup_Alarm_Time_Screen 0043               ?_Update_Setup_Alarm_Time_Screen 0001  
                __end_of_DS3231_Turn_On_Alarm 3456                                    ??_I2C_Stop 0011  
                        ?_Go_Next_Alarm_Field 0001                                       ??_Rcmd1 001D  
                                     ??_Rcmd3 001D                            __size_of_drawPixel 0030  
                           __end_of_OpenUSART 3122                                       ??_putch 0011  
                        _Decrease_Heater_Temp 3BE6                       ??_DS3231_Turn_Off_Alarm 001B  
                                  __pbssBANK0 00E2                              _setup_alarm_hour 0063  
                                   ?_Init_ADC 0001                              _setup_alarm_time 0093  
        __end_of_Initialize_Setup_Time_Screen 1C12         __size_of_Initialize_Setup_Time_Screen 010C  
                _Initialize_Setup_Time_Screen 1B06                                 ??_DS1621_Init 0016  
                               ??_DS3231_Init 0017                                     ?_Rcmd2red 0001  
                       __end_of_Toggle_Heater 3C34                            __size_of_init_UART 0014  
                             spiwrite@spidata 0012                                    _alarm_date 0055  
                                  ??_INT0_isr 0001                                    ??_INT1_isr 0001  
                                  ??_INT2_isr 0001                                    _alarm_mode 00EB  
                                  _alarm_hour 0056                                    _alarm_time 0081  
                               ?_Wait_One_Sec 0001      I2C_Write_Address_Write_One_Byte@Data_Out 0014  
                                     ?_i2cAck 0001                                  ?_Do_Beep_Bad 0001  
                          __size_of_read_volt 0054                            __CFG_CCP2MX$PORTBE 000000  
                               _Set_RGB_Color 38DA                                 ??_Turn_On_Fan 0044  
                              I2C_Read@inByte 0013                                       ?___ftge 0011  
         __size_of_Update_Setup_Heater_Screen 00AC                    DS3231_Turn_On_Alarm@Device 001F  
                                     ?___wmul 0011                           __size_of_i2cHighSda 0008  
                         __size_of_i2cHighScl 000C                                   ?_Test_Alarm 0001  
                       ??_Do_Setup_Alarm_Time 0044                                       ?_chkisr 0001  
                             _heater_set_temp 006E                        __size_of_setAddrWindow 004E  
                           __end_of_bcd_2_dec 3932                                       _CCP1CON 000FBD  
            I2C_Write_Cmd_Write_Data@Data_Out 0014                                       _CCP2CON 000FBA  
                      __size_of_Do_Setup_Time 00CA                                  ??_TIMER1_isr 0001  
                               ??_I2C_ReStart 0011                                       _ALARMEN 0044  
                                   ?___ftpack 0011                                     ?___lbtoft 0019  
                                  I2C_Write@n 0012                                       ?_printf 001D  
                                     ?_strcpy 0011                                       ?_strlen 0011  
                                   ?___lwtoft 0019                             __end_of_dec_2_bcd 318A  
                           ??_Activate_Buzzer 0011                                    _fillScreen 3A9A  
                                     _MATCHED 00E9                         __end_of_Update_Screen 0686  
                    ??_DS3231_Read_Alarm_Time 0014                                    _drawCircle 12C8  
                       ??_Go_Next_Alarm_Field 0031                                     ?_delay_ms 0017  
                                   ?_fillRect 0023                                     ?_drawChar 002E  
                                     _SSPCON1 000FC6                         ?_Decrease_Heater_Temp 0001  
                                     _SSPSTAT 000FC7                                       _RPM_Txt 00C2  
                       __end_of_fillRectangle 2498                                     ?_drawtext 0039  
                                  ??_Init_ADC 0011                                       _Do_Init 32AC  
                    _I2C_Write_Cmd_Write_Data 3A5C                    __end_of_I2C_Write_Cmd_Only 3AEC  
                                  ??_Rcmd2red 0014                  __end_of_Do_Setup_Heater_Temp 2D0E  
                      DS1621_Read_Temp@Device 0018                                 _Decrease_Time 2AA0  
                              ??_Wait_One_Sec 0011                                       _i2cNack 3D5A  
                          __end_of_TIMER1_isr 3D46                 ?_Initialize_Setup_Time_Screen 0001  
                __size_of_Decrease_Alarm_Time 004E                                 _write_command 3D02  
                                   _I2C_Start 3C8E                                     _I2C_Write 37CC  
                           ??_Exit_Time_Setup 0043                               __size_of_i2cAck 0012  
                                     __Hparam 0000                                       __Lparam 0000  
                              ?_Set_RGB_Color 0001                           __end_of_DS1621_Init 3A9A  
                         __end_of_DS3231_Init 293E                             __end_of_drawPixel 38DA  
                       __end_of_drawFastVLine 2EB8                               __size_of___ftge 0096  
                                     ___awdiv 2568                                       ___awmod 2EB8  
                                     ___ftdiv 22DA                               __size_of___wmul 0028  
                      ??_Activate_Buzzer_2KHz 0011                                       ___ftmul 1E26  
                                     ___fttol 21F4                                       ___lwdiv 3250  
                                     ___lwmod 3630                         __size_of_get_full_ADC 0026  
                             __size_of_chkisr 2E28                                     ?_spiwrite 0001  
                                     __pcinit 3038                                    ??___ftpack 0016  
                                  ??___lbtoft 001C                                       __ramtop 1000  
                                     _get_RPM 370E                                       __ptext0 0D60  
                                     __ptext1 3308                                       __ptext2 3984  
                                     __ptext3 39AA                                       __ptext4 370E  
                                     __ptext5 001C                     __size_of_DS1621_Read_Temp 003C  
                                     __ptext6 3C22                                       __ptext7 1D1E  
                                     __ptext8 2BE4                                       __ptext9 38DA  
                             __size_of_printf 035A                             __end_of_init_UART 3C22  
                         __end_of_Turn_On_Fan 3CC2                                    ??___lwtoft 001C  
                                   _T0CONbits 000FD5                               __size_of_strcpy 0032  
                             __size_of_strlen 003E                             __end_of_hexpowers FEB2  
                    __end_of_force_nec_state0 3DA2                                     _T1CONbits 000FCD  
                                     _dpowers FEA0                         __end_of_do_update_pwm 29F4  
                                     _isdigit 3A1A                         _Activate_Buzzer_500Hz 3C6A  
                            ___awmod@dividend 003B                                    _duty_cycle 005C  
                     ?_Exit_Setup_Heater_Temp 0001                           _Go_Prev_Alarm_Field 3B1C  
                           __end_of_read_volt 335C                                    ??_delay_ms 0019  
                         __end_of_I2C_ReStart 3BAA              __size_of_Do_Save_New_Heater_Temp 0014  
                               drawtext@_text 003A                                 drawtext@color 003C  
                            ??_Monitor_Heater 00FD                                    ??_fillRect 0028  
                                  ??_drawChar 0035                                     _LCD_Reset 3C46  
                           _DS3231_Write_Time 2D0E                                 _setAddrWindow 3596  
                              __pintcode_body 2DA0                                 Wait_One_Sec@k 0011  
                                  delay_ms@ms 0017                          end_of_initialization 30A8  
                               _Do_Setup_Time 2638                                     _INT1_flag 00F5  
                         __size_of_Test_Alarm 0108                                     _INT2_flag 00F6  
                                  ??_drawtext 0041                            ?_DS3231_Write_Time 0001  
                              ?_Decrease_Time 0001                 DS3231_Turn_On_Alarm@control_E 001D  
               DS3231_Turn_On_Alarm@control_F 001E                                ?_write_command 0001  
                               __Lmediumconst FCC4                     __size_of_DS3231_Read_Time 0064  
                                     int_func 2DA0                       DS3231_Read_Time@Address 0014  
                    DS3231_Write_Time@Address 015F                                    ?_I2C_Start 0001  
                          read_volt@voltage_v 0032                                    ?_I2C_Write 0001  
                                  get_RPM@RPS 00FD                      __end_of_Do_Save_New_Time 3BBE  
                                _get_full_ADC 3984                           ??_DS3231_Write_Time 0043  
                        ?_Go_Prev_Alarm_Field 0001                       check_for_button_input@j 003A  
                    ?_DS3231_Write_Alarm_Time 0001                                    _tempSecond 006F  
                        _DS3231_Turn_On_Alarm 3404                                     _RCSTAbits 000FAB  
                                     printf@c 0038                                       printf@f 001D  
                                     postdec1 000FE5                                       postdec2 000FDD  
                                     postinc0 000FEE                                       postinc2 000FDE  
                __end_of_Increase_Heater_Temp 3BD2                                    ??_spiwrite 0011  
                     ?_check_for_button_input 0001                                       strlen@s 0011  
                 I2C_Write_Cmd_Write_Data@Cmd 0013                                     _PORTAbits 000F80  
                            drawtext@cursor_x 0159                              drawtext@cursor_y 0158  
                                   _PORTBbits 000F81                                     _PORTDbits 000F83  
                            I2C_Write@outByte 0011        __end_of_Initialize_Setup_Heater_Screen 2010  
     __size_of_Initialize_Setup_Heater_Screen 00F2                _Initialize_Setup_Heater_Screen 1F1E  
                                  _setup_date 009C                                   ?_fillScreen 0024  
              __end_of_Exit_Setup_Heater_Temp 3CE2                                    _setup_hour 0068  
                                  _setup_time 00A5                                    _setup_year 006C  
                                 ?_drawCircle 001C               __size_of_DS3231_Read_Alarm_Time 004C  
                                  drawChar@bg 0032                     __end_of_DS3231_Write_Time 2DA0  
              DS3231_Turn_Off_Alarm@Address_E 001B                DS3231_Turn_Off_Alarm@Address_F 001C  
                                   _TRISBbits 000F93                                     _TRISCbits 000F94  
                                   _TRISDbits 000F95                        __size_of_Go_Next_Field 0018  
      I2C_Write_Address_Read_One_Byte@Address 0014                                  ??_i2cHighSda 0011  
                                ??_i2cHighScl 0011                        ??_Decrease_Heater_Temp 0043  
                           __size_of_I2C_Init 000A                             __size_of_I2C_Read 0048  
                           __size_of_I2C_Stop 0012                                ?_setAddrWindow 0014  
                                  ?_LCD_Reset 0001                                ?_Do_Setup_Time 0001  
                        _In_Heater_Temp_Setup 00F8                              drawtext@textsize 0154  
                                  drawPixel@x 001B                                    drawPixel@y 0018  
                                 _DS1621_Init 3A7C                                   _DS3231_Init 2886  
                                 ___ftdiv@exp 0039                                   printf@width 0036  
                                   _TXSTAbits 000FAC                               ??_Set_RGB_Color 0013  
                       ??_Go_Prev_Alarm_Field 0031             __size_of_Update_Setup_Time_Screen 01A8  
                          get_full_ADC@result 0015                     ?_Update_Setup_Time_Screen 0001  
                       ?_DS3231_Turn_On_Alarm 0001                             __size_of_INT0_isr 0174  
                           __size_of_INT1_isr 000A                             __size_of_INT2_isr 000A  
                              __end_of_i2cAck 3CB2                                   ___ftmul@exp 0026  
                      __size_of_Go_Prev_Field 0018                ??_Initialize_Setup_Time_Screen 0043  
                     ?_Do_Save_New_Alarm_Time 0001                          __size_of_Do_Beep_Bad 0018  
                    DS1621_Read_Temp@Data_Ret 0017                                   _Turn_On_Fan 3CB2  
              __end_of_check_for_button_input 2FBA                              ??_Init_Interrupt 0011  
          Update_Setup_Heater_Screen@dc_char1 00FD            Update_Setup_Heater_Screen@dc_char2 00FE  
          Update_Setup_Heater_Screen@dc_char3 00FF                            __end_of_i2cHighSda 3D9A  
                              __end_of___ftge 2C7A                            __end_of_i2cHighScl 3D3A  
                              __end_of___wmul 3984                                 delay_ms@count 001B  
                                  _write_data 3CF2                                 __pidataCOMRAM 3DA2  
                              __end_of_chkisr 2E30                      ?_TFT_GreenTab_Initialize 0001  
                                 _I2C_ReStart 3B94                                    drawtext@bg 003E  
                       _Exit_Setup_Alarm_Time 3CE2                        ?_Activate_Buzzer_500Hz 0001  
                                   _Nec_code1 00FA                                     _i2cLowSda 3D64  
                        _Do_Setup_Heater_Temp 2C7A                                     _i2cLowScl 3D8A  
                __size_of_Increase_Alarm_Time 004E                          __end_of_Wait_One_Sec 3AD2  
                              __end_of_printf 0D60                         __end_of_Increase_Time 2BE4  
                              __end_of_strcpy 38AA                                __end_of_strlen 37CC  
                                   _Nec_state 0051                           start_initialization 3038  
                      Update_Screen@neg_tempF 015B                            get_duty_cycle@diff 0017  
                             ??_Decrease_Time 0043                            get_duty_cycle@temp 0011  
                             ??_write_command 0013               __end_of_DS3231_Write_Alarm_Time 3038  
                                   _OpenUSART 30B2                __size_of_DS3231_Turn_Off_Alarm 0052  
                DS3231_Read_Alarm_Time@Device 0015                 __end_of_DS3231_Turn_Off_Alarm 34A8  
                            __CFG_OSC$INTIO67 000000                                   ??_I2C_Start 0011  
                           __size_of_Init_ADC 000E                                   ??_I2C_Write 0011  
                      _DS3231_Read_Alarm_Time 35E4                                      ??_i2cAck 0011  
                           __size_of_Rcmd2red 003E                           __size_of_fillScreen 001C  
     I2C_Write_Address_Read_One_Byte@Data_Ret 0015                __end_of_Do_Save_New_Alarm_Time 3B64  
                         __size_of_drawCircle 01AE                                 _Go_Next_Field 3B04  
                             _Activate_Buzzer 3C34                                      ??___ftge 0017  
                                    ??___wmul 0015                                  ??_Test_Alarm 0044  
                               ?_Turn_Off_Fan 0001                                      ??_chkisr 0003  
                                 __pdataBANK0 0080                                   __pdataBANK1 0100  
                             setAddrWindow@x0 0017                               setAddrWindow@x1 0015  
                             setAddrWindow@y0 0014                               setAddrWindow@y1 0016  
                                    ??_printf 002B                              _DS1621_Read_Temp 380A  
                       ?_Do_Setup_Heater_Temp 0001                                      ??_strcpy 0015  
                                    ??_strlen 0013                                    ?_i2cLowSda 0001  
                                  ?_i2cLowScl 0001                           _Decrease_Alarm_Time 3548  
                                   _bcd_2_dec 3908                             __size_of___ftpack 00C6  
                           __size_of___lbtoft 0026                       _Do_Save_New_Heater_Temp 3BD2  
                                 __pbssCOMRAM 0044                    ??_I2C_Write_Cmd_Write_Data 0015  
                  __size_of_DS3231_Write_Time 0092                             __size_of___lwtoft 0026  
                             ??_setAddrWindow 0017                                 __pcstackBANK0 00FD  
                               __pcstackBANK1 0153                                 _Go_Prev_Field 3AEC  
                             ??_Do_Setup_Time 0044                                     _dec_2_bcd 3122  
                             _Exit_Time_Setup 3CC2                                   ??_LCD_Reset 001D  
                                _isdigit$2828 0012                             __size_of_delay_ms 0052  
                               _Heater_SW_Txt 00D4                          _Increase_Heater_Temp 3BBE  
                                    ?_Do_Init 0001                             __size_of_fillRect 004A  
                           __size_of_drawChar 0156                            __end_of_Test_Alarm 1E26  
                                  ?_OpenUSART 0011                              _DS3231_Read_Time 318A  
                         _Heater_Set_Temp_Txt 00BD                                      ?_i2cNack 0001  
                        ?_Decrease_Alarm_Time 0001                             __size_of_drawtext 010E  
                               ?_Do_Beep_Good 0001                        ??_DS3231_Turn_On_Alarm 001B  
 __end_of_Update_Setup_Screen_Cursor_Backward 12C8  __size_of_Update_Setup_Screen_Cursor_Backward 01B4  
       ??_Update_Setup_Screen_Cursor_Backward 002E          ?_Update_Setup_Screen_Cursor_Backward 0001  
         _Update_Setup_Screen_Cursor_Backward 1114                   __end_of_Do_Setup_Alarm_Time 2886  
                              ?_Go_Next_Field 0001                              ___lwdiv@dividend 0011  
                                 I2C_Read@ack 0011                                     _bit_count 00FC  
                                   __pintcode 0008               __end_of_TFT_GreenTab_Initialize 395C  
                              ??_Turn_Off_Fan 0011                                 __pmediumconst FCC4  
                                    ?___awdiv 0153                                     __ptext100 3D50  
                                   __ptext101 3A7C                                     __ptext110 3CA0  
                                   __ptext102 3A5C                                     __ptext111 3B94  
                                   __ptext103 3AD2                                     __ptext120 161E  
                                   __ptext112 3D64                                     __ptext104 380A  
                                   __ptext121 3D9A                                     __ptext113 3D8A  
                                   __ptext105 37CC                                     __ptext114 3D92  
                                   __ptext106 3C7C                                     __ptext115 3D2E  
                                   __ptext107 3C8E                                     __ptext108 36C6  
                                   __ptext117 3D3A                                     __ptext109 3D5A  
                                   __ptext118 3D6E                                     __ptext119 3D78  
                                    ?___awmod 003B                                      ?___ftdiv 002C  
                                    ?___ftmul 001D                                      ?___fttol 002C  
                     __size_of_get_duty_cycle 00D0                                     __tft_type 0054  
                                    ?___lwdiv 0011                            _I2C_Write_Cmd_Only 3AD2  
                                    ?___lwmod 0018                   __end_of_Go_Next_Alarm_Field 3B4C  
              DS3231_Turn_Off_Alarm@control_E 001D                DS3231_Turn_Off_Alarm@control_F 001E  
                          drawFastVLine@color 001A                                   ?_write_data 0001  
                      ?_Exit_Setup_Alarm_Time 0001                                     _drawPixel 38AA  
                                    ?_get_RPM 0041                             __size_of_spiwrite 0014  
                                  ?_bcd_2_dec 0001                        __size_of_Toggle_Heater 0012  
                         ?_I2C_Write_Cmd_Only 0013                             ?_force_nec_state0 0001  
                                    ?_isdigit 0001                                      _I2C_Init 3D50  
                                    _I2C_Read 36C6                                ?_Go_Prev_Field 0001  
                                    _I2C_Stop 3C7C                             _Initialize_Screen 0686  
                              __size_of_Rcmd1 0110                                __size_of_Rcmd3 00F2  
                ??_Update_Setup_Heater_Screen 0043                                     _init_UART 3C0E  
                                  ?_dec_2_bcd 0041                            ??_force_nec_state0 0001  
                    I2C_Write_Cmd_Only@Device 0014                                     _hexpowers FEAA  
                          ?_Initialize_Screen 0001                              ___lwdiv@quotient 0015  
                              __size_of_putch 000E                                     _read_volt 3308  
                       ?_Increase_Heater_Temp 0001      __end_of_I2C_Write_Address_Write_One_Byte 3A5C  
   __size_of_I2C_Write_Address_Write_One_Byte 0020            ??_I2C_Write_Address_Write_One_Byte 0015  
           ?_I2C_Write_Address_Write_One_Byte 0013              _I2C_Write_Address_Write_One_Byte 3A3C  
                     __end_of_Activate_Buzzer 3C46                         ??_Decrease_Alarm_Time 0043  
                              ___wmul@product 0015                                ??_Do_Beep_Good 0044  
                         ??_Initialize_Screen 0043                                  _Select_Field 0053  
                                    _INT0_isr 161E                                      _INT1_isr 3D78  
                                    _INT2_isr 3D6E                          ??_I2C_Write_Cmd_Only 0014  
                                    _PIE1bits 000F9D                             ?_Do_Save_New_Time 0001  
                      __size_of_Update_Screen 066A                        DS3231_Read_Time@Device 0015  
                     DS3231_Write_Time@Device 015E                                      _PIR1bits 000F9E  
                               _In_Time_Setup 00F9                            ??_Do_Save_New_Time 0043  
                       __size_of_Wait_One_Sec 001C                                     _setup_day 0066  
                           DS1621_Init@Device 0016                                     fillRect@h 0025  
                                   fillRect@i 002C                                     fillRect@w 0024  
                                   fillRect@x 002B                                     fillRect@y 0023  
                      ??_Do_Setup_Heater_Temp 015B                                     drawChar@c 002F  
                                   drawChar@i 0038                                     drawChar@j 0037  
                                   drawChar@x 0036                                     drawChar@y 002E  
               __size_of_Activate_Buzzer_2KHz 0012                                    ?_drawPixel 0018  
                      __size_of_fillRectangle 00DC                     ??_Do_Save_New_Heater_Temp 0043  
                                  _ADCON0bits 000FC2                       __end_of_Exit_Time_Setup 3CD2  
                           ___wmul@multiplier 0011                     __end_of_Initialize_Screen 0A06  
                                 ??_i2cLowSda 0011                                   ??_i2cLowScl 0011  
               DS3231_Read_Alarm_Time@Address 0014                                  ??_fillScreen 0026  
            __size_of_DS3231_Write_Alarm_Time 007E                                  ??_drawCircle 0024  
                                  printf@flag 0035                                    printf@prec 0032  
                             Set_RGB_Color@D3 0013                                    ?_init_UART 0001  
            __end_of_Update_Setup_Time_Screen 161E                                   _INTCON2bits 000FF1  
     __end_of_I2C_Write_Address_Read_One_Byte 3878      __size_of_I2C_Write_Address_Read_One_Byte 0032  
           ??_I2C_Write_Address_Read_One_Byte 0015              ?_I2C_Write_Address_Read_One_Byte 0014  
             _I2C_Write_Address_Read_One_Byte 3846                                   _INTCON3bits 000FF0  
                                   copy_data0 3064                                     copy_data1 3084  
                                   drawtext@i 0156                        __size_of_drawFastVLine 0088  
                                   drawtext@x 0153                                     drawtext@y 0039  
                                  ?_read_volt 002C                                      _Nec_code 00E2  
                                    _Init_ADC 3D20                             write_command@cmd_ 0013  
  __end_of_Initialize_Setup_Alarm_Time_Screen 1D1E   __size_of_Initialize_Setup_Alarm_Time_Screen 010C  
        ??_Initialize_Setup_Alarm_Time_Screen 0043           ?_Initialize_Setup_Alarm_Time_Screen 0001  
          _Initialize_Setup_Alarm_Time_Screen 1C12                                   ??_OpenUSART 0013  
                                ?_DS1621_Init 0001                                      _Rcmd2red 3750  
                            __size_of_Do_Init 005C                           __size_of_write_data 0010  
                                ?_DS3231_Init 0001                               ??_Go_Next_Field 0031  
                             OpenUSART@config 0013        I2C_Write_Address_Write_One_Byte@Device 0015  
                               _Toggle_Heater 3C22                                  _Time_Elapsed 004A  
                         _Increase_Alarm_Time 34FA                              __size_of_i2cNack 000A  
                               _RTC_ALARM_Txt 00E0                                  _Wait_One_Sec 3AB6  
                                    __Hrparam 0000                        __size_of_do_update_pwm 00B6  
                          __end_of_fillScreen 3AB6                                      __Lrparam 0000  
                          __end_of_drawCircle 1476                                  ?_Turn_On_Fan 0001  
                     ??_Activate_Buzzer_500Hz 0011                              __size_of___awdiv 00D0  
                            __size_of___awmod 0082                              __size_of___ftdiv 00E2  
                            __size_of___ftmul 00F8                              __size_of___fttol 00E6  
                            __size_of___lwdiv 005C                                      _Volt_Txt 00B7  
                            __size_of___lwmod 004C                                      ___ftpack 2702  
                                    ___lbtoft 39D0                                  ?_I2C_ReStart 0001  
                             ??_Go_Prev_Field 0031                                      ___lwtoft 39AA  
                            __size_of_get_RPM 0042                                   ??_bcd_2_dec 0011  
                        ?_Increase_Alarm_Time 0001                                 _Update_Screen 001C  
                            __size_of_isdigit 0022                                      _delay_ms 34A8  
                             ___lwdiv@divisor 0013                                   ??_dec_2_bcd 00FD  
                             ___lwdiv@counter 0017                                      __ptext10 3404  
                                    __ptext11 3456                                      __ptext20 1B06  
                                    __ptext12 2886                                      __ptext21 2B4A  
                                    __ptext13 3A3C                                      __ptext30 1F1E  
                                    __ptext22 3AEC                                      __ptext14 3846  
                                    __ptext31 3BBE                                      __ptext23 3B04  
                                    __ptext15 3C34                                      __ptext40 34FA  
                                    __ptext32 3CD2                                      __ptext24 3CC2  
                                    __ptext16 335C                                      __ptext41 3B1C  
                                    __ptext33 3BD2                                      __ptext25 3BAA  
                                    __ptext17 2498                                      __ptext50 23BC  
                                    __ptext42 1114                                      __ptext34 3BE6  
                                    __ptext26 2D0E                                      __ptext18 3CB2  
                                    __ptext51 12C8                                      __ptext43 3B34  
                                    __ptext35 29F4                                      __ptext27 2AA0  
                                    __ptext19 2638                                      __ptext60 318A  
                                    __ptext52 3932                                      __ptext44 0F5A  
                                    __ptext36 27C8                                      __ptext28 1476  
                                    __ptext61 35E4                                      __ptext53 2010  
                                    __ptext45 3CE2                                      __ptext37 2F3A  
                                    __ptext29 2C7A                                      __ptext70 2702  
                                    __ptext62 3B64                                      __ptext54 3750  
                                    __ptext46 3B4C                                      __ptext38 3908  
                                    __ptext71 3AB6                                      __ptext63 3C58  
                                    __ptext55 18E8                                      __ptext47 0686  
                                    __ptext39 1C12                                      __ptext80 3250  
                                    __ptext72 3D82                                      __ptext64 3B7C  
                                    __ptext56 3C46                                      __ptext48 3878  
                                    __ptext81 19F8                                      __ptext73 3C6A  
                                    __ptext65 293E                                      __ptext57 34A8  
                                    __ptext49 3A9A                                      __ptext90 3BFA  
                                    __ptext82 378E                                      __ptext74 3548  
                                    __ptext66 39D0                                      __ptext58 2FBA  
                                    __ptext91 395C                                      __ptext83 1792  
                                    __ptext75 2102                                      __ptext67 21F4  
                                    __ptext59 3122                                      __ptext92 2EB8  
                                    __ptext84 367C                                      __ptext76 0A06  
                                    __ptext68 1E26                                      __ptext93 2568  
                                    __ptext85 2E30                                      __ptext77 3D12  
                                    __ptext69 22DA                                      __ptext94 32AC  
                                    __ptext86 38AA                                      __ptext78 3A1A  
                                    __ptext95 3C0E                                      __ptext87 3596  
                                    __ptext79 3630                                      __ptext96 30B2  
                                    __ptext88 3CF2                                      __ptext97 3D46  
                                    __ptext89 3D02                                      __ptext98 39F6  
                                    __ptext99 3D20                        ??_Increase_Heater_Temp 0043  
                                    _fillRect 367C                                      _drawChar 1792  
                        __end_of_Turn_Off_Fan 3D50              __size_of_TFT_GreenTab_Initialize 002A  
               __size_of_Decrease_Heater_Temp 0014    __end_of_Update_Setup_Screen_Cursor_Forward 1114  
 __size_of_Update_Setup_Screen_Cursor_Forward 01BA          ??_Update_Setup_Screen_Cursor_Forward 002E  
         ?_Update_Setup_Screen_Cursor_Forward 0001            _Update_Setup_Screen_Cursor_Forward 0F5A  
                                    _colstart 0059                   __end_of_Go_Prev_Alarm_Field 3B34  
                                    _drawtext 19F8                                    strcpy@from 0013  
                     ?_DS3231_Read_Alarm_Time 0001                                 _fillRectangle 23BC  
              DS3231_Write_Alarm_Time@Address 015F                                ?_Toggle_Heater 0001  
                    __end_of_DS1621_Read_Temp 3846                              ?_Activate_Buzzer 0001  
                               __size_of_main 01FA                                 ??_Do_Beep_Bad 0044  
                     __size_of_Monitor_Heater 0054                         __end_of_Set_RGB_Color 3908  
                             fillRectangle@hi 0021                               fillRectangle@lo 0022  
               Update_Screen@neg_DS1621_tempC 015D                                _get_duty_cycle 2498  
                               _drawFastVLine 2E30                                     printf@idx 002F  
                                    _spiwrite 3BFA                                     printf@val 0033  
                           DS3231_Init@Device 001A                                   ??_drawPixel 001B  
                                    _rowstart 0061                      __end_of_DS3231_Read_Time 31EE  
                       ??_Increase_Alarm_Time 0043                    __size_of_Initialize_Screen 0380  
                            ?_Exit_Time_Setup 0001                          __end_of_Do_Beep_Good 3B7C  
                              ?_Update_Screen 0001                                    _INTCONbits 000FF2  
          __end_of_Update_Setup_Heater_Screen 2AA0                    _Update_Setup_Heater_Screen 29F4  
                               _do_update_pwm 293E                                OpenUSART@spbrg 0011  
                                 ??_init_UART 0014                                      isdigit@c 0013  
              __end_of_DS3231_Read_Alarm_Time 3630                                   ??_read_volt 002F  
                                   spiwrite@x 0011                                      intlevel2 0000  
                              ?_fillRectangle 0018                         __end_of_Decrease_Time 2B4A  
                    _Update_Setup_Time_Screen 1476                              ___lwmod@dividend 0018  
                       __end_of_write_command 3D12                               fillScreen@color 0024  
                       _DS3231_Turn_Off_Alarm 3456                 DS3231_Write_Alarm_Time@Device 015E  
                     do_update_pwm@duty_cycle 0041                        __end_of_get_duty_cycle 2568  
                      __size_of_Increase_Time 009A                      _Select_Heater_Temp_Field 00FB  
                              fillRectangle@h 001A                                fillRectangle@w 0019  
                              fillRectangle@x 0023                                fillRectangle@y 0018  
                     ??_Exit_Setup_Alarm_Time 0043                                ?_drawFastVLine 0018  
                                    printf@ap 0030                      ??_Exit_Setup_Heater_Temp 0043  
                         __end_of_Do_Beep_Bad 3B94                                  ??_write_data 0013  
                                  _TIMER1_isr 3D3A                                 fillRect@color 0026  
                     _DS3231_Write_Alarm_Time 2FBA                                ?_do_update_pwm 0001  
                             ___lwmod@divisor 001A                                      strcpy@cp 0015  
                                    strlen@cp 0015                                      strcpy@to 0011  
                       I2C_Write_Cmd_Only@Cmd 0013                               ___lwmod@counter 001C  
                                _setup_minute 0069                                  _setup_second 006B  
                     __size_of_Init_Interrupt 0024                         __end_of_setAddrWindow 35E4  
                       __end_of_Do_Setup_Time 2702                            fillRectangle@color 001B  
                             ??_Toggle_Heater 0044                             do_update_pwm@dc_I 0042  
                           do_update_pwm@dc_f 003E                                 drawChar@color 0030  
                                 _setup_month 006A                            __end_of_write_data 3D02  
                   __size_of_force_nec_state0 0008                                  drawChar@line 0035  
                               ?_get_full_ADC 0011                      ??_check_for_button_input 0039  
                                drawChar@size 0034             __size_of_I2C_Write_Cmd_Write_Data 0020  
                        __size_of_DS1621_Init 001E                     ?_I2C_Write_Cmd_Write_Data 0013  
                        __size_of_DS3231_Init 00B8                               ?_get_duty_cycle 0011  
               __size_of_DS3231_Turn_On_Alarm 0052        __end_of_Update_Setup_Alarm_Time_Screen 21F4  
     __size_of_Update_Setup_Alarm_Time_Screen 00F2                _Update_Setup_Alarm_Time_Screen 2102  
