

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Mar 10 18:56:45 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1
    52                           	psect	text42,global,reloc=2,class=CODE,delta=1
    53                           	psect	text43,global,reloc=2,class=CODE,delta=1
    54                           	psect	text44,global,reloc=2,class=CODE,delta=1
    55                           	psect	text45,global,reloc=2,class=CODE,delta=1
    56                           	psect	text46,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           	psect	idataBANK0
    61  002F16                     __pidataBANK0:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _array
    65  002F16  40                 	db	64
    66  002F17  79                 	db	121
    67  002F18  24                 	db	36
    68  002F19  30                 	db	48
    69  002F1A  19                 	db	25
    70  002F1B  12                 	db	18
    71  002F1C  02                 	db	2
    72  002F1D  78                 	db	120
    73  002F1E  00                 	db	0
    74  002F1F  10                 	db	16
    75                           
    76                           	psect	smallconst
    77  001000                     __psmallconst:
    78                           	opt stack 0
    79  001000  00                 	db	0
    80  001001                     _dpowers:
    81                           	opt stack 0
    82  001001  0001               	dw	1
    83  001003  0000               	dw	0
    84  001005  000A               	dw	10
    85  001007  0000               	dw	0
    86  001009  0064               	dw	100
    87  00100B  0000               	dw	0
    88  00100D  03E8               	dw	1000
    89  00100F  0000               	dw	0
    90  001011  2710               	dw	10000
    91  001013  0000               	dw	0
    92  001015  86A0               	dw	34464
    93  001017  0001               	dw	1
    94  001019  4240               	dw	16960
    95  00101B  000F               	dw	15
    96  00101D  9680               	dw	38528
    97  00101F  0098               	dw	152
    98  001021  E100               	dw	57600
    99  001023  05F5               	dw	1525
   100  001025  CA00               	dw	51712
   101  001027  3B9A               	dw	15258
   102  001029                     __end_of_dpowers:
   103                           	opt stack 0
   104  001029                     __npowers_:
   105                           	opt stack 0
   106  001029  00                 	db	0
   107  00102A  80                 	db	128
   108  00102B  3F                 	db	63
   109  00102C  CD                 	db	205
   110  00102D  CC                 	db	204
   111  00102E  3D                 	db	61
   112  00102F  D7                 	db	215
   113  001030  23                 	db	35
   114  001031  3C                 	db	60
   115  001032  12                 	db	18
   116  001033  83                 	db	131
   117  001034  3A                 	db	58
   118  001035  B7                 	db	183
   119  001036  D1                 	db	209
   120  001037  38                 	db	56
   121  001038  C6                 	db	198
   122  001039  27                 	db	39
   123  00103A  37                 	db	55
   124  00103B  38                 	db	56
   125  00103C  86                 	db	134
   126  00103D  35                 	db	53
   127  00103E  C0                 	db	192
   128  00103F  D6                 	db	214
   129  001040  33                 	db	51
   130  001041  CC                 	db	204
   131  001042  2B                 	db	43
   132  001043  32                 	db	50
   133  001044  70                 	db	112
   134  001045  89                 	db	137
   135  001046  30                 	db	48
   136  001047  E7                 	db	231
   137  001048  DB                 	db	219
   138  001049  2E                 	db	46
   139  00104A  E5                 	db	229
   140  00104B  3C                 	db	60
   141  00104C  1E                 	db	30
   142  00104D  42                 	db	66
   143  00104E  A2                 	db	162
   144  00104F  0D                 	db	13
   145  001050                     __end_of__npowers_:
   146                           	opt stack 0
   147  001050                     __powers_:
   148                           	opt stack 0
   149  001050  00                 	db	0
   150  001051  80                 	db	128
   151  001052  3F                 	db	63
   152  001053  00                 	db	0
   153  001054  20                 	db	32
   154  001055  41                 	db	65
   155  001056  00                 	db	0
   156  001057  C8                 	db	200
   157  001058  42                 	db	66
   158  001059  00                 	db	0
   159  00105A  7A                 	db	122
   160  00105B  44                 	db	68
   161  00105C  40                 	db	64
   162  00105D  1C                 	db	28
   163  00105E  46                 	db	70
   164  00105F  50                 	db	80
   165  001060  C3                 	db	195
   166  001061  47                 	db	71
   167  001062  24                 	db	36
   168  001063  74                 	db	116
   169  001064  49                 	db	73
   170  001065  97                 	db	151
   171  001066  18                 	db	24
   172  001067  4B                 	db	75
   173  001068  BC                 	db	188
   174  001069  BE                 	db	190
   175  00106A  4C                 	db	76
   176  00106B  6B                 	db	107
   177  00106C  6E                 	db	110
   178  00106D  4E                 	db	78
   179  00106E  03                 	db	3
   180  00106F  15                 	db	21
   181  001070  50                 	db	80
   182  001071  79                 	db	121
   183  001072  AD                 	db	173
   184  001073  60                 	db	96
   185  001074  F3                 	db	243
   186  001075  49                 	db	73
   187  001076  71                 	db	113
   188  001077                     __end_of__powers_:
   189                           	opt stack 0
   190  0000                     _ADCON0	set	4034
   191  0000                     _ADCON0bits	set	4034
   192  0000                     _ADCON1	set	4033
   193  0000                     _ADCON2	set	4032
   194  0000                     _ADRESH	set	4036
   195  0000                     _ADRESL	set	4035
   196  0000                     _OSCCON	set	4051
   197  0000                     _PIE1bits	set	3997
   198  0000                     _PIR1bits	set	3998
   199  0000                     _PORTA	set	3968
   200  0000                     _PORTB	set	3969
   201  0000                     _PORTBbits	set	3969
   202  0000                     _PORTC	set	3970
   203  0000                     _PORTD	set	3971
   204  0000                     _PORTE	set	3972
   205  0000                     _RCSTA	set	4011
   206  0000                     _RCSTAbits	set	4011
   207  0000                     _SPBRG	set	4015
   208  0000                     _SPBRGH	set	4016
   209  0000                     _TRISA	set	3986
   210  0000                     _TRISB	set	3987
   211  0000                     _TRISC	set	3988
   212  0000                     _TRISCbits	set	3988
   213  0000                     _TRISD	set	3989
   214  0000                     _TRISE	set	3990
   215  0000                     _TXREG	set	4013
   216  0000                     _TXSTA	set	4012
   217  0000                     _TXSTAbits	set	4012
   218  0000                     _TRMT	set	32097
   219  001077                     STR_3:
   220  001077  54                 	db	84	;'T'
   221  001078  65                 	db	101	;'e'
   222  001079  6D                 	db	109	;'m'
   223  00107A  70                 	db	112	;'p'
   224  00107B  65                 	db	101	;'e'
   225  00107C  72                 	db	114	;'r'
   226  00107D  61                 	db	97	;'a'
   227  00107E  74                 	db	116	;'t'
   228  00107F  75                 	db	117	;'u'
   229  001080  72                 	db	114	;'r'
   230  001081  65                 	db	101	;'e'
   231  001082  20                 	db	32
   232  001083  3D                 	db	61	;'='
   233  001084  20                 	db	32
   234  001085  25                 	db	37
   235  001086  66                 	db	102	;'f'
   236  001087  2F                 	db	47
   237  001088  20                 	db	32
   238  001089  46                 	db	70	;'F'
   239  00108A  20                 	db	32
   240  00108B  0D                 	db	13
   241  00108C  0A                 	db	10
   242  00108D  0A                 	db	10
   243  00108E  00                 	db	0
   244  00108F                     STR_4:
   245  00108F  4C                 	db	76	;'L'
   246  001090  69                 	db	105	;'i'
   247  001091  67                 	db	103	;'g'
   248  001092  68                 	db	104	;'h'
   249  001093  74                 	db	116	;'t'
   250  001094  20                 	db	32
   251  001095  56                 	db	86	;'V'
   252  001096  6F                 	db	111	;'o'
   253  001097  6C                 	db	108	;'l'
   254  001098  74                 	db	116	;'t'
   255  001099  20                 	db	32
   256  00109A  3D                 	db	61	;'='
   257  00109B  20                 	db	32
   258  00109C  25                 	db	37
   259  00109D  66                 	db	102	;'f'
   260  00109E  20                 	db	32
   261  00109F  6D                 	db	109	;'m'
   262  0010A0  56                 	db	86	;'V'
   263  0010A1  20                 	db	32
   264  0010A2  0D                 	db	13
   265  0010A3  0A                 	db	10
   266  0010A4  0A                 	db	10
   267  0010A5  00                 	db	0
   268  0010A6                     STR_2:
   269  0010A6  56                 	db	86	;'V'
   270  0010A7  6F                 	db	111	;'o'
   271  0010A8  6C                 	db	108	;'l'
   272  0010A9  74                 	db	116	;'t'
   273  0010AA  61                 	db	97	;'a'
   274  0010AB  67                 	db	103	;'g'
   275  0010AC  65                 	db	101	;'e'
   276  0010AD  20                 	db	32
   277  0010AE  3D                 	db	61	;'='
   278  0010AF  20                 	db	32
   279  0010B0  25                 	db	37
   280  0010B1  66                 	db	102	;'f'
   281  0010B2  20                 	db	32
   282  0010B3  0D                 	db	13
   283  0010B4  0A                 	db	10
   284  0010B5  00                 	db	0
   285  0010B6                     STR_1:
   286  0010B6  53                 	db	83	;'S'
   287  0010B7  74                 	db	116	;'t'
   288  0010B8  65                 	db	101	;'e'
   289  0010B9  70                 	db	112	;'p'
   290  0010BA  73                 	db	115	;'s'
   291  0010BB  20                 	db	32
   292  0010BC  3D                 	db	61	;'='
   293  0010BD  20                 	db	32
   294  0010BE  25                 	db	37
   295  0010BF  64                 	db	100	;'d'
   296  0010C0  20                 	db	32
   297  0010C1  0D                 	db	13
   298  0010C2  0A                 	db	10
   299  0010C3  00                 	db	0
   300                           
   301                           ; #config settings
   302  0010C4  00                 	db	0	; dummy byte at the end
   303  0000                     
   304                           	psect	cinit
   305  002DFA                     __pcinit:
   306                           	opt stack 0
   307  002DFA                     start_initialization:
   308                           	opt stack 0
   309  002DFA                     __initialization:
   310                           	opt stack 0
   311                           
   312                           ; Initialize objects allocated to BANK0 (10 bytes)
   313                           ; load TBLPTR registers with __pidataBANK0
   314  002DFA  0E16               	movlw	low __pidataBANK0
   315  002DFC  6EF6               	movwf	tblptrl,c
   316  002DFE  0E2F               	movlw	high __pidataBANK0
   317  002E00  6EF7               	movwf	tblptrh,c
   318  002E02  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   319  002E04  6EF8               	movwf	tblptru,c
   320  002E06  EE00  F080         	lfsr	0,__pdataBANK0
   321  002E0A  EE10 F00A          	lfsr	1,10
   322  002E0E                     copy_data0:
   323  002E0E  0009               	tblrd		*+
   324  002E10  CFF5 FFEE          	movff	tablat,postinc0
   325  002E14  50E5               	movf	postdec1,w,c
   326  002E16  50E1               	movf	fsr1l,w,c
   327  002E18  E1FA               	bnz	copy_data0
   328  002E1A                     end_of_initialization:
   329                           	opt stack 0
   330  002E1A                     __end_of__initialization:
   331                           	opt stack 0
   332  002E1A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   333  002E1C  6EF8               	movwf	tblptru,c
   334  002E1E  0100               	movlb	0
   335  002E20  EF1C  F00F         	goto	_main	;jump to C main() function
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344                           	psect	dataBANK0
   345  000080                     __pdataBANK0:
   346                           	opt stack 0
   347  000080                     _array:
   348                           	opt stack 0
   349  000080                     	ds	10
   350                           tblptru	equ	0xFF8
   351                           tblptrh	equ	0xFF7
   352                           tblptrl	equ	0xFF6
   353                           tablat	equ	0xFF5
   354                           postinc0	equ	0xFEE
   355                           postdec1	equ	0xFE5
   356                           fsr1l	equ	0xFE1
   357                           
   358                           	psect	cstackCOMRAM
   359  000001                     __pcstackCOMRAM:
   360                           	opt stack 0
   361  000001                     ?_get_full_ADC:
   362                           	opt stack 0
   363  000001                     ?___awmod:
   364                           	opt stack 0
   365  000001                     ?___ftpack:
   366                           	opt stack 0
   367  000001                     ?___ftneg:
   368                           	opt stack 0
   369  000001                     ?__tdiv_to_l_:
   370                           	opt stack 0
   371  000001                     ?__div_to_l_:
   372                           	opt stack 0
   373  000001                     ?___lldiv:
   374                           	opt stack 0
   375  000001                     Select_ADC_Channel@channel:
   376                           	opt stack 0
   377  000001                     putch@c:
   378                           	opt stack 0
   379  000001                     Display_Upper_Digit@digit:
   380                           	opt stack 0
   381  000001                     Display_Lower_Digit@digit:
   382                           	opt stack 0
   383  000001                     WAIT_1_SEC@j:
   384                           	opt stack 0
   385  000001                     Display_D1@temperature:
   386                           	opt stack 0
   387  000001                     Display_D2@temperature:
   388                           	opt stack 0
   389  000001                     Display_D3@voltage:
   390                           	opt stack 0
   391  000001                     OpenUSART@spbrg:
   392                           	opt stack 0
   393  000001                     ___awmod@dividend:
   394                           	opt stack 0
   395  000001                     __div_to_l_@f1:
   396                           	opt stack 0
   397  000001                     ___ftpack@arg:
   398                           	opt stack 0
   399  000001                     __tdiv_to_l_@f1:
   400                           	opt stack 0
   401  000001                     ___ftge@ff1:
   402                           	opt stack 0
   403  000001                     ___ftneg@f1:
   404                           	opt stack 0
   405  000001                     ___lldiv@dividend:
   406                           	opt stack 0
   407                           
   408                           ; 4 bytes @ 0x0
   409  000001                     	ds	2
   410  000003                     ??_get_full_ADC:
   411  000003                     OpenUSART@config:
   412                           	opt stack 0
   413  000003                     ___awmod@divisor:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x2
   417  000003                     	ds	1
   418  000004                     ___ftpack@exp:
   419                           	opt stack 0
   420  000004                     __div_to_l_@f2:
   421                           	opt stack 0
   422  000004                     __tdiv_to_l_@f2:
   423                           	opt stack 0
   424  000004                     ___ftge@ff2:
   425                           	opt stack 0
   426                           
   427                           ; 3 bytes @ 0x3
   428  000004                     	ds	1
   429  000005                     ___awmod@counter:
   430                           	opt stack 0
   431  000005                     ___ftpack@sign:
   432                           	opt stack 0
   433  000005                     get_full_ADC@result:
   434                           	opt stack 0
   435  000005                     ___lldiv@divisor:
   436                           	opt stack 0
   437                           
   438                           ; 4 bytes @ 0x4
   439  000005                     	ds	1
   440  000006                     ??___ftpack:
   441  000006                     ___awmod@sign:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x5
   445  000006                     	ds	1
   446  000007                     ??__tdiv_to_l_:
   447  000007                     ??___ftge:
   448  000007                     ?___awdiv:
   449                           	opt stack 0
   450  000007                     ___awdiv@dividend:
   451                           	opt stack 0
   452  000007                     __div_to_l_@quot:
   453                           	opt stack 0
   454                           
   455                           ; 4 bytes @ 0x6
   456  000007                     	ds	2
   457  000009                     ?___awtoft:
   458                           	opt stack 0
   459  000009                     ?___lltoft:
   460                           	opt stack 0
   461  000009                     ___awdiv@divisor:
   462                           	opt stack 0
   463  000009                     ___awtoft@c:
   464                           	opt stack 0
   465  000009                     ___lldiv@quotient:
   466                           	opt stack 0
   467  000009                     ___lltoft@c:
   468                           	opt stack 0
   469                           
   470                           ; 4 bytes @ 0x8
   471  000009                     	ds	1
   472  00000A                     __tdiv_to_l_@quot:
   473                           	opt stack 0
   474                           
   475                           ; 4 bytes @ 0x9
   476  00000A                     	ds	1
   477  00000B                     ___awdiv@counter:
   478                           	opt stack 0
   479  00000B                     __div_to_l_@cntr:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0xA
   483  00000B                     	ds	1
   484  00000C                     ___awdiv@sign:
   485                           	opt stack 0
   486  00000C                     ___awtoft@sign:
   487                           	opt stack 0
   488  00000C                     __div_to_l_@exp1:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0xB
   492  00000C                     	ds	1
   493  00000D                     ??___lltoft:
   494  00000D                     ___lldiv@counter:
   495                           	opt stack 0
   496  00000D                     ___awdiv@quotient:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0xC
   500  00000D                     	ds	1
   501  00000E                     ?___llmod:
   502                           	opt stack 0
   503  00000E                     __tdiv_to_l_@cntr:
   504                           	opt stack 0
   505  00000E                     ___llmod@dividend:
   506                           	opt stack 0
   507                           
   508                           ; 4 bytes @ 0xD
   509  00000E                     	ds	1
   510  00000F                     ?___wmul:
   511                           	opt stack 0
   512  00000F                     __tdiv_to_l_@exp1:
   513                           	opt stack 0
   514  00000F                     ___wmul@multiplier:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0xE
   518  00000F                     	ds	2
   519  000011                     ___lltoft@exp:
   520                           	opt stack 0
   521  000011                     ___wmul@multiplicand:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x10
   525  000011                     	ds	1
   526  000012                     ___llmod@divisor:
   527                           	opt stack 0
   528                           
   529                           ; 4 bytes @ 0x11
   530  000012                     	ds	1
   531  000013                     ___wmul@product:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x12
   535  000013                     	ds	2
   536  000015                     ?___ftmul:
   537                           	opt stack 0
   538  000015                     ___ftmul@f1:
   539                           	opt stack 0
   540                           
   541                           ; 3 bytes @ 0x14
   542  000015                     	ds	1
   543  000016                     ___llmod@counter:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x15
   547  000016                     	ds	2
   548  000018                     ___ftmul@f2:
   549                           	opt stack 0
   550                           
   551                           ; 3 bytes @ 0x17
   552  000018                     	ds	3
   553  00001B                     ??___ftmul:
   554                           
   555                           ; 0 bytes @ 0x1A
   556  00001B                     	ds	3
   557  00001E                     ___ftmul@exp:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x1D
   561  00001E                     	ds	1
   562  00001F                     ___ftmul@f3_as_product:
   563                           	opt stack 0
   564                           
   565                           ; 3 bytes @ 0x1E
   566  00001F                     	ds	3
   567  000022                     ___ftmul@cntr:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x21
   571  000022                     	ds	1
   572  000023                     ___ftmul@sign:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x22
   576  000023                     	ds	1
   577  000024                     ?_fround:
   578                           	opt stack 0
   579  000024                     ?_scale:
   580                           	opt stack 0
   581                           
   582                           ; 3 bytes @ 0x23
   583  000024                     	ds	3
   584  000027                     _fround$1214:
   585                           	opt stack 0
   586  000027                     _scale$1215:
   587                           	opt stack 0
   588                           
   589                           ; 3 bytes @ 0x26
   590  000027                     	ds	3
   591  00002A                     scale@scl:
   592                           	opt stack 0
   593  00002A                     _fround$1213:
   594                           	opt stack 0
   595                           
   596                           ; 3 bytes @ 0x29
   597  00002A                     	ds	1
   598  00002B                     ?___fttol:
   599                           	opt stack 0
   600  00002B                     ___fttol@f1:
   601                           	opt stack 0
   602                           
   603                           ; 3 bytes @ 0x2A
   604  00002B                     	ds	2
   605  00002D                     fround@prec:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x2C
   609  00002D                     	ds	1
   610  00002E                     ?___ftadd:
   611                           	opt stack 0
   612  00002E                     ___ftadd@f1:
   613                           	opt stack 0
   614                           
   615                           ; 3 bytes @ 0x2D
   616  00002E                     	ds	1
   617  00002F                     ??___fttol:
   618                           
   619                           ; 0 bytes @ 0x2E
   620  00002F                     	ds	2
   621  000031                     ___ftadd@f2:
   622                           	opt stack 0
   623                           
   624                           ; 3 bytes @ 0x30
   625  000031                     	ds	3
   626  000034                     ??___ftadd:
   627  000034                     ___fttol@sign1:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x33
   631  000034                     	ds	1
   632  000035                     ___fttol@lval:
   633                           	opt stack 0
   634                           
   635                           ; 4 bytes @ 0x34
   636  000035                     	ds	2
   637  000037                     ___ftadd@sign:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x36
   641  000037                     	ds	1
   642  000038                     ___ftadd@exp2:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x37
   646  000038                     	ds	1
   647  000039                     ___ftadd@exp1:
   648                           	opt stack 0
   649  000039                     ___fttol@exp1:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x38
   653  000039                     	ds	1
   654  00003A                     ?___ftdiv:
   655                           	opt stack 0
   656  00003A                     ?___ftsub:
   657                           	opt stack 0
   658  00003A                     ___ftdiv@f1:
   659                           	opt stack 0
   660  00003A                     ___ftsub@f1:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x39
   664  00003A                     	ds	3
   665  00003D                     ___ftdiv@f2:
   666                           	opt stack 0
   667  00003D                     ___ftsub@f2:
   668                           	opt stack 0
   669                           
   670                           ; 3 bytes @ 0x3C
   671  00003D                     	ds	3
   672  000040                     ??___ftdiv:
   673  000040                     ?_printf:
   674                           	opt stack 0
   675  000040                     printf@f:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x3F
   679  000040                     	ds	3
   680  000043                     ___ftdiv@cntr:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x42
   684  000043                     	ds	1
   685  000044                     ___ftdiv@f3:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x43
   689  000044                     	ds	1
   690  000045                     ??_printf:
   691                           
   692                           ; 0 bytes @ 0x44
   693  000045                     	ds	2
   694  000047                     ___ftdiv@exp:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x46
   698  000047                     	ds	1
   699  000048                     ___ftdiv@sign:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x47
   703  000048                     	ds	3
   704  00004B                     _printf$1216:
   705                           	opt stack 0
   706                           
   707                           ; 3 bytes @ 0x4A
   708  00004B                     	ds	3
   709  00004E                     printf@ap:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x4D
   713  00004E                     	ds	2
   714  000050                     printf@flag:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0x4F
   718  000050                     	ds	2
   719  000052                     printf@prec:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x51
   723  000052                     	ds	2
   724  000054                     printf@val:
   725                           	opt stack 0
   726                           
   727                           ; 4 bytes @ 0x53
   728  000054                     	ds	4
   729  000058                     printf@exp:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x57
   733  000058                     	ds	2
   734  00005A                     printf@tmpval:
   735                           	opt stack 0
   736                           
   737                           ; 4 bytes @ 0x59
   738  00005A                     	ds	4
   739  00005E                     printf@fval:
   740                           	opt stack 0
   741                           
   742                           ; 3 bytes @ 0x5D
   743  00005E                     	ds	3
   744  000061                     printf@c:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x60
   748  000061                     	ds	1
   749  000062                     main@voltage_mv:
   750                           	opt stack 0
   751                           
   752                           ; 3 bytes @ 0x61
   753  000062                     	ds	3
   754  000065                     main@temp_c:
   755                           	opt stack 0
   756                           
   757                           ; 3 bytes @ 0x64
   758  000065                     	ds	3
   759  000068                     main@Pvoltage:
   760                           	opt stack 0
   761                           
   762                           ; 3 bytes @ 0x67
   763  000068                     	ds	3
   764  00006B                     main@upper:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x6A
   768  00006B                     	ds	1
   769  00006C                     main@lower:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x6B
   773  00006C                     	ds	1
   774  00006D                     main@temp_f:
   775                           	opt stack 0
   776                           
   777                           ; 3 bytes @ 0x6C
   778  00006D                     	ds	3
   779  000070                     main@pvoltage_mv:
   780                           	opt stack 0
   781                           
   782                           ; 3 bytes @ 0x6F
   783  000070                     	ds	3
   784  000073                     main@intVoltage:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x72
   788  000073                     	ds	2
   789  000075                     main@num_step:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x74
   793  000075                     	ds	2
   794  000077                     main@intTmpF:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x76
   798  000077                     	ds	2
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           postinc0	equ	0xFEE
   804                           postdec1	equ	0xFE5
   805                           fsr1l	equ	0xFE1
   806                           
   807 ;;
   808 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   809 ;;
   810 ;; *************** function _main *****************
   811 ;; Defined at:
   812 ;;		line 59 in file "Lab5P1.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  pvoltage_mv     3  111[COMRAM] float 
   817 ;;  temp_f          3  108[COMRAM] float 
   818 ;;  Pvoltage        3  103[COMRAM] float 
   819 ;;  temp_c          3  100[COMRAM] float 
   820 ;;  voltage_mv      3   97[COMRAM] float 
   821 ;;  intTmpF         2  118[COMRAM] int 
   822 ;;  num_step        2  116[COMRAM] int 
   823 ;;  intVoltage      2  114[COMRAM] int 
   824 ;;  lower           1  107[COMRAM] unsigned char 
   825 ;;  upper           1  106[COMRAM] unsigned char 
   826 ;; Return value:  Size  Location     Type
   827 ;;		None               void
   828 ;; Registers used:
   829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   839 ;;Total ram usage:       23 bytes
   840 ;; Hardware stack levels required when called:    4
   841 ;; This function calls:
   842 ;;		_Display_D1
   843 ;;		_Display_D2
   844 ;;		_Display_D3
   845 ;;		_Display_Lower_Digit
   846 ;;		_Display_Upper_Digit
   847 ;;		_Init_ADC
   848 ;;		_Init_Tris
   849 ;;		_Select_ADC_Channel
   850 ;;		_WAIT_1_SEC
   851 ;;		___awdiv
   852 ;;		___awmod
   853 ;;		___awtoft
   854 ;;		___ftadd
   855 ;;		___ftdiv
   856 ;;		___ftmul
   857 ;;		___ftneg
   858 ;;		___fttol
   859 ;;		_get_full_ADC
   860 ;;		_init_UART
   861 ;;		_printf
   862 ;; This function is called by:
   863 ;;		Startup code after reset
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text0
   868  001E38                     __ptext0:
   869                           	opt stack 0
   870  001E38                     _main:
   871                           	opt stack 27
   872                           
   873                           ;Lab5P1.c: 60: Init_ADC();
   874                           
   875                           ;incstack = 0
   876  001E38  EC90  F017         	call	_Init_ADC	;wreg free
   877                           
   878                           ;Lab5P1.c: 61: init_UART();
   879  001E3C  EC74  F017         	call	_init_UART	;wreg free
   880                           
   881                           ;Lab5P1.c: 62: Init_Tris();
   882  001E40  EC69  F017         	call	_Init_Tris	;wreg free
   883                           
   884                           ;Lab5P1.c: 65: PORTC = 0xFF;
   885  001E44  6882               	setf	3970,c	;volatile
   886                           
   887                           ;Lab5P1.c: 66: PORTD = 0xFF;
   888  001E46  6883               	setf	3971,c	;volatile
   889                           
   890                           ;Lab5P1.c: 67: PORTB = 0x00;
   891  001E48  0E00               	movlw	0
   892  001E4A  6E81               	movwf	3969,c	;volatile
   893  001E4C  D000               	goto	l2962
   894  001E4E                     l2962:
   895                           
   896                           ;Lab5P1.c: 70: Select_ADC_Channel(0);
   897  001E4E  0E00               	movlw	0
   898  001E50  EC85  F017         	call	_Select_ADC_Channel
   899                           
   900                           ;Lab5P1.c: 71: int num_step = get_full_ADC();
   901  001E54  EC26  F017         	call	_get_full_ADC	;wreg free
   902  001E58  C001  F075         	movff	?_get_full_ADC,main@num_step
   903  001E5C  C002  F076         	movff	?_get_full_ADC+1,main@num_step+1
   904                           
   905                           ;Lab5P1.c: 72: float voltage_mv = num_step*4.0;
   906  001E60  C075  F009         	movff	main@num_step,___awtoft@c
   907  001E64  C076  F00A         	movff	main@num_step+1,___awtoft@c+1
   908  001E68  ECC2  F016         	call	___awtoft	;wreg free
   909  001E6C  C009  F015         	movff	?___awtoft,___ftmul@f1
   910  001E70  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
   911  001E74  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
   912  001E78  0E00               	movlw	0
   913  001E7A  6E18               	movwf	___ftmul@f2,c
   914  001E7C  0E80               	movlw	128
   915  001E7E  6E19               	movwf	___ftmul@f2+1,c
   916  001E80  0E40               	movlw	64
   917  001E82  6E1A               	movwf	___ftmul@f2+2,c
   918  001E84  ECB0  F012         	call	___ftmul	;wreg free
   919  001E88  C015  F062         	movff	?___ftmul,main@voltage_mv
   920  001E8C  C016  F063         	movff	?___ftmul+1,main@voltage_mv+1
   921  001E90  C017  F064         	movff	?___ftmul+2,main@voltage_mv+2
   922                           
   923                           ;Lab5P1.c: 73: float temp_c = (1035.0 - voltage_mv)/5.50;
   924  001E94  0E60               	movlw	96
   925  001E96  6E31               	movwf	___ftadd@f2,c
   926  001E98  0E81               	movlw	129
   927  001E9A  6E32               	movwf	___ftadd@f2+1,c
   928  001E9C  0E44               	movlw	68
   929  001E9E  6E33               	movwf	___ftadd@f2+2,c
   930  001EA0  C062  F001         	movff	main@voltage_mv,___ftneg@f1
   931  001EA4  C063  F002         	movff	main@voltage_mv+1,___ftneg@f1+1
   932  001EA8  C064  F003         	movff	main@voltage_mv+2,___ftneg@f1+2
   933  001EAC  EC39  F017         	call	___ftneg	;wreg free
   934  001EB0  C001  F02E         	movff	?___ftneg,___ftadd@f1
   935  001EB4  C002  F02F         	movff	?___ftneg+1,___ftadd@f1+1
   936  001EB8  C003  F030         	movff	?___ftneg+2,___ftadd@f1+2
   937  001EBC  EC38  F010         	call	___ftadd	;wreg free
   938  001EC0  C02E  F03A         	movff	?___ftadd,___ftdiv@f1
   939  001EC4  C02F  F03B         	movff	?___ftadd+1,___ftdiv@f1+1
   940  001EC8  C030  F03C         	movff	?___ftadd+2,___ftdiv@f1+2
   941  001ECC  0E00               	movlw	0
   942  001ECE  6E3D               	movwf	___ftdiv@f2,c
   943  001ED0  0EB0               	movlw	176
   944  001ED2  6E3E               	movwf	___ftdiv@f2+1,c
   945  001ED4  0E40               	movlw	64
   946  001ED6  6E3F               	movwf	___ftdiv@f2+2,c
   947  001ED8  EC9F  F013         	call	___ftdiv	;wreg free
   948  001EDC  C03A  F065         	movff	?___ftdiv,main@temp_c
   949  001EE0  C03B  F066         	movff	?___ftdiv+1,main@temp_c+1
   950  001EE4  C03C  F067         	movff	?___ftdiv+2,main@temp_c+2
   951                           
   952                           ;Lab5P1.c: 74: float temp_f = (1.80 * temp_c) + 32.0;
   953  001EE8  0E66               	movlw	102
   954  001EEA  6E18               	movwf	___ftmul@f2,c
   955  001EEC  0EE6               	movlw	230
   956  001EEE  6E19               	movwf	___ftmul@f2+1,c
   957  001EF0  0E3F               	movlw	63
   958  001EF2  6E1A               	movwf	___ftmul@f2+2,c
   959  001EF4  C065  F015         	movff	main@temp_c,___ftmul@f1
   960  001EF8  C066  F016         	movff	main@temp_c+1,___ftmul@f1+1
   961  001EFC  C067  F017         	movff	main@temp_c+2,___ftmul@f1+2
   962  001F00  ECB0  F012         	call	___ftmul	;wreg free
   963  001F04  C015  F02E         	movff	?___ftmul,___ftadd@f1
   964  001F08  C016  F02F         	movff	?___ftmul+1,___ftadd@f1+1
   965  001F0C  C017  F030         	movff	?___ftmul+2,___ftadd@f1+2
   966  001F10  0E00               	movlw	0
   967  001F12  6E31               	movwf	___ftadd@f2,c
   968  001F14  0E00               	movlw	0
   969  001F16  6E32               	movwf	___ftadd@f2+1,c
   970  001F18  0E42               	movlw	66
   971  001F1A  6E33               	movwf	___ftadd@f2+2,c
   972  001F1C  EC38  F010         	call	___ftadd	;wreg free
   973  001F20  C02E  F06D         	movff	?___ftadd,main@temp_f
   974  001F24  C02F  F06E         	movff	?___ftadd+1,main@temp_f+1
   975  001F28  C030  F06F         	movff	?___ftadd+2,main@temp_f+2
   976                           
   977                           ;Lab5P1.c: 75: int intTmpF = (int)temp_f;
   978  001F2C  C06D  F02B         	movff	main@temp_f,___fttol@f1
   979  001F30  C06E  F02C         	movff	main@temp_f+1,___fttol@f1+1
   980  001F34  C06F  F02D         	movff	main@temp_f+2,___fttol@f1+2
   981  001F38  EC2C  F013         	call	___fttol	;wreg free
   982  001F3C  C02B  F077         	movff	?___fttol,main@intTmpF
   983  001F40  C02C  F078         	movff	?___fttol+1,main@intTmpF+1
   984                           
   985                           ;Lab5P1.c: 76: char upper = intTmpF /10;
   986  001F44  C077  F007         	movff	main@intTmpF,___awdiv@dividend
   987  001F48  C078  F008         	movff	main@intTmpF+1,___awdiv@dividend+1
   988  001F4C  0E00               	movlw	0
   989  001F4E  6E0A               	movwf	___awdiv@divisor+1,c
   990  001F50  0E0A               	movlw	10
   991  001F52  6E09               	movwf	___awdiv@divisor,c
   992  001F54  ECC3  F014         	call	___awdiv	;wreg free
   993  001F58  5007               	movf	?___awdiv,w,c
   994  001F5A  6E6B               	movwf	main@upper,c
   995                           
   996                           ;Lab5P1.c: 77: char lower = intTmpF %10;
   997  001F5C  C077  F001         	movff	main@intTmpF,___awmod@dividend
   998  001F60  C078  F002         	movff	main@intTmpF+1,___awmod@dividend+1
   999  001F64  0E00               	movlw	0
  1000  001F66  6E04               	movwf	___awmod@divisor+1,c
  1001  001F68  0E0A               	movlw	10
  1002  001F6A  6E03               	movwf	___awmod@divisor,c
  1003  001F6C  EC9F  F015         	call	___awmod	;wreg free
  1004  001F70  5001               	movf	?___awmod,w,c
  1005  001F72  6E6C               	movwf	main@lower,c
  1006                           
  1007                           ;Lab5P1.c: 78: Display_Upper_Digit(upper);
  1008  001F74  506B               	movf	main@upper,w,c
  1009  001F76  ECE0  F016         	call	_Display_Upper_Digit
  1010                           
  1011                           ;Lab5P1.c: 79: Display_Lower_Digit(lower);
  1012  001F7A  506C               	movf	main@lower,w,c
  1013  001F7C  EC5D  F017         	call	_Display_Lower_Digit
  1014                           
  1015                           ;Lab5P1.c: 81: Display_D1(intTmpF);
  1016  001F80  C077  F001         	movff	main@intTmpF,Display_D1@temperature
  1017  001F84  C078  F002         	movff	main@intTmpF+1,Display_D1@temperature+1
  1018  001F88  EC73  F014         	call	_Display_D1	;wreg free
  1019                           
  1020                           ;Lab5P1.c: 82: Display_D2(intTmpF);
  1021  001F8C  C077  F001         	movff	main@intTmpF,Display_D2@temperature
  1022  001F90  C078  F002         	movff	main@intTmpF+1,Display_D2@temperature+1
  1023  001F94  EC1A  F011         	call	_Display_D2	;wreg free
  1024                           
  1025                           ;Lab5P1.c: 84: Select_ADC_Channel(2);
  1026  001F98  0E02               	movlw	2
  1027  001F9A  EC85  F017         	call	_Select_ADC_Channel
  1028                           
  1029                           ;Lab5P1.c: 85: int num_step = get_full_ADC();
  1030  001F9E  EC26  F017         	call	_get_full_ADC	;wreg free
  1031  001FA2  C001  F075         	movff	?_get_full_ADC,main@num_step
  1032  001FA6  C002  F076         	movff	?_get_full_ADC+1,main@num_step+1
  1033                           
  1034                           ;Lab5P1.c: 86: float pvoltage_mv = num_step*4.0;
  1035  001FAA  C075  F009         	movff	main@num_step,___awtoft@c
  1036  001FAE  C076  F00A         	movff	main@num_step+1,___awtoft@c+1
  1037  001FB2  ECC2  F016         	call	___awtoft	;wreg free
  1038  001FB6  C009  F015         	movff	?___awtoft,___ftmul@f1
  1039  001FBA  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
  1040  001FBE  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
  1041  001FC2  0E00               	movlw	0
  1042  001FC4  6E18               	movwf	___ftmul@f2,c
  1043  001FC6  0E80               	movlw	128
  1044  001FC8  6E19               	movwf	___ftmul@f2+1,c
  1045  001FCA  0E40               	movlw	64
  1046  001FCC  6E1A               	movwf	___ftmul@f2+2,c
  1047  001FCE  ECB0  F012         	call	___ftmul	;wreg free
  1048  001FD2  C015  F070         	movff	?___ftmul,main@pvoltage_mv
  1049  001FD6  C016  F071         	movff	?___ftmul+1,main@pvoltage_mv+1
  1050  001FDA  C017  F072         	movff	?___ftmul+2,main@pvoltage_mv+2
  1051                           
  1052                           ;Lab5P1.c: 87: float Pvoltage = pvoltage_mv;
  1053  001FDE  C070  F068         	movff	main@pvoltage_mv,main@Pvoltage
  1054  001FE2  C071  F069         	movff	main@pvoltage_mv+1,main@Pvoltage+1
  1055  001FE6  C072  F06A         	movff	main@pvoltage_mv+2,main@Pvoltage+2
  1056                           
  1057                           ;Lab5P1.c: 88: int intVoltage = (int) Pvoltage;
  1058  001FEA  C068  F02B         	movff	main@Pvoltage,___fttol@f1
  1059  001FEE  C069  F02C         	movff	main@Pvoltage+1,___fttol@f1+1
  1060  001FF2  C06A  F02D         	movff	main@Pvoltage+2,___fttol@f1+2
  1061  001FF6  EC2C  F013         	call	___fttol	;wreg free
  1062  001FFA  C02B  F073         	movff	?___fttol,main@intVoltage
  1063  001FFE  C02C  F074         	movff	?___fttol+1,main@intVoltage+1
  1064                           
  1065                           ;Lab5P1.c: 89: Display_D3(intVoltage);
  1066  002002  C073  F001         	movff	main@intVoltage,Display_D3@voltage
  1067  002006  C074  F002         	movff	main@intVoltage+1,Display_D3@voltage+1
  1068  00200A  ECA2  F016         	call	_Display_D3	;wreg free
  1069                           
  1070                           ;Lab5P1.c: 90: printf("Steps = %d \r\n", num_step);
  1071  00200E  0EB6               	movlw	low STR_1
  1072  002010  6E40               	movwf	printf@f,c
  1073  002012  0E10               	movlw	high STR_1
  1074  002014  6E41               	movwf	printf@f+1,c
  1075  002016  C075  F042         	movff	main@num_step,?_printf+2
  1076  00201A  C076  F043         	movff	main@num_step+1,?_printf+3
  1077  00201E  EC63  F008         	call	_printf	;wreg free
  1078                           
  1079                           ;Lab5P1.c: 91: printf("Voltage = %f \r\n", pvoltage_mv);
  1080  002022  0EA6               	movlw	low STR_2
  1081  002024  6E40               	movwf	printf@f,c
  1082  002026  0E10               	movlw	high STR_2
  1083  002028  6E41               	movwf	printf@f+1,c
  1084  00202A  C070  F042         	movff	main@pvoltage_mv,?_printf+2
  1085  00202E  C071  F043         	movff	main@pvoltage_mv+1,?_printf+3
  1086  002032  C072  F044         	movff	main@pvoltage_mv+2,?_printf+4
  1087  002036  EC63  F008         	call	_printf	;wreg free
  1088                           
  1089                           ;Lab5P1.c: 92: printf("Temperature = %f/ F \r\n\n", temp_f);
  1090  00203A  0E77               	movlw	low STR_3
  1091  00203C  6E40               	movwf	printf@f,c
  1092  00203E  0E10               	movlw	high STR_3
  1093  002040  6E41               	movwf	printf@f+1,c
  1094  002042  C06D  F042         	movff	main@temp_f,?_printf+2
  1095  002046  C06E  F043         	movff	main@temp_f+1,?_printf+3
  1096  00204A  C06F  F044         	movff	main@temp_f+2,?_printf+4
  1097  00204E  EC63  F008         	call	_printf	;wreg free
  1098                           
  1099                           ;Lab5P1.c: 93: printf ("Light Volt = %f mV \r\n\n", intVoltage);
  1100  002052  0E8F               	movlw	low STR_4
  1101  002054  6E40               	movwf	printf@f,c
  1102  002056  0E10               	movlw	high STR_4
  1103  002058  6E41               	movwf	printf@f+1,c
  1104  00205A  C073  F042         	movff	main@intVoltage,?_printf+2
  1105  00205E  C074  F043         	movff	main@intVoltage+1,?_printf+3
  1106  002062  EC63  F008         	call	_printf	;wreg free
  1107                           
  1108                           ;Lab5P1.c: 94: WAIT_1_SEC();
  1109  002066  EC4B  F017         	call	_WAIT_1_SEC	;wreg free
  1110  00206A  D6F1               	goto	l2962
  1111  00206C  EF00  F000         	goto	start
  1112  002070                     __end_of_main:
  1113                           	opt stack 0
  1114                           tblptru	equ	0xFF8
  1115                           tblptrh	equ	0xFF7
  1116                           tblptrl	equ	0xFF6
  1117                           tablat	equ	0xFF5
  1118                           postinc0	equ	0xFEE
  1119                           postdec1	equ	0xFE5
  1120                           fsr1l	equ	0xFE1
  1121                           
  1122 ;; *************** function _printf *****************
  1123 ;; Defined at:
  1124 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  f               2   63[COMRAM] PTR const unsigned char 
  1127 ;;		 -> STR_4(23), STR_3(24), STR_2(16), STR_1(14), 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  tmpval          4   89[COMRAM] struct .
  1130 ;;  val             4   83[COMRAM] unsigned long 
  1131 ;;  fval            3   93[COMRAM] unsigned long 
  1132 ;;  cp              3    0        PTR const unsigned char 
  1133 ;;  exp             2   87[COMRAM] int 
  1134 ;;  prec            2   81[COMRAM] int 
  1135 ;;  flag            2   79[COMRAM] unsigned short 
  1136 ;;  ap              2   77[COMRAM] PTR void [1]
  1137 ;;		 -> ?_printf(2), 
  1138 ;;  len             2    0        unsigned int 
  1139 ;;  width           2    0        int 
  1140 ;;  c               1   96[COMRAM] char 
  1141 ;;  d               1    0        unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  2   63[COMRAM] int 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1151 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;Total ram usage:       34 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    3
  1158 ;; This function calls:
  1159 ;;		___awdiv
  1160 ;;		___ftadd
  1161 ;;		___ftge
  1162 ;;		___ftmul
  1163 ;;		___ftneg
  1164 ;;		___ftsub
  1165 ;;		___fttol
  1166 ;;		___lldiv
  1167 ;;		___llmod
  1168 ;;		___lltoft
  1169 ;;		___wmul
  1170 ;;		__div_to_l_
  1171 ;;		__tdiv_to_l_
  1172 ;;		_fround
  1173 ;;		_putch
  1174 ;;		_scale
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text1
  1181  0010C6                     __ptext1:
  1182                           	opt stack 0
  1183  0010C6                     _printf:
  1184                           	opt stack 27
  1185                           
  1186                           ;doprnt.c: 466: va_list ap;
  1187                           ;doprnt.c: 499: signed char c;
  1188                           ;doprnt.c: 501: int width;
  1189                           ;doprnt.c: 504: int prec;
  1190                           ;doprnt.c: 508: unsigned short flag;
  1191                           ;doprnt.c: 515: char d;
  1192                           ;doprnt.c: 516: double fval;
  1193                           ;doprnt.c: 517: int exp;
  1194                           ;doprnt.c: 523: union {
  1195                           ;doprnt.c: 524: unsigned long vd;
  1196                           ;doprnt.c: 525: double integ;
  1197                           ;doprnt.c: 526: } tmpval;
  1198                           ;doprnt.c: 528: unsigned long val;
  1199                           ;doprnt.c: 529: unsigned len;
  1200                           ;doprnt.c: 530: const char * cp;
  1201                           ;doprnt.c: 533: *ap = __va_start();
  1202                           
  1203                           ;incstack = 0
  1204  0010C6  0E42               	movlw	low (?_printf+2)
  1205  0010C8  6E4E               	movwf	printf@ap,c
  1206  0010CA  0E00               	movlw	high (?_printf+2)
  1207  0010CC  6E4F               	movwf	printf@ap+1,c
  1208                           
  1209                           ;doprnt.c: 536: while(c = *f++) {
  1210  0010CE  D393               	goto	l2894
  1211  0010D0                     l2714:
  1212                           
  1213                           ;doprnt.c: 538: if(c != '%')
  1214  0010D0  0E25               	movlw	37
  1215  0010D2  1861               	xorwf	printf@c,w,c
  1216  0010D4  B4D8               	btfsc	status,2,c
  1217  0010D6  D004               	goto	l2718
  1218                           
  1219                           ;doprnt.c: 540: {
  1220                           ;doprnt.c: 541: (putch(c) );
  1221  0010D8  5061               	movf	printf@c,w,c
  1222  0010DA  EC7E  F017         	call	_putch
  1223                           
  1224                           ;doprnt.c: 542: continue;
  1225  0010DE  D38B               	goto	l2894
  1226  0010E0                     l2718:
  1227                           
  1228                           ;doprnt.c: 543: }
  1229                           ;doprnt.c: 548: flag = 0;
  1230  0010E0  0E00               	movlw	0
  1231  0010E2  6E51               	movwf	printf@flag+1,c
  1232  0010E4  0E00               	movlw	0
  1233  0010E6  6E50               	movwf	printf@flag,c
  1234                           
  1235                           ;doprnt.c: 635: switch(c = *f++) {
  1236  0010E8  D005               	goto	l2724
  1237                           
  1238                           ;doprnt.c: 638: goto alldone;
  1239                           
  1240                           ;doprnt.c: 637: case 0:
  1241  0010EA  D393               	goto	l305
  1242  0010EC                     l2720:
  1243                           
  1244                           ;doprnt.c: 663: flag |= 0x400;
  1245  0010EC  8451               	bsf	printf@flag+1,2,c
  1246                           
  1247                           ;doprnt.c: 698: case 'i':
  1248                           ;doprnt.c: 699: break;
  1249                           
  1250                           ;doprnt.c: 697: case 'd':
  1251                           
  1252                           ;doprnt.c: 664: break;
  1253  0010EE  D018               	goto	l2726
  1254                           
  1255                           ;doprnt.c: 813: continue;
  1256                           
  1257                           ;doprnt.c: 802: default:
  1258  0010F0  D382               	goto	l2894
  1259                           
  1260                           ;doprnt.c: 822: }
  1261  0010F2  D016               	goto	l2726
  1262  0010F4                     l2724:
  1263  0010F4  C040  FFF6         	movff	printf@f,tblptrl
  1264  0010F8  C041  FFF7         	movff	printf@f+1,tblptrh
  1265  0010FC  4A40               	infsnz	printf@f,f,c
  1266  0010FE  2A41               	incf	printf@f+1,f,c
  1267  001100                     	if	0	;tblptru may be non-zero
  1268  001100                     	endif
  1269  001100                     	if	0	;tblptru may be non-zero
  1270  001100                     	endif
  1271  001100  0008               	tblrd		*
  1272  001102  CFF5 F061          	movff	tablat,printf@c
  1273  001106  5061               	movf	printf@c,w,c
  1274                           
  1275                           ; Switch size 1, requested type "space"
  1276                           ; Number of cases is 4, Range of values is 0 to 105
  1277                           ; switch strategies available:
  1278                           ; Name         Instructions Cycles
  1279                           ; simple_byte           13     7 (average)
  1280                           ;	Chosen strategy is simple_byte
  1281  001108  0A00               	xorlw	0	; case 0
  1282  00110A  B4D8               	btfsc	status,2,c
  1283  00110C  D382               	goto	l305
  1284  00110E  0A64               	xorlw	100	; case 100
  1285  001110  B4D8               	btfsc	status,2,c
  1286  001112  D006               	goto	l2726
  1287  001114  0A02               	xorlw	2	; case 102
  1288  001116  B4D8               	btfsc	status,2,c
  1289  001118  D7E9               	goto	l2720
  1290  00111A  0A0F               	xorlw	15	; case 105
  1291  00111C  A4D8               	btfss	status,2,c
  1292  00111E  D36B               	goto	l2894
  1293  001120                     l2726:
  1294                           
  1295                           ;doprnt.c: 825: if(flag & (0x700)) {
  1296  001120  0E07               	movlw	7
  1297  001122  1451               	andwf	printf@flag+1,w,c
  1298  001124  B4D8               	btfsc	status,2,c
  1299  001126  D2CA               	goto	l2858
  1300                           
  1301                           ;doprnt.c: 829: prec = 6;
  1302  001128  0E00               	movlw	0
  1303  00112A  6E53               	movwf	printf@prec+1,c
  1304  00112C  0E06               	movlw	6
  1305  00112E  6E52               	movwf	printf@prec,c
  1306                           
  1307                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1308  001130  C04E  FFD9         	movff	printf@ap,fsr2l
  1309  001134  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1310  001138  CFDE F05E          	movff	postinc2,printf@fval
  1311  00113C  CFDE F05F          	movff	postinc2,printf@fval+1
  1312  001140  CFDD F060          	movff	postdec2,printf@fval+2
  1313  001144  0E03               	movlw	3
  1314  001146  264E               	addwf	printf@ap,f,c
  1315  001148  0E00               	movlw	0
  1316  00114A  224F               	addwfc	printf@ap+1,f,c
  1317                           
  1318                           ;doprnt.c: 831: if(fval < 0.0) {
  1319  00114C  AE60               	btfss	printf@fval+2,7,c
  1320  00114E  D011               	goto	l2740
  1321                           
  1322                           ;doprnt.c: 832: fval = -fval;
  1323  001150  C05E  F001         	movff	printf@fval,___ftneg@f1
  1324  001154  C05F  F002         	movff	printf@fval+1,___ftneg@f1+1
  1325  001158  C060  F003         	movff	printf@fval+2,___ftneg@f1+2
  1326  00115C  EC39  F017         	call	___ftneg	;wreg free
  1327  001160  C001  F05E         	movff	?___ftneg,printf@fval
  1328  001164  C002  F05F         	movff	?___ftneg+1,printf@fval+1
  1329  001168  C003  F060         	movff	?___ftneg+2,printf@fval+2
  1330                           
  1331                           ;doprnt.c: 833: flag |= 0x03;
  1332  00116C  0E03               	movlw	3
  1333  00116E  1250               	iorwf	printf@flag,f,c
  1334  001170  D000               	goto	l2740
  1335  001172                     l2740:
  1336                           
  1337                           ;doprnt.c: 834: }
  1338                           ;doprnt.c: 835: exp = 0;
  1339  001172  0E00               	movlw	0
  1340  001174  6E59               	movwf	printf@exp+1,c
  1341  001176  0E00               	movlw	0
  1342  001178  6E58               	movwf	printf@exp,c
  1343                           
  1344                           ;doprnt.c: 836: if( fval!=0) {
  1345  00117A  505E               	movf	printf@fval,w,c
  1346  00117C  105F               	iorwf	printf@fval+1,w,c
  1347  00117E  1060               	iorwf	printf@fval+2,w,c
  1348  001180  B4D8               	btfsc	status,2,c
  1349  001182  D085               	goto	l2768
  1350                           
  1351                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1352  001184  0E82               	movlw	130
  1353  001186  6E45               	movwf	??_printf& (0+255),c
  1354  001188  0EFF               	movlw	255
  1355  00118A  6E46               	movwf	(??_printf+1)& (0+255),c
  1356  00118C  C05E  F047         	movff	printf@fval,??_printf+2
  1357  001190  C05F  F048         	movff	printf@fval+1,??_printf+3
  1358  001194  C060  F049         	movff	printf@fval+2,??_printf+4
  1359  001198  C061  F04A         	movff	printf@fval+3,??_printf+5
  1360  00119C  0E10               	movlw	16
  1361  00119E  D005               	goto	u3000
  1362  0011A0                     u3005:
  1363  0011A0  90D8               	bcf	status,0,c
  1364  0011A2  324A               	rrcf	??_printf+5,f,c
  1365  0011A4  3249               	rrcf	??_printf+4,f,c
  1366  0011A6  3248               	rrcf	??_printf+3,f,c
  1367  0011A8  3247               	rrcf	??_printf+2,f,c
  1368  0011AA                     u3000:
  1369  0011AA  2EE8               	decfsz	wreg,f,c
  1370  0011AC  D7F9               	goto	u3005
  1371  0011AE  5047               	movf	??_printf+2,w,c
  1372  0011B0  2445               	addwf	??_printf,w,c
  1373  0011B2  6E58               	movwf	printf@exp,c
  1374  0011B4  0E00               	movlw	0
  1375  0011B6  2046               	addwfc	??_printf+1,w,c
  1376  0011B8  6E59               	movwf	printf@exp+1,c
  1377                           
  1378                           ;doprnt.c: 838: exp--;
  1379  0011BA  0658               	decf	printf@exp,f,c
  1380  0011BC  A0D8               	btfss	status,0,c
  1381  0011BE  0659               	decf	printf@exp+1,f,c
  1382                           
  1383                           ;doprnt.c: 839: exp *= 3;
  1384  0011C0  C058  F00F         	movff	printf@exp,___wmul@multiplier
  1385  0011C4  C059  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1386  0011C8  0E00               	movlw	0
  1387  0011CA  6E12               	movwf	___wmul@multiplicand+1,c
  1388  0011CC  0E03               	movlw	3
  1389  0011CE  6E11               	movwf	___wmul@multiplicand,c
  1390  0011D0  EC12  F017         	call	___wmul	;wreg free
  1391  0011D4  C00F  F058         	movff	?___wmul,printf@exp
  1392  0011D8  C010  F059         	movff	?___wmul+1,printf@exp+1
  1393                           
  1394                           ;doprnt.c: 840: exp /= 10;
  1395  0011DC  C058  F007         	movff	printf@exp,___awdiv@dividend
  1396  0011E0  C059  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1397  0011E4  0E00               	movlw	0
  1398  0011E6  6E0A               	movwf	___awdiv@divisor+1,c
  1399  0011E8  0E0A               	movlw	10
  1400  0011EA  6E09               	movwf	___awdiv@divisor,c
  1401  0011EC  ECC3  F014         	call	___awdiv	;wreg free
  1402  0011F0  C007  F058         	movff	?___awdiv,printf@exp
  1403  0011F4  C008  F059         	movff	?___awdiv+1,printf@exp+1
  1404                           
  1405                           ;doprnt.c: 841: if(exp < 0)
  1406  0011F8  AE59               	btfss	printf@exp+1,7,c
  1407  0011FA  D004               	goto	l2756
  1408                           
  1409                           ;doprnt.c: 842: exp--;
  1410  0011FC  0658               	decf	printf@exp,f,c
  1411  0011FE  A0D8               	btfss	status,0,c
  1412  001200  0659               	decf	printf@exp+1,f,c
  1413  001202  D000               	goto	l2756
  1414  001204                     l2756:
  1415                           
  1416                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1417  001204  5058               	movf	printf@exp,w,c
  1418  001206  0800               	sublw	0
  1419  001208  EC0A  F00C         	call	_scale
  1420  00120C  C024  F05A         	movff	?_scale,printf@tmpval
  1421  001210  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1422  001214  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1423                           
  1424                           ;doprnt.c: 847: tmpval.integ *= fval;
  1425  001218  C05A  F015         	movff	printf@tmpval,___ftmul@f1
  1426  00121C  C05B  F016         	movff	printf@tmpval+1,___ftmul@f1+1
  1427  001220  C05C  F017         	movff	printf@tmpval+2,___ftmul@f1+2
  1428  001224  C05E  F018         	movff	printf@fval,___ftmul@f2
  1429  001228  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1430  00122C  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1431  001230  ECB0  F012         	call	___ftmul	;wreg free
  1432  001234  C015  F05A         	movff	?___ftmul,printf@tmpval
  1433  001238  C016  F05B         	movff	?___ftmul+1,printf@tmpval+1
  1434  00123C  C017  F05C         	movff	?___ftmul+2,printf@tmpval+2
  1435                           
  1436                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1437  001240  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1438  001244  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1439  001248  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1440  00124C  0E00               	movlw	0
  1441  00124E  6E04               	movwf	___ftge@ff2,c
  1442  001250  0E80               	movlw	128
  1443  001252  6E05               	movwf	___ftge@ff2+1,c
  1444  001254  0E3F               	movlw	63
  1445  001256  6E06               	movwf	___ftge@ff2+2,c
  1446  001258  EC0E  F015         	call	___ftge	;wreg free
  1447  00125C  B0D8               	btfsc	status,0,c
  1448  00125E  D004               	goto	l2764
  1449                           
  1450                           ;doprnt.c: 849: exp--;
  1451  001260  0658               	decf	printf@exp,f,c
  1452  001262  A0D8               	btfss	status,0,c
  1453  001264  0659               	decf	printf@exp+1,f,c
  1454  001266  D013               	goto	l2768
  1455  001268                     l2764:
  1456                           
  1457                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1458  001268  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1459  00126C  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1460  001270  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1461  001274  0E00               	movlw	0
  1462  001276  6E04               	movwf	___ftge@ff2,c
  1463  001278  0E20               	movlw	32
  1464  00127A  6E05               	movwf	___ftge@ff2+1,c
  1465  00127C  0E41               	movlw	65
  1466  00127E  6E06               	movwf	___ftge@ff2+2,c
  1467  001280  EC0E  F015         	call	___ftge	;wreg free
  1468  001284  A0D8               	btfss	status,0,c
  1469  001286  D003               	goto	l2768
  1470                           
  1471                           ;doprnt.c: 851: exp++;
  1472  001288  4A58               	infsnz	printf@exp,f,c
  1473  00128A  2A59               	incf	printf@exp+1,f,c
  1474  00128C  D000               	goto	l2768
  1475  00128E                     l2768:
  1476                           
  1477                           ;doprnt.c: 852: }
  1478                           ;doprnt.c: 1112: if(prec <= 12)
  1479  00128E  BE53               	btfsc	printf@prec+1,7,c
  1480  001290  D006               	goto	l2770
  1481  001292  5053               	movf	printf@prec+1,w,c
  1482  001294  E11C               	bnz	l2772
  1483  001296  0E0D               	movlw	13
  1484  001298  5C52               	subwf	printf@prec,w,c
  1485  00129A  B0D8               	btfsc	status,0,c
  1486  00129C  D018               	goto	l2772
  1487  00129E                     l2770:
  1488                           
  1489                           ;doprnt.c: 1113: fval += fround(prec);
  1490  00129E  C05E  F02E         	movff	printf@fval,___ftadd@f1
  1491  0012A2  C05F  F02F         	movff	printf@fval+1,___ftadd@f1+1
  1492  0012A6  C060  F030         	movff	printf@fval+2,___ftadd@f1+2
  1493  0012AA  5052               	movf	printf@prec,w,c
  1494  0012AC  ECFA  F00D         	call	_fround
  1495  0012B0  C024  F031         	movff	?_fround,___ftadd@f2
  1496  0012B4  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  1497  0012B8  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  1498  0012BC  EC38  F010         	call	___ftadd	;wreg free
  1499  0012C0  C02E  F05E         	movff	?___ftadd,printf@fval
  1500  0012C4  C02F  F05F         	movff	?___ftadd+1,printf@fval+1
  1501  0012C8  C030  F060         	movff	?___ftadd+2,printf@fval+2
  1502  0012CC  D000               	goto	l2772
  1503  0012CE                     l2772:
  1504                           
  1505                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1506  0012CE  BE59               	btfsc	printf@exp+1,7,c
  1507  0012D0  D006               	goto	l2774
  1508  0012D2  5059               	movf	printf@exp+1,w,c
  1509  0012D4  E120               	bnz	l2780
  1510  0012D6  0E0A               	movlw	10
  1511  0012D8  5C58               	subwf	printf@exp,w,c
  1512  0012DA  B0D8               	btfsc	status,0,c
  1513  0012DC  D01C               	goto	l2780
  1514  0012DE                     l2774:
  1515  0012DE  505E               	movf	printf@fval,w,c
  1516  0012E0  105F               	iorwf	printf@fval+1,w,c
  1517  0012E2  1060               	iorwf	printf@fval+2,w,c
  1518  0012E4  B4D8               	btfsc	status,2,c
  1519  0012E6  D06D               	goto	l2794
  1520  0012E8  C05E  F02B         	movff	printf@fval,___fttol@f1
  1521  0012EC  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1522  0012F0  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1523  0012F4  EC2C  F013         	call	___fttol	;wreg free
  1524  0012F8  502B               	movf	?___fttol,w,c
  1525  0012FA  102C               	iorwf	?___fttol+1,w,c
  1526  0012FC  102D               	iorwf	?___fttol+2,w,c
  1527  0012FE  102E               	iorwf	?___fttol+3,w,c
  1528  001300  B4D8               	btfsc	status,2,c
  1529  001302  BE59               	btfsc	printf@exp+1,7,c
  1530  001304  D05E               	goto	l2794
  1531  001306  5059               	movf	printf@exp+1,w,c
  1532  001308  E106               	bnz	l2780
  1533  00130A  0E02               	movlw	2
  1534  00130C  5C58               	subwf	printf@exp,w,c
  1535  00130E  B0D8               	btfsc	status,0,c
  1536  001310  D002               	goto	l2780
  1537  001312  D057               	goto	l2794
  1538  001314  D000               	goto	l2780
  1539  001316                     l2780:
  1540                           
  1541                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1542  001316  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1543  00131A  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1544  00131E  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1545  001322  0E70               	movlw	112
  1546  001324  6E04               	movwf	___ftge@ff2,c
  1547  001326  0E89               	movlw	137
  1548  001328  6E05               	movwf	___ftge@ff2+1,c
  1549  00132A  0E40               	movlw	64
  1550  00132C  6E06               	movwf	___ftge@ff2+2,c
  1551  00132E  EC0E  F015         	call	___ftge	;wreg free
  1552  001332  B0D8               	btfsc	status,0,c
  1553  001334  D002               	goto	l2784
  1554                           
  1555                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1556  001336  0EF7               	movlw	247
  1557  001338  D001               	goto	L1
  1558  00133A                     l2784:
  1559                           
  1560                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1561  00133A  0EF8               	movlw	248
  1562  00133C                     L1:
  1563  00133C  2658               	addwf	printf@exp,f,c
  1564  00133E  0EFF               	movlw	255
  1565  001340  2259               	addwfc	printf@exp+1,f,c
  1566  001342  D000               	goto	l2786
  1567  001344                     l2786:
  1568                           
  1569                           ;doprnt.c: 1124: }
  1570                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1571  001344  5058               	movf	printf@exp,w,c
  1572  001346  EC0A  F00C         	call	_scale
  1573  00134A  C024  F05A         	movff	?_scale,printf@tmpval
  1574  00134E  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1575  001352  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1576                           
  1577                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1578  001356  D017               	goto	l2790
  1579  001358  C05E  F001         	movff	printf@fval,__div_to_l_@f1
  1580  00135C  C05F  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1581  001360  C060  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1582  001364  C05A  F004         	movff	printf@tmpval,__div_to_l_@f2
  1583  001368  C05B  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1584  00136C  C05C  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1585  001370  EC2B  F012         	call	__div_to_l_	;wreg free
  1586  001374  C001  F054         	movff	?__div_to_l_,printf@val
  1587  001378  C002  F055         	movff	?__div_to_l_+1,printf@val+1
  1588  00137C  C003  F056         	movff	?__div_to_l_+2,printf@val+2
  1589  001380  C004  F057         	movff	?__div_to_l_+3,printf@val+3
  1590  001384  D017               	goto	l2792
  1591  001386                     l2790:
  1592  001386  C05E  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1593  00138A  C05F  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1594  00138E  C060  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1595  001392  C05A  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1596  001396  C05B  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1597  00139A  C05C  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1598  00139E  ECA3  F011         	call	__tdiv_to_l_	;wreg free
  1599  0013A2  C001  F054         	movff	?__tdiv_to_l_,printf@val
  1600  0013A6  C002  F055         	movff	?__tdiv_to_l_+1,printf@val+1
  1601  0013AA  C003  F056         	movff	?__tdiv_to_l_+2,printf@val+2
  1602  0013AE  C004  F057         	movff	?__tdiv_to_l_+3,printf@val+3
  1603  0013B2  D000               	goto	l2792
  1604  0013B4                     l2792:
  1605                           
  1606                           ;doprnt.c: 1129: fval = 0.0;
  1607  0013B4  0E00               	movlw	0
  1608  0013B6  6E5E               	movwf	printf@fval,c
  1609  0013B8  0E00               	movlw	0
  1610  0013BA  6E5F               	movwf	printf@fval+1,c
  1611  0013BC  0E00               	movlw	0
  1612  0013BE  6E60               	movwf	printf@fval+2,c
  1613                           
  1614                           ;doprnt.c: 1130: } else {
  1615  0013C0  D033               	goto	l2798
  1616  0013C2                     l2794:
  1617                           
  1618                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1619  0013C2  C05E  F02B         	movff	printf@fval,___fttol@f1
  1620  0013C6  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1621  0013CA  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1622  0013CE  EC2C  F013         	call	___fttol	;wreg free
  1623  0013D2  C02B  F054         	movff	?___fttol,printf@val
  1624  0013D6  C02C  F055         	movff	?___fttol+1,printf@val+1
  1625  0013DA  C02D  F056         	movff	?___fttol+2,printf@val+2
  1626  0013DE  C02E  F057         	movff	?___fttol+3,printf@val+3
  1627                           
  1628                           ;doprnt.c: 1132: fval -= (double)val;
  1629  0013E2  C05E  F03A         	movff	printf@fval,___ftsub@f1
  1630  0013E6  C05F  F03B         	movff	printf@fval+1,___ftsub@f1+1
  1631  0013EA  C060  F03C         	movff	printf@fval+2,___ftsub@f1+2
  1632  0013EE  C054  F009         	movff	printf@val,___lltoft@c
  1633  0013F2  C055  F00A         	movff	printf@val+1,___lltoft@c+1
  1634  0013F6  C056  F00B         	movff	printf@val+2,___lltoft@c+2
  1635  0013FA  C057  F00C         	movff	printf@val+3,___lltoft@c+3
  1636  0013FE  EC50  F016         	call	___lltoft	;wreg free
  1637  001402  C009  F03D         	movff	?___lltoft,___ftsub@f2
  1638  001406  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  1639  00140A  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  1640  00140E  EC80  F016         	call	___ftsub	;wreg free
  1641  001412  C03A  F05E         	movff	?___ftsub,printf@fval
  1642  001416  C03B  F05F         	movff	?___ftsub+1,printf@fval+1
  1643  00141A  C03C  F060         	movff	?___ftsub+2,printf@fval+2
  1644                           
  1645                           ;doprnt.c: 1133: exp = 0;
  1646  00141E  0E00               	movlw	0
  1647  001420  6E59               	movwf	printf@exp+1,c
  1648  001422  0E00               	movlw	0
  1649  001424  6E58               	movwf	printf@exp,c
  1650  001426  D000               	goto	l2798
  1651  001428                     l2798:
  1652                           
  1653                           ;doprnt.c: 1134: }
  1654                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1655  001428  0E01               	movlw	1
  1656  00142A  6E61               	movwf	printf@c,c
  1657  00142C                     l2800:
  1658  00142C  0E0A               	movlw	10
  1659  00142E  1861               	xorwf	printf@c,w,c
  1660  001430  B4D8               	btfsc	status,2,c
  1661  001432  D01C               	goto	l2812
  1662  001434  D001               	goto	l2804
  1663  001436  D01A               	goto	l2812
  1664  001438                     l2804:
  1665                           
  1666                           ;doprnt.c: 1137: if(val < dpowers[c])
  1667  001438  5061               	movf	printf@c,w,c
  1668  00143A  0D04               	mullw	4
  1669  00143C  0E01               	movlw	low _dpowers
  1670  00143E  24F3               	addwf	prodl,w,c
  1671  001440  6EF6               	movwf	tblptrl,c
  1672  001442  0E10               	movlw	high _dpowers
  1673  001444  20F4               	addwfc	prodh,w,c
  1674  001446  6EF7               	movwf	tblptrh,c
  1675  001448                     	if	0	;There are less than 3 active tblptr bytes
  1676  001448                     	endif
  1677  001448  0009               	tblrd		*+
  1678  00144A  50F5               	movf	tablat,w,c
  1679  00144C  5C54               	subwf	printf@val,w,c
  1680  00144E  0009               	tblrd		*+
  1681  001450  50F5               	movf	tablat,w,c
  1682  001452  5855               	subwfb	printf@val+1,w,c
  1683  001454  0009               	tblrd		*+
  1684  001456  50F5               	movf	tablat,w,c
  1685  001458  5856               	subwfb	printf@val+2,w,c
  1686  00145A  0009               	tblrd		*+
  1687  00145C  50F5               	movf	tablat,w,c
  1688  00145E  5857               	subwfb	printf@val+3,w,c
  1689  001460  A0D8               	btfss	status,0,c
  1690  001462  D004               	goto	l2812
  1691  001464  D001               	goto	l2808
  1692                           
  1693                           ;doprnt.c: 1138: break;
  1694  001466  D002               	goto	l2812
  1695  001468                     l2808:
  1696  001468  2A61               	incf	printf@c,f,c
  1697  00146A  D7E0               	goto	l2800
  1698  00146C                     l2812:
  1699                           
  1700                           ;doprnt.c: 1175: {
  1701                           ;doprnt.c: 1188: if(flag & 0x03)
  1702  00146C  0E03               	movlw	3
  1703  00146E  1450               	andwf	printf@flag,w,c
  1704  001470  6E45               	movwf	??_printf& (0+255),c
  1705  001472  0E00               	movlw	0
  1706  001474  1451               	andwf	printf@flag+1,w,c
  1707  001476  6E46               	movwf	(??_printf+1)& (0+255),c
  1708  001478  5045               	movf	??_printf,w,c
  1709  00147A  1046               	iorwf	??_printf+1,w,c
  1710  00147C  B4D8               	btfsc	status,2,c
  1711  00147E  D049               	goto	l2822
  1712                           
  1713                           ;doprnt.c: 1190: (putch('-') );
  1714  001480  0E2D               	movlw	45
  1715  001482  EC7E  F017         	call	_putch
  1716                           
  1717                           ;doprnt.c: 1195: }
  1718                           ;doprnt.c: 1196: while(c--) {
  1719  001486  D045               	goto	l2822
  1720  001488                     l2816:
  1721                           
  1722                           ;doprnt.c: 1200: {
  1723                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1724  001488  C054  F001         	movff	printf@val,___lldiv@dividend
  1725  00148C  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1726  001490  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1727  001494  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1728  001498  5061               	movf	printf@c,w,c
  1729  00149A  0D04               	mullw	4
  1730  00149C  0E01               	movlw	low _dpowers
  1731  00149E  24F3               	addwf	prodl,w,c
  1732  0014A0  6EF6               	movwf	tblptrl,c
  1733  0014A2  0E10               	movlw	high _dpowers
  1734  0014A4  20F4               	addwfc	prodh,w,c
  1735  0014A6  6EF7               	movwf	tblptrh,c
  1736  0014A8                     	if	0	;There are less than 3 active tblptr bytes
  1737  0014A8                     	endif
  1738  0014A8  0009               	tblrd		*+
  1739  0014AA  CFF5 F005          	movff	tablat,___lldiv@divisor
  1740  0014AE  0009               	tblrd		*+
  1741  0014B0  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1742  0014B4  0009               	tblrd		*+
  1743  0014B6  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1744  0014BA  000A               	tblrd		*-
  1745  0014BC  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1746  0014C0  EC59  F015         	call	___lldiv	;wreg free
  1747  0014C4  C001  F05A         	movff	?___lldiv,printf@tmpval
  1748  0014C8  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1749  0014CC  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1750  0014D0  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1751                           
  1752                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1753  0014D4  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  1754  0014D8  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1755  0014DC  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1756  0014E0  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1757  0014E4  0E0A               	movlw	10
  1758  0014E6  6E12               	movwf	___llmod@divisor,c
  1759  0014E8  0E00               	movlw	0
  1760  0014EA  6E13               	movwf	___llmod@divisor+1,c
  1761  0014EC  0E00               	movlw	0
  1762  0014EE  6E14               	movwf	___llmod@divisor+2,c
  1763  0014F0  0E00               	movlw	0
  1764  0014F2  6E15               	movwf	___llmod@divisor+3,c
  1765  0014F4  ECE0  F015         	call	___llmod	;wreg free
  1766  0014F8  C00E  F05A         	movff	?___llmod,printf@tmpval
  1767  0014FC  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  1768  001500  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  1769  001504  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  1770                           
  1771                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1772  001508  505A               	movf	printf@tmpval,w,c
  1773  00150A  0F30               	addlw	48
  1774  00150C  EC7E  F017         	call	_putch
  1775  001510  D000               	goto	l2822
  1776  001512                     l2822:
  1777  001512  0661               	decf	printf@c,f,c
  1778  001514  2861               	incf	printf@c,w,c
  1779  001516  B4D8               	btfsc	status,2,c
  1780  001518  D009               	goto	l2828
  1781  00151A  D7B6               	goto	l2816
  1782                           
  1783                           ;doprnt.c: 1204: }
  1784                           ;doprnt.c: 1206: }
  1785                           ;doprnt.c: 1207: while(exp > 0) {
  1786  00151C  D007               	goto	l2828
  1787  00151E                     l2824:
  1788                           
  1789                           ;doprnt.c: 1208: (putch('0') );
  1790  00151E  0E30               	movlw	48
  1791  001520  EC7E  F017         	call	_putch
  1792                           
  1793                           ;doprnt.c: 1209: exp--;
  1794  001524  0658               	decf	printf@exp,f,c
  1795  001526  A0D8               	btfss	status,0,c
  1796  001528  0659               	decf	printf@exp+1,f,c
  1797  00152A  D000               	goto	l2828
  1798  00152C                     l2828:
  1799  00152C  BE59               	btfsc	printf@exp+1,7,c
  1800  00152E  D005               	goto	l2830
  1801  001530  5059               	movf	printf@exp+1,w,c
  1802  001532  E1F5               	bnz	l2824
  1803  001534  0458               	decf	printf@exp,w,c
  1804  001536  B0D8               	btfsc	status,0,c
  1805  001538  D7F2               	goto	l2824
  1806  00153A                     l2830:
  1807                           
  1808                           ;doprnt.c: 1210: }
  1809                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1810  00153A  BE53               	btfsc	printf@prec+1,7,c
  1811  00153C  D009               	goto	l287
  1812  00153E  5053               	movf	printf@prec+1,w,c
  1813  001540  E104               	bnz	u3160
  1814  001542  0E09               	movlw	9
  1815  001544  5C52               	subwf	printf@prec,w,c
  1816  001546  A0D8               	btfss	status,0,c
  1817  001548  D003               	goto	l287
  1818  00154A                     u3160:
  1819                           
  1820                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1821  00154A  0E08               	movlw	8
  1822  00154C  6E61               	movwf	printf@c,c
  1823  00154E  D003               	goto	l2834
  1824  001550                     l287:
  1825                           
  1826                           ;doprnt.c: 1213: else
  1827                           ;doprnt.c: 1214: c = prec;
  1828  001550  C052  F061         	movff	printf@prec,printf@c
  1829  001554  D000               	goto	l2834
  1830  001556                     l2834:
  1831                           
  1832                           ;doprnt.c: 1215: prec -= c;
  1833  001556  5061               	movf	printf@c,w,c
  1834  001558  5E52               	subwf	printf@prec,f,c
  1835  00155A  0E00               	movlw	0
  1836  00155C  BE61               	btfsc	printf@c,7,c
  1837  00155E  0EFF               	movlw	255
  1838  001560  5A53               	subwfb	printf@prec+1,f,c
  1839                           
  1840                           ;doprnt.c: 1219: if(c)
  1841  001562  5061               	movf	printf@c,w,c
  1842  001564  B4D8               	btfsc	status,2,c
  1843  001566  D004               	goto	l2840
  1844                           
  1845                           ;doprnt.c: 1221: (putch('.') );
  1846  001568  0E2E               	movlw	46
  1847  00156A  EC7E  F017         	call	_putch
  1848  00156E  D000               	goto	l2840
  1849  001570                     l2840:
  1850                           
  1851                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1852  001570  5061               	movf	printf@c,w,c
  1853  001572  EC0A  F00C         	call	_scale
  1854  001576  C024  F04B         	movff	?_scale,_printf$1216
  1855  00157A  C025  F04C         	movff	?_scale+1,_printf$1216+1
  1856  00157E  C026  F04D         	movff	?_scale+2,_printf$1216+2
  1857                           
  1858                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1859  001582  C05E  F018         	movff	printf@fval,___ftmul@f2
  1860  001586  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1861  00158A  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1862  00158E  C04B  F015         	movff	_printf$1216,___ftmul@f1
  1863  001592  C04C  F016         	movff	_printf$1216+1,___ftmul@f1+1
  1864  001596  C04D  F017         	movff	_printf$1216+2,___ftmul@f1+2
  1865  00159A  ECB0  F012         	call	___ftmul	;wreg free
  1866  00159E  C015  F02B         	movff	?___ftmul,___fttol@f1
  1867  0015A2  C016  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1868  0015A6  C017  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1869  0015AA  EC2C  F013         	call	___fttol	;wreg free
  1870  0015AE  C02B  F054         	movff	?___fttol,printf@val
  1871  0015B2  C02C  F055         	movff	?___fttol+1,printf@val+1
  1872  0015B6  C02D  F056         	movff	?___fttol+2,printf@val+2
  1873  0015BA  C02E  F057         	movff	?___fttol+3,printf@val+3
  1874                           
  1875                           ;doprnt.c: 1228: while(c--) {
  1876  0015BE  D06B               	goto	l2850
  1877  0015C0                     l2844:
  1878                           
  1879                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1880  0015C0  C054  F001         	movff	printf@val,___lldiv@dividend
  1881  0015C4  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1882  0015C8  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1883  0015CC  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1884  0015D0  5061               	movf	printf@c,w,c
  1885  0015D2  0D04               	mullw	4
  1886  0015D4  0E01               	movlw	low _dpowers
  1887  0015D6  24F3               	addwf	prodl,w,c
  1888  0015D8  6EF6               	movwf	tblptrl,c
  1889  0015DA  0E10               	movlw	high _dpowers
  1890  0015DC  20F4               	addwfc	prodh,w,c
  1891  0015DE  6EF7               	movwf	tblptrh,c
  1892  0015E0                     	if	0	;There are less than 3 active tblptr bytes
  1893  0015E0                     	endif
  1894  0015E0  0009               	tblrd		*+
  1895  0015E2  CFF5 F005          	movff	tablat,___lldiv@divisor
  1896  0015E6  0009               	tblrd		*+
  1897  0015E8  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1898  0015EC  0009               	tblrd		*+
  1899  0015EE  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1900  0015F2  000A               	tblrd		*-
  1901  0015F4  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1902  0015F8  EC59  F015         	call	___lldiv	;wreg free
  1903  0015FC  C001  F05A         	movff	?___lldiv,printf@tmpval
  1904  001600  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1905  001604  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1906  001608  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1907                           
  1908                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1909  00160C  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  1910  001610  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1911  001614  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1912  001618  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1913  00161C  0E0A               	movlw	10
  1914  00161E  6E12               	movwf	___llmod@divisor,c
  1915  001620  0E00               	movlw	0
  1916  001622  6E13               	movwf	___llmod@divisor+1,c
  1917  001624  0E00               	movlw	0
  1918  001626  6E14               	movwf	___llmod@divisor+2,c
  1919  001628  0E00               	movlw	0
  1920  00162A  6E15               	movwf	___llmod@divisor+3,c
  1921  00162C  ECE0  F015         	call	___llmod	;wreg free
  1922  001630  C00E  F05A         	movff	?___llmod,printf@tmpval
  1923  001634  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  1924  001638  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  1925  00163C  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  1926                           
  1927                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  1928  001640  505A               	movf	printf@tmpval,w,c
  1929  001642  0F30               	addlw	48
  1930  001644  EC7E  F017         	call	_putch
  1931                           
  1932                           ;doprnt.c: 1232: val %= dpowers[c];
  1933  001648  C054  F00E         	movff	printf@val,___llmod@dividend
  1934  00164C  C055  F00F         	movff	printf@val+1,___llmod@dividend+1
  1935  001650  C056  F010         	movff	printf@val+2,___llmod@dividend+2
  1936  001654  C057  F011         	movff	printf@val+3,___llmod@dividend+3
  1937  001658  5061               	movf	printf@c,w,c
  1938  00165A  0D04               	mullw	4
  1939  00165C  0E01               	movlw	low _dpowers
  1940  00165E  24F3               	addwf	prodl,w,c
  1941  001660  6EF6               	movwf	tblptrl,c
  1942  001662  0E10               	movlw	high _dpowers
  1943  001664  20F4               	addwfc	prodh,w,c
  1944  001666  6EF7               	movwf	tblptrh,c
  1945  001668                     	if	0	;There are less than 3 active tblptr bytes
  1946  001668                     	endif
  1947  001668  0009               	tblrd		*+
  1948  00166A  CFF5 F012          	movff	tablat,___llmod@divisor
  1949  00166E  0009               	tblrd		*+
  1950  001670  CFF5 F013          	movff	tablat,___llmod@divisor+1
  1951  001674  0009               	tblrd		*+
  1952  001676  CFF5 F014          	movff	tablat,___llmod@divisor+2
  1953  00167A  000A               	tblrd		*-
  1954  00167C  CFF5 F015          	movff	tablat,___llmod@divisor+3
  1955  001680  ECE0  F015         	call	___llmod	;wreg free
  1956  001684  C00E  F054         	movff	?___llmod,printf@val
  1957  001688  C00F  F055         	movff	?___llmod+1,printf@val+1
  1958  00168C  C010  F056         	movff	?___llmod+2,printf@val+2
  1959  001690  C011  F057         	movff	?___llmod+3,printf@val+3
  1960  001694  D000               	goto	l2850
  1961  001696                     l2850:
  1962  001696  0661               	decf	printf@c,f,c
  1963  001698  2861               	incf	printf@c,w,c
  1964  00169A  B4D8               	btfsc	status,2,c
  1965  00169C  D009               	goto	l2856
  1966  00169E  D790               	goto	l2844
  1967                           
  1968                           ;doprnt.c: 1233: }
  1969                           ;doprnt.c: 1235: while(prec) {
  1970  0016A0  D007               	goto	l2856
  1971  0016A2                     l2852:
  1972                           
  1973                           ;doprnt.c: 1236: (putch('0') );
  1974  0016A2  0E30               	movlw	48
  1975  0016A4  EC7E  F017         	call	_putch
  1976                           
  1977                           ;doprnt.c: 1237: prec--;
  1978  0016A8  0652               	decf	printf@prec,f,c
  1979  0016AA  A0D8               	btfss	status,0,c
  1980  0016AC  0653               	decf	printf@prec+1,f,c
  1981  0016AE  D000               	goto	l2856
  1982  0016B0                     l2856:
  1983  0016B0  5052               	movf	printf@prec,w,c
  1984  0016B2  1053               	iorwf	printf@prec+1,w,c
  1985  0016B4  B4D8               	btfsc	status,2,c
  1986  0016B6  D09F               	goto	l2894
  1987  0016B8  D7F4               	goto	l2852
  1988                           
  1989                           ;doprnt.c: 1238: }
  1990                           ;doprnt.c: 1245: continue;
  1991  0016BA  D09D               	goto	l2894
  1992  0016BC                     l2858:
  1993                           
  1994                           ;doprnt.c: 1246: }
  1995                           ;doprnt.c: 1253: {
  1996                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  1997  0016BC  C04E  FFD9         	movff	printf@ap,fsr2l
  1998  0016C0  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1999  0016C4  CFDE F054          	movff	postinc2,printf@val
  2000  0016C8  CFDD F055          	movff	postdec2,printf@val+1
  2001  0016CC  0E00               	movlw	0
  2002  0016CE  BE55               	btfsc	printf@val+1,7,c
  2003  0016D0  0EFF               	movlw	-1
  2004  0016D2  6E56               	movwf	printf@val+2,c
  2005  0016D4  6E57               	movwf	printf@val+3,c
  2006  0016D6  0E02               	movlw	2
  2007  0016D8  264E               	addwf	printf@ap,f,c
  2008  0016DA  0E00               	movlw	0
  2009  0016DC  224F               	addwfc	printf@ap+1,f,c
  2010                           
  2011                           ;doprnt.c: 1261: if((long)val < 0) {
  2012  0016DE  AE57               	btfss	printf@val+3,7,c
  2013  0016E0  D00B               	goto	l2868
  2014                           
  2015                           ;doprnt.c: 1262: flag |= 0x03;
  2016  0016E2  0E03               	movlw	3
  2017  0016E4  1250               	iorwf	printf@flag,f,c
  2018                           
  2019                           ;doprnt.c: 1263: val = -val;
  2020  0016E6  1E57               	comf	printf@val+3,f,c
  2021  0016E8  1E56               	comf	printf@val+2,f,c
  2022  0016EA  1E55               	comf	printf@val+1,f,c
  2023  0016EC  6C54               	negf	printf@val,c
  2024  0016EE  0E00               	movlw	0
  2025  0016F0  2255               	addwfc	printf@val+1,f,c
  2026  0016F2  2256               	addwfc	printf@val+2,f,c
  2027  0016F4  2257               	addwfc	printf@val+3,f,c
  2028  0016F6  D000               	goto	l2868
  2029  0016F8                     l2868:
  2030                           
  2031                           ;doprnt.c: 1264: }
  2032                           ;doprnt.c: 1266: }
  2033                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2034  0016F8  0E01               	movlw	1
  2035  0016FA  6E61               	movwf	printf@c,c
  2036  0016FC                     l2870:
  2037  0016FC  0E0A               	movlw	10
  2038  0016FE  1861               	xorwf	printf@c,w,c
  2039  001700  B4D8               	btfsc	status,2,c
  2040  001702  D01C               	goto	l2882
  2041  001704  D001               	goto	l2874
  2042  001706  D01A               	goto	l2882
  2043  001708                     l2874:
  2044                           
  2045                           ;doprnt.c: 1306: if(val < dpowers[c])
  2046  001708  5061               	movf	printf@c,w,c
  2047  00170A  0D04               	mullw	4
  2048  00170C  0E01               	movlw	low _dpowers
  2049  00170E  24F3               	addwf	prodl,w,c
  2050  001710  6EF6               	movwf	tblptrl,c
  2051  001712  0E10               	movlw	high _dpowers
  2052  001714  20F4               	addwfc	prodh,w,c
  2053  001716  6EF7               	movwf	tblptrh,c
  2054  001718                     	if	0	;There are less than 3 active tblptr bytes
  2055  001718                     	endif
  2056  001718  0009               	tblrd		*+
  2057  00171A  50F5               	movf	tablat,w,c
  2058  00171C  5C54               	subwf	printf@val,w,c
  2059  00171E  0009               	tblrd		*+
  2060  001720  50F5               	movf	tablat,w,c
  2061  001722  5855               	subwfb	printf@val+1,w,c
  2062  001724  0009               	tblrd		*+
  2063  001726  50F5               	movf	tablat,w,c
  2064  001728  5856               	subwfb	printf@val+2,w,c
  2065  00172A  0009               	tblrd		*+
  2066  00172C  50F5               	movf	tablat,w,c
  2067  00172E  5857               	subwfb	printf@val+3,w,c
  2068  001730  A0D8               	btfss	status,0,c
  2069  001732  D004               	goto	l2882
  2070  001734  D001               	goto	l2878
  2071                           
  2072                           ;doprnt.c: 1307: break;
  2073  001736  D002               	goto	l2882
  2074  001738                     l2878:
  2075  001738  2A61               	incf	printf@c,f,c
  2076  00173A  D7E0               	goto	l2870
  2077  00173C                     l2882:
  2078                           
  2079                           ;doprnt.c: 1422: {
  2080                           ;doprnt.c: 1438: if(flag & 0x03)
  2081  00173C  0E03               	movlw	3
  2082  00173E  1450               	andwf	printf@flag,w,c
  2083  001740  6E45               	movwf	??_printf& (0+255),c
  2084  001742  0E00               	movlw	0
  2085  001744  1451               	andwf	printf@flag+1,w,c
  2086  001746  6E46               	movwf	(??_printf+1)& (0+255),c
  2087  001748  5045               	movf	??_printf,w,c
  2088  00174A  1046               	iorwf	??_printf+1,w,c
  2089  00174C  B4D8               	btfsc	status,2,c
  2090  00174E  D004               	goto	l2886
  2091                           
  2092                           ;doprnt.c: 1439: (putch('-') );
  2093  001750  0E2D               	movlw	45
  2094  001752  EC7E  F017         	call	_putch
  2095  001756  D000               	goto	l2886
  2096  001758                     l2886:
  2097                           
  2098                           ;doprnt.c: 1469: }
  2099                           ;doprnt.c: 1472: prec = c;
  2100  001758  5061               	movf	printf@c,w,c
  2101  00175A  6E52               	movwf	printf@prec,c
  2102  00175C  6A53               	clrf	printf@prec+1,c
  2103  00175E  BE52               	btfsc	printf@prec,7,c
  2104  001760  0653               	decf	printf@prec+1,f,c
  2105                           
  2106                           ;doprnt.c: 1474: while(prec--) {
  2107  001762  D03F               	goto	l2892
  2108  001764                     l2888:
  2109                           
  2110                           ;doprnt.c: 1478: {
  2111                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2112  001764  C052  F045         	movff	printf@prec,??_printf
  2113  001768  C053  F046         	movff	printf@prec+1,??_printf+1
  2114  00176C  90D8               	bcf	status,0,c
  2115  00176E  3645               	rlcf	??_printf,f,c
  2116  001770  3646               	rlcf	??_printf+1,f,c
  2117  001772  90D8               	bcf	status,0,c
  2118  001774  3645               	rlcf	??_printf,f,c
  2119  001776  3646               	rlcf	??_printf+1,f,c
  2120  001778  0E01               	movlw	low _dpowers
  2121  00177A  2445               	addwf	??_printf,w,c
  2122  00177C  6EF6               	movwf	tblptrl,c
  2123  00177E  0E10               	movlw	high _dpowers
  2124  001780  2046               	addwfc	??_printf+1,w,c
  2125  001782  6EF7               	movwf	tblptrh,c
  2126  001784                     	if	0	;There are less than 3 active tblptr bytes
  2127  001784                     	endif
  2128  001784  0009               	tblrd		*+
  2129  001786  CFF5 F005          	movff	tablat,___lldiv@divisor
  2130  00178A  0009               	tblrd		*+
  2131  00178C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2132  001790  0009               	tblrd		*+
  2133  001792  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2134  001796  000A               	tblrd		*-
  2135  001798  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2136  00179C  C054  F001         	movff	printf@val,___lldiv@dividend
  2137  0017A0  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  2138  0017A4  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  2139  0017A8  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  2140  0017AC  EC59  F015         	call	___lldiv	;wreg free
  2141  0017B0  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2142  0017B4  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2143  0017B8  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2144  0017BC  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2145  0017C0  0E0A               	movlw	10
  2146  0017C2  6E12               	movwf	___llmod@divisor,c
  2147  0017C4  0E00               	movlw	0
  2148  0017C6  6E13               	movwf	___llmod@divisor+1,c
  2149  0017C8  0E00               	movlw	0
  2150  0017CA  6E14               	movwf	___llmod@divisor+2,c
  2151  0017CC  0E00               	movlw	0
  2152  0017CE  6E15               	movwf	___llmod@divisor+3,c
  2153  0017D0  ECE0  F015         	call	___llmod	;wreg free
  2154  0017D4  500E               	movf	?___llmod,w,c
  2155  0017D6  0F30               	addlw	48
  2156  0017D8  6E61               	movwf	printf@c,c
  2157                           
  2158                           ;doprnt.c: 1523: }
  2159                           ;doprnt.c: 1524: (putch(c) );
  2160  0017DA  5061               	movf	printf@c,w,c
  2161  0017DC  EC7E  F017         	call	_putch
  2162  0017E0  D000               	goto	l2892
  2163  0017E2                     l2892:
  2164  0017E2  0652               	decf	printf@prec,f,c
  2165  0017E4  A0D8               	btfss	status,0,c
  2166  0017E6  0653               	decf	printf@prec+1,f,c
  2167  0017E8  2852               	incf	printf@prec,w,c
  2168  0017EA  E1BC               	bnz	l2888
  2169  0017EC  2853               	incf	printf@prec+1,w,c
  2170  0017EE  B4D8               	btfsc	status,2,c
  2171  0017F0  D002               	goto	l2894
  2172  0017F2  D7B8               	goto	l2888
  2173  0017F4  D000               	goto	l2894
  2174  0017F6                     l2894:
  2175  0017F6  C040  FFF6         	movff	printf@f,tblptrl
  2176  0017FA  C041  FFF7         	movff	printf@f+1,tblptrh
  2177  0017FE  4A40               	infsnz	printf@f,f,c
  2178  001800  2A41               	incf	printf@f+1,f,c
  2179  001802                     	if	0	;tblptru may be non-zero
  2180  001802                     	endif
  2181  001802                     	if	0	;tblptru may be non-zero
  2182  001802                     	endif
  2183  001802  0008               	tblrd		*
  2184  001804  CFF5 F061          	movff	tablat,printf@c
  2185  001808  5061               	movf	printf@c,w,c
  2186  00180A  B4D8               	btfsc	status,2,c
  2187  00180C  D002               	goto	l305
  2188  00180E  D460               	goto	l2714
  2189  001810  D000               	goto	l305
  2190  001812                     l305:
  2191  001812  0012               	return		;funcret
  2192  001814                     __end_of_printf:
  2193                           	opt stack 0
  2194                           tblptru	equ	0xFF8
  2195                           tblptrh	equ	0xFF7
  2196                           tblptrl	equ	0xFF6
  2197                           tablat	equ	0xFF5
  2198                           prodh	equ	0xFF4
  2199                           prodl	equ	0xFF3
  2200                           postinc0	equ	0xFEE
  2201                           wreg	equ	0xFE8
  2202                           postdec1	equ	0xFE5
  2203                           fsr1l	equ	0xFE1
  2204                           postinc2	equ	0xFDE
  2205                           postdec2	equ	0xFDD
  2206                           fsr2h	equ	0xFDA
  2207                           fsr2l	equ	0xFD9
  2208                           status	equ	0xFD8
  2209                           
  2210 ;; *************** function _scale *****************
  2211 ;; Defined at:
  2212 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  scl             1    wreg     char 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  scl             1   41[COMRAM] char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  3   35[COMRAM] char 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2226 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;Total ram usage:        7 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    2
  2233 ;; This function calls:
  2234 ;;		___awdiv
  2235 ;;		___awmod
  2236 ;;		___ftmul
  2237 ;;		___wmul
  2238 ;; This function is called by:
  2239 ;;		_printf
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text2
  2244  001814                     __ptext2:
  2245                           	opt stack 0
  2246  001814                     _scale:
  2247                           	opt stack 27
  2248                           
  2249                           ;incstack = 0
  2250                           ;scale@scl stored from wreg
  2251  001814  6E2A               	movwf	scale@scl,c
  2252                           
  2253                           ;doprnt.c: 428: if(scl < 0) {
  2254  001816  AE2A               	btfss	scale@scl,7,c
  2255  001818  D0EF               	goto	l2352
  2256                           
  2257                           ;doprnt.c: 429: scl = -scl;
  2258  00181A  6C2A               	negf	scale@scl,c
  2259                           
  2260                           ;doprnt.c: 430: if(scl>=110)
  2261  00181C  502A               	movf	scale@scl,w,c
  2262  00181E  0A80               	xorlw	128
  2263  001820  0F12               	addlw	-238
  2264  001822  A0D8               	btfss	status,0,c
  2265  001824  D08D               	goto	l2342
  2266                           
  2267                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2268  001826  0E00               	movlw	0
  2269  001828  6E12               	movwf	___wmul@multiplicand+1,c
  2270  00182A  0E03               	movlw	3
  2271  00182C  6E11               	movwf	___wmul@multiplicand,c
  2272  00182E  0E00               	movlw	0
  2273  001830  6E0A               	movwf	___awdiv@divisor+1,c
  2274  001832  0E0A               	movlw	10
  2275  001834  6E09               	movwf	___awdiv@divisor,c
  2276  001836  0E00               	movlw	0
  2277  001838  6E04               	movwf	___awmod@divisor+1,c
  2278  00183A  0E64               	movlw	100
  2279  00183C  6E03               	movwf	___awmod@divisor,c
  2280  00183E  502A               	movf	scale@scl,w,c
  2281  001840  6E01               	movwf	___awmod@dividend,c
  2282  001842  6A02               	clrf	___awmod@dividend+1,c
  2283  001844  BE01               	btfsc	___awmod@dividend,7,c
  2284  001846  0602               	decf	___awmod@dividend+1,f,c
  2285  001848  EC9F  F015         	call	___awmod	;wreg free
  2286  00184C  C001  F007         	movff	?___awmod,___awdiv@dividend
  2287  001850  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2288  001854  ECC3  F014         	call	___awdiv	;wreg free
  2289  001858  0E09               	movlw	9
  2290  00185A  2407               	addwf	?___awdiv,w,c
  2291  00185C  6E0F               	movwf	___wmul@multiplier,c
  2292  00185E  0E00               	movlw	0
  2293  001860  2008               	addwfc	?___awdiv+1,w,c
  2294  001862  6E10               	movwf	___wmul@multiplier+1,c
  2295  001864  EC12  F017         	call	___wmul	;wreg free
  2296  001868  0E29               	movlw	low __npowers_
  2297  00186A  240F               	addwf	?___wmul,w,c
  2298  00186C  6EF6               	movwf	tblptrl,c
  2299  00186E  0E10               	movlw	high __npowers_
  2300  001870  2010               	addwfc	?___wmul+1,w,c
  2301  001872  6EF7               	movwf	tblptrh,c
  2302  001874                     	if	0	;There are less than 3 active tblptr bytes
  2303  001874                     	endif
  2304  001874  0009               	tblrd		*+
  2305  001876  CFF5 F018          	movff	tablat,___ftmul@f2
  2306  00187A  0009               	tblrd		*+
  2307  00187C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2308  001880  000A               	tblrd		*-
  2309  001882  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2310  001886  0E00               	movlw	0
  2311  001888  6E0A               	movwf	___awdiv@divisor+1,c
  2312  00188A  0E64               	movlw	100
  2313  00188C  6E09               	movwf	___awdiv@divisor,c
  2314  00188E  502A               	movf	scale@scl,w,c
  2315  001890  6E07               	movwf	___awdiv@dividend,c
  2316  001892  6A08               	clrf	___awdiv@dividend+1,c
  2317  001894  BE07               	btfsc	___awdiv@dividend,7,c
  2318  001896  0608               	decf	___awdiv@dividend+1,f,c
  2319  001898  ECC3  F014         	call	___awdiv	;wreg free
  2320  00189C  0E12               	movlw	18
  2321  00189E  2407               	addwf	?___awdiv,w,c
  2322  0018A0  6E0F               	movwf	___wmul@multiplier,c
  2323  0018A2  0E00               	movlw	0
  2324  0018A4  2008               	addwfc	?___awdiv+1,w,c
  2325  0018A6  6E10               	movwf	___wmul@multiplier+1,c
  2326  0018A8  0E00               	movlw	0
  2327  0018AA  6E12               	movwf	___wmul@multiplicand+1,c
  2328  0018AC  0E03               	movlw	3
  2329  0018AE  6E11               	movwf	___wmul@multiplicand,c
  2330  0018B0  EC12  F017         	call	___wmul	;wreg free
  2331  0018B4  0E29               	movlw	low __npowers_
  2332  0018B6  240F               	addwf	?___wmul,w,c
  2333  0018B8  6EF6               	movwf	tblptrl,c
  2334  0018BA  0E10               	movlw	high __npowers_
  2335  0018BC  2010               	addwfc	?___wmul+1,w,c
  2336  0018BE  6EF7               	movwf	tblptrh,c
  2337  0018C0                     	if	0	;There are less than 3 active tblptr bytes
  2338  0018C0                     	endif
  2339  0018C0  0009               	tblrd		*+
  2340  0018C2  CFF5 F015          	movff	tablat,___ftmul@f1
  2341  0018C6  0009               	tblrd		*+
  2342  0018C8  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2343  0018CC  000A               	tblrd		*-
  2344  0018CE  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2345  0018D2  ECB0  F012         	call	___ftmul	;wreg free
  2346  0018D6  C015  F027         	movff	?___ftmul,_scale$1215
  2347  0018DA  C016  F028         	movff	?___ftmul+1,_scale$1215+1
  2348  0018DE  C017  F029         	movff	?___ftmul+2,_scale$1215+2
  2349                           
  2350                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2351  0018E2  C027  F015         	movff	_scale$1215,___ftmul@f1
  2352  0018E6  C028  F016         	movff	_scale$1215+1,___ftmul@f1+1
  2353  0018EA  C029  F017         	movff	_scale$1215+2,___ftmul@f1+2
  2354  0018EE  0E00               	movlw	0
  2355  0018F0  6E12               	movwf	___wmul@multiplicand+1,c
  2356  0018F2  0E03               	movlw	3
  2357  0018F4  6E11               	movwf	___wmul@multiplicand,c
  2358  0018F6  0E00               	movlw	0
  2359  0018F8  6E04               	movwf	___awmod@divisor+1,c
  2360  0018FA  0E0A               	movlw	10
  2361  0018FC  6E03               	movwf	___awmod@divisor,c
  2362  0018FE  502A               	movf	scale@scl,w,c
  2363  001900  6E01               	movwf	___awmod@dividend,c
  2364  001902  6A02               	clrf	___awmod@dividend+1,c
  2365  001904  BE01               	btfsc	___awmod@dividend,7,c
  2366  001906  0602               	decf	___awmod@dividend+1,f,c
  2367  001908  EC9F  F015         	call	___awmod	;wreg free
  2368  00190C  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2369  001910  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2370  001914  EC12  F017         	call	___wmul	;wreg free
  2371  001918  0E29               	movlw	low __npowers_
  2372  00191A  240F               	addwf	?___wmul,w,c
  2373  00191C  6EF6               	movwf	tblptrl,c
  2374  00191E  0E10               	movlw	high __npowers_
  2375  001920  2010               	addwfc	?___wmul+1,w,c
  2376  001922  6EF7               	movwf	tblptrh,c
  2377  001924                     	if	0	;There are less than 3 active tblptr bytes
  2378  001924                     	endif
  2379  001924  0009               	tblrd		*+
  2380  001926  CFF5 F018          	movff	tablat,___ftmul@f2
  2381  00192A  0009               	tblrd		*+
  2382  00192C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2383  001930  000A               	tblrd		*-
  2384  001932  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2385  001936  ECB0  F012         	call	___ftmul	;wreg free
  2386  00193A  D141               	goto	L5
  2387  00193C  D15A               	goto	l240
  2388  00193E  D054               	goto	l2348
  2389  001940                     l2342:
  2390                           
  2391                           ;doprnt.c: 432: else if(scl > 10)
  2392  001940  502A               	movf	scale@scl,w,c
  2393  001942  0A80               	xorlw	128
  2394  001944  0F75               	addlw	-139
  2395  001946  A0D8               	btfss	status,0,c
  2396  001948  D04F               	goto	l2348
  2397                           
  2398                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2399  00194A  0E00               	movlw	0
  2400  00194C  6E0A               	movwf	___awdiv@divisor+1,c
  2401  00194E  0E0A               	movlw	10
  2402  001950  6E09               	movwf	___awdiv@divisor,c
  2403  001952  502A               	movf	scale@scl,w,c
  2404  001954  6E07               	movwf	___awdiv@dividend,c
  2405  001956  6A08               	clrf	___awdiv@dividend+1,c
  2406  001958  BE07               	btfsc	___awdiv@dividend,7,c
  2407  00195A  0608               	decf	___awdiv@dividend+1,f,c
  2408  00195C  ECC3  F014         	call	___awdiv	;wreg free
  2409  001960  0E09               	movlw	9
  2410  001962  2407               	addwf	?___awdiv,w,c
  2411  001964  6E0F               	movwf	___wmul@multiplier,c
  2412  001966  0E00               	movlw	0
  2413  001968  2008               	addwfc	?___awdiv+1,w,c
  2414  00196A  6E10               	movwf	___wmul@multiplier+1,c
  2415  00196C  0E00               	movlw	0
  2416  00196E  6E12               	movwf	___wmul@multiplicand+1,c
  2417  001970  0E03               	movlw	3
  2418  001972  6E11               	movwf	___wmul@multiplicand,c
  2419  001974  EC12  F017         	call	___wmul	;wreg free
  2420  001978  0E29               	movlw	low __npowers_
  2421  00197A  240F               	addwf	?___wmul,w,c
  2422  00197C  6EF6               	movwf	tblptrl,c
  2423  00197E  0E10               	movlw	high __npowers_
  2424  001980  2010               	addwfc	?___wmul+1,w,c
  2425  001982  6EF7               	movwf	tblptrh,c
  2426  001984                     	if	0	;There are less than 3 active tblptr bytes
  2427  001984                     	endif
  2428  001984  0009               	tblrd		*+
  2429  001986  CFF5 F015          	movff	tablat,___ftmul@f1
  2430  00198A  0009               	tblrd		*+
  2431  00198C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2432  001990  000A               	tblrd		*-
  2433  001992  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2434  001996  0E00               	movlw	0
  2435  001998  6E12               	movwf	___wmul@multiplicand+1,c
  2436  00199A  0E03               	movlw	3
  2437  00199C  6E11               	movwf	___wmul@multiplicand,c
  2438  00199E  0E00               	movlw	0
  2439  0019A0  6E04               	movwf	___awmod@divisor+1,c
  2440  0019A2  0E0A               	movlw	10
  2441  0019A4  6E03               	movwf	___awmod@divisor,c
  2442  0019A6  502A               	movf	scale@scl,w,c
  2443  0019A8  6E01               	movwf	___awmod@dividend,c
  2444  0019AA  6A02               	clrf	___awmod@dividend+1,c
  2445  0019AC  BE01               	btfsc	___awmod@dividend,7,c
  2446  0019AE  0602               	decf	___awmod@dividend+1,f,c
  2447  0019B0  EC9F  F015         	call	___awmod	;wreg free
  2448  0019B4  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2449  0019B8  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2450  0019BC  EC12  F017         	call	___wmul	;wreg free
  2451  0019C0  0E29               	movlw	low __npowers_
  2452  0019C2  240F               	addwf	?___wmul,w,c
  2453  0019C4  6EF6               	movwf	tblptrl,c
  2454  0019C6  0E10               	movlw	high __npowers_
  2455  0019C8  2010               	addwfc	?___wmul+1,w,c
  2456  0019CA  6EF7               	movwf	tblptrh,c
  2457  0019CC                     	if	0	;There are less than 3 active tblptr bytes
  2458  0019CC                     	endif
  2459  0019CC  0009               	tblrd		*+
  2460  0019CE  CFF5 F018          	movff	tablat,___ftmul@f2
  2461  0019D2  0009               	tblrd		*+
  2462  0019D4  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2463  0019D8  000A               	tblrd		*-
  2464  0019DA  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2465  0019DE  ECB0  F012         	call	___ftmul	;wreg free
  2466  0019E2  D0ED               	goto	L5
  2467  0019E4  D106               	goto	l240
  2468  0019E6  D000               	goto	l2348
  2469  0019E8                     l2348:
  2470                           
  2471                           ;doprnt.c: 434: return _npowers_[scl];
  2472  0019E8  502A               	movf	scale@scl,w,c
  2473  0019EA  0D03               	mullw	3
  2474  0019EC  0E29               	movlw	low __npowers_
  2475  0019EE  24F3               	addwf	prodl,w,c
  2476  0019F0  6EF6               	movwf	tblptrl,c
  2477  0019F2  0E10               	movlw	high __npowers_
  2478  0019F4  D0F2               	goto	L4
  2479  0019F6  D0FD               	goto	l240
  2480  0019F8                     l2352:
  2481                           
  2482                           ;doprnt.c: 435: }
  2483                           ;doprnt.c: 436: if(scl>=110)
  2484  0019F8  502A               	movf	scale@scl,w,c
  2485  0019FA  0A80               	xorlw	128
  2486  0019FC  0F12               	addlw	-238
  2487  0019FE  A0D8               	btfss	status,0,c
  2488  001A00  D08D               	goto	l2360
  2489                           
  2490                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2491  001A02  0E00               	movlw	0
  2492  001A04  6E12               	movwf	___wmul@multiplicand+1,c
  2493  001A06  0E03               	movlw	3
  2494  001A08  6E11               	movwf	___wmul@multiplicand,c
  2495  001A0A  0E00               	movlw	0
  2496  001A0C  6E0A               	movwf	___awdiv@divisor+1,c
  2497  001A0E  0E0A               	movlw	10
  2498  001A10  6E09               	movwf	___awdiv@divisor,c
  2499  001A12  0E00               	movlw	0
  2500  001A14  6E04               	movwf	___awmod@divisor+1,c
  2501  001A16  0E64               	movlw	100
  2502  001A18  6E03               	movwf	___awmod@divisor,c
  2503  001A1A  502A               	movf	scale@scl,w,c
  2504  001A1C  6E01               	movwf	___awmod@dividend,c
  2505  001A1E  6A02               	clrf	___awmod@dividend+1,c
  2506  001A20  BE01               	btfsc	___awmod@dividend,7,c
  2507  001A22  0602               	decf	___awmod@dividend+1,f,c
  2508  001A24  EC9F  F015         	call	___awmod	;wreg free
  2509  001A28  C001  F007         	movff	?___awmod,___awdiv@dividend
  2510  001A2C  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2511  001A30  ECC3  F014         	call	___awdiv	;wreg free
  2512  001A34  0E09               	movlw	9
  2513  001A36  2407               	addwf	?___awdiv,w,c
  2514  001A38  6E0F               	movwf	___wmul@multiplier,c
  2515  001A3A  0E00               	movlw	0
  2516  001A3C  2008               	addwfc	?___awdiv+1,w,c
  2517  001A3E  6E10               	movwf	___wmul@multiplier+1,c
  2518  001A40  EC12  F017         	call	___wmul	;wreg free
  2519  001A44  0E50               	movlw	low __powers_
  2520  001A46  240F               	addwf	?___wmul,w,c
  2521  001A48  6EF6               	movwf	tblptrl,c
  2522  001A4A  0E10               	movlw	high __powers_
  2523  001A4C  2010               	addwfc	?___wmul+1,w,c
  2524  001A4E  6EF7               	movwf	tblptrh,c
  2525  001A50                     	if	0	;There are less than 3 active tblptr bytes
  2526  001A50                     	endif
  2527  001A50  0009               	tblrd		*+
  2528  001A52  CFF5 F018          	movff	tablat,___ftmul@f2
  2529  001A56  0009               	tblrd		*+
  2530  001A58  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2531  001A5C  000A               	tblrd		*-
  2532  001A5E  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2533  001A62  0E00               	movlw	0
  2534  001A64  6E0A               	movwf	___awdiv@divisor+1,c
  2535  001A66  0E64               	movlw	100
  2536  001A68  6E09               	movwf	___awdiv@divisor,c
  2537  001A6A  502A               	movf	scale@scl,w,c
  2538  001A6C  6E07               	movwf	___awdiv@dividend,c
  2539  001A6E  6A08               	clrf	___awdiv@dividend+1,c
  2540  001A70  BE07               	btfsc	___awdiv@dividend,7,c
  2541  001A72  0608               	decf	___awdiv@dividend+1,f,c
  2542  001A74  ECC3  F014         	call	___awdiv	;wreg free
  2543  001A78  0E12               	movlw	18
  2544  001A7A  2407               	addwf	?___awdiv,w,c
  2545  001A7C  6E0F               	movwf	___wmul@multiplier,c
  2546  001A7E  0E00               	movlw	0
  2547  001A80  2008               	addwfc	?___awdiv+1,w,c
  2548  001A82  6E10               	movwf	___wmul@multiplier+1,c
  2549  001A84  0E00               	movlw	0
  2550  001A86  6E12               	movwf	___wmul@multiplicand+1,c
  2551  001A88  0E03               	movlw	3
  2552  001A8A  6E11               	movwf	___wmul@multiplicand,c
  2553  001A8C  EC12  F017         	call	___wmul	;wreg free
  2554  001A90  0E50               	movlw	low __powers_
  2555  001A92  240F               	addwf	?___wmul,w,c
  2556  001A94  6EF6               	movwf	tblptrl,c
  2557  001A96  0E10               	movlw	high __powers_
  2558  001A98  2010               	addwfc	?___wmul+1,w,c
  2559  001A9A  6EF7               	movwf	tblptrh,c
  2560  001A9C                     	if	0	;There are less than 3 active tblptr bytes
  2561  001A9C                     	endif
  2562  001A9C  0009               	tblrd		*+
  2563  001A9E  CFF5 F015          	movff	tablat,___ftmul@f1
  2564  001AA2  0009               	tblrd		*+
  2565  001AA4  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2566  001AA8  000A               	tblrd		*-
  2567  001AAA  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2568  001AAE  ECB0  F012         	call	___ftmul	;wreg free
  2569  001AB2  C015  F027         	movff	?___ftmul,_scale$1215
  2570  001AB6  C016  F028         	movff	?___ftmul+1,_scale$1215+1
  2571  001ABA  C017  F029         	movff	?___ftmul+2,_scale$1215+2
  2572                           
  2573                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2574  001ABE  C027  F015         	movff	_scale$1215,___ftmul@f1
  2575  001AC2  C028  F016         	movff	_scale$1215+1,___ftmul@f1+1
  2576  001AC6  C029  F017         	movff	_scale$1215+2,___ftmul@f1+2
  2577  001ACA  0E00               	movlw	0
  2578  001ACC  6E12               	movwf	___wmul@multiplicand+1,c
  2579  001ACE  0E03               	movlw	3
  2580  001AD0  6E11               	movwf	___wmul@multiplicand,c
  2581  001AD2  0E00               	movlw	0
  2582  001AD4  6E04               	movwf	___awmod@divisor+1,c
  2583  001AD6  0E0A               	movlw	10
  2584  001AD8  6E03               	movwf	___awmod@divisor,c
  2585  001ADA  502A               	movf	scale@scl,w,c
  2586  001ADC  6E01               	movwf	___awmod@dividend,c
  2587  001ADE  6A02               	clrf	___awmod@dividend+1,c
  2588  001AE0  BE01               	btfsc	___awmod@dividend,7,c
  2589  001AE2  0602               	decf	___awmod@dividend+1,f,c
  2590  001AE4  EC9F  F015         	call	___awmod	;wreg free
  2591  001AE8  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2592  001AEC  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2593  001AF0  EC12  F017         	call	___wmul	;wreg free
  2594  001AF4  0E50               	movlw	low __powers_
  2595  001AF6  240F               	addwf	?___wmul,w,c
  2596  001AF8  6EF6               	movwf	tblptrl,c
  2597  001AFA  0E10               	movlw	high __powers_
  2598  001AFC  2010               	addwfc	?___wmul+1,w,c
  2599  001AFE  6EF7               	movwf	tblptrh,c
  2600  001B00                     	if	0	;There are less than 3 active tblptr bytes
  2601  001B00                     	endif
  2602  001B00  0009               	tblrd		*+
  2603  001B02  CFF5 F018          	movff	tablat,___ftmul@f2
  2604  001B06  0009               	tblrd		*+
  2605  001B08  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2606  001B0C  000A               	tblrd		*-
  2607  001B0E  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2608  001B12  ECB0  F012         	call	___ftmul	;wreg free
  2609  001B16  D053               	goto	L5
  2610  001B18  D06C               	goto	l240
  2611  001B1A  D059               	goto	l2366
  2612  001B1C                     l2360:
  2613                           
  2614                           ;doprnt.c: 438: else if(scl > 10)
  2615  001B1C  502A               	movf	scale@scl,w,c
  2616  001B1E  0A80               	xorlw	128
  2617  001B20  0F75               	addlw	-139
  2618  001B22  A0D8               	btfss	status,0,c
  2619  001B24  D054               	goto	l2366
  2620                           
  2621                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2622  001B26  0E00               	movlw	0
  2623  001B28  6E0A               	movwf	___awdiv@divisor+1,c
  2624  001B2A  0E0A               	movlw	10
  2625  001B2C  6E09               	movwf	___awdiv@divisor,c
  2626  001B2E  502A               	movf	scale@scl,w,c
  2627  001B30  6E07               	movwf	___awdiv@dividend,c
  2628  001B32  6A08               	clrf	___awdiv@dividend+1,c
  2629  001B34  BE07               	btfsc	___awdiv@dividend,7,c
  2630  001B36  0608               	decf	___awdiv@dividend+1,f,c
  2631  001B38  ECC3  F014         	call	___awdiv	;wreg free
  2632  001B3C  0E09               	movlw	9
  2633  001B3E  2407               	addwf	?___awdiv,w,c
  2634  001B40  6E0F               	movwf	___wmul@multiplier,c
  2635  001B42  0E00               	movlw	0
  2636  001B44  2008               	addwfc	?___awdiv+1,w,c
  2637  001B46  6E10               	movwf	___wmul@multiplier+1,c
  2638  001B48  0E00               	movlw	0
  2639  001B4A  6E12               	movwf	___wmul@multiplicand+1,c
  2640  001B4C  0E03               	movlw	3
  2641  001B4E  6E11               	movwf	___wmul@multiplicand,c
  2642  001B50  EC12  F017         	call	___wmul	;wreg free
  2643  001B54  0E50               	movlw	low __powers_
  2644  001B56  240F               	addwf	?___wmul,w,c
  2645  001B58  6EF6               	movwf	tblptrl,c
  2646  001B5A  0E10               	movlw	high __powers_
  2647  001B5C  2010               	addwfc	?___wmul+1,w,c
  2648  001B5E  6EF7               	movwf	tblptrh,c
  2649  001B60                     	if	0	;There are less than 3 active tblptr bytes
  2650  001B60                     	endif
  2651  001B60  0009               	tblrd		*+
  2652  001B62  CFF5 F015          	movff	tablat,___ftmul@f1
  2653  001B66  0009               	tblrd		*+
  2654  001B68  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2655  001B6C  000A               	tblrd		*-
  2656  001B6E  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2657  001B72  0E00               	movlw	0
  2658  001B74  6E12               	movwf	___wmul@multiplicand+1,c
  2659  001B76  0E03               	movlw	3
  2660  001B78  6E11               	movwf	___wmul@multiplicand,c
  2661  001B7A  0E00               	movlw	0
  2662  001B7C  6E04               	movwf	___awmod@divisor+1,c
  2663  001B7E  0E0A               	movlw	10
  2664  001B80  6E03               	movwf	___awmod@divisor,c
  2665  001B82  502A               	movf	scale@scl,w,c
  2666  001B84  6E01               	movwf	___awmod@dividend,c
  2667  001B86  6A02               	clrf	___awmod@dividend+1,c
  2668  001B88  BE01               	btfsc	___awmod@dividend,7,c
  2669  001B8A  0602               	decf	___awmod@dividend+1,f,c
  2670  001B8C  EC9F  F015         	call	___awmod	;wreg free
  2671  001B90  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2672  001B94  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2673  001B98  EC12  F017         	call	___wmul	;wreg free
  2674  001B9C  0E50               	movlw	low __powers_
  2675  001B9E  240F               	addwf	?___wmul,w,c
  2676  001BA0  6EF6               	movwf	tblptrl,c
  2677  001BA2  0E10               	movlw	high __powers_
  2678  001BA4  2010               	addwfc	?___wmul+1,w,c
  2679  001BA6  6EF7               	movwf	tblptrh,c
  2680  001BA8                     	if	0	;There are less than 3 active tblptr bytes
  2681  001BA8                     	endif
  2682  001BA8  0009               	tblrd		*+
  2683  001BAA  CFF5 F018          	movff	tablat,___ftmul@f2
  2684  001BAE  0009               	tblrd		*+
  2685  001BB0  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2686  001BB4  000A               	tblrd		*-
  2687  001BB6  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2688  001BBA  ECB0  F012         	call	___ftmul	;wreg free
  2689  001BBE                     L5:
  2690  001BBE  C015  F024         	movff	?___ftmul,?_scale
  2691  001BC2  C016  F025         	movff	?___ftmul+1,?_scale+1
  2692  001BC6  C017  F026         	movff	?___ftmul+2,?_scale+2
  2693  001BCA  D013               	goto	l240
  2694  001BCC  D000               	goto	l2366
  2695  001BCE                     l2366:
  2696                           
  2697                           ;doprnt.c: 440: return _powers_[scl];
  2698  001BCE  502A               	movf	scale@scl,w,c
  2699  001BD0  0D03               	mullw	3
  2700  001BD2  0E50               	movlw	low __powers_
  2701  001BD4  24F3               	addwf	prodl,w,c
  2702  001BD6  6EF6               	movwf	tblptrl,c
  2703  001BD8  0E10               	movlw	high __powers_
  2704  001BDA                     L4:
  2705  001BDA  20F4               	addwfc	prodh,w,c
  2706  001BDC  6EF7               	movwf	tblptrh,c
  2707  001BDE                     	if	0	;There are less than 3 active tblptr bytes
  2708  001BDE                     	endif
  2709  001BDE  0009               	tblrd		*+
  2710  001BE0  CFF5 F024          	movff	tablat,?_scale
  2711  001BE4  0009               	tblrd		*+
  2712  001BE6  CFF5 F025          	movff	tablat,?_scale+1
  2713  001BEA  000A               	tblrd		*-
  2714  001BEC  CFF5 F026          	movff	tablat,?_scale+2
  2715  001BF0  D000               	goto	l240
  2716  001BF2                     l240:
  2717  001BF2  0012               	return		;funcret
  2718  001BF4                     __end_of_scale:
  2719                           	opt stack 0
  2720                           tblptru	equ	0xFF8
  2721                           tblptrh	equ	0xFF7
  2722                           tblptrl	equ	0xFF6
  2723                           tablat	equ	0xFF5
  2724                           prodh	equ	0xFF4
  2725                           prodl	equ	0xFF3
  2726                           postinc0	equ	0xFEE
  2727                           wreg	equ	0xFE8
  2728                           postdec1	equ	0xFE5
  2729                           fsr1l	equ	0xFE1
  2730                           postinc2	equ	0xFDE
  2731                           postdec2	equ	0xFDD
  2732                           fsr2h	equ	0xFDA
  2733                           fsr2l	equ	0xFD9
  2734                           status	equ	0xFD8
  2735                           
  2736 ;; *************** function _putch *****************
  2737 ;; Defined at:
  2738 ;;		line 143 in file "Lab5P1.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  c               1    wreg     unsigned char 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  c               1    0[COMRAM] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;		None               void
  2745 ;; Registers used:
  2746 ;;		wreg
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;Total ram usage:        1 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_printf
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text3
  2766  002EFC                     __ptext3:
  2767                           	opt stack 0
  2768  002EFC                     _putch:
  2769                           	opt stack 29
  2770                           
  2771                           ;incstack = 0
  2772                           ;putch@c stored from wreg
  2773  002EFC  6E01               	movwf	putch@c,c
  2774                           
  2775                           ;Lab5P1.c: 144: while (!TRMT);
  2776  002EFE  D000               	goto	l121
  2777  002F00                     l121:
  2778  002F00  A2AC               	btfss	4012,1,c	;volatile
  2779  002F02  D7FE               	goto	l121
  2780                           
  2781                           ;Lab5P1.c: 145: TXREG = c;
  2782  002F04  C001  FFAD         	movff	putch@c,4013	;volatile
  2783  002F08  0012               	return		;funcret
  2784  002F0A                     __end_of_putch:
  2785                           	opt stack 0
  2786                           tblptru	equ	0xFF8
  2787                           tblptrh	equ	0xFF7
  2788                           tblptrl	equ	0xFF6
  2789                           tablat	equ	0xFF5
  2790                           prodh	equ	0xFF4
  2791                           prodl	equ	0xFF3
  2792                           postinc0	equ	0xFEE
  2793                           wreg	equ	0xFE8
  2794                           postdec1	equ	0xFE5
  2795                           fsr1l	equ	0xFE1
  2796                           postinc2	equ	0xFDE
  2797                           postdec2	equ	0xFDD
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8
  2801                           
  2802 ;; *************** function _fround *****************
  2803 ;; Defined at:
  2804 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  prec            1    wreg     unsigned char 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  prec            1   44[COMRAM] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  3   35[COMRAM] unsigned char 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2818 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;Total ram usage:       10 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    2
  2825 ;; This function calls:
  2826 ;;		___awdiv
  2827 ;;		___awmod
  2828 ;;		___ftmul
  2829 ;;		___wmul
  2830 ;; This function is called by:
  2831 ;;		_printf
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text4
  2836  001BF4                     __ptext4:
  2837                           	opt stack 0
  2838  001BF4                     _fround:
  2839                           	opt stack 27
  2840                           
  2841                           ;incstack = 0
  2842                           ;fround@prec stored from wreg
  2843  001BF4  6E2D               	movwf	fround@prec,c
  2844                           
  2845                           ;doprnt.c: 413: if(prec>=110)
  2846  001BF6  0E6D               	movlw	109
  2847  001BF8  642D               	cpfsgt	fround@prec,c
  2848  001BFA  D09B               	goto	l2320
  2849                           
  2850                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2851  001BFC  0E00               	movlw	0
  2852  001BFE  6E12               	movwf	___wmul@multiplicand+1,c
  2853  001C00  0E03               	movlw	3
  2854  001C02  6E11               	movwf	___wmul@multiplicand,c
  2855  001C04  0E00               	movlw	0
  2856  001C06  6E0A               	movwf	___awdiv@divisor+1,c
  2857  001C08  0E0A               	movlw	10
  2858  001C0A  6E09               	movwf	___awdiv@divisor,c
  2859  001C0C  0E00               	movlw	0
  2860  001C0E  6E04               	movwf	___awmod@divisor+1,c
  2861  001C10  0E64               	movlw	100
  2862  001C12  6E03               	movwf	___awmod@divisor,c
  2863  001C14  C02D  F001         	movff	fround@prec,___awmod@dividend
  2864  001C18  6A02               	clrf	___awmod@dividend+1,c
  2865  001C1A  EC9F  F015         	call	___awmod	;wreg free
  2866  001C1E  C001  F007         	movff	?___awmod,___awdiv@dividend
  2867  001C22  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2868  001C26  ECC3  F014         	call	___awdiv	;wreg free
  2869  001C2A  0E09               	movlw	9
  2870  001C2C  2407               	addwf	?___awdiv,w,c
  2871  001C2E  6E0F               	movwf	___wmul@multiplier,c
  2872  001C30  0E00               	movlw	0
  2873  001C32  2008               	addwfc	?___awdiv+1,w,c
  2874  001C34  6E10               	movwf	___wmul@multiplier+1,c
  2875  001C36  EC12  F017         	call	___wmul	;wreg free
  2876  001C3A  0E29               	movlw	low __npowers_
  2877  001C3C  240F               	addwf	?___wmul,w,c
  2878  001C3E  6EF6               	movwf	tblptrl,c
  2879  001C40  0E10               	movlw	high __npowers_
  2880  001C42  2010               	addwfc	?___wmul+1,w,c
  2881  001C44  6EF7               	movwf	tblptrh,c
  2882  001C46                     	if	0	;There are less than 3 active tblptr bytes
  2883  001C46                     	endif
  2884  001C46  0009               	tblrd		*+
  2885  001C48  CFF5 F018          	movff	tablat,___ftmul@f2
  2886  001C4C  0009               	tblrd		*+
  2887  001C4E  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2888  001C52  000A               	tblrd		*-
  2889  001C54  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2890  001C58  0E00               	movlw	0
  2891  001C5A  6E0A               	movwf	___awdiv@divisor+1,c
  2892  001C5C  0E64               	movlw	100
  2893  001C5E  6E09               	movwf	___awdiv@divisor,c
  2894  001C60  C02D  F007         	movff	fround@prec,___awdiv@dividend
  2895  001C64  6A08               	clrf	___awdiv@dividend+1,c
  2896  001C66  ECC3  F014         	call	___awdiv	;wreg free
  2897  001C6A  0E12               	movlw	18
  2898  001C6C  2407               	addwf	?___awdiv,w,c
  2899  001C6E  6E0F               	movwf	___wmul@multiplier,c
  2900  001C70  0E00               	movlw	0
  2901  001C72  2008               	addwfc	?___awdiv+1,w,c
  2902  001C74  6E10               	movwf	___wmul@multiplier+1,c
  2903  001C76  0E00               	movlw	0
  2904  001C78  6E12               	movwf	___wmul@multiplicand+1,c
  2905  001C7A  0E03               	movlw	3
  2906  001C7C  6E11               	movwf	___wmul@multiplicand,c
  2907  001C7E  EC12  F017         	call	___wmul	;wreg free
  2908  001C82  0E29               	movlw	low __npowers_
  2909  001C84  240F               	addwf	?___wmul,w,c
  2910  001C86  6EF6               	movwf	tblptrl,c
  2911  001C88  0E10               	movlw	high __npowers_
  2912  001C8A  2010               	addwfc	?___wmul+1,w,c
  2913  001C8C  6EF7               	movwf	tblptrh,c
  2914  001C8E                     	if	0	;There are less than 3 active tblptr bytes
  2915  001C8E                     	endif
  2916  001C8E  0009               	tblrd		*+
  2917  001C90  CFF5 F015          	movff	tablat,___ftmul@f1
  2918  001C94  0009               	tblrd		*+
  2919  001C96  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2920  001C9A  000A               	tblrd		*-
  2921  001C9C  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2922  001CA0  ECB0  F012         	call	___ftmul	;wreg free
  2923  001CA4  C015  F02A         	movff	?___ftmul,_fround$1213
  2924  001CA8  C016  F02B         	movff	?___ftmul+1,_fround$1213+1
  2925  001CAC  C017  F02C         	movff	?___ftmul+2,_fround$1213+2
  2926                           
  2927                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2928  001CB0  0E00               	movlw	0
  2929  001CB2  6E12               	movwf	___wmul@multiplicand+1,c
  2930  001CB4  0E03               	movlw	3
  2931  001CB6  6E11               	movwf	___wmul@multiplicand,c
  2932  001CB8  0E00               	movlw	0
  2933  001CBA  6E04               	movwf	___awmod@divisor+1,c
  2934  001CBC  0E0A               	movlw	10
  2935  001CBE  6E03               	movwf	___awmod@divisor,c
  2936  001CC0  C02D  F001         	movff	fround@prec,___awmod@dividend
  2937  001CC4  6A02               	clrf	___awmod@dividend+1,c
  2938  001CC6  EC9F  F015         	call	___awmod	;wreg free
  2939  001CCA  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2940  001CCE  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2941  001CD2  EC12  F017         	call	___wmul	;wreg free
  2942  001CD6  0E29               	movlw	low __npowers_
  2943  001CD8  240F               	addwf	?___wmul,w,c
  2944  001CDA  6EF6               	movwf	tblptrl,c
  2945  001CDC  0E10               	movlw	high __npowers_
  2946  001CDE  2010               	addwfc	?___wmul+1,w,c
  2947  001CE0  6EF7               	movwf	tblptrh,c
  2948  001CE2                     	if	0	;There are less than 3 active tblptr bytes
  2949  001CE2                     	endif
  2950  001CE2  0009               	tblrd		*+
  2951  001CE4  CFF5 F018          	movff	tablat,___ftmul@f2
  2952  001CE8  0009               	tblrd		*+
  2953  001CEA  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2954  001CEE  000A               	tblrd		*-
  2955  001CF0  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2956  001CF4  C02A  F015         	movff	_fround$1213,___ftmul@f1
  2957  001CF8  C02B  F016         	movff	_fround$1213+1,___ftmul@f1+1
  2958  001CFC  C02C  F017         	movff	_fround$1213+2,___ftmul@f1+2
  2959  001D00  ECB0  F012         	call	___ftmul	;wreg free
  2960  001D04  C015  F027         	movff	?___ftmul,_fround$1214
  2961  001D08  C016  F028         	movff	?___ftmul+1,_fround$1214+1
  2962  001D0C  C017  F029         	movff	?___ftmul+2,_fround$1214+2
  2963                           
  2964                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2965  001D10  C027  F015         	movff	_fround$1214,___ftmul@f1
  2966  001D14  C028  F016         	movff	_fround$1214+1,___ftmul@f1+1
  2967  001D18  C029  F017         	movff	_fround$1214+2,___ftmul@f1+2
  2968  001D1C  0E00               	movlw	0
  2969  001D1E  6E18               	movwf	___ftmul@f2,c
  2970  001D20  0E00               	movlw	0
  2971  001D22  6E19               	movwf	___ftmul@f2+1,c
  2972  001D24  0E3F               	movlw	63
  2973  001D26  6E1A               	movwf	___ftmul@f2+2,c
  2974  001D28  ECB0  F012         	call	___ftmul	;wreg free
  2975  001D2C  D07D               	goto	L7
  2976  001D2E  D083               	goto	l233
  2977  001D30  D062               	goto	l2328
  2978  001D32                     l2320:
  2979                           
  2980                           ;doprnt.c: 415: else if(prec > 10)
  2981  001D32  0E0A               	movlw	10
  2982  001D34  642D               	cpfsgt	fround@prec,c
  2983  001D36  D05F               	goto	l2328
  2984                           
  2985                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2986  001D38  0E00               	movlw	0
  2987  001D3A  6E12               	movwf	___wmul@multiplicand+1,c
  2988  001D3C  0E03               	movlw	3
  2989  001D3E  6E11               	movwf	___wmul@multiplicand,c
  2990  001D40  0E00               	movlw	0
  2991  001D42  6E04               	movwf	___awmod@divisor+1,c
  2992  001D44  0E0A               	movlw	10
  2993  001D46  6E03               	movwf	___awmod@divisor,c
  2994  001D48  C02D  F001         	movff	fround@prec,___awmod@dividend
  2995  001D4C  6A02               	clrf	___awmod@dividend+1,c
  2996  001D4E  EC9F  F015         	call	___awmod	;wreg free
  2997  001D52  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2998  001D56  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2999  001D5A  EC12  F017         	call	___wmul	;wreg free
  3000  001D5E  0E29               	movlw	low __npowers_
  3001  001D60  240F               	addwf	?___wmul,w,c
  3002  001D62  6EF6               	movwf	tblptrl,c
  3003  001D64  0E10               	movlw	high __npowers_
  3004  001D66  2010               	addwfc	?___wmul+1,w,c
  3005  001D68  6EF7               	movwf	tblptrh,c
  3006  001D6A                     	if	0	;There are less than 3 active tblptr bytes
  3007  001D6A                     	endif
  3008  001D6A  0009               	tblrd		*+
  3009  001D6C  CFF5 F018          	movff	tablat,___ftmul@f2
  3010  001D70  0009               	tblrd		*+
  3011  001D72  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3012  001D76  000A               	tblrd		*-
  3013  001D78  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3014  001D7C  0E00               	movlw	0
  3015  001D7E  6E0A               	movwf	___awdiv@divisor+1,c
  3016  001D80  0E0A               	movlw	10
  3017  001D82  6E09               	movwf	___awdiv@divisor,c
  3018  001D84  C02D  F007         	movff	fround@prec,___awdiv@dividend
  3019  001D88  6A08               	clrf	___awdiv@dividend+1,c
  3020  001D8A  ECC3  F014         	call	___awdiv	;wreg free
  3021  001D8E  0E09               	movlw	9
  3022  001D90  2407               	addwf	?___awdiv,w,c
  3023  001D92  6E0F               	movwf	___wmul@multiplier,c
  3024  001D94  0E00               	movlw	0
  3025  001D96  2008               	addwfc	?___awdiv+1,w,c
  3026  001D98  6E10               	movwf	___wmul@multiplier+1,c
  3027  001D9A  0E00               	movlw	0
  3028  001D9C  6E12               	movwf	___wmul@multiplicand+1,c
  3029  001D9E  0E03               	movlw	3
  3030  001DA0  6E11               	movwf	___wmul@multiplicand,c
  3031  001DA2  EC12  F017         	call	___wmul	;wreg free
  3032  001DA6  0E29               	movlw	low __npowers_
  3033  001DA8  240F               	addwf	?___wmul,w,c
  3034  001DAA  6EF6               	movwf	tblptrl,c
  3035  001DAC  0E10               	movlw	high __npowers_
  3036  001DAE  2010               	addwfc	?___wmul+1,w,c
  3037  001DB0  6EF7               	movwf	tblptrh,c
  3038  001DB2                     	if	0	;There are less than 3 active tblptr bytes
  3039  001DB2                     	endif
  3040  001DB2  0009               	tblrd		*+
  3041  001DB4  CFF5 F015          	movff	tablat,___ftmul@f1
  3042  001DB8  0009               	tblrd		*+
  3043  001DBA  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3044  001DBE  000A               	tblrd		*-
  3045  001DC0  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3046  001DC4  ECB0  F012         	call	___ftmul	;wreg free
  3047  001DC8  C015  F02A         	movff	?___ftmul,_fround$1213
  3048  001DCC  C016  F02B         	movff	?___ftmul+1,_fround$1213+1
  3049  001DD0  C017  F02C         	movff	?___ftmul+2,_fround$1213+2
  3050                           
  3051                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3052  001DD4  C02A  F015         	movff	_fround$1213,___ftmul@f1
  3053  001DD8  C02B  F016         	movff	_fround$1213+1,___ftmul@f1+1
  3054  001DDC  C02C  F017         	movff	_fround$1213+2,___ftmul@f1+2
  3055  001DE0  0E00               	movlw	0
  3056  001DE2  6E18               	movwf	___ftmul@f2,c
  3057  001DE4  0E00               	movlw	0
  3058  001DE6  6E19               	movwf	___ftmul@f2+1,c
  3059  001DE8  0E3F               	movlw	63
  3060  001DEA  6E1A               	movwf	___ftmul@f2+2,c
  3061  001DEC  ECB0  F012         	call	___ftmul	;wreg free
  3062  001DF0  D01B               	goto	L7
  3063  001DF2  D021               	goto	l233
  3064  001DF4  D000               	goto	l2328
  3065  001DF6                     l2328:
  3066                           
  3067                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3068  001DF6  502D               	movf	fround@prec,w,c
  3069  001DF8  0D03               	mullw	3
  3070  001DFA  0E29               	movlw	low __npowers_
  3071  001DFC  24F3               	addwf	prodl,w,c
  3072  001DFE  6EF6               	movwf	tblptrl,c
  3073  001E00  0E10               	movlw	high __npowers_
  3074  001E02  20F4               	addwfc	prodh,w,c
  3075  001E04  6EF7               	movwf	tblptrh,c
  3076  001E06                     	if	0	;There are less than 3 active tblptr bytes
  3077  001E06                     	endif
  3078  001E06  0009               	tblrd		*+
  3079  001E08  CFF5 F015          	movff	tablat,___ftmul@f1
  3080  001E0C  0009               	tblrd		*+
  3081  001E0E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3082  001E12  000A               	tblrd		*-
  3083  001E14  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3084  001E18  0E00               	movlw	0
  3085  001E1A  6E18               	movwf	___ftmul@f2,c
  3086  001E1C  0E00               	movlw	0
  3087  001E1E  6E19               	movwf	___ftmul@f2+1,c
  3088  001E20  0E3F               	movlw	63
  3089  001E22  6E1A               	movwf	___ftmul@f2+2,c
  3090  001E24  ECB0  F012         	call	___ftmul	;wreg free
  3091  001E28                     L7:
  3092  001E28  C015  F024         	movff	?___ftmul,?_fround
  3093  001E2C  C016  F025         	movff	?___ftmul+1,?_fround+1
  3094  001E30  C017  F026         	movff	?___ftmul+2,?_fround+2
  3095  001E34  D000               	goto	l233
  3096  001E36                     l233:
  3097  001E36  0012               	return		;funcret
  3098  001E38                     __end_of_fround:
  3099                           	opt stack 0
  3100                           tblptru	equ	0xFF8
  3101                           tblptrh	equ	0xFF7
  3102                           tblptrl	equ	0xFF6
  3103                           tablat	equ	0xFF5
  3104                           prodh	equ	0xFF4
  3105                           prodl	equ	0xFF3
  3106                           postinc0	equ	0xFEE
  3107                           wreg	equ	0xFE8
  3108                           postdec1	equ	0xFE5
  3109                           fsr1l	equ	0xFE1
  3110                           postinc2	equ	0xFDE
  3111                           postdec2	equ	0xFDD
  3112                           fsr2h	equ	0xFDA
  3113                           fsr2l	equ	0xFD9
  3114                           status	equ	0xFD8
  3115                           
  3116 ;; *************** function ___wmul *****************
  3117 ;; Defined at:
  3118 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  multiplier      2   14[COMRAM] unsigned int 
  3121 ;;  multiplicand    2   16[COMRAM] unsigned int 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  product         2   18[COMRAM] unsigned int 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  2   14[COMRAM] unsigned int 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0, prodl, prodh
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;Total ram usage:        6 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_fround
  3143 ;;		_scale
  3144 ;;		_printf
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text5
  3149  002E24                     __ptext5:
  3150                           	opt stack 0
  3151  002E24                     ___wmul:
  3152                           	opt stack 28
  3153                           
  3154                           ;incstack = 0
  3155  002E24  500F               	movf	___wmul@multiplier,w,c
  3156  002E26  0211               	mulwf	___wmul@multiplicand,c
  3157  002E28  CFF3 F013          	movff	prodl,___wmul@product
  3158  002E2C  CFF4 F014          	movff	prodh,___wmul@product+1
  3159  002E30  500F               	movf	___wmul@multiplier,w,c
  3160  002E32  0212               	mulwf	___wmul@multiplicand+1,c
  3161  002E34  50F3               	movf	prodl,w,c
  3162  002E36  2614               	addwf	___wmul@product+1,f,c
  3163  002E38  5010               	movf	___wmul@multiplier+1,w,c
  3164  002E3A  0211               	mulwf	___wmul@multiplicand,c
  3165  002E3C  50F3               	movf	prodl,w,c
  3166  002E3E  2614               	addwf	___wmul@product+1,f,c
  3167  002E40  C013  F00F         	movff	___wmul@product,?___wmul
  3168  002E44  C014  F010         	movff	___wmul@product+1,?___wmul+1
  3169  002E48  D000               	goto	l341
  3170  002E4A                     l341:
  3171  002E4A  0012               	return		;funcret
  3172  002E4C                     __end_of___wmul:
  3173                           	opt stack 0
  3174                           tblptru	equ	0xFF8
  3175                           tblptrh	equ	0xFF7
  3176                           tblptrl	equ	0xFF6
  3177                           tablat	equ	0xFF5
  3178                           prodh	equ	0xFF4
  3179                           prodl	equ	0xFF3
  3180                           postinc0	equ	0xFEE
  3181                           wreg	equ	0xFE8
  3182                           postdec1	equ	0xFE5
  3183                           fsr1l	equ	0xFE1
  3184                           postinc2	equ	0xFDE
  3185                           postdec2	equ	0xFDD
  3186                           fsr2h	equ	0xFDA
  3187                           fsr2l	equ	0xFD9
  3188                           status	equ	0xFD8
  3189                           
  3190 ;; *************** function ___ftmul *****************
  3191 ;; Defined at:
  3192 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  f1              3   20[COMRAM] float 
  3195 ;;  f2              3   23[COMRAM] float 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  3198 ;;  sign            1   34[COMRAM] unsigned char 
  3199 ;;  cntr            1   33[COMRAM] unsigned char 
  3200 ;;  exp             1   29[COMRAM] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  3   20[COMRAM] float 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3210 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;Total ram usage:       15 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    1
  3217 ;; This function calls:
  3218 ;;		___ftpack
  3219 ;; This function is called by:
  3220 ;;		_main
  3221 ;;		_fround
  3222 ;;		_scale
  3223 ;;		_printf
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text6
  3228  002560                     __ptext6:
  3229                           	opt stack 0
  3230  002560                     ___ftmul:
  3231                           	opt stack 27
  3232                           
  3233                           ;incstack = 0
  3234  002560  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  3235  002564  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3236  002566  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3237  002568  3416               	rlcf	___ftmul@f1+1,w,c
  3238  00256A  361B               	rlcf	??___ftmul& (0+255),f,c
  3239  00256C  E301               	bnc	u1971
  3240  00256E  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3241  002570                     u1971:
  3242  002570  501B               	movf	??___ftmul,w,c
  3243  002572  6E1E               	movwf	___ftmul@exp,c
  3244  002574  501E               	movf	___ftmul@exp,w,c
  3245  002576  A4D8               	btfss	status,2,c
  3246  002578  D002               	goto	l2134
  3247  00257A  D00E               	goto	l2136
  3248  00257C  D06C               	goto	l770
  3249  00257E                     l2134:
  3250  00257E  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  3251  002582  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3252  002584  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3253  002586  3419               	rlcf	___ftmul@f2+1,w,c
  3254  002588  361B               	rlcf	??___ftmul& (0+255),f,c
  3255  00258A  E301               	bnc	u1991
  3256  00258C  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3257  00258E                     u1991:
  3258  00258E  501B               	movf	??___ftmul,w,c
  3259  002590  6E23               	movwf	___ftmul@sign,c
  3260  002592  5023               	movf	___ftmul@sign,w,c
  3261  002594  A4D8               	btfss	status,2,c
  3262  002596  D007               	goto	l2140
  3263  002598                     l2136:
  3264  002598  0E00               	movlw	0
  3265  00259A  6E15               	movwf	?___ftmul,c
  3266  00259C  0E00               	movlw	0
  3267  00259E  6E16               	movwf	?___ftmul+1,c
  3268  0025A0  0E00               	movlw	0
  3269  0025A2  6E17               	movwf	?___ftmul+2,c
  3270  0025A4  D058               	goto	l770
  3271  0025A6                     l2140:
  3272  0025A6  5023               	movf	___ftmul@sign,w,c
  3273  0025A8  0F7B               	addlw	123
  3274  0025AA  261E               	addwf	___ftmul@exp,f,c
  3275  0025AC  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  3276  0025B0  501A               	movf	___ftmul@f2+2,w,c
  3277  0025B2  1A23               	xorwf	___ftmul@sign,f,c
  3278  0025B4  0E80               	movlw	128
  3279  0025B6  1623               	andwf	___ftmul@sign,f,c
  3280  0025B8  8E16               	bsf	___ftmul@f1+1,7,c
  3281  0025BA  8E19               	bsf	___ftmul@f2+1,7,c
  3282  0025BC  0EFF               	movlw	255
  3283  0025BE  1618               	andwf	___ftmul@f2,f,c
  3284  0025C0  0EFF               	movlw	255
  3285  0025C2  1619               	andwf	___ftmul@f2+1,f,c
  3286  0025C4  0E00               	movlw	0
  3287  0025C6  161A               	andwf	___ftmul@f2+2,f,c
  3288  0025C8  0E00               	movlw	0
  3289  0025CA  6E1F               	movwf	___ftmul@f3_as_product,c
  3290  0025CC  0E00               	movlw	0
  3291  0025CE  6E20               	movwf	___ftmul@f3_as_product+1,c
  3292  0025D0  0E00               	movlw	0
  3293  0025D2  6E21               	movwf	___ftmul@f3_as_product+2,c
  3294  0025D4  0E07               	movlw	7
  3295  0025D6  6E22               	movwf	___ftmul@cntr,c
  3296  0025D8  D000               	goto	l2154
  3297  0025DA                     l2154:
  3298  0025DA  A015               	btfss	___ftmul@f1,0,c
  3299  0025DC  D007               	goto	l2158
  3300  0025DE  5018               	movf	___ftmul@f2,w,c
  3301  0025E0  261F               	addwf	___ftmul@f3_as_product,f,c
  3302  0025E2  5019               	movf	___ftmul@f2+1,w,c
  3303  0025E4  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3304  0025E6  501A               	movf	___ftmul@f2+2,w,c
  3305  0025E8  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3306  0025EA  D000               	goto	l2158
  3307  0025EC                     l2158:
  3308  0025EC  90D8               	bcf	status,0,c
  3309  0025EE  3217               	rrcf	___ftmul@f1+2,f,c
  3310  0025F0  3216               	rrcf	___ftmul@f1+1,f,c
  3311  0025F2  3215               	rrcf	___ftmul@f1,f,c
  3312  0025F4  90D8               	bcf	status,0,c
  3313  0025F6  3618               	rlcf	___ftmul@f2,f,c
  3314  0025F8  3619               	rlcf	___ftmul@f2+1,f,c
  3315  0025FA  361A               	rlcf	___ftmul@f2+2,f,c
  3316  0025FC  2E22               	decfsz	___ftmul@cntr,f,c
  3317  0025FE  D7ED               	goto	l2154
  3318  002600  D000               	goto	l2162
  3319  002602                     l2162:
  3320  002602  0E09               	movlw	9
  3321  002604  6E22               	movwf	___ftmul@cntr,c
  3322  002606  D000               	goto	l2164
  3323  002608                     l2164:
  3324  002608  A015               	btfss	___ftmul@f1,0,c
  3325  00260A  D007               	goto	l2168
  3326  00260C  5018               	movf	___ftmul@f2,w,c
  3327  00260E  261F               	addwf	___ftmul@f3_as_product,f,c
  3328  002610  5019               	movf	___ftmul@f2+1,w,c
  3329  002612  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3330  002614  501A               	movf	___ftmul@f2+2,w,c
  3331  002616  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3332  002618  D000               	goto	l2168
  3333  00261A                     l2168:
  3334  00261A  90D8               	bcf	status,0,c
  3335  00261C  3217               	rrcf	___ftmul@f1+2,f,c
  3336  00261E  3216               	rrcf	___ftmul@f1+1,f,c
  3337  002620  3215               	rrcf	___ftmul@f1,f,c
  3338  002622  90D8               	bcf	status,0,c
  3339  002624  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  3340  002626  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  3341  002628  321F               	rrcf	___ftmul@f3_as_product,f,c
  3342  00262A  2E22               	decfsz	___ftmul@cntr,f,c
  3343  00262C  D7ED               	goto	l2164
  3344  00262E  D000               	goto	l2172
  3345  002630                     l2172:
  3346  002630  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3347  002634  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3348  002638  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3349  00263C  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  3350  002640  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  3351  002644  EC10  F014         	call	___ftpack	;wreg free
  3352  002648  C001  F015         	movff	?___ftpack,?___ftmul
  3353  00264C  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  3354  002650  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  3355  002654  D000               	goto	l770
  3356  002656                     l770:
  3357  002656  0012               	return		;funcret
  3358  002658                     __end_of___ftmul:
  3359                           	opt stack 0
  3360                           tblptru	equ	0xFF8
  3361                           tblptrh	equ	0xFF7
  3362                           tblptrl	equ	0xFF6
  3363                           tablat	equ	0xFF5
  3364                           prodh	equ	0xFF4
  3365                           prodl	equ	0xFF3
  3366                           postinc0	equ	0xFEE
  3367                           wreg	equ	0xFE8
  3368                           postdec1	equ	0xFE5
  3369                           fsr1l	equ	0xFE1
  3370                           postinc2	equ	0xFDE
  3371                           postdec2	equ	0xFDD
  3372                           fsr2h	equ	0xFDA
  3373                           fsr2l	equ	0xFD9
  3374                           status	equ	0xFD8
  3375                           
  3376 ;; *************** function ___awmod *****************
  3377 ;; Defined at:
  3378 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  dividend        2    0[COMRAM] int 
  3381 ;;  divisor         2    2[COMRAM] int 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  sign            1    5[COMRAM] unsigned char 
  3384 ;;  counter         1    4[COMRAM] unsigned char 
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  2    0[COMRAM] int 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;Total ram usage:        6 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_main
  3404 ;;		_fround
  3405 ;;		_scale
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text7
  3410  002B3E                     __ptext7:
  3411                           	opt stack 0
  3412  002B3E                     ___awmod:
  3413                           	opt stack 28
  3414                           
  3415                           ;incstack = 0
  3416  002B3E  0E00               	movlw	0
  3417  002B40  6E06               	movwf	___awmod@sign,c
  3418  002B42  AE02               	btfss	___awmod@dividend+1,7,c
  3419  002B44  D007               	goto	l2228
  3420  002B46  6C01               	negf	___awmod@dividend,c
  3421  002B48  1E02               	comf	___awmod@dividend+1,f,c
  3422  002B4A  B0D8               	btfsc	status,0,c
  3423  002B4C  2A02               	incf	___awmod@dividend+1,f,c
  3424  002B4E  0E01               	movlw	1
  3425  002B50  6E06               	movwf	___awmod@sign,c
  3426  002B52  D000               	goto	l2228
  3427  002B54                     l2228:
  3428  002B54  AE04               	btfss	___awmod@divisor+1,7,c
  3429  002B56  D005               	goto	l2232
  3430  002B58  6C03               	negf	___awmod@divisor,c
  3431  002B5A  1E04               	comf	___awmod@divisor+1,f,c
  3432  002B5C  B0D8               	btfsc	status,0,c
  3433  002B5E  2A04               	incf	___awmod@divisor+1,f,c
  3434  002B60  D000               	goto	l2232
  3435  002B62                     l2232:
  3436  002B62  5003               	movf	___awmod@divisor,w,c
  3437  002B64  1004               	iorwf	___awmod@divisor+1,w,c
  3438  002B66  B4D8               	btfsc	status,2,c
  3439  002B68  D01D               	goto	l2248
  3440  002B6A  0E01               	movlw	1
  3441  002B6C  6E05               	movwf	___awmod@counter,c
  3442  002B6E  D005               	goto	l2238
  3443  002B70                     l2236:
  3444  002B70  90D8               	bcf	status,0,c
  3445  002B72  3603               	rlcf	___awmod@divisor,f,c
  3446  002B74  3604               	rlcf	___awmod@divisor+1,f,c
  3447  002B76  2A05               	incf	___awmod@counter,f,c
  3448  002B78  D000               	goto	l2238
  3449  002B7A                     l2238:
  3450  002B7A  BE04               	btfsc	___awmod@divisor+1,7,c
  3451  002B7C  D002               	goto	l2240
  3452  002B7E  D7F8               	goto	l2236
  3453  002B80  D000               	goto	l2240
  3454  002B82                     l2240:
  3455  002B82  5003               	movf	___awmod@divisor,w,c
  3456  002B84  5C01               	subwf	___awmod@dividend,w,c
  3457  002B86  5004               	movf	___awmod@divisor+1,w,c
  3458  002B88  5802               	subwfb	___awmod@dividend+1,w,c
  3459  002B8A  A0D8               	btfss	status,0,c
  3460  002B8C  D005               	goto	l2244
  3461  002B8E  5003               	movf	___awmod@divisor,w,c
  3462  002B90  5E01               	subwf	___awmod@dividend,f,c
  3463  002B92  5004               	movf	___awmod@divisor+1,w,c
  3464  002B94  5A02               	subwfb	___awmod@dividend+1,f,c
  3465  002B96  D000               	goto	l2244
  3466  002B98                     l2244:
  3467  002B98  90D8               	bcf	status,0,c
  3468  002B9A  3204               	rrcf	___awmod@divisor+1,f,c
  3469  002B9C  3203               	rrcf	___awmod@divisor,f,c
  3470  002B9E  2E05               	decfsz	___awmod@counter,f,c
  3471  002BA0  D7F0               	goto	l2240
  3472  002BA2  D000               	goto	l2248
  3473  002BA4                     l2248:
  3474  002BA4  5006               	movf	___awmod@sign,w,c
  3475  002BA6  B4D8               	btfsc	status,2,c
  3476  002BA8  D005               	goto	l2252
  3477  002BAA  6C01               	negf	___awmod@dividend,c
  3478  002BAC  1E02               	comf	___awmod@dividend+1,f,c
  3479  002BAE  B0D8               	btfsc	status,0,c
  3480  002BB0  2A02               	incf	___awmod@dividend+1,f,c
  3481  002BB2  D000               	goto	l2252
  3482  002BB4                     l2252:
  3483  002BB4  C001  F001         	movff	___awmod@dividend,?___awmod
  3484  002BB8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3485  002BBC  D000               	goto	l547
  3486  002BBE                     l547:
  3487  002BBE  0012               	return		;funcret
  3488  002BC0                     __end_of___awmod:
  3489                           	opt stack 0
  3490                           tblptru	equ	0xFF8
  3491                           tblptrh	equ	0xFF7
  3492                           tblptrl	equ	0xFF6
  3493                           tablat	equ	0xFF5
  3494                           prodh	equ	0xFF4
  3495                           prodl	equ	0xFF3
  3496                           postinc0	equ	0xFEE
  3497                           wreg	equ	0xFE8
  3498                           postdec1	equ	0xFE5
  3499                           fsr1l	equ	0xFE1
  3500                           postinc2	equ	0xFDE
  3501                           postdec2	equ	0xFDD
  3502                           fsr2h	equ	0xFDA
  3503                           fsr2l	equ	0xFD9
  3504                           status	equ	0xFD8
  3505                           
  3506 ;; *************** function ___awdiv *****************
  3507 ;; Defined at:
  3508 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  dividend        2    6[COMRAM] int 
  3511 ;;  divisor         2    8[COMRAM] int 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  quotient        2   12[COMRAM] int 
  3514 ;;  sign            1   11[COMRAM] unsigned char 
  3515 ;;  counter         1   10[COMRAM] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  2    6[COMRAM] int 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;Total ram usage:        8 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		_main
  3535 ;;		_fround
  3536 ;;		_scale
  3537 ;;		_printf
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text8
  3542  002986                     __ptext8:
  3543                           	opt stack 0
  3544  002986                     ___awdiv:
  3545                           	opt stack 28
  3546                           
  3547                           ;incstack = 0
  3548  002986  0E00               	movlw	0
  3549  002988  6E0C               	movwf	___awdiv@sign,c
  3550  00298A  AE0A               	btfss	___awdiv@divisor+1,7,c
  3551  00298C  D007               	goto	l2184
  3552  00298E  6C09               	negf	___awdiv@divisor,c
  3553  002990  1E0A               	comf	___awdiv@divisor+1,f,c
  3554  002992  B0D8               	btfsc	status,0,c
  3555  002994  2A0A               	incf	___awdiv@divisor+1,f,c
  3556  002996  0E01               	movlw	1
  3557  002998  6E0C               	movwf	___awdiv@sign,c
  3558  00299A  D000               	goto	l2184
  3559  00299C                     l2184:
  3560  00299C  AE08               	btfss	___awdiv@dividend+1,7,c
  3561  00299E  D007               	goto	l2190
  3562  0029A0  6C07               	negf	___awdiv@dividend,c
  3563  0029A2  1E08               	comf	___awdiv@dividend+1,f,c
  3564  0029A4  B0D8               	btfsc	status,0,c
  3565  0029A6  2A08               	incf	___awdiv@dividend+1,f,c
  3566  0029A8  0E01               	movlw	1
  3567  0029AA  1A0C               	xorwf	___awdiv@sign,f,c
  3568  0029AC  D000               	goto	l2190
  3569  0029AE                     l2190:
  3570  0029AE  0E00               	movlw	0
  3571  0029B0  6E0E               	movwf	___awdiv@quotient+1,c
  3572  0029B2  0E00               	movlw	0
  3573  0029B4  6E0D               	movwf	___awdiv@quotient,c
  3574  0029B6  5009               	movf	___awdiv@divisor,w,c
  3575  0029B8  100A               	iorwf	___awdiv@divisor+1,w,c
  3576  0029BA  B4D8               	btfsc	status,2,c
  3577  0029BC  D021               	goto	l2212
  3578  0029BE  0E01               	movlw	1
  3579  0029C0  6E0B               	movwf	___awdiv@counter,c
  3580  0029C2  D005               	goto	l2198
  3581  0029C4                     l2196:
  3582  0029C4  90D8               	bcf	status,0,c
  3583  0029C6  3609               	rlcf	___awdiv@divisor,f,c
  3584  0029C8  360A               	rlcf	___awdiv@divisor+1,f,c
  3585  0029CA  2A0B               	incf	___awdiv@counter,f,c
  3586  0029CC  D000               	goto	l2198
  3587  0029CE                     l2198:
  3588  0029CE  BE0A               	btfsc	___awdiv@divisor+1,7,c
  3589  0029D0  D002               	goto	l2200
  3590  0029D2  D7F8               	goto	l2196
  3591  0029D4  D000               	goto	l2200
  3592  0029D6                     l2200:
  3593  0029D6  90D8               	bcf	status,0,c
  3594  0029D8  360D               	rlcf	___awdiv@quotient,f,c
  3595  0029DA  360E               	rlcf	___awdiv@quotient+1,f,c
  3596  0029DC  5009               	movf	___awdiv@divisor,w,c
  3597  0029DE  5C07               	subwf	___awdiv@dividend,w,c
  3598  0029E0  500A               	movf	___awdiv@divisor+1,w,c
  3599  0029E2  5808               	subwfb	___awdiv@dividend+1,w,c
  3600  0029E4  A0D8               	btfss	status,0,c
  3601  0029E6  D006               	goto	l2208
  3602  0029E8  5009               	movf	___awdiv@divisor,w,c
  3603  0029EA  5E07               	subwf	___awdiv@dividend,f,c
  3604  0029EC  500A               	movf	___awdiv@divisor+1,w,c
  3605  0029EE  5A08               	subwfb	___awdiv@dividend+1,f,c
  3606  0029F0  800D               	bsf	___awdiv@quotient,0,c
  3607  0029F2  D000               	goto	l2208
  3608  0029F4                     l2208:
  3609  0029F4  90D8               	bcf	status,0,c
  3610  0029F6  320A               	rrcf	___awdiv@divisor+1,f,c
  3611  0029F8  3209               	rrcf	___awdiv@divisor,f,c
  3612  0029FA  2E0B               	decfsz	___awdiv@counter,f,c
  3613  0029FC  D7EC               	goto	l2200
  3614  0029FE  D000               	goto	l2212
  3615  002A00                     l2212:
  3616  002A00  500C               	movf	___awdiv@sign,w,c
  3617  002A02  B4D8               	btfsc	status,2,c
  3618  002A04  D005               	goto	l2216
  3619  002A06  6C0D               	negf	___awdiv@quotient,c
  3620  002A08  1E0E               	comf	___awdiv@quotient+1,f,c
  3621  002A0A  B0D8               	btfsc	status,0,c
  3622  002A0C  2A0E               	incf	___awdiv@quotient+1,f,c
  3623  002A0E  D000               	goto	l2216
  3624  002A10                     l2216:
  3625  002A10  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3626  002A14  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3627  002A18  D000               	goto	l534
  3628  002A1A                     l534:
  3629  002A1A  0012               	return		;funcret
  3630  002A1C                     __end_of___awdiv:
  3631                           	opt stack 0
  3632                           tblptru	equ	0xFF8
  3633                           tblptrh	equ	0xFF7
  3634                           tblptrl	equ	0xFF6
  3635                           tablat	equ	0xFF5
  3636                           prodh	equ	0xFF4
  3637                           prodl	equ	0xFF3
  3638                           postinc0	equ	0xFEE
  3639                           wreg	equ	0xFE8
  3640                           postdec1	equ	0xFE5
  3641                           fsr1l	equ	0xFE1
  3642                           postinc2	equ	0xFDE
  3643                           postdec2	equ	0xFDD
  3644                           fsr2h	equ	0xFDA
  3645                           fsr2l	equ	0xFD9
  3646                           status	equ	0xFD8
  3647                           
  3648 ;; *************** function __tdiv_to_l_ *****************
  3649 ;; Defined at:
  3650 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  f1              3    0[COMRAM] float 
  3653 ;;  f2              3    3[COMRAM] float 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  quot            4    9[COMRAM] unsigned long 
  3656 ;;  exp1            1   14[COMRAM] unsigned char 
  3657 ;;  cntr            1   13[COMRAM] unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  4    0[COMRAM] unsigned long 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3667 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;Total ram usage:       15 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_printf
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text9
  3681  002346                     __ptext9:
  3682                           	opt stack 0
  3683  002346                     __tdiv_to_l_:
  3684                           	opt stack 29
  3685                           
  3686                           ;incstack = 0
  3687  002346  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3688  00234A  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3689  00234C  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3690  00234E  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3691  002350  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3692  002352  E301               	bnc	u2331
  3693  002354  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3694  002356                     u2331:
  3695  002356  5007               	movf	??__tdiv_to_l_,w,c
  3696  002358  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3697  00235A  500F               	movf	__tdiv_to_l_@exp1,w,c
  3698  00235C  A4D8               	btfss	status,2,c
  3699  00235E  D002               	goto	l2376
  3700  002360  D05D               	goto	l2418
  3701  002362  D078               	goto	l746
  3702  002364                     l2376:
  3703  002364  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3704  002368  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3705  00236A  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3706  00236C  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3707  00236E  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3708  002370  E301               	bnc	u2351
  3709  002372  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3710  002374                     u2351:
  3711  002374  5007               	movf	??__tdiv_to_l_,w,c
  3712  002376  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3713  002378  500E               	movf	__tdiv_to_l_@cntr,w,c
  3714  00237A  A4D8               	btfss	status,2,c
  3715  00237C  D002               	goto	l2382
  3716  00237E  D04E               	goto	l2418
  3717  002380  D069               	goto	l746
  3718  002382                     l2382:
  3719  002382  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3720  002384  0EFF               	movlw	255
  3721  002386  1601               	andwf	__tdiv_to_l_@f1,f,c
  3722  002388  0EFF               	movlw	255
  3723  00238A  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3724  00238C  0E00               	movlw	0
  3725  00238E  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3726  002390  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3727  002392  0EFF               	movlw	255
  3728  002394  1604               	andwf	__tdiv_to_l_@f2,f,c
  3729  002396  0EFF               	movlw	255
  3730  002398  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3731  00239A  0E00               	movlw	0
  3732  00239C  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3733  00239E  0E00               	movlw	0
  3734  0023A0  6E0A               	movwf	__tdiv_to_l_@quot,c
  3735  0023A2  0E00               	movlw	0
  3736  0023A4  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3737  0023A6  0E00               	movlw	0
  3738  0023A8  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3739  0023AA  0E00               	movlw	0
  3740  0023AC  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3741  0023AE  0E7F               	movlw	127
  3742  0023B0  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3743  0023B2  500E               	movf	__tdiv_to_l_@cntr,w,c
  3744  0023B4  0F98               	addlw	152
  3745  0023B6  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3746  0023B8  0E18               	movlw	24
  3747  0023BA  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3748  0023BC                     l748:
  3749  0023BC  90D8               	bcf	status,0,c
  3750  0023BE  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3751  0023C0  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3752  0023C2  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3753  0023C4  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3754  0023C6  5004               	movf	__tdiv_to_l_@f2,w,c
  3755  0023C8  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3756  0023CA  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3757  0023CC  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3758  0023CE  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3759  0023D0  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3760  0023D2  A0D8               	btfss	status,0,c
  3761  0023D4  D007               	goto	l749
  3762  0023D6  5004               	movf	__tdiv_to_l_@f2,w,c
  3763  0023D8  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3764  0023DA  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3765  0023DC  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3766  0023DE  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3767  0023E0  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3768  0023E2  800A               	bsf	__tdiv_to_l_@quot,0,c
  3769  0023E4                     l749:
  3770  0023E4  90D8               	bcf	status,0,c
  3771  0023E6  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3772  0023E8  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3773  0023EA  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3774  0023EC  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3775  0023EE  D7E6               	goto	l748
  3776  0023F0  D000               	goto	l2404
  3777  0023F2                     l2404:
  3778  0023F2  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3779  0023F4  D010               	goto	l2416
  3780  0023F6  500F               	movf	__tdiv_to_l_@exp1,w,c
  3781  0023F8  0A80               	xorlw	128
  3782  0023FA  0F97               	addlw	151
  3783  0023FC  B0D8               	btfsc	status,0,c
  3784  0023FE  D003               	goto	l2412
  3785  002400  D00D               	goto	l2418
  3786  002402  D028               	goto	l746
  3787  002404  D000               	goto	l2412
  3788  002406                     l2412:
  3789  002406  90D8               	bcf	status,0,c
  3790  002408  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3791  00240A  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3792  00240C  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3793  00240E  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3794  002410  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3795  002412  D7F9               	goto	l2412
  3796  002414  D017               	goto	l755
  3797  002416                     l2416:
  3798  002416  0E17               	movlw	23
  3799  002418  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3800  00241A  D011               	goto	l2424
  3801  00241C                     l2418:
  3802  00241C  0E00               	movlw	0
  3803  00241E  6E01               	movwf	?__tdiv_to_l_,c
  3804  002420  0E00               	movlw	0
  3805  002422  6E02               	movwf	?__tdiv_to_l_+1,c
  3806  002424  0E00               	movlw	0
  3807  002426  6E03               	movwf	?__tdiv_to_l_+2,c
  3808  002428  0E00               	movlw	0
  3809  00242A  6E04               	movwf	?__tdiv_to_l_+3,c
  3810  00242C  D013               	goto	l746
  3811  00242E  D007               	goto	l2424
  3812  002430                     l2422:
  3813  002430  90D8               	bcf	status,0,c
  3814  002432  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3815  002434  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3816  002436  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3817  002438  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3818  00243A  060F               	decf	__tdiv_to_l_@exp1,f,c
  3819  00243C  D000               	goto	l2424
  3820  00243E                     l2424:
  3821  00243E  500F               	movf	__tdiv_to_l_@exp1,w,c
  3822  002440  A4D8               	btfss	status,2,c
  3823  002442  D7F6               	goto	l2422
  3824  002444                     l755:
  3825  002444  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3826  002448  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3827  00244C  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3828  002450  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3829  002454                     l746:
  3830  002454  0012               	return		;funcret
  3831  002456                     __end_of__tdiv_to_l_:
  3832                           	opt stack 0
  3833                           tblptru	equ	0xFF8
  3834                           tblptrh	equ	0xFF7
  3835                           tblptrl	equ	0xFF6
  3836                           tablat	equ	0xFF5
  3837                           prodh	equ	0xFF4
  3838                           prodl	equ	0xFF3
  3839                           postinc0	equ	0xFEE
  3840                           wreg	equ	0xFE8
  3841                           postdec1	equ	0xFE5
  3842                           fsr1l	equ	0xFE1
  3843                           postinc2	equ	0xFDE
  3844                           postdec2	equ	0xFDD
  3845                           fsr2h	equ	0xFDA
  3846                           fsr2l	equ	0xFD9
  3847                           status	equ	0xFD8
  3848                           
  3849 ;; *************** function __div_to_l_ *****************
  3850 ;; Defined at:
  3851 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  f1              3    0[COMRAM] unsigned long 
  3854 ;;  f2              3    3[COMRAM] unsigned long 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  quot            4    6[COMRAM] unsigned long 
  3857 ;;  exp1            1   11[COMRAM] unsigned char 
  3858 ;;  cntr            1   10[COMRAM] unsigned char 
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  4    0[COMRAM] unsigned long 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3868 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;Total ram usage:       12 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_printf
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text10
  3882  002456                     __ptext10:
  3883                           	opt stack 0
  3884  002456                     __div_to_l_:
  3885                           	opt stack 29
  3886                           
  3887                           ;incstack = 0
  3888  002456  3403               	rlcf	__div_to_l_@f1+2,w,c
  3889  002458  3404               	rlcf	__div_to_l_@f1+3,w,c
  3890  00245A  6E0C               	movwf	__div_to_l_@exp1,c
  3891  00245C  500C               	movf	__div_to_l_@exp1,w,c
  3892  00245E  A4D8               	btfss	status,2,c
  3893  002460  D002               	goto	l2432
  3894  002462  D061               	goto	l2478
  3895  002464  D07C               	goto	l625
  3896  002466                     l2432:
  3897  002466  3406               	rlcf	__div_to_l_@f2+2,w,c
  3898  002468  3407               	rlcf	__div_to_l_@f2+3,w,c
  3899  00246A  6E0B               	movwf	__div_to_l_@cntr,c
  3900  00246C  500B               	movf	__div_to_l_@cntr,w,c
  3901  00246E  A4D8               	btfss	status,2,c
  3902  002470  D002               	goto	l2438
  3903  002472  D059               	goto	l2478
  3904  002474  D074               	goto	l625
  3905  002476                     l2438:
  3906  002476  8E03               	bsf	__div_to_l_@f1+2,7,c
  3907  002478  0EFF               	movlw	255
  3908  00247A  1601               	andwf	__div_to_l_@f1,f,c
  3909  00247C  0EFF               	movlw	255
  3910  00247E  1602               	andwf	__div_to_l_@f1+1,f,c
  3911  002480  0EFF               	movlw	255
  3912  002482  1603               	andwf	__div_to_l_@f1+2,f,c
  3913  002484  0E00               	movlw	0
  3914  002486  1604               	andwf	__div_to_l_@f1+3,f,c
  3915  002488  8E06               	bsf	__div_to_l_@f2+2,7,c
  3916  00248A  0EFF               	movlw	255
  3917  00248C  1604               	andwf	__div_to_l_@f2,f,c
  3918  00248E  0EFF               	movlw	255
  3919  002490  1605               	andwf	__div_to_l_@f2+1,f,c
  3920  002492  0EFF               	movlw	255
  3921  002494  1606               	andwf	__div_to_l_@f2+2,f,c
  3922  002496  0E00               	movlw	0
  3923  002498  1607               	andwf	__div_to_l_@f2+3,f,c
  3924  00249A  0E00               	movlw	0
  3925  00249C  6E07               	movwf	__div_to_l_@quot,c
  3926  00249E  0E00               	movlw	0
  3927  0024A0  6E08               	movwf	__div_to_l_@quot+1,c
  3928  0024A2  0E00               	movlw	0
  3929  0024A4  6E09               	movwf	__div_to_l_@quot+2,c
  3930  0024A6  0E00               	movlw	0
  3931  0024A8  6E0A               	movwf	__div_to_l_@quot+3,c
  3932  0024AA  0E7F               	movlw	127
  3933  0024AC  5E0C               	subwf	__div_to_l_@exp1,f,c
  3934  0024AE  500B               	movf	__div_to_l_@cntr,w,c
  3935  0024B0  0FA0               	addlw	160
  3936  0024B2  5E0C               	subwf	__div_to_l_@exp1,f,c
  3937  0024B4  0E20               	movlw	32
  3938  0024B6  6E0B               	movwf	__div_to_l_@cntr,c
  3939  0024B8  D000               	goto	l2452
  3940  0024BA                     l2452:
  3941  0024BA  90D8               	bcf	status,0,c
  3942  0024BC  3607               	rlcf	__div_to_l_@quot,f,c
  3943  0024BE  3608               	rlcf	__div_to_l_@quot+1,f,c
  3944  0024C0  3609               	rlcf	__div_to_l_@quot+2,f,c
  3945  0024C2  360A               	rlcf	__div_to_l_@quot+3,f,c
  3946  0024C4  5004               	movf	__div_to_l_@f2,w,c
  3947  0024C6  5C01               	subwf	__div_to_l_@f1,w,c
  3948  0024C8  5005               	movf	__div_to_l_@f2+1,w,c
  3949  0024CA  5802               	subwfb	__div_to_l_@f1+1,w,c
  3950  0024CC  5006               	movf	__div_to_l_@f2+2,w,c
  3951  0024CE  5803               	subwfb	__div_to_l_@f1+2,w,c
  3952  0024D0  5007               	movf	__div_to_l_@f2+3,w,c
  3953  0024D2  5804               	subwfb	__div_to_l_@f1+3,w,c
  3954  0024D4  A0D8               	btfss	status,0,c
  3955  0024D6  D00A               	goto	l2460
  3956  0024D8  5004               	movf	__div_to_l_@f2,w,c
  3957  0024DA  5E01               	subwf	__div_to_l_@f1,f,c
  3958  0024DC  5005               	movf	__div_to_l_@f2+1,w,c
  3959  0024DE  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3960  0024E0  5006               	movf	__div_to_l_@f2+2,w,c
  3961  0024E2  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3962  0024E4  5007               	movf	__div_to_l_@f2+3,w,c
  3963  0024E6  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3964  0024E8  8007               	bsf	__div_to_l_@quot,0,c
  3965  0024EA  D000               	goto	l2460
  3966  0024EC                     l2460:
  3967  0024EC  90D8               	bcf	status,0,c
  3968  0024EE  3601               	rlcf	__div_to_l_@f1,f,c
  3969  0024F0  3602               	rlcf	__div_to_l_@f1+1,f,c
  3970  0024F2  3603               	rlcf	__div_to_l_@f1+2,f,c
  3971  0024F4  3604               	rlcf	__div_to_l_@f1+3,f,c
  3972  0024F6  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3973  0024F8  D7E0               	goto	l2452
  3974  0024FA  D000               	goto	l2464
  3975  0024FC                     l2464:
  3976  0024FC  AE0C               	btfss	__div_to_l_@exp1,7,c
  3977  0024FE  D010               	goto	l2476
  3978  002500  500C               	movf	__div_to_l_@exp1,w,c
  3979  002502  0A80               	xorlw	128
  3980  002504  0F9F               	addlw	159
  3981  002506  B0D8               	btfsc	status,0,c
  3982  002508  D003               	goto	l2472
  3983  00250A  D00D               	goto	l2478
  3984  00250C  D028               	goto	l625
  3985  00250E  D000               	goto	l2472
  3986  002510                     l2472:
  3987  002510  90D8               	bcf	status,0,c
  3988  002512  320A               	rrcf	__div_to_l_@quot+3,f,c
  3989  002514  3209               	rrcf	__div_to_l_@quot+2,f,c
  3990  002516  3208               	rrcf	__div_to_l_@quot+1,f,c
  3991  002518  3207               	rrcf	__div_to_l_@quot,f,c
  3992  00251A  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3993  00251C  D7F9               	goto	l2472
  3994  00251E  D017               	goto	l634
  3995  002520                     l2476:
  3996  002520  0E1F               	movlw	31
  3997  002522  640C               	cpfsgt	__div_to_l_@exp1,c
  3998  002524  D011               	goto	l2484
  3999  002526                     l2478:
  4000  002526  0E00               	movlw	0
  4001  002528  6E01               	movwf	?__div_to_l_,c
  4002  00252A  0E00               	movlw	0
  4003  00252C  6E02               	movwf	?__div_to_l_+1,c
  4004  00252E  0E00               	movlw	0
  4005  002530  6E03               	movwf	?__div_to_l_+2,c
  4006  002532  0E00               	movlw	0
  4007  002534  6E04               	movwf	?__div_to_l_+3,c
  4008  002536  D013               	goto	l625
  4009  002538  D007               	goto	l2484
  4010  00253A                     l2482:
  4011  00253A  90D8               	bcf	status,0,c
  4012  00253C  3607               	rlcf	__div_to_l_@quot,f,c
  4013  00253E  3608               	rlcf	__div_to_l_@quot+1,f,c
  4014  002540  3609               	rlcf	__div_to_l_@quot+2,f,c
  4015  002542  360A               	rlcf	__div_to_l_@quot+3,f,c
  4016  002544  060C               	decf	__div_to_l_@exp1,f,c
  4017  002546  D000               	goto	l2484
  4018  002548                     l2484:
  4019  002548  500C               	movf	__div_to_l_@exp1,w,c
  4020  00254A  A4D8               	btfss	status,2,c
  4021  00254C  D7F6               	goto	l2482
  4022  00254E                     l634:
  4023  00254E  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4024  002552  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4025  002556  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4026  00255A  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4027  00255E                     l625:
  4028  00255E  0012               	return		;funcret
  4029  002560                     __end_of__div_to_l_:
  4030                           	opt stack 0
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           prodh	equ	0xFF4
  4036                           prodl	equ	0xFF3
  4037                           postinc0	equ	0xFEE
  4038                           wreg	equ	0xFE8
  4039                           postdec1	equ	0xFE5
  4040                           fsr1l	equ	0xFE1
  4041                           postinc2	equ	0xFDE
  4042                           postdec2	equ	0xFDD
  4043                           fsr2h	equ	0xFDA
  4044                           fsr2l	equ	0xFD9
  4045                           status	equ	0xFD8
  4046                           
  4047 ;; *************** function ___lltoft *****************
  4048 ;; Defined at:
  4049 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  c               4    8[COMRAM] unsigned long 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  exp             1   16[COMRAM] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  3    8[COMRAM] float 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4063 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;Total ram usage:        9 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    1
  4070 ;; This function calls:
  4071 ;;		___ftpack
  4072 ;; This function is called by:
  4073 ;;		_printf
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text11
  4078  002CA0                     __ptext11:
  4079                           	opt stack 0
  4080  002CA0                     ___lltoft:
  4081                           	opt stack 28
  4082                           
  4083                           ;incstack = 0
  4084  002CA0  0E8E               	movlw	142
  4085  002CA2  6E11               	movwf	___lltoft@exp,c
  4086  002CA4  D007               	goto	l2604
  4087  002CA6                     l2602:
  4088  002CA6  90D8               	bcf	status,0,c
  4089  002CA8  320C               	rrcf	___lltoft@c+3,f,c
  4090  002CAA  320B               	rrcf	___lltoft@c+2,f,c
  4091  002CAC  320A               	rrcf	___lltoft@c+1,f,c
  4092  002CAE  3209               	rrcf	___lltoft@c,f,c
  4093  002CB0  2A11               	incf	___lltoft@exp,f,c
  4094  002CB2  D000               	goto	l2604
  4095  002CB4                     l2604:
  4096  002CB4  0E00               	movlw	0
  4097  002CB6  1409               	andwf	___lltoft@c,w,c
  4098  002CB8  6E0D               	movwf	??___lltoft& (0+255),c
  4099  002CBA  0E00               	movlw	0
  4100  002CBC  140A               	andwf	___lltoft@c+1,w,c
  4101  002CBE  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4102  002CC0  0E00               	movlw	0
  4103  002CC2  140B               	andwf	___lltoft@c+2,w,c
  4104  002CC4  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4105  002CC6  0EFF               	movlw	255
  4106  002CC8  140C               	andwf	___lltoft@c+3,w,c
  4107  002CCA  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4108  002CCC  500D               	movf	??___lltoft,w,c
  4109  002CCE  100E               	iorwf	??___lltoft+1,w,c
  4110  002CD0  100F               	iorwf	??___lltoft+2,w,c
  4111  002CD2  1010               	iorwf	??___lltoft+3,w,c
  4112  002CD4  A4D8               	btfss	status,2,c
  4113  002CD6  D7E7               	goto	l2602
  4114  002CD8  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4115  002CDC  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4116  002CE0  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4117  002CE4  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4118  002CE8  0E00               	movlw	0
  4119  002CEA  6E05               	movwf	___ftpack@sign,c
  4120  002CEC  EC10  F014         	call	___ftpack	;wreg free
  4121  002CF0  C001  F009         	movff	?___ftpack,?___lltoft
  4122  002CF4  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4123  002CF8  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4124  002CFC  D000               	goto	l860
  4125  002CFE                     l860:
  4126  002CFE  0012               	return		;funcret
  4127  002D00                     __end_of___lltoft:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           tblptrh	equ	0xFF7
  4131                           tblptrl	equ	0xFF6
  4132                           tablat	equ	0xFF5
  4133                           prodh	equ	0xFF4
  4134                           prodl	equ	0xFF3
  4135                           postinc0	equ	0xFEE
  4136                           wreg	equ	0xFE8
  4137                           postdec1	equ	0xFE5
  4138                           fsr1l	equ	0xFE1
  4139                           postinc2	equ	0xFDE
  4140                           postdec2	equ	0xFDD
  4141                           fsr2h	equ	0xFDA
  4142                           fsr2l	equ	0xFD9
  4143                           status	equ	0xFD8
  4144                           
  4145 ;; *************** function ___llmod *****************
  4146 ;; Defined at:
  4147 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  dividend        4   13[COMRAM] unsigned long 
  4150 ;;  divisor         4   17[COMRAM] unsigned long 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  counter         1   21[COMRAM] unsigned char 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  4   13[COMRAM] unsigned long 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4162 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;Total ram usage:        9 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_printf
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text12
  4176  002BC0                     __ptext12:
  4177                           	opt stack 0
  4178  002BC0                     ___llmod:
  4179                           	opt stack 29
  4180                           
  4181                           ;incstack = 0
  4182  002BC0  5012               	movf	___llmod@divisor,w,c
  4183  002BC2  1013               	iorwf	___llmod@divisor+1,w,c
  4184  002BC4  1014               	iorwf	___llmod@divisor+2,w,c
  4185  002BC6  1015               	iorwf	___llmod@divisor+3,w,c
  4186  002BC8  B4D8               	btfsc	status,2,c
  4187  002BCA  D029               	goto	l840
  4188  002BCC  0E01               	movlw	1
  4189  002BCE  6E16               	movwf	___llmod@counter,c
  4190  002BD0  D007               	goto	l2590
  4191  002BD2                     l2588:
  4192  002BD2  90D8               	bcf	status,0,c
  4193  002BD4  3612               	rlcf	___llmod@divisor,f,c
  4194  002BD6  3613               	rlcf	___llmod@divisor+1,f,c
  4195  002BD8  3614               	rlcf	___llmod@divisor+2,f,c
  4196  002BDA  3615               	rlcf	___llmod@divisor+3,f,c
  4197  002BDC  2A16               	incf	___llmod@counter,f,c
  4198  002BDE  D000               	goto	l2590
  4199  002BE0                     l2590:
  4200  002BE0  BE15               	btfsc	___llmod@divisor+3,7,c
  4201  002BE2  D002               	goto	l2592
  4202  002BE4  D7F6               	goto	l2588
  4203  002BE6  D000               	goto	l2592
  4204  002BE8                     l2592:
  4205  002BE8  5012               	movf	___llmod@divisor,w,c
  4206  002BEA  5C0E               	subwf	___llmod@dividend,w,c
  4207  002BEC  5013               	movf	___llmod@divisor+1,w,c
  4208  002BEE  580F               	subwfb	___llmod@dividend+1,w,c
  4209  002BF0  5014               	movf	___llmod@divisor+2,w,c
  4210  002BF2  5810               	subwfb	___llmod@dividend+2,w,c
  4211  002BF4  5015               	movf	___llmod@divisor+3,w,c
  4212  002BF6  5811               	subwfb	___llmod@dividend+3,w,c
  4213  002BF8  A0D8               	btfss	status,0,c
  4214  002BFA  D009               	goto	l2596
  4215  002BFC  5012               	movf	___llmod@divisor,w,c
  4216  002BFE  5E0E               	subwf	___llmod@dividend,f,c
  4217  002C00  5013               	movf	___llmod@divisor+1,w,c
  4218  002C02  5A0F               	subwfb	___llmod@dividend+1,f,c
  4219  002C04  5014               	movf	___llmod@divisor+2,w,c
  4220  002C06  5A10               	subwfb	___llmod@dividend+2,f,c
  4221  002C08  5015               	movf	___llmod@divisor+3,w,c
  4222  002C0A  5A11               	subwfb	___llmod@dividend+3,f,c
  4223  002C0C  D000               	goto	l2596
  4224  002C0E                     l2596:
  4225  002C0E  90D8               	bcf	status,0,c
  4226  002C10  3215               	rrcf	___llmod@divisor+3,f,c
  4227  002C12  3214               	rrcf	___llmod@divisor+2,f,c
  4228  002C14  3213               	rrcf	___llmod@divisor+1,f,c
  4229  002C16  3212               	rrcf	___llmod@divisor,f,c
  4230  002C18  2E16               	decfsz	___llmod@counter,f,c
  4231  002C1A  D7E6               	goto	l2592
  4232  002C1C  D000               	goto	l840
  4233  002C1E                     l840:
  4234  002C1E  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4235  002C22  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4236  002C26  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4237  002C2A  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4238  002C2E  0012               	return		;funcret
  4239  002C30                     __end_of___llmod:
  4240                           	opt stack 0
  4241                           tblptru	equ	0xFF8
  4242                           tblptrh	equ	0xFF7
  4243                           tblptrl	equ	0xFF6
  4244                           tablat	equ	0xFF5
  4245                           prodh	equ	0xFF4
  4246                           prodl	equ	0xFF3
  4247                           postinc0	equ	0xFEE
  4248                           wreg	equ	0xFE8
  4249                           postdec1	equ	0xFE5
  4250                           fsr1l	equ	0xFE1
  4251                           postinc2	equ	0xFDE
  4252                           postdec2	equ	0xFDD
  4253                           fsr2h	equ	0xFDA
  4254                           fsr2l	equ	0xFD9
  4255                           status	equ	0xFD8
  4256                           
  4257 ;; *************** function ___lldiv *****************
  4258 ;; Defined at:
  4259 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  dividend        4    0[COMRAM] unsigned long 
  4262 ;;  divisor         4    4[COMRAM] unsigned long 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  quotient        4    8[COMRAM] unsigned long 
  4265 ;;  counter         1   12[COMRAM] unsigned char 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  4    0[COMRAM] unsigned long 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4275 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;Total ram usage:       13 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_printf
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text13
  4289  002AB2                     __ptext13:
  4290                           	opt stack 0
  4291  002AB2                     ___lldiv:
  4292                           	opt stack 29
  4293                           
  4294                           ;incstack = 0
  4295  002AB2  0E00               	movlw	0
  4296  002AB4  6E09               	movwf	___lldiv@quotient,c
  4297  002AB6  0E00               	movlw	0
  4298  002AB8  6E0A               	movwf	___lldiv@quotient+1,c
  4299  002ABA  0E00               	movlw	0
  4300  002ABC  6E0B               	movwf	___lldiv@quotient+2,c
  4301  002ABE  0E00               	movlw	0
  4302  002AC0  6E0C               	movwf	___lldiv@quotient+3,c
  4303  002AC2  5005               	movf	___lldiv@divisor,w,c
  4304  002AC4  1006               	iorwf	___lldiv@divisor+1,w,c
  4305  002AC6  1007               	iorwf	___lldiv@divisor+2,w,c
  4306  002AC8  1008               	iorwf	___lldiv@divisor+3,w,c
  4307  002ACA  B4D8               	btfsc	status,2,c
  4308  002ACC  D02F               	goto	l830
  4309  002ACE  0E01               	movlw	1
  4310  002AD0  6E0D               	movwf	___lldiv@counter,c
  4311  002AD2  D007               	goto	l2570
  4312  002AD4                     l2568:
  4313  002AD4  90D8               	bcf	status,0,c
  4314  002AD6  3605               	rlcf	___lldiv@divisor,f,c
  4315  002AD8  3606               	rlcf	___lldiv@divisor+1,f,c
  4316  002ADA  3607               	rlcf	___lldiv@divisor+2,f,c
  4317  002ADC  3608               	rlcf	___lldiv@divisor+3,f,c
  4318  002ADE  2A0D               	incf	___lldiv@counter,f,c
  4319  002AE0  D000               	goto	l2570
  4320  002AE2                     l2570:
  4321  002AE2  BE08               	btfsc	___lldiv@divisor+3,7,c
  4322  002AE4  D002               	goto	l2572
  4323  002AE6  D7F6               	goto	l2568
  4324  002AE8  D000               	goto	l2572
  4325  002AEA                     l2572:
  4326  002AEA  90D8               	bcf	status,0,c
  4327  002AEC  3609               	rlcf	___lldiv@quotient,f,c
  4328  002AEE  360A               	rlcf	___lldiv@quotient+1,f,c
  4329  002AF0  360B               	rlcf	___lldiv@quotient+2,f,c
  4330  002AF2  360C               	rlcf	___lldiv@quotient+3,f,c
  4331  002AF4  5005               	movf	___lldiv@divisor,w,c
  4332  002AF6  5C01               	subwf	___lldiv@dividend,w,c
  4333  002AF8  5006               	movf	___lldiv@divisor+1,w,c
  4334  002AFA  5802               	subwfb	___lldiv@dividend+1,w,c
  4335  002AFC  5007               	movf	___lldiv@divisor+2,w,c
  4336  002AFE  5803               	subwfb	___lldiv@dividend+2,w,c
  4337  002B00  5008               	movf	___lldiv@divisor+3,w,c
  4338  002B02  5804               	subwfb	___lldiv@dividend+3,w,c
  4339  002B04  A0D8               	btfss	status,0,c
  4340  002B06  D00A               	goto	l2580
  4341  002B08  5005               	movf	___lldiv@divisor,w,c
  4342  002B0A  5E01               	subwf	___lldiv@dividend,f,c
  4343  002B0C  5006               	movf	___lldiv@divisor+1,w,c
  4344  002B0E  5A02               	subwfb	___lldiv@dividend+1,f,c
  4345  002B10  5007               	movf	___lldiv@divisor+2,w,c
  4346  002B12  5A03               	subwfb	___lldiv@dividend+2,f,c
  4347  002B14  5008               	movf	___lldiv@divisor+3,w,c
  4348  002B16  5A04               	subwfb	___lldiv@dividend+3,f,c
  4349  002B18  8009               	bsf	___lldiv@quotient,0,c
  4350  002B1A  D000               	goto	l2580
  4351  002B1C                     l2580:
  4352  002B1C  90D8               	bcf	status,0,c
  4353  002B1E  3208               	rrcf	___lldiv@divisor+3,f,c
  4354  002B20  3207               	rrcf	___lldiv@divisor+2,f,c
  4355  002B22  3206               	rrcf	___lldiv@divisor+1,f,c
  4356  002B24  3205               	rrcf	___lldiv@divisor,f,c
  4357  002B26  2E0D               	decfsz	___lldiv@counter,f,c
  4358  002B28  D7E0               	goto	l2572
  4359  002B2A  D000               	goto	l830
  4360  002B2C                     l830:
  4361  002B2C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4362  002B30  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4363  002B34  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4364  002B38  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4365  002B3C  0012               	return		;funcret
  4366  002B3E                     __end_of___lldiv:
  4367                           	opt stack 0
  4368                           tblptru	equ	0xFF8
  4369                           tblptrh	equ	0xFF7
  4370                           tblptrl	equ	0xFF6
  4371                           tablat	equ	0xFF5
  4372                           prodh	equ	0xFF4
  4373                           prodl	equ	0xFF3
  4374                           postinc0	equ	0xFEE
  4375                           wreg	equ	0xFE8
  4376                           postdec1	equ	0xFE5
  4377                           fsr1l	equ	0xFE1
  4378                           postinc2	equ	0xFDE
  4379                           postdec2	equ	0xFDD
  4380                           fsr2h	equ	0xFDA
  4381                           fsr2l	equ	0xFD9
  4382                           status	equ	0xFD8
  4383                           
  4384 ;; *************** function ___fttol *****************
  4385 ;; Defined at:
  4386 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  f1              3   42[COMRAM] float 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  lval            4   52[COMRAM] unsigned long 
  4391 ;;  exp1            1   56[COMRAM] unsigned char 
  4392 ;;  sign1           1   51[COMRAM] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  4   42[COMRAM] long 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4402 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;Total ram usage:       15 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_main
  4412 ;;		_printf
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text14
  4417  002658                     __ptext14:
  4418                           	opt stack 0
  4419  002658                     ___fttol:
  4420                           	opt stack 29
  4421                           
  4422                           ;incstack = 0
  4423  002658  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4424  00265C  6A30               	clrf	(??___fttol+1)& (0+255),c
  4425  00265E  6A31               	clrf	(??___fttol+2)& (0+255),c
  4426  002660  342C               	rlcf	___fttol@f1+1,w,c
  4427  002662  362F               	rlcf	??___fttol& (0+255),f,c
  4428  002664  E301               	bnc	u2541
  4429  002666  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4430  002668                     u2541:
  4431  002668  502F               	movf	??___fttol,w,c
  4432  00266A  6E39               	movwf	___fttol@exp1,c
  4433  00266C  5039               	movf	___fttol@exp1,w,c
  4434  00266E  A4D8               	btfss	status,2,c
  4435  002670  D002               	goto	l2522
  4436  002672  D039               	goto	l2546
  4437  002674  D063               	goto	l791
  4438  002676                     l2522:
  4439  002676  0E17               	movlw	23
  4440  002678  6E2F               	movwf	??___fttol& (0+255),c
  4441  00267A  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4442  00267E  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4443  002682  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4444  002686  282F               	incf	??___fttol,w,c
  4445  002688  6E33               	movwf	(??___fttol+4)& (0+255),c
  4446  00268A  D004               	goto	u2560
  4447  00268C                     u2565:
  4448  00268C  90D8               	bcf	status,0,c
  4449  00268E  3232               	rrcf	??___fttol+3,f,c
  4450  002690  3231               	rrcf	??___fttol+2,f,c
  4451  002692  3230               	rrcf	??___fttol+1,f,c
  4452  002694                     u2560:
  4453  002694  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4454  002696  D7FA               	goto	u2565
  4455  002698  5030               	movf	??___fttol+1,w,c
  4456  00269A  6E34               	movwf	___fttol@sign1,c
  4457  00269C  8E2C               	bsf	___fttol@f1+1,7,c
  4458  00269E  0EFF               	movlw	255
  4459  0026A0  162B               	andwf	___fttol@f1,f,c
  4460  0026A2  0EFF               	movlw	255
  4461  0026A4  162C               	andwf	___fttol@f1+1,f,c
  4462  0026A6  0E00               	movlw	0
  4463  0026A8  162D               	andwf	___fttol@f1+2,f,c
  4464  0026AA  502B               	movf	___fttol@f1,w,c
  4465  0026AC  6E35               	movwf	___fttol@lval,c
  4466  0026AE  502C               	movf	___fttol@f1+1,w,c
  4467  0026B0  6E36               	movwf	___fttol@lval+1,c
  4468  0026B2  502D               	movf	___fttol@f1+2,w,c
  4469  0026B4  6E37               	movwf	___fttol@lval+2,c
  4470  0026B6  6A38               	clrf	___fttol@lval+3,c
  4471  0026B8  0E8E               	movlw	142
  4472  0026BA  5E39               	subwf	___fttol@exp1,f,c
  4473  0026BC  AE39               	btfss	___fttol@exp1,7,c
  4474  0026BE  D010               	goto	l2544
  4475  0026C0  5039               	movf	___fttol@exp1,w,c
  4476  0026C2  0A80               	xorlw	128
  4477  0026C4  0F8F               	addlw	143
  4478  0026C6  B0D8               	btfsc	status,0,c
  4479  0026C8  D003               	goto	l2540
  4480  0026CA  D00D               	goto	l2546
  4481  0026CC  D037               	goto	l791
  4482  0026CE  D000               	goto	l2540
  4483  0026D0                     l2540:
  4484  0026D0  90D8               	bcf	status,0,c
  4485  0026D2  3238               	rrcf	___fttol@lval+3,f,c
  4486  0026D4  3237               	rrcf	___fttol@lval+2,f,c
  4487  0026D6  3236               	rrcf	___fttol@lval+1,f,c
  4488  0026D8  3235               	rrcf	___fttol@lval,f,c
  4489  0026DA  3E39               	incfsz	___fttol@exp1,f,c
  4490  0026DC  D7F9               	goto	l2540
  4491  0026DE  D019               	goto	l2554
  4492  0026E0                     l2544:
  4493  0026E0  0E17               	movlw	23
  4494  0026E2  6439               	cpfsgt	___fttol@exp1,c
  4495  0026E4  D011               	goto	l2552
  4496  0026E6                     l2546:
  4497  0026E6  0E00               	movlw	0
  4498  0026E8  6E2B               	movwf	?___fttol,c
  4499  0026EA  0E00               	movlw	0
  4500  0026EC  6E2C               	movwf	?___fttol+1,c
  4501  0026EE  0E00               	movlw	0
  4502  0026F0  6E2D               	movwf	?___fttol+2,c
  4503  0026F2  0E00               	movlw	0
  4504  0026F4  6E2E               	movwf	?___fttol+3,c
  4505  0026F6  D022               	goto	l791
  4506  0026F8  D007               	goto	l2552
  4507  0026FA                     l2550:
  4508  0026FA  90D8               	bcf	status,0,c
  4509  0026FC  3635               	rlcf	___fttol@lval,f,c
  4510  0026FE  3636               	rlcf	___fttol@lval+1,f,c
  4511  002700  3637               	rlcf	___fttol@lval+2,f,c
  4512  002702  3638               	rlcf	___fttol@lval+3,f,c
  4513  002704  0639               	decf	___fttol@exp1,f,c
  4514  002706  D000               	goto	l2552
  4515  002708                     l2552:
  4516  002708  5039               	movf	___fttol@exp1,w,c
  4517  00270A  B4D8               	btfsc	status,2,c
  4518  00270C  D002               	goto	l2554
  4519  00270E  D7F5               	goto	l2550
  4520  002710  D000               	goto	l2554
  4521  002712                     l2554:
  4522  002712  5034               	movf	___fttol@sign1,w,c
  4523  002714  B4D8               	btfsc	status,2,c
  4524  002716  D009               	goto	l2558
  4525  002718  1E38               	comf	___fttol@lval+3,f,c
  4526  00271A  1E37               	comf	___fttol@lval+2,f,c
  4527  00271C  1E36               	comf	___fttol@lval+1,f,c
  4528  00271E  6C35               	negf	___fttol@lval,c
  4529  002720  0E00               	movlw	0
  4530  002722  2236               	addwfc	___fttol@lval+1,f,c
  4531  002724  2237               	addwfc	___fttol@lval+2,f,c
  4532  002726  2238               	addwfc	___fttol@lval+3,f,c
  4533  002728  D000               	goto	l2558
  4534  00272A                     l2558:
  4535  00272A  C035  F02B         	movff	___fttol@lval,?___fttol
  4536  00272E  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4537  002732  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4538  002736  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4539  00273A  D000               	goto	l791
  4540  00273C                     l791:
  4541  00273C  0012               	return		;funcret
  4542  00273E                     __end_of___fttol:
  4543                           	opt stack 0
  4544                           tblptru	equ	0xFF8
  4545                           tblptrh	equ	0xFF7
  4546                           tblptrl	equ	0xFF6
  4547                           tablat	equ	0xFF5
  4548                           prodh	equ	0xFF4
  4549                           prodl	equ	0xFF3
  4550                           postinc0	equ	0xFEE
  4551                           wreg	equ	0xFE8
  4552                           postdec1	equ	0xFE5
  4553                           fsr1l	equ	0xFE1
  4554                           postinc2	equ	0xFDE
  4555                           postdec2	equ	0xFDD
  4556                           fsr2h	equ	0xFDA
  4557                           fsr2l	equ	0xFD9
  4558                           status	equ	0xFD8
  4559                           
  4560 ;; *************** function ___ftsub *****************
  4561 ;; Defined at:
  4562 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  f1              3   57[COMRAM] float 
  4565 ;;  f2              3   60[COMRAM] float 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  3   57[COMRAM] float 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4577 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4581 ;;Total ram usage:        6 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:    2
  4584 ;; This function calls:
  4585 ;;		___ftadd
  4586 ;; This function is called by:
  4587 ;;		_printf
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text15
  4592  002D00                     __ptext15:
  4593                           	opt stack 0
  4594  002D00                     ___ftsub:
  4595                           	opt stack 27
  4596                           
  4597                           ;incstack = 0
  4598  002D00  503D               	movf	___ftsub@f2,w,c
  4599  002D02  103E               	iorwf	___ftsub@f2+1,w,c
  4600  002D04  103F               	iorwf	___ftsub@f2+2,w,c
  4601  002D06  B4D8               	btfsc	status,2,c
  4602  002D08  D007               	goto	l2490
  4603  002D0A  0E00               	movlw	0
  4604  002D0C  1A3D               	xorwf	___ftsub@f2,f,c
  4605  002D0E  0E00               	movlw	0
  4606  002D10  1A3E               	xorwf	___ftsub@f2+1,f,c
  4607  002D12  0E80               	movlw	128
  4608  002D14  1A3F               	xorwf	___ftsub@f2+2,f,c
  4609  002D16  D000               	goto	l2490
  4610  002D18                     l2490:
  4611  002D18  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  4612  002D1C  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  4613  002D20  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  4614  002D24  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  4615  002D28  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  4616  002D2C  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  4617  002D30  EC38  F010         	call	___ftadd	;wreg free
  4618  002D34  C02E  F03A         	movff	?___ftadd,?___ftsub
  4619  002D38  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  4620  002D3C  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  4621  002D40  D000               	goto	l787
  4622  002D42                     l787:
  4623  002D42  0012               	return		;funcret
  4624  002D44                     __end_of___ftsub:
  4625                           	opt stack 0
  4626                           tblptru	equ	0xFF8
  4627                           tblptrh	equ	0xFF7
  4628                           tblptrl	equ	0xFF6
  4629                           tablat	equ	0xFF5
  4630                           prodh	equ	0xFF4
  4631                           prodl	equ	0xFF3
  4632                           postinc0	equ	0xFEE
  4633                           wreg	equ	0xFE8
  4634                           postdec1	equ	0xFE5
  4635                           fsr1l	equ	0xFE1
  4636                           postinc2	equ	0xFDE
  4637                           postdec2	equ	0xFDD
  4638                           fsr2h	equ	0xFDA
  4639                           fsr2l	equ	0xFD9
  4640                           status	equ	0xFD8
  4641                           
  4642 ;; *************** function ___ftadd *****************
  4643 ;; Defined at:
  4644 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  f1              3   45[COMRAM] float 
  4647 ;;  f2              3   48[COMRAM] float 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  exp1            1   56[COMRAM] unsigned char 
  4650 ;;  exp2            1   55[COMRAM] unsigned char 
  4651 ;;  sign            1   54[COMRAM] unsigned char 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  3   45[COMRAM] float 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4661 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;Total ram usage:       12 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    1
  4668 ;; This function calls:
  4669 ;;		___ftpack
  4670 ;; This function is called by:
  4671 ;;		_main
  4672 ;;		_printf
  4673 ;;		___ftsub
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text16
  4678  002070                     __ptext16:
  4679                           	opt stack 0
  4680  002070                     ___ftadd:
  4681                           	opt stack 27
  4682                           
  4683                           ;incstack = 0
  4684  002070  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  4685  002074  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4686  002076  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4687  002078  342F               	rlcf	___ftadd@f1+1,w,c
  4688  00207A  3634               	rlcf	??___ftadd& (0+255),f,c
  4689  00207C  E301               	bnc	u1761
  4690  00207E  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4691  002080                     u1761:
  4692  002080  5034               	movf	??___ftadd,w,c
  4693  002082  6E39               	movwf	___ftadd@exp1,c
  4694  002084  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  4695  002088  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4696  00208A  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4697  00208C  3432               	rlcf	___ftadd@f2+1,w,c
  4698  00208E  3634               	rlcf	??___ftadd& (0+255),f,c
  4699  002090  E301               	bnc	u1771
  4700  002092  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4701  002094                     u1771:
  4702  002094  5034               	movf	??___ftadd,w,c
  4703  002096  6E38               	movwf	___ftadd@exp2,c
  4704  002098  5039               	movf	___ftadd@exp1,w,c
  4705  00209A  B4D8               	btfsc	status,2,c
  4706  00209C  D00B               	goto	l706
  4707  00209E  5038               	movf	___ftadd@exp2,w,c
  4708  0020A0  5C39               	subwf	___ftadd@exp1,w,c
  4709  0020A2  B0D8               	btfsc	status,0,c
  4710  0020A4  D00E               	goto	l2066
  4711  0020A6  5039               	movf	___ftadd@exp1,w,c
  4712  0020A8  0800               	sublw	0
  4713  0020AA  2438               	addwf	___ftadd@exp2,w,c
  4714  0020AC  6E34               	movwf	??___ftadd& (0+255),c
  4715  0020AE  0E18               	movlw	24
  4716  0020B0  6434               	cpfsgt	??___ftadd,c
  4717  0020B2  D007               	goto	l2066
  4718  0020B4                     l706:
  4719  0020B4  C031  F02E         	movff	___ftadd@f2,?___ftadd
  4720  0020B8  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  4721  0020BC  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  4722  0020C0  D0B8               	goto	l707
  4723  0020C2                     l2066:
  4724  0020C2  5038               	movf	___ftadd@exp2,w,c
  4725  0020C4  B4D8               	btfsc	status,2,c
  4726  0020C6  D00B               	goto	l710
  4727  0020C8  5039               	movf	___ftadd@exp1,w,c
  4728  0020CA  5C38               	subwf	___ftadd@exp2,w,c
  4729  0020CC  B0D8               	btfsc	status,0,c
  4730  0020CE  D00E               	goto	l2072
  4731  0020D0  5038               	movf	___ftadd@exp2,w,c
  4732  0020D2  0800               	sublw	0
  4733  0020D4  2439               	addwf	___ftadd@exp1,w,c
  4734  0020D6  6E34               	movwf	??___ftadd& (0+255),c
  4735  0020D8  0E18               	movlw	24
  4736  0020DA  6434               	cpfsgt	??___ftadd,c
  4737  0020DC  D007               	goto	l2072
  4738  0020DE                     l710:
  4739  0020DE  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  4740  0020E2  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  4741  0020E6  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  4742  0020EA  D0A3               	goto	l707
  4743  0020EC                     l2072:
  4744  0020EC  0E06               	movlw	6
  4745  0020EE  6E37               	movwf	___ftadd@sign,c
  4746  0020F0  AE30               	btfss	___ftadd@f1+2,7,c
  4747  0020F2  D002               	goto	l2078
  4748  0020F4  8E37               	bsf	___ftadd@sign,7,c
  4749  0020F6  D000               	goto	l2078
  4750  0020F8                     l2078:
  4751  0020F8  BE33               	btfsc	___ftadd@f2+2,7,c
  4752  0020FA  8C37               	bsf	___ftadd@sign,6,c
  4753  0020FC  8E2F               	bsf	___ftadd@f1+1,7,c
  4754  0020FE  0EFF               	movlw	255
  4755  002100  162E               	andwf	___ftadd@f1,f,c
  4756  002102  0EFF               	movlw	255
  4757  002104  162F               	andwf	___ftadd@f1+1,f,c
  4758  002106  0E00               	movlw	0
  4759  002108  1630               	andwf	___ftadd@f1+2,f,c
  4760  00210A  8E32               	bsf	___ftadd@f2+1,7,c
  4761  00210C  0EFF               	movlw	255
  4762  00210E  1631               	andwf	___ftadd@f2,f,c
  4763  002110  0EFF               	movlw	255
  4764  002112  1632               	andwf	___ftadd@f2+1,f,c
  4765  002114  0E00               	movlw	0
  4766  002116  1633               	andwf	___ftadd@f2+2,f,c
  4767  002118  5038               	movf	___ftadd@exp2,w,c
  4768  00211A  5C39               	subwf	___ftadd@exp1,w,c
  4769  00211C  B0D8               	btfsc	status,0,c
  4770  00211E  D01E               	goto	l2098
  4771  002120                     l2088:
  4772  002120  90D8               	bcf	status,0,c
  4773  002122  3631               	rlcf	___ftadd@f2,f,c
  4774  002124  3632               	rlcf	___ftadd@f2+1,f,c
  4775  002126  3633               	rlcf	___ftadd@f2+2,f,c
  4776  002128  0638               	decf	___ftadd@exp2,f,c
  4777  00212A  5039               	movf	___ftadd@exp1,w,c
  4778  00212C  1838               	xorwf	___ftadd@exp2,w,c
  4779  00212E  B4D8               	btfsc	status,2,c
  4780  002130  D00F               	goto	l2096
  4781  002132  0637               	decf	___ftadd@sign,f,c
  4782  002134  C037  F034         	movff	___ftadd@sign,??___ftadd
  4783  002138  0E07               	movlw	7
  4784  00213A  1634               	andwf	??___ftadd,f,c
  4785  00213C  B4D8               	btfsc	status,2,c
  4786  00213E  D008               	goto	l2096
  4787  002140  D7EF               	goto	l2088
  4788  002142  D006               	goto	l2096
  4789  002144                     l2094:
  4790  002144  90D8               	bcf	status,0,c
  4791  002146  3230               	rrcf	___ftadd@f1+2,f,c
  4792  002148  322F               	rrcf	___ftadd@f1+1,f,c
  4793  00214A  322E               	rrcf	___ftadd@f1,f,c
  4794  00214C  2A39               	incf	___ftadd@exp1,f,c
  4795  00214E  D000               	goto	l2096
  4796  002150                     l2096:
  4797  002150  5038               	movf	___ftadd@exp2,w,c
  4798  002152  1839               	xorwf	___ftadd@exp1,w,c
  4799  002154  B4D8               	btfsc	status,2,c
  4800  002156  D024               	goto	l721
  4801  002158  D7F5               	goto	l2094
  4802  00215A  D022               	goto	l721
  4803  00215C                     l2098:
  4804  00215C  5039               	movf	___ftadd@exp1,w,c
  4805  00215E  5C38               	subwf	___ftadd@exp2,w,c
  4806  002160  B0D8               	btfsc	status,0,c
  4807  002162  D01E               	goto	l721
  4808  002164                     l2100:
  4809  002164  90D8               	bcf	status,0,c
  4810  002166  362E               	rlcf	___ftadd@f1,f,c
  4811  002168  362F               	rlcf	___ftadd@f1+1,f,c
  4812  00216A  3630               	rlcf	___ftadd@f1+2,f,c
  4813  00216C  0639               	decf	___ftadd@exp1,f,c
  4814  00216E  5039               	movf	___ftadd@exp1,w,c
  4815  002170  1838               	xorwf	___ftadd@exp2,w,c
  4816  002172  B4D8               	btfsc	status,2,c
  4817  002174  D00F               	goto	l2108
  4818  002176  0637               	decf	___ftadd@sign,f,c
  4819  002178  C037  F034         	movff	___ftadd@sign,??___ftadd
  4820  00217C  0E07               	movlw	7
  4821  00217E  1634               	andwf	??___ftadd,f,c
  4822  002180  B4D8               	btfsc	status,2,c
  4823  002182  D008               	goto	l2108
  4824  002184  D7EF               	goto	l2100
  4825  002186  D006               	goto	l2108
  4826  002188                     l2106:
  4827  002188  90D8               	bcf	status,0,c
  4828  00218A  3233               	rrcf	___ftadd@f2+2,f,c
  4829  00218C  3232               	rrcf	___ftadd@f2+1,f,c
  4830  00218E  3231               	rrcf	___ftadd@f2,f,c
  4831  002190  2A38               	incf	___ftadd@exp2,f,c
  4832  002192  D000               	goto	l2108
  4833  002194                     l2108:
  4834  002194  5038               	movf	___ftadd@exp2,w,c
  4835  002196  1839               	xorwf	___ftadd@exp1,w,c
  4836  002198  B4D8               	btfsc	status,2,c
  4837  00219A  D002               	goto	l721
  4838  00219C  D7F5               	goto	l2106
  4839  00219E  D000               	goto	l721
  4840  0021A0                     l721:
  4841  0021A0  AE37               	btfss	___ftadd@sign,7,c
  4842  0021A2  D00C               	goto	l730
  4843  0021A4  0EFF               	movlw	255
  4844  0021A6  1A2E               	xorwf	___ftadd@f1,f,c
  4845  0021A8  0EFF               	movlw	255
  4846  0021AA  1A2F               	xorwf	___ftadd@f1+1,f,c
  4847  0021AC  0EFF               	movlw	255
  4848  0021AE  1A30               	xorwf	___ftadd@f1+2,f,c
  4849  0021B0  0E01               	movlw	1
  4850  0021B2  262E               	addwf	___ftadd@f1,f,c
  4851  0021B4  0E00               	movlw	0
  4852  0021B6  222F               	addwfc	___ftadd@f1+1,f,c
  4853  0021B8  0E00               	movlw	0
  4854  0021BA  2230               	addwfc	___ftadd@f1+2,f,c
  4855  0021BC                     l730:
  4856  0021BC  AC37               	btfss	___ftadd@sign,6,c
  4857  0021BE  D00D               	goto	l2114
  4858  0021C0  0EFF               	movlw	255
  4859  0021C2  1A31               	xorwf	___ftadd@f2,f,c
  4860  0021C4  0EFF               	movlw	255
  4861  0021C6  1A32               	xorwf	___ftadd@f2+1,f,c
  4862  0021C8  0EFF               	movlw	255
  4863  0021CA  1A33               	xorwf	___ftadd@f2+2,f,c
  4864  0021CC  0E01               	movlw	1
  4865  0021CE  2631               	addwf	___ftadd@f2,f,c
  4866  0021D0  0E00               	movlw	0
  4867  0021D2  2232               	addwfc	___ftadd@f2+1,f,c
  4868  0021D4  0E00               	movlw	0
  4869  0021D6  2233               	addwfc	___ftadd@f2+2,f,c
  4870  0021D8  D000               	goto	l2114
  4871  0021DA                     l2114:
  4872  0021DA  0E00               	movlw	0
  4873  0021DC  6E37               	movwf	___ftadd@sign,c
  4874  0021DE  502E               	movf	___ftadd@f1,w,c
  4875  0021E0  2631               	addwf	___ftadd@f2,f,c
  4876  0021E2  502F               	movf	___ftadd@f1+1,w,c
  4877  0021E4  2232               	addwfc	___ftadd@f2+1,f,c
  4878  0021E6  5030               	movf	___ftadd@f1+2,w,c
  4879  0021E8  2233               	addwfc	___ftadd@f2+2,f,c
  4880  0021EA  AE33               	btfss	___ftadd@f2+2,7,c
  4881  0021EC  D00F               	goto	l2124
  4882  0021EE  0EFF               	movlw	255
  4883  0021F0  1A31               	xorwf	___ftadd@f2,f,c
  4884  0021F2  0EFF               	movlw	255
  4885  0021F4  1A32               	xorwf	___ftadd@f2+1,f,c
  4886  0021F6  0EFF               	movlw	255
  4887  0021F8  1A33               	xorwf	___ftadd@f2+2,f,c
  4888  0021FA  0E01               	movlw	1
  4889  0021FC  2631               	addwf	___ftadd@f2,f,c
  4890  0021FE  0E00               	movlw	0
  4891  002200  2232               	addwfc	___ftadd@f2+1,f,c
  4892  002202  0E00               	movlw	0
  4893  002204  2233               	addwfc	___ftadd@f2+2,f,c
  4894  002206  0E01               	movlw	1
  4895  002208  6E37               	movwf	___ftadd@sign,c
  4896  00220A  D000               	goto	l2124
  4897  00220C                     l2124:
  4898  00220C  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  4899  002210  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4900  002214  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4901  002218  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  4902  00221C  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  4903  002220  EC10  F014         	call	___ftpack	;wreg free
  4904  002224  C001  F02E         	movff	?___ftpack,?___ftadd
  4905  002228  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  4906  00222C  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  4907  002230  D000               	goto	l707
  4908  002232                     l707:
  4909  002232  0012               	return		;funcret
  4910  002234                     __end_of___ftadd:
  4911                           	opt stack 0
  4912                           tblptru	equ	0xFF8
  4913                           tblptrh	equ	0xFF7
  4914                           tblptrl	equ	0xFF6
  4915                           tablat	equ	0xFF5
  4916                           prodh	equ	0xFF4
  4917                           prodl	equ	0xFF3
  4918                           postinc0	equ	0xFEE
  4919                           wreg	equ	0xFE8
  4920                           postdec1	equ	0xFE5
  4921                           fsr1l	equ	0xFE1
  4922                           postinc2	equ	0xFDE
  4923                           postdec2	equ	0xFDD
  4924                           fsr2h	equ	0xFDA
  4925                           fsr2l	equ	0xFD9
  4926                           status	equ	0xFD8
  4927                           
  4928 ;; *************** function ___ftneg *****************
  4929 ;; Defined at:
  4930 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  f1              3    0[COMRAM] float 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;		None
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  3    0[COMRAM] float 
  4937 ;; Registers used:
  4938 ;;		wreg, status,2, status,0
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4944 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;Total ram usage:        3 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_main
  4954 ;;		_printf
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text17
  4959  002E72                     __ptext17:
  4960                           	opt stack 0
  4961  002E72                     ___ftneg:
  4962                           	opt stack 29
  4963                           
  4964                           ;incstack = 0
  4965  002E72  5001               	movf	___ftneg@f1,w,c
  4966  002E74  1002               	iorwf	___ftneg@f1+1,w,c
  4967  002E76  1003               	iorwf	___ftneg@f1+2,w,c
  4968  002E78  B4D8               	btfsc	status,2,c
  4969  002E7A  D006               	goto	l780
  4970  002E7C  0E00               	movlw	0
  4971  002E7E  1A01               	xorwf	___ftneg@f1,f,c
  4972  002E80  0E00               	movlw	0
  4973  002E82  1A02               	xorwf	___ftneg@f1+1,f,c
  4974  002E84  0E80               	movlw	128
  4975  002E86  1A03               	xorwf	___ftneg@f1+2,f,c
  4976  002E88                     l780:
  4977  002E88  C001  F001         	movff	___ftneg@f1,?___ftneg
  4978  002E8C  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4979  002E90  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4980  002E94  0012               	return		;funcret
  4981  002E96                     __end_of___ftneg:
  4982                           	opt stack 0
  4983                           tblptru	equ	0xFF8
  4984                           tblptrh	equ	0xFF7
  4985                           tblptrl	equ	0xFF6
  4986                           tablat	equ	0xFF5
  4987                           prodh	equ	0xFF4
  4988                           prodl	equ	0xFF3
  4989                           postinc0	equ	0xFEE
  4990                           wreg	equ	0xFE8
  4991                           postdec1	equ	0xFE5
  4992                           fsr1l	equ	0xFE1
  4993                           postinc2	equ	0xFDE
  4994                           postdec2	equ	0xFDD
  4995                           fsr2h	equ	0xFDA
  4996                           fsr2l	equ	0xFD9
  4997                           status	equ	0xFD8
  4998                           
  4999 ;; *************** function ___ftge *****************
  5000 ;; Defined at:
  5001 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  ff1             3    0[COMRAM] float 
  5004 ;;  ff2             3    3[COMRAM] float 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;		None               void
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5016 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;Total ram usage:        9 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_printf
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text18
  5030  002A1C                     __ptext18:
  5031                           	opt stack 0
  5032  002A1C                     ___ftge:
  5033                           	opt stack 29
  5034                           
  5035                           ;incstack = 0
  5036  002A1C  AE03               	btfss	___ftge@ff1+2,7,c
  5037  002A1E  D017               	goto	l2498
  5038  002A20  C001  F007         	movff	___ftge@ff1,??___ftge
  5039  002A24  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5040  002A28  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5041  002A2C  1E07               	comf	??___ftge,f,c
  5042  002A2E  1E08               	comf	??___ftge+1,f,c
  5043  002A30  1E09               	comf	??___ftge+2,f,c
  5044  002A32  2A07               	incf	??___ftge,f,c
  5045  002A34  0E00               	movlw	0
  5046  002A36  2208               	addwfc	??___ftge+1,f,c
  5047  002A38  2209               	addwfc	??___ftge+2,f,c
  5048  002A3A  0E00               	movlw	0
  5049  002A3C  2407               	addwf	??___ftge,w,c
  5050  002A3E  6E01               	movwf	___ftge@ff1,c
  5051  002A40  0E00               	movlw	0
  5052  002A42  2008               	addwfc	??___ftge+1,w,c
  5053  002A44  6E02               	movwf	___ftge@ff1+1,c
  5054  002A46  0E80               	movlw	128
  5055  002A48  2009               	addwfc	??___ftge+2,w,c
  5056  002A4A  6E03               	movwf	___ftge@ff1+2,c
  5057  002A4C  D000               	goto	l2498
  5058  002A4E                     l2498:
  5059  002A4E  AE06               	btfss	___ftge@ff2+2,7,c
  5060  002A50  D017               	goto	l2502
  5061  002A52  C004  F007         	movff	___ftge@ff2,??___ftge
  5062  002A56  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5063  002A5A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5064  002A5E  1E07               	comf	??___ftge,f,c
  5065  002A60  1E08               	comf	??___ftge+1,f,c
  5066  002A62  1E09               	comf	??___ftge+2,f,c
  5067  002A64  2A07               	incf	??___ftge,f,c
  5068  002A66  0E00               	movlw	0
  5069  002A68  2208               	addwfc	??___ftge+1,f,c
  5070  002A6A  2209               	addwfc	??___ftge+2,f,c
  5071  002A6C  0E00               	movlw	0
  5072  002A6E  2407               	addwf	??___ftge,w,c
  5073  002A70  6E04               	movwf	___ftge@ff2,c
  5074  002A72  0E00               	movlw	0
  5075  002A74  2008               	addwfc	??___ftge+1,w,c
  5076  002A76  6E05               	movwf	___ftge@ff2+1,c
  5077  002A78  0E80               	movlw	128
  5078  002A7A  2009               	addwfc	??___ftge+2,w,c
  5079  002A7C  6E06               	movwf	___ftge@ff2+2,c
  5080  002A7E  D000               	goto	l2502
  5081  002A80                     l2502:
  5082  002A80  0E00               	movlw	0
  5083  002A82  1A01               	xorwf	___ftge@ff1,f,c
  5084  002A84  0E00               	movlw	0
  5085  002A86  1A02               	xorwf	___ftge@ff1+1,f,c
  5086  002A88  0E80               	movlw	128
  5087  002A8A  1A03               	xorwf	___ftge@ff1+2,f,c
  5088  002A8C  0E00               	movlw	0
  5089  002A8E  1A04               	xorwf	___ftge@ff2,f,c
  5090  002A90  0E00               	movlw	0
  5091  002A92  1A05               	xorwf	___ftge@ff2+1,f,c
  5092  002A94  0E80               	movlw	128
  5093  002A96  1A06               	xorwf	___ftge@ff2+2,f,c
  5094  002A98  5004               	movf	___ftge@ff2,w,c
  5095  002A9A  5C01               	subwf	___ftge@ff1,w,c
  5096  002A9C  5005               	movf	___ftge@ff2+1,w,c
  5097  002A9E  5802               	subwfb	___ftge@ff1+1,w,c
  5098  002AA0  5006               	movf	___ftge@ff2+2,w,c
  5099  002AA2  5803               	subwfb	___ftge@ff1+2,w,c
  5100  002AA4  B0D8               	btfsc	status,0,c
  5101  002AA6  D002               	goto	l2508
  5102  002AA8  90D8               	bcf	status,0,c
  5103  002AAA  D002               	goto	l764
  5104  002AAC                     l2508:
  5105  002AAC  80D8               	bsf	status,0,c
  5106  002AAE  D000               	goto	l764
  5107  002AB0                     l764:
  5108  002AB0  0012               	return		;funcret
  5109  002AB2                     __end_of___ftge:
  5110                           	opt stack 0
  5111                           tblptru	equ	0xFF8
  5112                           tblptrh	equ	0xFF7
  5113                           tblptrl	equ	0xFF6
  5114                           tablat	equ	0xFF5
  5115                           prodh	equ	0xFF4
  5116                           prodl	equ	0xFF3
  5117                           postinc0	equ	0xFEE
  5118                           wreg	equ	0xFE8
  5119                           postdec1	equ	0xFE5
  5120                           fsr1l	equ	0xFE1
  5121                           postinc2	equ	0xFDE
  5122                           postdec2	equ	0xFDD
  5123                           fsr2h	equ	0xFDA
  5124                           fsr2l	equ	0xFD9
  5125                           status	equ	0xFD8
  5126                           
  5127 ;; *************** function _init_UART *****************
  5128 ;; Defined at:
  5129 ;;		line 105 in file "Lab5P1.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;		None
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;		None               void
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, cstack
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;Total ram usage:        0 bytes
  5148 ;; Hardware stack levels used:    1
  5149 ;; Hardware stack levels required when called:    1
  5150 ;; This function calls:
  5151 ;;		_OpenUSART
  5152 ;; This function is called by:
  5153 ;;		_main
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text19
  5158  002EE8                     __ptext19:
  5159                           	opt stack 0
  5160  002EE8                     _init_UART:
  5161                           	opt stack 29
  5162                           
  5163                           ;Lab5P1.c: 106: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101
  5164                           ;Lab5P1.c: 107: & 0b11111111 & 0b11111111, 25);
  5165                           
  5166                           ;incstack = 0
  5167  002EE8  0E00               	movlw	0
  5168  002EEA  6E02               	movwf	OpenUSART@spbrg+1,c
  5169  002EEC  0E19               	movlw	25
  5170  002EEE  6E01               	movwf	OpenUSART@spbrg,c
  5171  002EF0  0E3C               	movlw	60
  5172  002EF2  EC18  F016         	call	_OpenUSART
  5173                           
  5174                           ;Lab5P1.c: 108: OSCCON = 0x60;
  5175  002EF6  0E60               	movlw	96
  5176  002EF8  6ED3               	movwf	4051,c	;volatile
  5177  002EFA  0012               	return		;funcret
  5178  002EFC                     __end_of_init_UART:
  5179                           	opt stack 0
  5180                           tblptru	equ	0xFF8
  5181                           tblptrh	equ	0xFF7
  5182                           tblptrl	equ	0xFF6
  5183                           tablat	equ	0xFF5
  5184                           prodh	equ	0xFF4
  5185                           prodl	equ	0xFF3
  5186                           postinc0	equ	0xFEE
  5187                           wreg	equ	0xFE8
  5188                           postdec1	equ	0xFE5
  5189                           fsr1l	equ	0xFE1
  5190                           postinc2	equ	0xFDE
  5191                           postdec2	equ	0xFDD
  5192                           fsr2h	equ	0xFDA
  5193                           fsr2l	equ	0xFD9
  5194                           status	equ	0xFD8
  5195                           
  5196 ;; *************** function _OpenUSART *****************
  5197 ;; Defined at:
  5198 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  config          1    wreg     unsigned char 
  5201 ;;  spbrg           2    0[COMRAM] unsigned int 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  config          1    2[COMRAM] unsigned char 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;		None               void
  5206 ;; Registers used:
  5207 ;;		wreg, status,2
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;Total ram usage:        3 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_init_UART
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text20
  5227  002C30                     __ptext20:
  5228                           	opt stack 0
  5229  002C30                     _OpenUSART:
  5230                           	opt stack 29
  5231                           
  5232                           ;incstack = 0
  5233                           ;OpenUSART@config stored from wreg
  5234  002C30  6E03               	movwf	OpenUSART@config,c
  5235  002C32  0E00               	movlw	0
  5236  002C34  6EAC               	movwf	4012,c	;volatile
  5237  002C36  0E00               	movlw	0
  5238  002C38  6EAB               	movwf	4011,c	;volatile
  5239  002C3A  A003               	btfss	OpenUSART@config,0,c
  5240  002C3C  D002               	goto	l2262
  5241  002C3E  88AC               	bsf	4012,4,c	;volatile
  5242  002C40  D000               	goto	l2262
  5243  002C42                     l2262:
  5244  002C42  A203               	btfss	OpenUSART@config,1,c
  5245  002C44  D003               	goto	l2266
  5246  002C46  8CAC               	bsf	4012,6,c	;volatile
  5247  002C48  8CAB               	bsf	4011,6,c	;volatile
  5248  002C4A  D000               	goto	l2266
  5249  002C4C                     l2266:
  5250  002C4C  A403               	btfss	OpenUSART@config,2,c
  5251  002C4E  D002               	goto	l2270
  5252  002C50  8EAC               	bsf	4012,7,c	;volatile
  5253  002C52  D000               	goto	l2270
  5254  002C54                     l2270:
  5255  002C54  A603               	btfss	OpenUSART@config,3,c
  5256  002C56  D002               	goto	l329
  5257  002C58  88AB               	bsf	4011,4,c	;volatile
  5258  002C5A  D002               	goto	l2274
  5259  002C5C                     l329:
  5260  002C5C  8AAB               	bsf	4011,5,c	;volatile
  5261  002C5E  D000               	goto	l2274
  5262  002C60                     l2274:
  5263  002C60  B803               	btfsc	OpenUSART@config,4,c
  5264  002C62  84AC               	bsf	4012,2,c	;volatile
  5265  002C64  989E               	bcf	3998,4,c	;volatile
  5266  002C66  AA03               	btfss	OpenUSART@config,5,c
  5267  002C68  D002               	goto	l2282
  5268  002C6A  86AB               	bsf	4011,3,c	;volatile
  5269  002C6C  D000               	goto	l2282
  5270  002C6E                     l2282:
  5271  002C6E  AC03               	btfss	OpenUSART@config,6,c
  5272  002C70  D002               	goto	l333
  5273  002C72  8A9D               	bsf	3997,5,c	;volatile
  5274  002C74  D001               	goto	l334
  5275  002C76                     l333:
  5276  002C76  9A9D               	bcf	3997,5,c	;volatile
  5277  002C78                     l334:
  5278  002C78  9A9E               	bcf	3998,5,c	;volatile
  5279  002C7A  AE03               	btfss	OpenUSART@config,7,c
  5280  002C7C  D002               	goto	l335
  5281  002C7E  889D               	bsf	3997,4,c	;volatile
  5282  002C80  D001               	goto	l336
  5283  002C82                     l335:
  5284  002C82  989D               	bcf	3997,4,c	;volatile
  5285  002C84                     l336:
  5286  002C84  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5287  002C88  5002               	movf	OpenUSART@spbrg+1,w,c
  5288  002C8A  6EB0               	movwf	4016,c	;volatile
  5289  002C8C  8AAC               	bsf	4012,5,c	;volatile
  5290  002C8E  8EAB               	bsf	4011,7,c	;volatile
  5291  002C90  9C94               	bcf	3988,6,c	;volatile
  5292  002C92  8E94               	bsf	3988,7,c	;volatile
  5293  002C94  B8AC               	btfsc	4012,4,c	;volatile
  5294  002C96  BEAC               	btfsc	4012,7,c	;volatile
  5295  002C98  D002               	goto	l338
  5296  002C9A  8C94               	bsf	3988,6,c	;volatile
  5297  002C9C  D000               	goto	l338
  5298  002C9E                     l338:
  5299  002C9E  0012               	return		;funcret
  5300  002CA0                     __end_of_OpenUSART:
  5301                           	opt stack 0
  5302                           tblptru	equ	0xFF8
  5303                           tblptrh	equ	0xFF7
  5304                           tblptrl	equ	0xFF6
  5305                           tablat	equ	0xFF5
  5306                           prodh	equ	0xFF4
  5307                           prodl	equ	0xFF3
  5308                           postinc0	equ	0xFEE
  5309                           wreg	equ	0xFE8
  5310                           postdec1	equ	0xFE5
  5311                           fsr1l	equ	0xFE1
  5312                           postinc2	equ	0xFDE
  5313                           postdec2	equ	0xFDD
  5314                           fsr2h	equ	0xFDA
  5315                           fsr2l	equ	0xFD9
  5316                           status	equ	0xFD8
  5317                           
  5318 ;; *************** function _get_full_ADC *****************
  5319 ;; Defined at:
  5320 ;;		line 131 in file "Lab5P1.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;		None
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  result          2    4[COMRAM] int 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  2    0[COMRAM] unsigned int 
  5327 ;; Registers used:
  5328 ;;		wreg, status,2, status,0
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;Total ram usage:        6 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_main
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text21
  5348  002E4C                     __ptext21:
  5349                           	opt stack 0
  5350  002E4C                     _get_full_ADC:
  5351                           	opt stack 30
  5352                           
  5353                           ;Lab5P1.c: 132: int result;
  5354                           ;Lab5P1.c: 133: ADCON0bits.GO=1;
  5355                           
  5356                           ;incstack = 0
  5357  002E4C  82C2               	bsf	4034,1,c	;volatile
  5358                           
  5359                           ;Lab5P1.c: 135: while(ADCON0bits.DONE==1);
  5360  002E4E  D000               	goto	l115
  5361  002E50                     l115:
  5362  002E50  B2C2               	btfsc	4034,1,c	;volatile
  5363  002E52  D7FE               	goto	l115
  5364                           
  5365                           ;Lab5P1.c: 137: result = (ADRESH * 0x100) + ADRESL;
  5366  002E54  50C4               	movf	4036,w,c	;volatile
  5367  002E56  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5368  002E58  6A03               	clrf	??_get_full_ADC& (0+255),c
  5369  002E5A  50C3               	movf	4035,w,c	;volatile
  5370  002E5C  2403               	addwf	??_get_full_ADC,w,c
  5371  002E5E  6E05               	movwf	get_full_ADC@result,c
  5372  002E60  0E00               	movlw	0
  5373  002E62  2004               	addwfc	??_get_full_ADC+1,w,c
  5374  002E64  6E06               	movwf	get_full_ADC@result+1,c
  5375                           
  5376                           ;Lab5P1.c: 140: return result;
  5377  002E66  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5378  002E6A  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5379  002E6E  D000               	goto	l118
  5380  002E70                     l118:
  5381  002E70  0012               	return		;funcret
  5382  002E72                     __end_of_get_full_ADC:
  5383                           	opt stack 0
  5384                           tblptru	equ	0xFF8
  5385                           tblptrh	equ	0xFF7
  5386                           tblptrl	equ	0xFF6
  5387                           tablat	equ	0xFF5
  5388                           prodh	equ	0xFF4
  5389                           prodl	equ	0xFF3
  5390                           postinc0	equ	0xFEE
  5391                           wreg	equ	0xFE8
  5392                           postdec1	equ	0xFE5
  5393                           fsr1l	equ	0xFE1
  5394                           postinc2	equ	0xFDE
  5395                           postdec2	equ	0xFDD
  5396                           fsr2h	equ	0xFDA
  5397                           fsr2l	equ	0xFD9
  5398                           status	equ	0xFD8
  5399                           
  5400 ;; *************** function ___ftdiv *****************
  5401 ;; Defined at:
  5402 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  f1              3   57[COMRAM] float 
  5405 ;;  f2              3   60[COMRAM] float 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  f3              3   67[COMRAM] float 
  5408 ;;  sign            1   71[COMRAM] unsigned char 
  5409 ;;  exp             1   70[COMRAM] unsigned char 
  5410 ;;  cntr            1   66[COMRAM] unsigned char 
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  3   57[COMRAM] float 
  5413 ;; Registers used:
  5414 ;;		wreg, status,2, status,0, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5420 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;Total ram usage:       15 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    1
  5427 ;; This function calls:
  5428 ;;		___ftpack
  5429 ;; This function is called by:
  5430 ;;		_main
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text22
  5435  00273E                     __ptext22:
  5436                           	opt stack 0
  5437  00273E                     ___ftdiv:
  5438                           	opt stack 29
  5439                           
  5440                           ;incstack = 0
  5441  00273E  C03C  F040         	movff	___ftdiv@f1+2,??___ftdiv
  5442  002742  6A41               	clrf	(??___ftdiv+1)& (0+255),c
  5443  002744  6A42               	clrf	(??___ftdiv+2)& (0+255),c
  5444  002746  343B               	rlcf	___ftdiv@f1+1,w,c
  5445  002748  3640               	rlcf	??___ftdiv& (0+255),f,c
  5446  00274A  E301               	bnc	u3271
  5447  00274C  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
  5448  00274E                     u3271:
  5449  00274E  5040               	movf	??___ftdiv,w,c
  5450  002750  6E47               	movwf	___ftdiv@exp,c
  5451  002752  5047               	movf	___ftdiv@exp,w,c
  5452  002754  A4D8               	btfss	status,2,c
  5453  002756  D002               	goto	l2902
  5454  002758  D00E               	goto	l2904
  5455  00275A  D061               	goto	l738
  5456  00275C                     l2902:
  5457  00275C  C03F  F040         	movff	___ftdiv@f2+2,??___ftdiv
  5458  002760  6A41               	clrf	(??___ftdiv+1)& (0+255),c
  5459  002762  6A42               	clrf	(??___ftdiv+2)& (0+255),c
  5460  002764  343E               	rlcf	___ftdiv@f2+1,w,c
  5461  002766  3640               	rlcf	??___ftdiv& (0+255),f,c
  5462  002768  E301               	bnc	u3291
  5463  00276A  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
  5464  00276C                     u3291:
  5465  00276C  5040               	movf	??___ftdiv,w,c
  5466  00276E  6E48               	movwf	___ftdiv@sign,c
  5467  002770  5048               	movf	___ftdiv@sign,w,c
  5468  002772  A4D8               	btfss	status,2,c
  5469  002774  D007               	goto	l2908
  5470  002776                     l2904:
  5471  002776  0E00               	movlw	0
  5472  002778  6E3A               	movwf	?___ftdiv,c
  5473  00277A  0E00               	movlw	0
  5474  00277C  6E3B               	movwf	?___ftdiv+1,c
  5475  00277E  0E00               	movlw	0
  5476  002780  6E3C               	movwf	?___ftdiv+2,c
  5477  002782  D04D               	goto	l738
  5478  002784                     l2908:
  5479  002784  0E00               	movlw	0
  5480  002786  6E44               	movwf	___ftdiv@f3,c
  5481  002788  0E00               	movlw	0
  5482  00278A  6E45               	movwf	___ftdiv@f3+1,c
  5483  00278C  0E00               	movlw	0
  5484  00278E  6E46               	movwf	___ftdiv@f3+2,c
  5485  002790  5048               	movf	___ftdiv@sign,w,c
  5486  002792  0F89               	addlw	137
  5487  002794  5E47               	subwf	___ftdiv@exp,f,c
  5488  002796  C03C  F048         	movff	___ftdiv@f1+2,___ftdiv@sign
  5489  00279A  503F               	movf	___ftdiv@f2+2,w,c
  5490  00279C  1A48               	xorwf	___ftdiv@sign,f,c
  5491  00279E  0E80               	movlw	128
  5492  0027A0  1648               	andwf	___ftdiv@sign,f,c
  5493  0027A2  8E3B               	bsf	___ftdiv@f1+1,7,c
  5494  0027A4  0EFF               	movlw	255
  5495  0027A6  163A               	andwf	___ftdiv@f1,f,c
  5496  0027A8  0EFF               	movlw	255
  5497  0027AA  163B               	andwf	___ftdiv@f1+1,f,c
  5498  0027AC  0E00               	movlw	0
  5499  0027AE  163C               	andwf	___ftdiv@f1+2,f,c
  5500  0027B0  8E3E               	bsf	___ftdiv@f2+1,7,c
  5501  0027B2  0EFF               	movlw	255
  5502  0027B4  163D               	andwf	___ftdiv@f2,f,c
  5503  0027B6  0EFF               	movlw	255
  5504  0027B8  163E               	andwf	___ftdiv@f2+1,f,c
  5505  0027BA  0E00               	movlw	0
  5506  0027BC  163F               	andwf	___ftdiv@f2+2,f,c
  5507  0027BE  0E18               	movlw	24
  5508  0027C0  6E43               	movwf	___ftdiv@cntr,c
  5509  0027C2  D000               	goto	l2928
  5510  0027C4                     l2928:
  5511  0027C4  90D8               	bcf	status,0,c
  5512  0027C6  3644               	rlcf	___ftdiv@f3,f,c
  5513  0027C8  3645               	rlcf	___ftdiv@f3+1,f,c
  5514  0027CA  3646               	rlcf	___ftdiv@f3+2,f,c
  5515  0027CC  503D               	movf	___ftdiv@f2,w,c
  5516  0027CE  5C3A               	subwf	___ftdiv@f1,w,c
  5517  0027D0  503E               	movf	___ftdiv@f2+1,w,c
  5518  0027D2  583B               	subwfb	___ftdiv@f1+1,w,c
  5519  0027D4  503F               	movf	___ftdiv@f2+2,w,c
  5520  0027D6  583C               	subwfb	___ftdiv@f1+2,w,c
  5521  0027D8  A0D8               	btfss	status,0,c
  5522  0027DA  D007               	goto	l741
  5523  0027DC  503D               	movf	___ftdiv@f2,w,c
  5524  0027DE  5E3A               	subwf	___ftdiv@f1,f,c
  5525  0027E0  503E               	movf	___ftdiv@f2+1,w,c
  5526  0027E2  5A3B               	subwfb	___ftdiv@f1+1,f,c
  5527  0027E4  503F               	movf	___ftdiv@f2+2,w,c
  5528  0027E6  5A3C               	subwfb	___ftdiv@f1+2,f,c
  5529  0027E8  8044               	bsf	___ftdiv@f3,0,c
  5530  0027EA                     l741:
  5531  0027EA  90D8               	bcf	status,0,c
  5532  0027EC  363A               	rlcf	___ftdiv@f1,f,c
  5533  0027EE  363B               	rlcf	___ftdiv@f1+1,f,c
  5534  0027F0  363C               	rlcf	___ftdiv@f1+2,f,c
  5535  0027F2  2E43               	decfsz	___ftdiv@cntr,f,c
  5536  0027F4  D7E7               	goto	l2928
  5537  0027F6  D000               	goto	l2938
  5538  0027F8                     l2938:
  5539  0027F8  C044  F001         	movff	___ftdiv@f3,___ftpack@arg
  5540  0027FC  C045  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5541  002800  C046  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5542  002804  C047  F004         	movff	___ftdiv@exp,___ftpack@exp
  5543  002808  C048  F005         	movff	___ftdiv@sign,___ftpack@sign
  5544  00280C  EC10  F014         	call	___ftpack	;wreg free
  5545  002810  C001  F03A         	movff	?___ftpack,?___ftdiv
  5546  002814  C002  F03B         	movff	?___ftpack+1,?___ftdiv+1
  5547  002818  C003  F03C         	movff	?___ftpack+2,?___ftdiv+2
  5548  00281C  D000               	goto	l738
  5549  00281E                     l738:
  5550  00281E  0012               	return		;funcret
  5551  002820                     __end_of___ftdiv:
  5552                           	opt stack 0
  5553                           tblptru	equ	0xFF8
  5554                           tblptrh	equ	0xFF7
  5555                           tblptrl	equ	0xFF6
  5556                           tablat	equ	0xFF5
  5557                           prodh	equ	0xFF4
  5558                           prodl	equ	0xFF3
  5559                           postinc0	equ	0xFEE
  5560                           wreg	equ	0xFE8
  5561                           postdec1	equ	0xFE5
  5562                           fsr1l	equ	0xFE1
  5563                           postinc2	equ	0xFDE
  5564                           postdec2	equ	0xFDD
  5565                           fsr2h	equ	0xFDA
  5566                           fsr2l	equ	0xFD9
  5567                           status	equ	0xFD8
  5568                           
  5569 ;; *************** function ___awtoft *****************
  5570 ;; Defined at:
  5571 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  c               2    8[COMRAM] int 
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;  sign            1   11[COMRAM] unsigned char 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  3    8[COMRAM] float 
  5578 ;; Registers used:
  5579 ;;		wreg, status,2, status,0, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5585 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;Total ram usage:        4 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    1
  5592 ;; This function calls:
  5593 ;;		___ftpack
  5594 ;; This function is called by:
  5595 ;;		_main
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           	psect	text23
  5600  002D84                     __ptext23:
  5601                           	opt stack 0
  5602  002D84                     ___awtoft:
  5603                           	opt stack 29
  5604                           
  5605                           ;incstack = 0
  5606  002D84  0E00               	movlw	0
  5607  002D86  6E0C               	movwf	___awtoft@sign,c
  5608  002D88  AE0A               	btfss	___awtoft@c+1,7,c
  5609  002D8A  D007               	goto	l2950
  5610  002D8C  6C09               	negf	___awtoft@c,c
  5611  002D8E  1E0A               	comf	___awtoft@c+1,f,c
  5612  002D90  B0D8               	btfsc	status,0,c
  5613  002D92  2A0A               	incf	___awtoft@c+1,f,c
  5614  002D94  0E01               	movlw	1
  5615  002D96  6E0C               	movwf	___awtoft@sign,c
  5616  002D98  D000               	goto	l2950
  5617  002D9A                     l2950:
  5618  002D9A  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5619  002D9E  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5620  002DA2  6A03               	clrf	___ftpack@arg+2,c
  5621  002DA4  0E8E               	movlw	142
  5622  002DA6  6E04               	movwf	___ftpack@exp,c
  5623  002DA8  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5624  002DAC  EC10  F014         	call	___ftpack	;wreg free
  5625  002DB0  C001  F009         	movff	?___ftpack,?___awtoft
  5626  002DB4  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5627  002DB8  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5628  002DBC  D000               	goto	l559
  5629  002DBE                     l559:
  5630  002DBE  0012               	return		;funcret
  5631  002DC0                     __end_of___awtoft:
  5632                           	opt stack 0
  5633                           tblptru	equ	0xFF8
  5634                           tblptrh	equ	0xFF7
  5635                           tblptrl	equ	0xFF6
  5636                           tablat	equ	0xFF5
  5637                           prodh	equ	0xFF4
  5638                           prodl	equ	0xFF3
  5639                           postinc0	equ	0xFEE
  5640                           wreg	equ	0xFE8
  5641                           postdec1	equ	0xFE5
  5642                           fsr1l	equ	0xFE1
  5643                           postinc2	equ	0xFDE
  5644                           postdec2	equ	0xFDD
  5645                           fsr2h	equ	0xFDA
  5646                           fsr2l	equ	0xFD9
  5647                           status	equ	0xFD8
  5648                           
  5649 ;; *************** function ___ftpack *****************
  5650 ;; Defined at:
  5651 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;  arg             3    0[COMRAM] unsigned um
  5654 ;;  exp             1    3[COMRAM] unsigned char 
  5655 ;;  sign            1    4[COMRAM] unsigned char 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  3    0[COMRAM] float 
  5660 ;; Registers used:
  5661 ;;		wreg, status,2, status,0
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5667 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;Total ram usage:        8 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; This function calls:
  5674 ;;		Nothing
  5675 ;; This function is called by:
  5676 ;;		___awtoft
  5677 ;;		___ftadd
  5678 ;;		___ftdiv
  5679 ;;		___ftmul
  5680 ;;		___lltoft
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text24
  5685  002820                     __ptext24:
  5686                           	opt stack 0
  5687  002820                     ___ftpack:
  5688                           	opt stack 27
  5689                           
  5690                           ;incstack = 0
  5691  002820  5004               	movf	___ftpack@exp,w,c
  5692  002822  B4D8               	btfsc	status,2,c
  5693  002824  D005               	goto	l2020
  5694  002826  5001               	movf	___ftpack@arg,w,c
  5695  002828  1002               	iorwf	___ftpack@arg+1,w,c
  5696  00282A  1003               	iorwf	___ftpack@arg+2,w,c
  5697  00282C  A4D8               	btfss	status,2,c
  5698  00282E  D00E               	goto	l2026
  5699  002830                     l2020:
  5700  002830  0E00               	movlw	0
  5701  002832  6E01               	movwf	?___ftpack,c
  5702  002834  0E00               	movlw	0
  5703  002836  6E02               	movwf	?___ftpack+1,c
  5704  002838  0E00               	movlw	0
  5705  00283A  6E03               	movwf	?___ftpack+2,c
  5706  00283C  D053               	goto	l666
  5707  00283E  D006               	goto	l2026
  5708  002840                     l2024:
  5709  002840  2A04               	incf	___ftpack@exp,f,c
  5710  002842  90D8               	bcf	status,0,c
  5711  002844  3203               	rrcf	___ftpack@arg+2,f,c
  5712  002846  3202               	rrcf	___ftpack@arg+1,f,c
  5713  002848  3201               	rrcf	___ftpack@arg,f,c
  5714  00284A  D000               	goto	l2026
  5715  00284C                     l2026:
  5716  00284C  0E00               	movlw	0
  5717  00284E  1401               	andwf	___ftpack@arg,w,c
  5718  002850  6E06               	movwf	??___ftpack& (0+255),c
  5719  002852  0E00               	movlw	0
  5720  002854  1402               	andwf	___ftpack@arg+1,w,c
  5721  002856  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5722  002858  0EFE               	movlw	254
  5723  00285A  1403               	andwf	___ftpack@arg+2,w,c
  5724  00285C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5725  00285E  5006               	movf	??___ftpack,w,c
  5726  002860  1007               	iorwf	??___ftpack+1,w,c
  5727  002862  1008               	iorwf	??___ftpack+2,w,c
  5728  002864  B4D8               	btfsc	status,2,c
  5729  002866  D00E               	goto	l2032
  5730  002868  D7EB               	goto	l2024
  5731  00286A  D00C               	goto	l2032
  5732  00286C                     l2028:
  5733  00286C  2A04               	incf	___ftpack@exp,f,c
  5734  00286E  0E01               	movlw	1
  5735  002870  2601               	addwf	___ftpack@arg,f,c
  5736  002872  0E00               	movlw	0
  5737  002874  2202               	addwfc	___ftpack@arg+1,f,c
  5738  002876  0E00               	movlw	0
  5739  002878  2203               	addwfc	___ftpack@arg+2,f,c
  5740  00287A  90D8               	bcf	status,0,c
  5741  00287C  3203               	rrcf	___ftpack@arg+2,f,c
  5742  00287E  3202               	rrcf	___ftpack@arg+1,f,c
  5743  002880  3201               	rrcf	___ftpack@arg,f,c
  5744  002882  D000               	goto	l2032
  5745  002884                     l2032:
  5746  002884  0E00               	movlw	0
  5747  002886  1401               	andwf	___ftpack@arg,w,c
  5748  002888  6E06               	movwf	??___ftpack& (0+255),c
  5749  00288A  0E00               	movlw	0
  5750  00288C  1402               	andwf	___ftpack@arg+1,w,c
  5751  00288E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5752  002890  0EFF               	movlw	255
  5753  002892  1403               	andwf	___ftpack@arg+2,w,c
  5754  002894  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5755  002896  5006               	movf	??___ftpack,w,c
  5756  002898  1007               	iorwf	??___ftpack+1,w,c
  5757  00289A  1008               	iorwf	??___ftpack+2,w,c
  5758  00289C  B4D8               	btfsc	status,2,c
  5759  00289E  D008               	goto	l2036
  5760  0028A0  D7E5               	goto	l2028
  5761  0028A2  D006               	goto	l2036
  5762  0028A4                     l2034:
  5763  0028A4  0604               	decf	___ftpack@exp,f,c
  5764  0028A6  90D8               	bcf	status,0,c
  5765  0028A8  3601               	rlcf	___ftpack@arg,f,c
  5766  0028AA  3602               	rlcf	___ftpack@arg+1,f,c
  5767  0028AC  3603               	rlcf	___ftpack@arg+2,f,c
  5768  0028AE  D000               	goto	l2036
  5769  0028B0                     l2036:
  5770  0028B0  BE02               	btfsc	___ftpack@arg+1,7,c
  5771  0028B2  D004               	goto	l677
  5772  0028B4  0E02               	movlw	2
  5773  0028B6  6004               	cpfslt	___ftpack@exp,c
  5774  0028B8  D7F5               	goto	l2034
  5775  0028BA  D000               	goto	l677
  5776  0028BC                     l677:
  5777  0028BC  B004               	btfsc	___ftpack@exp,0,c
  5778  0028BE  D002               	goto	l2042
  5779  0028C0  9E02               	bcf	___ftpack@arg+1,7,c
  5780  0028C2  D000               	goto	l2042
  5781  0028C4                     l2042:
  5782  0028C4  90D8               	bcf	status,0,c
  5783  0028C6  3204               	rrcf	___ftpack@exp,f,c
  5784  0028C8  5004               	movf	___ftpack@exp,w,c
  5785  0028CA  1203               	iorwf	___ftpack@arg+2,f,c
  5786  0028CC  5005               	movf	___ftpack@sign,w,c
  5787  0028CE  B4D8               	btfsc	status,2,c
  5788  0028D0  D002               	goto	l2048
  5789  0028D2  8E03               	bsf	___ftpack@arg+2,7,c
  5790  0028D4  D000               	goto	l2048
  5791  0028D6                     l2048:
  5792  0028D6  C001  F001         	movff	___ftpack@arg,?___ftpack
  5793  0028DA  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5794  0028DE  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5795  0028E2  D000               	goto	l666
  5796  0028E4                     l666:
  5797  0028E4  0012               	return		;funcret
  5798  0028E6                     __end_of___ftpack:
  5799                           	opt stack 0
  5800                           tblptru	equ	0xFF8
  5801                           tblptrh	equ	0xFF7
  5802                           tblptrl	equ	0xFF6
  5803                           tablat	equ	0xFF5
  5804                           prodh	equ	0xFF4
  5805                           prodl	equ	0xFF3
  5806                           postinc0	equ	0xFEE
  5807                           wreg	equ	0xFE8
  5808                           postdec1	equ	0xFE5
  5809                           fsr1l	equ	0xFE1
  5810                           postinc2	equ	0xFDE
  5811                           postdec2	equ	0xFDD
  5812                           fsr2h	equ	0xFDA
  5813                           fsr2l	equ	0xFD9
  5814                           status	equ	0xFD8
  5815                           
  5816 ;; *************** function _WAIT_1_SEC *****************
  5817 ;; Defined at:
  5818 ;;		line 148 in file "Lab5P1.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;		None
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  j               2    0[COMRAM] int 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;		None               void
  5825 ;; Registers used:
  5826 ;;		wreg, status,2, status,0
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5836 ;;Total ram usage:        2 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_main
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text25
  5846  002E96                     __ptext25:
  5847                           	opt stack 0
  5848  002E96                     _WAIT_1_SEC:
  5849                           	opt stack 30
  5850                           
  5851                           ;Lab5P1.c: 149: for(int j = 0; j<17000; j++);
  5852                           
  5853                           ;incstack = 0
  5854  002E96  0E00               	movlw	0
  5855  002E98  6E02               	movwf	WAIT_1_SEC@j+1,c
  5856  002E9A  0E00               	movlw	0
  5857  002E9C  6E01               	movwf	WAIT_1_SEC@j,c
  5858  002E9E                     l1892:
  5859  002E9E  BE02               	btfsc	WAIT_1_SEC@j+1,7,c
  5860  002EA0  D008               	goto	l1896
  5861  002EA2  0E68               	movlw	104
  5862  002EA4  5C01               	subwf	WAIT_1_SEC@j,w,c
  5863  002EA6  0E42               	movlw	66
  5864  002EA8  5802               	subwfb	WAIT_1_SEC@j+1,w,c
  5865  002EAA  B0D8               	btfsc	status,0,c
  5866  002EAC  D005               	goto	l129
  5867  002EAE  D001               	goto	l1896
  5868  002EB0  D003               	goto	l129
  5869  002EB2                     l1896:
  5870  002EB2  4A01               	infsnz	WAIT_1_SEC@j,f,c
  5871  002EB4  2A02               	incf	WAIT_1_SEC@j+1,f,c
  5872  002EB6  D7F3               	goto	l1892
  5873  002EB8                     l129:
  5874  002EB8  0012               	return		;funcret
  5875  002EBA                     __end_of_WAIT_1_SEC:
  5876                           	opt stack 0
  5877                           tblptru	equ	0xFF8
  5878                           tblptrh	equ	0xFF7
  5879                           tblptrl	equ	0xFF6
  5880                           tablat	equ	0xFF5
  5881                           prodh	equ	0xFF4
  5882                           prodl	equ	0xFF3
  5883                           postinc0	equ	0xFEE
  5884                           wreg	equ	0xFE8
  5885                           postdec1	equ	0xFE5
  5886                           fsr1l	equ	0xFE1
  5887                           postinc2	equ	0xFDE
  5888                           postdec2	equ	0xFDD
  5889                           fsr2h	equ	0xFDA
  5890                           fsr2l	equ	0xFD9
  5891                           status	equ	0xFD8
  5892                           
  5893 ;; *************** function _Select_ADC_Channel *****************
  5894 ;; Defined at:
  5895 ;;		line 110 in file "Lab5P1.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  channel         1    wreg     unsigned char 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  channel         1    0[COMRAM] unsigned char 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;		None               void
  5902 ;; Registers used:
  5903 ;;		wreg, status,2, status,0, prodl, prodh
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;Total ram usage:        1 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; This function calls:
  5916 ;;		Nothing
  5917 ;; This function is called by:
  5918 ;;		_main
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text26
  5923  002F0A                     __ptext26:
  5924                           	opt stack 0
  5925  002F0A                     _Select_ADC_Channel:
  5926                           	opt stack 30
  5927                           
  5928                           ;incstack = 0
  5929                           ;Select_ADC_Channel@channel stored from wreg
  5930  002F0A  6E01               	movwf	Select_ADC_Channel@channel,c
  5931                           
  5932                           ;Lab5P1.c: 112: ADCON0 = channel * 4 + 1;
  5933  002F0C  5001               	movf	Select_ADC_Channel@channel,w,c
  5934  002F0E  0D04               	mullw	4
  5935  002F10  28F3               	incf	prodl,w,c
  5936  002F12  6EC2               	movwf	4034,c	;volatile
  5937  002F14  0012               	return		;funcret
  5938  002F16                     __end_of_Select_ADC_Channel:
  5939                           	opt stack 0
  5940                           tblptru	equ	0xFF8
  5941                           tblptrh	equ	0xFF7
  5942                           tblptrl	equ	0xFF6
  5943                           tablat	equ	0xFF5
  5944                           prodh	equ	0xFF4
  5945                           prodl	equ	0xFF3
  5946                           postinc0	equ	0xFEE
  5947                           wreg	equ	0xFE8
  5948                           postdec1	equ	0xFE5
  5949                           fsr1l	equ	0xFE1
  5950                           postinc2	equ	0xFDE
  5951                           postdec2	equ	0xFDD
  5952                           fsr2h	equ	0xFDA
  5953                           fsr2l	equ	0xFD9
  5954                           status	equ	0xFD8
  5955                           
  5956 ;; *************** function _Init_Tris *****************
  5957 ;; Defined at:
  5958 ;;		line 114 in file "Lab5P1.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;		None
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;		None
  5963 ;; Return value:  Size  Location     Type
  5964 ;;		None               void
  5965 ;; Registers used:
  5966 ;;		wreg, status,2
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;Total ram usage:        0 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_main
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text27
  5986  002ED2                     __ptext27:
  5987                           	opt stack 0
  5988  002ED2                     _Init_Tris:
  5989                           	opt stack 30
  5990                           
  5991                           ;Lab5P1.c: 115: TRISA = 0x0F;
  5992                           
  5993                           ;incstack = 0
  5994  002ED2  0E0F               	movlw	15
  5995  002ED4  6E92               	movwf	3986,c	;volatile
  5996                           
  5997                           ;Lab5P1.c: 116: TRISB = 0x00;
  5998  002ED6  0E00               	movlw	0
  5999  002ED8  6E93               	movwf	3987,c	;volatile
  6000                           
  6001                           ;Lab5P1.c: 117: TRISC = 0x00;
  6002  002EDA  0E00               	movlw	0
  6003  002EDC  6E94               	movwf	3988,c	;volatile
  6004                           
  6005                           ;Lab5P1.c: 118: TRISD = 0x00;
  6006  002EDE  0E00               	movlw	0
  6007  002EE0  6E95               	movwf	3989,c	;volatile
  6008                           
  6009                           ;Lab5P1.c: 119: TRISE = 0x00;
  6010  002EE2  0E00               	movlw	0
  6011  002EE4  6E96               	movwf	3990,c	;volatile
  6012  002EE6  0012               	return		;funcret
  6013  002EE8                     __end_of_Init_Tris:
  6014                           	opt stack 0
  6015                           tblptru	equ	0xFF8
  6016                           tblptrh	equ	0xFF7
  6017                           tblptrl	equ	0xFF6
  6018                           tablat	equ	0xFF5
  6019                           prodh	equ	0xFF4
  6020                           prodl	equ	0xFF3
  6021                           postinc0	equ	0xFEE
  6022                           wreg	equ	0xFE8
  6023                           postdec1	equ	0xFE5
  6024                           fsr1l	equ	0xFE1
  6025                           postinc2	equ	0xFDE
  6026                           postdec2	equ	0xFDD
  6027                           fsr2h	equ	0xFDA
  6028                           fsr2l	equ	0xFD9
  6029                           status	equ	0xFD8
  6030                           
  6031 ;; *************** function _Init_ADC *****************
  6032 ;; Defined at:
  6033 ;;		line 121 in file "Lab5P1.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;		None
  6038 ;; Return value:  Size  Location     Type
  6039 ;;		None               void
  6040 ;; Registers used:
  6041 ;;		wreg, status,2
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6051 ;;Total ram usage:        0 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; This function calls:
  6054 ;;		Nothing
  6055 ;; This function is called by:
  6056 ;;		_main
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           	psect	text28
  6061  002F20                     __ptext28:
  6062                           	opt stack 0
  6063  002F20                     _Init_ADC:
  6064                           	opt stack 30
  6065                           
  6066                           ;Lab5P1.c: 124: ADCON1=0x1B;
  6067                           
  6068                           ;incstack = 0
  6069  002F20  0E1B               	movlw	27
  6070  002F22  6EC1               	movwf	4033,c	;volatile
  6071                           
  6072                           ;Lab5P1.c: 127: ADCON2=0xA9;
  6073  002F24  0EA9               	movlw	169
  6074  002F26  6EC0               	movwf	4032,c	;volatile
  6075  002F28  0012               	return		;funcret
  6076  002F2A                     __end_of_Init_ADC:
  6077                           	opt stack 0
  6078                           tblptru	equ	0xFF8
  6079                           tblptrh	equ	0xFF7
  6080                           tblptrl	equ	0xFF6
  6081                           tablat	equ	0xFF5
  6082                           prodh	equ	0xFF4
  6083                           prodl	equ	0xFF3
  6084                           postinc0	equ	0xFEE
  6085                           wreg	equ	0xFE8
  6086                           postdec1	equ	0xFE5
  6087                           fsr1l	equ	0xFE1
  6088                           postinc2	equ	0xFDE
  6089                           postdec2	equ	0xFDD
  6090                           fsr2h	equ	0xFDA
  6091                           fsr2l	equ	0xFD9
  6092                           status	equ	0xFD8
  6093                           
  6094 ;; *************** function _Display_Upper_Digit *****************
  6095 ;; Defined at:
  6096 ;;		line 151 in file "Lab5P1.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  digit           1    wreg     unsigned char 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  digit           1    0[COMRAM] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;		None               void
  6103 ;; Registers used:
  6104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;Total ram usage:        1 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; This function calls:
  6117 ;;		Nothing
  6118 ;; This function is called by:
  6119 ;;		_main
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           	psect	text29
  6124  002DC0                     __ptext29:
  6125                           	opt stack 0
  6126  002DC0                     _Display_Upper_Digit:
  6127                           	opt stack 30
  6128                           
  6129                           ;incstack = 0
  6130                           ;Display_Upper_Digit@digit stored from wreg
  6131  002DC0  6E01               	movwf	Display_Upper_Digit@digit,c
  6132                           
  6133                           ;Lab5P1.c: 152: PORTC = array[digit] & 0x3F;
  6134  002DC2  5001               	movf	Display_Upper_Digit@digit,w,c
  6135  002DC4  0D01               	mullw	1
  6136  002DC6  0E80               	movlw	low _array
  6137  002DC8  24F3               	addwf	prodl,w,c
  6138  002DCA  6ED9               	movwf	fsr2l,c
  6139  002DCC  0E00               	movlw	high _array
  6140  002DCE  20F4               	addwfc	prodh,w,c
  6141  002DD0  6EDA               	movwf	fsr2h,c
  6142  002DD2  50DF               	movf	indf2,w,c
  6143  002DD4  0B3F               	andlw	63
  6144  002DD6  6E82               	movwf	3970,c	;volatile
  6145                           
  6146                           ;Lab5P1.c: 153: if((array[digit] & 0x40) == 0x00)
  6147  002DD8  5001               	movf	Display_Upper_Digit@digit,w,c
  6148  002DDA  0D01               	mullw	1
  6149  002DDC  0E80               	movlw	low _array
  6150  002DDE  24F3               	addwf	prodl,w,c
  6151  002DE0  6ED9               	movwf	fsr2l,c
  6152  002DE2  0E00               	movlw	high _array
  6153  002DE4  20F4               	addwfc	prodh,w,c
  6154  002DE6  6EDA               	movwf	fsr2h,c
  6155  002DE8  0100               	movlb	0	; () banked
  6156  002DEA  BCDF               	btfsc	indf2,6,c
  6157  002DEC  D002               	goto	l2626
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;Lab5P1.c: 154: PORTE = 0;
  6161  002DEE  0E00               	movlw	0
  6162  002DF0  D001               	goto	L8
  6163  002DF2                     l2626:
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;Lab5P1.c: 155: else
  6167                           ;Lab5P1.c: 156: PORTE = 1;
  6168  002DF2  0E01               	movlw	1
  6169  002DF4                     L8:
  6170  002DF4  6E84               	movwf	3972,c	;volatile
  6171  002DF6  D000               	goto	l134
  6172  002DF8                     l134:
  6173                           
  6174                           ; BSR set to: 0
  6175  002DF8  0012               	return		;funcret
  6176  002DFA                     __end_of_Display_Upper_Digit:
  6177                           	opt stack 0
  6178                           tblptru	equ	0xFF8
  6179                           tblptrh	equ	0xFF7
  6180                           tblptrl	equ	0xFF6
  6181                           tablat	equ	0xFF5
  6182                           prodh	equ	0xFF4
  6183                           prodl	equ	0xFF3
  6184                           postinc0	equ	0xFEE
  6185                           wreg	equ	0xFE8
  6186                           postdec1	equ	0xFE5
  6187                           fsr1l	equ	0xFE1
  6188                           indf2	equ	0xFDF
  6189                           postinc2	equ	0xFDE
  6190                           postdec2	equ	0xFDD
  6191                           fsr2h	equ	0xFDA
  6192                           fsr2l	equ	0xFD9
  6193                           status	equ	0xFD8
  6194                           
  6195 ;; *************** function _Display_Lower_Digit *****************
  6196 ;; Defined at:
  6197 ;;		line 163 in file "Lab5P1.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;  digit           1    wreg     unsigned char 
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;  digit           1    0[COMRAM] unsigned char 
  6202 ;; Return value:  Size  Location     Type
  6203 ;;		None               void
  6204 ;; Registers used:
  6205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6215 ;;Total ram usage:        1 bytes
  6216 ;; Hardware stack levels used:    1
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_main
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text30
  6225  002EBA                     __ptext30:
  6226                           	opt stack 0
  6227  002EBA                     _Display_Lower_Digit:
  6228                           	opt stack 30
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;incstack = 0
  6232                           ;Display_Lower_Digit@digit stored from wreg
  6233  002EBA  6E01               	movwf	Display_Lower_Digit@digit,c
  6234                           
  6235                           ;Lab5P1.c: 164: PORTD = array[digit];
  6236  002EBC  5001               	movf	Display_Lower_Digit@digit,w,c
  6237  002EBE  0D01               	mullw	1
  6238  002EC0  0E80               	movlw	low _array
  6239  002EC2  24F3               	addwf	prodl,w,c
  6240  002EC4  6ED9               	movwf	fsr2l,c
  6241  002EC6  0E00               	movlw	high _array
  6242  002EC8  20F4               	addwfc	prodh,w,c
  6243  002ECA  6EDA               	movwf	fsr2h,c
  6244  002ECC  50DF               	movf	indf2,w,c
  6245  002ECE  6E83               	movwf	3971,c	;volatile
  6246  002ED0  0012               	return		;funcret
  6247  002ED2                     __end_of_Display_Lower_Digit:
  6248                           	opt stack 0
  6249                           tblptru	equ	0xFF8
  6250                           tblptrh	equ	0xFF7
  6251                           tblptrl	equ	0xFF6
  6252                           tablat	equ	0xFF5
  6253                           prodh	equ	0xFF4
  6254                           prodl	equ	0xFF3
  6255                           postinc0	equ	0xFEE
  6256                           wreg	equ	0xFE8
  6257                           postdec1	equ	0xFE5
  6258                           fsr1l	equ	0xFE1
  6259                           indf2	equ	0xFDF
  6260                           postinc2	equ	0xFDE
  6261                           postdec2	equ	0xFDD
  6262                           fsr2h	equ	0xFDA
  6263                           fsr2l	equ	0xFD9
  6264                           status	equ	0xFD8
  6265                           
  6266 ;; *************** function _Display_D3 *****************
  6267 ;; Defined at:
  6268 ;;		line 187 in file "Lab5P1.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;  voltage         2    0[COMRAM] int 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;		None
  6273 ;; Return value:  Size  Location     Type
  6274 ;;		None               void
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6285 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6286 ;;Total ram usage:        2 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; This function calls:
  6289 ;;		Nothing
  6290 ;; This function is called by:
  6291 ;;		_main
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text31
  6296  002D44                     __ptext31:
  6297                           	opt stack 0
  6298  002D44                     _Display_D3:
  6299                           	opt stack 30
  6300                           
  6301                           ;Lab5P1.c: 188: if(voltage < 2500)
  6302                           
  6303                           ;incstack = 0
  6304  002D44  BE02               	btfsc	Display_D3@voltage+1,7,c
  6305  002D46  D006               	goto	l2702
  6306  002D48  0EC4               	movlw	196
  6307  002D4A  5C01               	subwf	Display_D3@voltage,w,c
  6308  002D4C  0E09               	movlw	9
  6309  002D4E  5802               	subwfb	Display_D3@voltage+1,w,c
  6310  002D50  B0D8               	btfsc	status,0,c
  6311  002D52  D002               	goto	l2704
  6312  002D54                     l2702:
  6313                           
  6314                           ;Lab5P1.c: 189: PORTA = 0x01<<4;
  6315  002D54  0E10               	movlw	16
  6316  002D56  D013               	goto	L10
  6317  002D58                     l2704:
  6318                           
  6319                           ;Lab5P1.c: 190: else if (voltage >=2500 && voltage < 3400)
  6320  002D58  BE02               	btfsc	Display_D3@voltage+1,7,c
  6321  002D5A  D010               	goto	l2710
  6322  002D5C  0EC4               	movlw	196
  6323  002D5E  5C01               	subwf	Display_D3@voltage,w,c
  6324  002D60  0E09               	movlw	9
  6325  002D62  5802               	subwfb	Display_D3@voltage+1,w,c
  6326  002D64  A0D8               	btfss	status,0,c
  6327  002D66  D00A               	goto	l2710
  6328  002D68  BE02               	btfsc	Display_D3@voltage+1,7,c
  6329  002D6A  D006               	goto	l2708
  6330  002D6C  0E48               	movlw	72
  6331  002D6E  5C01               	subwf	Display_D3@voltage,w,c
  6332  002D70  0E0D               	movlw	13
  6333  002D72  5802               	subwfb	Display_D3@voltage+1,w,c
  6334  002D74  B0D8               	btfsc	status,0,c
  6335  002D76  D002               	goto	l2710
  6336  002D78                     l2708:
  6337                           
  6338                           ;Lab5P1.c: 191: PORTA = 0x02<<4;
  6339  002D78  0E20               	movlw	32
  6340  002D7A  D001               	goto	L10
  6341  002D7C                     l2710:
  6342                           
  6343                           ;Lab5P1.c: 192: else
  6344                           ;Lab5P1.c: 193: PORTA = 0x03<<4;
  6345  002D7C  0E30               	movlw	48
  6346  002D7E                     L10:
  6347  002D7E  6E80               	movwf	3968,c	;volatile
  6348  002D80  D000               	goto	l174
  6349  002D82                     l174:
  6350  002D82  0012               	return		;funcret
  6351  002D84                     __end_of_Display_D3:
  6352                           	opt stack 0
  6353                           tblptru	equ	0xFF8
  6354                           tblptrh	equ	0xFF7
  6355                           tblptrl	equ	0xFF6
  6356                           tablat	equ	0xFF5
  6357                           prodh	equ	0xFF4
  6358                           prodl	equ	0xFF3
  6359                           postinc0	equ	0xFEE
  6360                           wreg	equ	0xFE8
  6361                           postdec1	equ	0xFE5
  6362                           fsr1l	equ	0xFE1
  6363                           indf2	equ	0xFDF
  6364                           postinc2	equ	0xFDE
  6365                           postdec2	equ	0xFDD
  6366                           fsr2h	equ	0xFDA
  6367                           fsr2l	equ	0xFD9
  6368                           status	equ	0xFD8
  6369                           
  6370 ;; *************** function _Display_D2 *****************
  6371 ;; Defined at:
  6372 ;;		line 176 in file "Lab5P1.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  temperature     2    0[COMRAM] int 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;		None               void
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0, cstack
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;Total ram usage:        2 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    1
  6393 ;; This function calls:
  6394 ;;		_D2_Blue
  6395 ;;		_D2_Cyan
  6396 ;;		_D2_Green
  6397 ;;		_D2_None
  6398 ;;		_D2_Purple
  6399 ;;		_D2_Red
  6400 ;;		_D2_White
  6401 ;;		_D2_Yellow
  6402 ;; This function is called by:
  6403 ;;		_main
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           	psect	text32
  6408  002234                     __ptext32:
  6409                           	opt stack 0
  6410  002234                     _Display_D2:
  6411                           	opt stack 29
  6412                           
  6413                           ;Lab5P1.c: 177: if(temperature <= 10) D2_None();
  6414                           
  6415                           ;incstack = 0
  6416  002234  BE02               	btfsc	Display_D2@temperature+1,7,c
  6417  002236  D006               	goto	l2658
  6418  002238  5002               	movf	Display_D2@temperature+1,w,c
  6419  00223A  E107               	bnz	l2660
  6420  00223C  0E0B               	movlw	11
  6421  00223E  5C01               	subwf	Display_D2@temperature,w,c
  6422  002240  B0D8               	btfsc	status,0,c
  6423  002242  D003               	goto	l2660
  6424  002244                     l2658:
  6425  002244  ECA5  F017         	call	_D2_None	;wreg free
  6426  002248  D07D               	goto	l167
  6427  00224A                     l2660:
  6428                           
  6429                           ;Lab5P1.c: 178: else if(temperature >= 10 && temperature<= 19) D2_Red();
  6430  00224A  BE02               	btfsc	Display_D2@temperature+1,7,c
  6431  00224C  D011               	goto	l2666
  6432  00224E  5002               	movf	Display_D2@temperature+1,w,c
  6433  002250  E104               	bnz	u2800
  6434  002252  0E0A               	movlw	10
  6435  002254  5C01               	subwf	Display_D2@temperature,w,c
  6436  002256  A0D8               	btfss	status,0,c
  6437  002258  D00B               	goto	l2666
  6438  00225A                     u2800:
  6439  00225A  BE02               	btfsc	Display_D2@temperature+1,7,c
  6440  00225C  D006               	goto	l2664
  6441  00225E  5002               	movf	Display_D2@temperature+1,w,c
  6442  002260  E107               	bnz	l2666
  6443  002262  0E14               	movlw	20
  6444  002264  5C01               	subwf	Display_D2@temperature,w,c
  6445  002266  B0D8               	btfsc	status,0,c
  6446  002268  D003               	goto	l2666
  6447  00226A                     l2664:
  6448  00226A  EC9D  F017         	call	_D2_Red	;wreg free
  6449  00226E  D06A               	goto	l167
  6450  002270                     l2666:
  6451                           
  6452                           ;Lab5P1.c: 179: else if(temperature >= 20 && temperature<= 29) D2_Green();
  6453  002270  BE02               	btfsc	Display_D2@temperature+1,7,c
  6454  002272  D011               	goto	l2672
  6455  002274  5002               	movf	Display_D2@temperature+1,w,c
  6456  002276  E104               	bnz	u2820
  6457  002278  0E14               	movlw	20
  6458  00227A  5C01               	subwf	Display_D2@temperature,w,c
  6459  00227C  A0D8               	btfss	status,0,c
  6460  00227E  D00B               	goto	l2672
  6461  002280                     u2820:
  6462  002280  BE02               	btfsc	Display_D2@temperature+1,7,c
  6463  002282  D006               	goto	l2670
  6464  002284  5002               	movf	Display_D2@temperature+1,w,c
  6465  002286  E107               	bnz	l2672
  6466  002288  0E1E               	movlw	30
  6467  00228A  5C01               	subwf	Display_D2@temperature,w,c
  6468  00228C  B0D8               	btfsc	status,0,c
  6469  00228E  D003               	goto	l2672
  6470  002290                     l2670:
  6471  002290  ECA9  F017         	call	_D2_Green	;wreg free
  6472  002294  D057               	goto	l167
  6473  002296                     l2672:
  6474                           
  6475                           ;Lab5P1.c: 180: else if(temperature >= 30 && temperature<= 39) D2_Yellow();
  6476  002296  BE02               	btfsc	Display_D2@temperature+1,7,c
  6477  002298  D011               	goto	l2678
  6478  00229A  5002               	movf	Display_D2@temperature+1,w,c
  6479  00229C  E104               	bnz	u2840
  6480  00229E  0E1E               	movlw	30
  6481  0022A0  5C01               	subwf	Display_D2@temperature,w,c
  6482  0022A2  A0D8               	btfss	status,0,c
  6483  0022A4  D00B               	goto	l2678
  6484  0022A6                     u2840:
  6485  0022A6  BE02               	btfsc	Display_D2@temperature+1,7,c
  6486  0022A8  D006               	goto	l2676
  6487  0022AA  5002               	movf	Display_D2@temperature+1,w,c
  6488  0022AC  E107               	bnz	l2678
  6489  0022AE  0E28               	movlw	40
  6490  0022B0  5C01               	subwf	Display_D2@temperature,w,c
  6491  0022B2  B0D8               	btfsc	status,0,c
  6492  0022B4  D003               	goto	l2678
  6493  0022B6                     l2676:
  6494  0022B6  EC95  F017         	call	_D2_Yellow	;wreg free
  6495  0022BA  D044               	goto	l167
  6496  0022BC                     l2678:
  6497                           
  6498                           ;Lab5P1.c: 181: else if(temperature >= 40 &&temperature <= 49) D2_Blue();
  6499  0022BC  BE02               	btfsc	Display_D2@temperature+1,7,c
  6500  0022BE  D011               	goto	l2684
  6501  0022C0  5002               	movf	Display_D2@temperature+1,w,c
  6502  0022C2  E104               	bnz	u2860
  6503  0022C4  0E28               	movlw	40
  6504  0022C6  5C01               	subwf	Display_D2@temperature,w,c
  6505  0022C8  A0D8               	btfss	status,0,c
  6506  0022CA  D00B               	goto	l2684
  6507  0022CC                     u2860:
  6508  0022CC  BE02               	btfsc	Display_D2@temperature+1,7,c
  6509  0022CE  D006               	goto	l2682
  6510  0022D0  5002               	movf	Display_D2@temperature+1,w,c
  6511  0022D2  E107               	bnz	l2684
  6512  0022D4  0E32               	movlw	50
  6513  0022D6  5C01               	subwf	Display_D2@temperature,w,c
  6514  0022D8  B0D8               	btfsc	status,0,c
  6515  0022DA  D003               	goto	l2684
  6516  0022DC                     l2682:
  6517  0022DC  ECB1  F017         	call	_D2_Blue	;wreg free
  6518  0022E0  D031               	goto	l167
  6519  0022E2                     l2684:
  6520                           
  6521                           ;Lab5P1.c: 182: else if(temperature >= 50 &&temperature <= 59) D2_Purple();
  6522  0022E2  BE02               	btfsc	Display_D2@temperature+1,7,c
  6523  0022E4  D011               	goto	l2690
  6524  0022E6  5002               	movf	Display_D2@temperature+1,w,c
  6525  0022E8  E104               	bnz	u2880
  6526  0022EA  0E32               	movlw	50
  6527  0022EC  5C01               	subwf	Display_D2@temperature,w,c
  6528  0022EE  A0D8               	btfss	status,0,c
  6529  0022F0  D00B               	goto	l2690
  6530  0022F2                     u2880:
  6531  0022F2  BE02               	btfsc	Display_D2@temperature+1,7,c
  6532  0022F4  D006               	goto	l2688
  6533  0022F6  5002               	movf	Display_D2@temperature+1,w,c
  6534  0022F8  E107               	bnz	l2690
  6535  0022FA  0E3C               	movlw	60
  6536  0022FC  5C01               	subwf	Display_D2@temperature,w,c
  6537  0022FE  B0D8               	btfsc	status,0,c
  6538  002300  D003               	goto	l2690
  6539  002302                     l2688:
  6540  002302  ECA1  F017         	call	_D2_Purple	;wreg free
  6541  002306  D01E               	goto	l167
  6542  002308                     l2690:
  6543                           
  6544                           ;Lab5P1.c: 183: else if(temperature >= 60 &&temperature <= 69) D2_Cyan();
  6545  002308  BE02               	btfsc	Display_D2@temperature+1,7,c
  6546  00230A  D011               	goto	l2696
  6547  00230C  5002               	movf	Display_D2@temperature+1,w,c
  6548  00230E  E104               	bnz	u2900
  6549  002310  0E3C               	movlw	60
  6550  002312  5C01               	subwf	Display_D2@temperature,w,c
  6551  002314  A0D8               	btfss	status,0,c
  6552  002316  D00B               	goto	l2696
  6553  002318                     u2900:
  6554  002318  BE02               	btfsc	Display_D2@temperature+1,7,c
  6555  00231A  D006               	goto	l2694
  6556  00231C  5002               	movf	Display_D2@temperature+1,w,c
  6557  00231E  E107               	bnz	l2696
  6558  002320  0E46               	movlw	70
  6559  002322  5C01               	subwf	Display_D2@temperature,w,c
  6560  002324  B0D8               	btfsc	status,0,c
  6561  002326  D003               	goto	l2696
  6562  002328                     l2694:
  6563  002328  ECAD  F017         	call	_D2_Cyan	;wreg free
  6564  00232C  D00B               	goto	l167
  6565  00232E                     l2696:
  6566                           
  6567                           ;Lab5P1.c: 184: else if(temperature >= 70 ) D2_White();
  6568  00232E  BE02               	btfsc	Display_D2@temperature+1,7,c
  6569  002330  D009               	goto	l167
  6570  002332  5002               	movf	Display_D2@temperature+1,w,c
  6571  002334  E104               	bnz	u2920
  6572  002336  0E46               	movlw	70
  6573  002338  5C01               	subwf	Display_D2@temperature,w,c
  6574  00233A  A0D8               	btfss	status,0,c
  6575  00233C  D003               	goto	l167
  6576  00233E                     u2920:
  6577  00233E  EC99  F017         	call	_D2_White	;wreg free
  6578  002342  D000               	goto	l167
  6579  002344                     l167:
  6580  002344  0012               	return		;funcret
  6581  002346                     __end_of_Display_D2:
  6582                           	opt stack 0
  6583                           tblptru	equ	0xFF8
  6584                           tblptrh	equ	0xFF7
  6585                           tblptrl	equ	0xFF6
  6586                           tablat	equ	0xFF5
  6587                           prodh	equ	0xFF4
  6588                           prodl	equ	0xFF3
  6589                           postinc0	equ	0xFEE
  6590                           wreg	equ	0xFE8
  6591                           postdec1	equ	0xFE5
  6592                           fsr1l	equ	0xFE1
  6593                           indf2	equ	0xFDF
  6594                           postinc2	equ	0xFDE
  6595                           postdec2	equ	0xFDD
  6596                           fsr2h	equ	0xFDA
  6597                           fsr2l	equ	0xFD9
  6598                           status	equ	0xFD8
  6599                           
  6600 ;; *************** function _D2_Yellow *****************
  6601 ;; Defined at:
  6602 ;;		line 251 in file "Lab5P1.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;		None
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;		None               void
  6609 ;; Registers used:
  6610 ;;		None
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;Total ram usage:        0 bytes
  6621 ;; Hardware stack levels used:    1
  6622 ;; This function calls:
  6623 ;;		Nothing
  6624 ;; This function is called by:
  6625 ;;		_Display_D2
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           	psect	text33
  6630  002F2A                     __ptext33:
  6631                           	opt stack 0
  6632  002F2A                     _D2_Yellow:
  6633                           	opt stack 29
  6634                           
  6635                           ;Lab5P1.c: 253: PORTBbits.RB5 = 1;
  6636                           
  6637                           ;incstack = 0
  6638  002F2A  8A81               	bsf	3969,5,c	;volatile
  6639                           
  6640                           ;Lab5P1.c: 254: PORTBbits.RB6 = 1;
  6641  002F2C  8C81               	bsf	3969,6,c	;volatile
  6642                           
  6643                           ;Lab5P1.c: 255: PORTBbits.RB7 = 0;
  6644  002F2E  9E81               	bcf	3969,7,c	;volatile
  6645  002F30  0012               	return		;funcret
  6646  002F32                     __end_of_D2_Yellow:
  6647                           	opt stack 0
  6648                           tblptru	equ	0xFF8
  6649                           tblptrh	equ	0xFF7
  6650                           tblptrl	equ	0xFF6
  6651                           tablat	equ	0xFF5
  6652                           prodh	equ	0xFF4
  6653                           prodl	equ	0xFF3
  6654                           postinc0	equ	0xFEE
  6655                           wreg	equ	0xFE8
  6656                           postdec1	equ	0xFE5
  6657                           fsr1l	equ	0xFE1
  6658                           indf2	equ	0xFDF
  6659                           postinc2	equ	0xFDE
  6660                           postdec2	equ	0xFDD
  6661                           fsr2h	equ	0xFDA
  6662                           fsr2l	equ	0xFD9
  6663                           status	equ	0xFD8
  6664                           
  6665 ;; *************** function _D2_White *****************
  6666 ;; Defined at:
  6667 ;;		line 279 in file "Lab5P1.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;		None
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;		None
  6672 ;; Return value:  Size  Location     Type
  6673 ;;		None               void
  6674 ;; Registers used:
  6675 ;;		None
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;Total ram usage:        0 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_Display_D2
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           	psect	text34
  6695  002F32                     __ptext34:
  6696                           	opt stack 0
  6697  002F32                     _D2_White:
  6698                           	opt stack 29
  6699                           
  6700                           ;Lab5P1.c: 281: PORTBbits.RB5 = 1;
  6701                           
  6702                           ;incstack = 0
  6703  002F32  8A81               	bsf	3969,5,c	;volatile
  6704                           
  6705                           ;Lab5P1.c: 282: PORTBbits.RB6 = 1;
  6706  002F34  8C81               	bsf	3969,6,c	;volatile
  6707                           
  6708                           ;Lab5P1.c: 283: PORTBbits.RB7 = 1;
  6709  002F36  8E81               	bsf	3969,7,c	;volatile
  6710  002F38  0012               	return		;funcret
  6711  002F3A                     __end_of_D2_White:
  6712                           	opt stack 0
  6713                           tblptru	equ	0xFF8
  6714                           tblptrh	equ	0xFF7
  6715                           tblptrl	equ	0xFF6
  6716                           tablat	equ	0xFF5
  6717                           prodh	equ	0xFF4
  6718                           prodl	equ	0xFF3
  6719                           postinc0	equ	0xFEE
  6720                           wreg	equ	0xFE8
  6721                           postdec1	equ	0xFE5
  6722                           fsr1l	equ	0xFE1
  6723                           indf2	equ	0xFDF
  6724                           postinc2	equ	0xFDE
  6725                           postdec2	equ	0xFDD
  6726                           fsr2h	equ	0xFDA
  6727                           fsr2l	equ	0xFD9
  6728                           status	equ	0xFD8
  6729                           
  6730 ;; *************** function _D2_Red *****************
  6731 ;; Defined at:
  6732 ;;		line 238 in file "Lab5P1.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;		None
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;		None
  6737 ;; Return value:  Size  Location     Type
  6738 ;;		None               void
  6739 ;; Registers used:
  6740 ;;		None
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;Total ram usage:        0 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_Display_D2
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text35
  6760  002F3A                     __ptext35:
  6761                           	opt stack 0
  6762  002F3A                     _D2_Red:
  6763                           	opt stack 29
  6764                           
  6765                           ;Lab5P1.c: 240: PORTBbits.RB5 = 1;
  6766                           
  6767                           ;incstack = 0
  6768  002F3A  8A81               	bsf	3969,5,c	;volatile
  6769                           
  6770                           ;Lab5P1.c: 241: PORTBbits.RB6 = 0;
  6771  002F3C  9C81               	bcf	3969,6,c	;volatile
  6772                           
  6773                           ;Lab5P1.c: 242: PORTBbits.RB7 = 0;
  6774  002F3E  9E81               	bcf	3969,7,c	;volatile
  6775  002F40  0012               	return		;funcret
  6776  002F42                     __end_of_D2_Red:
  6777                           	opt stack 0
  6778                           tblptru	equ	0xFF8
  6779                           tblptrh	equ	0xFF7
  6780                           tblptrl	equ	0xFF6
  6781                           tablat	equ	0xFF5
  6782                           prodh	equ	0xFF4
  6783                           prodl	equ	0xFF3
  6784                           postinc0	equ	0xFEE
  6785                           wreg	equ	0xFE8
  6786                           postdec1	equ	0xFE5
  6787                           fsr1l	equ	0xFE1
  6788                           indf2	equ	0xFDF
  6789                           postinc2	equ	0xFDE
  6790                           postdec2	equ	0xFDD
  6791                           fsr2h	equ	0xFDA
  6792                           fsr2l	equ	0xFD9
  6793                           status	equ	0xFD8
  6794                           
  6795 ;; *************** function _D2_Purple *****************
  6796 ;; Defined at:
  6797 ;;		line 265 in file "Lab5P1.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;		None
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;		None               void
  6804 ;; Registers used:
  6805 ;;		None
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6815 ;;Total ram usage:        0 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; This function calls:
  6818 ;;		Nothing
  6819 ;; This function is called by:
  6820 ;;		_Display_D2
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           	psect	text36
  6825  002F42                     __ptext36:
  6826                           	opt stack 0
  6827  002F42                     _D2_Purple:
  6828                           	opt stack 29
  6829                           
  6830                           ;Lab5P1.c: 267: PORTBbits.RB5 = 1;
  6831                           
  6832                           ;incstack = 0
  6833  002F42  8A81               	bsf	3969,5,c	;volatile
  6834                           
  6835                           ;Lab5P1.c: 268: PORTBbits.RB6 = 0;
  6836  002F44  9C81               	bcf	3969,6,c	;volatile
  6837                           
  6838                           ;Lab5P1.c: 269: PORTBbits.RB7 = 1;
  6839  002F46  8E81               	bsf	3969,7,c	;volatile
  6840  002F48  0012               	return		;funcret
  6841  002F4A                     __end_of_D2_Purple:
  6842                           	opt stack 0
  6843                           tblptru	equ	0xFF8
  6844                           tblptrh	equ	0xFF7
  6845                           tblptrl	equ	0xFF6
  6846                           tablat	equ	0xFF5
  6847                           prodh	equ	0xFF4
  6848                           prodl	equ	0xFF3
  6849                           postinc0	equ	0xFEE
  6850                           wreg	equ	0xFE8
  6851                           postdec1	equ	0xFE5
  6852                           fsr1l	equ	0xFE1
  6853                           indf2	equ	0xFDF
  6854                           postinc2	equ	0xFDE
  6855                           postdec2	equ	0xFDD
  6856                           fsr2h	equ	0xFDA
  6857                           fsr2l	equ	0xFD9
  6858                           status	equ	0xFD8
  6859                           
  6860 ;; *************** function _D2_None *****************
  6861 ;; Defined at:
  6862 ;;		line 231 in file "Lab5P1.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;		None               void
  6869 ;; Registers used:
  6870 ;;		None
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;Total ram usage:        0 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; This function calls:
  6883 ;;		Nothing
  6884 ;; This function is called by:
  6885 ;;		_Display_D2
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889                           	psect	text37
  6890  002F4A                     __ptext37:
  6891                           	opt stack 0
  6892  002F4A                     _D2_None:
  6893                           	opt stack 29
  6894                           
  6895                           ;Lab5P1.c: 233: PORTBbits.RB5 = 0;
  6896                           
  6897                           ;incstack = 0
  6898  002F4A  9A81               	bcf	3969,5,c	;volatile
  6899                           
  6900                           ;Lab5P1.c: 234: PORTBbits.RB6 = 0;
  6901  002F4C  9C81               	bcf	3969,6,c	;volatile
  6902                           
  6903                           ;Lab5P1.c: 235: PORTBbits.RB7 = 0;
  6904  002F4E  9E81               	bcf	3969,7,c	;volatile
  6905  002F50  0012               	return		;funcret
  6906  002F52                     __end_of_D2_None:
  6907                           	opt stack 0
  6908                           tblptru	equ	0xFF8
  6909                           tblptrh	equ	0xFF7
  6910                           tblptrl	equ	0xFF6
  6911                           tablat	equ	0xFF5
  6912                           prodh	equ	0xFF4
  6913                           prodl	equ	0xFF3
  6914                           postinc0	equ	0xFEE
  6915                           wreg	equ	0xFE8
  6916                           postdec1	equ	0xFE5
  6917                           fsr1l	equ	0xFE1
  6918                           indf2	equ	0xFDF
  6919                           postinc2	equ	0xFDE
  6920                           postdec2	equ	0xFDD
  6921                           fsr2h	equ	0xFDA
  6922                           fsr2l	equ	0xFD9
  6923                           status	equ	0xFD8
  6924                           
  6925 ;; *************** function _D2_Green *****************
  6926 ;; Defined at:
  6927 ;;		line 245 in file "Lab5P1.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;		None
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;		None               void
  6934 ;; Registers used:
  6935 ;;		None
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6945 ;;Total ram usage:        0 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_Display_D2
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text38
  6955  002F52                     __ptext38:
  6956                           	opt stack 0
  6957  002F52                     _D2_Green:
  6958                           	opt stack 29
  6959                           
  6960                           ;Lab5P1.c: 247: PORTBbits.RB5 = 0;
  6961                           
  6962                           ;incstack = 0
  6963  002F52  9A81               	bcf	3969,5,c	;volatile
  6964                           
  6965                           ;Lab5P1.c: 248: PORTBbits.RB6 = 1;
  6966  002F54  8C81               	bsf	3969,6,c	;volatile
  6967                           
  6968                           ;Lab5P1.c: 249: PORTBbits.RB7 = 0;
  6969  002F56  9E81               	bcf	3969,7,c	;volatile
  6970  002F58  0012               	return		;funcret
  6971  002F5A                     __end_of_D2_Green:
  6972                           	opt stack 0
  6973                           tblptru	equ	0xFF8
  6974                           tblptrh	equ	0xFF7
  6975                           tblptrl	equ	0xFF6
  6976                           tablat	equ	0xFF5
  6977                           prodh	equ	0xFF4
  6978                           prodl	equ	0xFF3
  6979                           postinc0	equ	0xFEE
  6980                           wreg	equ	0xFE8
  6981                           postdec1	equ	0xFE5
  6982                           fsr1l	equ	0xFE1
  6983                           indf2	equ	0xFDF
  6984                           postinc2	equ	0xFDE
  6985                           postdec2	equ	0xFDD
  6986                           fsr2h	equ	0xFDA
  6987                           fsr2l	equ	0xFD9
  6988                           status	equ	0xFD8
  6989                           
  6990 ;; *************** function _D2_Cyan *****************
  6991 ;; Defined at:
  6992 ;;		line 272 in file "Lab5P1.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;		None
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;		None
  6997 ;; Return value:  Size  Location     Type
  6998 ;;		None               void
  6999 ;; Registers used:
  7000 ;;		None
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7010 ;;Total ram usage:        0 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_Display_D2
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           	psect	text39
  7020  002F5A                     __ptext39:
  7021                           	opt stack 0
  7022  002F5A                     _D2_Cyan:
  7023                           	opt stack 29
  7024                           
  7025                           ;Lab5P1.c: 274: PORTBbits.RB5 = 0;
  7026                           
  7027                           ;incstack = 0
  7028  002F5A  9A81               	bcf	3969,5,c	;volatile
  7029                           
  7030                           ;Lab5P1.c: 275: PORTBbits.RB6 = 1;
  7031  002F5C  8C81               	bsf	3969,6,c	;volatile
  7032                           
  7033                           ;Lab5P1.c: 276: PORTBbits.RB7 = 1;
  7034  002F5E  8E81               	bsf	3969,7,c	;volatile
  7035  002F60  0012               	return		;funcret
  7036  002F62                     __end_of_D2_Cyan:
  7037                           	opt stack 0
  7038                           tblptru	equ	0xFF8
  7039                           tblptrh	equ	0xFF7
  7040                           tblptrl	equ	0xFF6
  7041                           tablat	equ	0xFF5
  7042                           prodh	equ	0xFF4
  7043                           prodl	equ	0xFF3
  7044                           postinc0	equ	0xFEE
  7045                           wreg	equ	0xFE8
  7046                           postdec1	equ	0xFE5
  7047                           fsr1l	equ	0xFE1
  7048                           indf2	equ	0xFDF
  7049                           postinc2	equ	0xFDE
  7050                           postdec2	equ	0xFDD
  7051                           fsr2h	equ	0xFDA
  7052                           fsr2l	equ	0xFD9
  7053                           status	equ	0xFD8
  7054                           
  7055 ;; *************** function _D2_Blue *****************
  7056 ;; Defined at:
  7057 ;;		line 258 in file "Lab5P1.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;		None
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;		None
  7062 ;; Return value:  Size  Location     Type
  7063 ;;		None               void
  7064 ;; Registers used:
  7065 ;;		None
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7075 ;;Total ram usage:        0 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; This function calls:
  7078 ;;		Nothing
  7079 ;; This function is called by:
  7080 ;;		_Display_D2
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text40
  7085  002F62                     __ptext40:
  7086                           	opt stack 0
  7087  002F62                     _D2_Blue:
  7088                           	opt stack 29
  7089                           
  7090                           ;Lab5P1.c: 260: PORTBbits.RB5 = 0;
  7091                           
  7092                           ;incstack = 0
  7093  002F62  9A81               	bcf	3969,5,c	;volatile
  7094                           
  7095                           ;Lab5P1.c: 261: PORTBbits.RB6 = 0;
  7096  002F64  9C81               	bcf	3969,6,c	;volatile
  7097                           
  7098                           ;Lab5P1.c: 262: PORTBbits.RB7 = 1;
  7099  002F66  8E81               	bsf	3969,7,c	;volatile
  7100  002F68  0012               	return		;funcret
  7101  002F6A                     __end_of_D2_Blue:
  7102                           	opt stack 0
  7103                           tblptru	equ	0xFF8
  7104                           tblptrh	equ	0xFF7
  7105                           tblptrl	equ	0xFF6
  7106                           tablat	equ	0xFF5
  7107                           prodh	equ	0xFF4
  7108                           prodl	equ	0xFF3
  7109                           postinc0	equ	0xFEE
  7110                           wreg	equ	0xFE8
  7111                           postdec1	equ	0xFE5
  7112                           fsr1l	equ	0xFE1
  7113                           indf2	equ	0xFDF
  7114                           postinc2	equ	0xFDE
  7115                           postdec2	equ	0xFDD
  7116                           fsr2h	equ	0xFDA
  7117                           fsr2l	equ	0xFD9
  7118                           status	equ	0xFD8
  7119                           
  7120 ;; *************** function _Display_D1 *****************
  7121 ;; Defined at:
  7122 ;;		line 168 in file "Lab5P1.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;  temperature     2    0[COMRAM] int 
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;		None
  7127 ;; Return value:  Size  Location     Type
  7128 ;;		None               void
  7129 ;; Registers used:
  7130 ;;		wreg, status,2, status,0, cstack
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7140 ;;Total ram usage:        2 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:    1
  7143 ;; This function calls:
  7144 ;;		_D1_Blue
  7145 ;;		_D1_Green
  7146 ;;		_D1_None
  7147 ;;		_D1_Red
  7148 ;;		_D1_White
  7149 ;; This function is called by:
  7150 ;;		_main
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text41
  7155  0028E6                     __ptext41:
  7156                           	opt stack 0
  7157  0028E6                     _Display_D1:
  7158                           	opt stack 29
  7159                           
  7160                           ;Lab5P1.c: 169: if(temperature <= 45) D1_None();
  7161                           
  7162                           ;incstack = 0
  7163  0028E6  BE02               	btfsc	Display_D1@temperature+1,7,c
  7164  0028E8  D006               	goto	l2632
  7165  0028EA  5002               	movf	Display_D1@temperature+1,w,c
  7166  0028EC  E107               	bnz	l2634
  7167  0028EE  0E2E               	movlw	46
  7168  0028F0  5C01               	subwf	Display_D1@temperature,w,c
  7169  0028F2  B0D8               	btfsc	status,0,c
  7170  0028F4  D003               	goto	l2634
  7171  0028F6                     l2632:
  7172  0028F6  ECBD  F017         	call	_D1_None	;wreg free
  7173  0028FA  D044               	goto	l149
  7174  0028FC                     l2634:
  7175                           
  7176                           ;Lab5P1.c: 170: else if(temperature >= 46 && temperature<= 55) D1_Red();
  7177  0028FC  BE02               	btfsc	Display_D1@temperature+1,7,c
  7178  0028FE  D011               	goto	l2640
  7179  002900  5002               	movf	Display_D1@temperature+1,w,c
  7180  002902  E104               	bnz	u2720
  7181  002904  0E2E               	movlw	46
  7182  002906  5C01               	subwf	Display_D1@temperature,w,c
  7183  002908  A0D8               	btfss	status,0,c
  7184  00290A  D00B               	goto	l2640
  7185  00290C                     u2720:
  7186  00290C  BE02               	btfsc	Display_D1@temperature+1,7,c
  7187  00290E  D006               	goto	l2638
  7188  002910  5002               	movf	Display_D1@temperature+1,w,c
  7189  002912  E107               	bnz	l2640
  7190  002914  0E38               	movlw	56
  7191  002916  5C01               	subwf	Display_D1@temperature,w,c
  7192  002918  B0D8               	btfsc	status,0,c
  7193  00291A  D003               	goto	l2640
  7194  00291C                     l2638:
  7195  00291C  ECB9  F017         	call	_D1_Red	;wreg free
  7196  002920  D031               	goto	l149
  7197  002922                     l2640:
  7198                           
  7199                           ;Lab5P1.c: 171: else if(temperature >= 56 && temperature<= 65) D1_Green();
  7200  002922  BE02               	btfsc	Display_D1@temperature+1,7,c
  7201  002924  D011               	goto	l2646
  7202  002926  5002               	movf	Display_D1@temperature+1,w,c
  7203  002928  E104               	bnz	u2740
  7204  00292A  0E38               	movlw	56
  7205  00292C  5C01               	subwf	Display_D1@temperature,w,c
  7206  00292E  A0D8               	btfss	status,0,c
  7207  002930  D00B               	goto	l2646
  7208  002932                     u2740:
  7209  002932  BE02               	btfsc	Display_D1@temperature+1,7,c
  7210  002934  D006               	goto	l2644
  7211  002936  5002               	movf	Display_D1@temperature+1,w,c
  7212  002938  E107               	bnz	l2646
  7213  00293A  0E42               	movlw	66
  7214  00293C  5C01               	subwf	Display_D1@temperature,w,c
  7215  00293E  B0D8               	btfsc	status,0,c
  7216  002940  D003               	goto	l2646
  7217  002942                     l2644:
  7218  002942  ECC1  F017         	call	_D1_Green	;wreg free
  7219  002946  D01E               	goto	l149
  7220  002948                     l2646:
  7221                           
  7222                           ;Lab5P1.c: 172: else if(temperature >= 66 && temperature <= 75) D1_Blue();
  7223  002948  BE02               	btfsc	Display_D1@temperature+1,7,c
  7224  00294A  D011               	goto	l2652
  7225  00294C  5002               	movf	Display_D1@temperature+1,w,c
  7226  00294E  E104               	bnz	u2760
  7227  002950  0E42               	movlw	66
  7228  002952  5C01               	subwf	Display_D1@temperature,w,c
  7229  002954  A0D8               	btfss	status,0,c
  7230  002956  D00B               	goto	l2652
  7231  002958                     u2760:
  7232  002958  BE02               	btfsc	Display_D1@temperature+1,7,c
  7233  00295A  D006               	goto	l2650
  7234  00295C  5002               	movf	Display_D1@temperature+1,w,c
  7235  00295E  E107               	bnz	l2652
  7236  002960  0E4C               	movlw	76
  7237  002962  5C01               	subwf	Display_D1@temperature,w,c
  7238  002964  B0D8               	btfsc	status,0,c
  7239  002966  D003               	goto	l2652
  7240  002968                     l2650:
  7241  002968  ECC5  F017         	call	_D1_Blue	;wreg free
  7242  00296C  D00B               	goto	l149
  7243  00296E                     l2652:
  7244                           
  7245                           ;Lab5P1.c: 173: else if(temperature >= 76) D1_White();
  7246  00296E  BE02               	btfsc	Display_D1@temperature+1,7,c
  7247  002970  D009               	goto	l149
  7248  002972  5002               	movf	Display_D1@temperature+1,w,c
  7249  002974  E104               	bnz	u2780
  7250  002976  0E4C               	movlw	76
  7251  002978  5C01               	subwf	Display_D1@temperature,w,c
  7252  00297A  A0D8               	btfss	status,0,c
  7253  00297C  D003               	goto	l149
  7254  00297E                     u2780:
  7255  00297E  ECB5  F017         	call	_D1_White	;wreg free
  7256  002982  D000               	goto	l149
  7257  002984                     l149:
  7258  002984  0012               	return		;funcret
  7259  002986                     __end_of_Display_D1:
  7260                           	opt stack 0
  7261                           tblptru	equ	0xFF8
  7262                           tblptrh	equ	0xFF7
  7263                           tblptrl	equ	0xFF6
  7264                           tablat	equ	0xFF5
  7265                           prodh	equ	0xFF4
  7266                           prodl	equ	0xFF3
  7267                           postinc0	equ	0xFEE
  7268                           wreg	equ	0xFE8
  7269                           postdec1	equ	0xFE5
  7270                           fsr1l	equ	0xFE1
  7271                           indf2	equ	0xFDF
  7272                           postinc2	equ	0xFDE
  7273                           postdec2	equ	0xFDD
  7274                           fsr2h	equ	0xFDA
  7275                           fsr2l	equ	0xFD9
  7276                           status	equ	0xFD8
  7277                           
  7278 ;; *************** function _D1_White *****************
  7279 ;; Defined at:
  7280 ;;		line 224 in file "Lab5P1.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;		None               void
  7287 ;; Registers used:
  7288 ;;		None
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;Total ram usage:        0 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_Display_D1
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text42
  7308  002F6A                     __ptext42:
  7309                           	opt stack 0
  7310  002F6A                     _D1_White:
  7311                           	opt stack 29
  7312                           
  7313                           ;Lab5P1.c: 226: PORTBbits.RB0 = 1;
  7314                           
  7315                           ;incstack = 0
  7316  002F6A  8081               	bsf	3969,0,c	;volatile
  7317                           
  7318                           ;Lab5P1.c: 227: PORTBbits.RB1 = 1;
  7319  002F6C  8281               	bsf	3969,1,c	;volatile
  7320                           
  7321                           ;Lab5P1.c: 228: PORTBbits.RB2 = 1;
  7322  002F6E  8481               	bsf	3969,2,c	;volatile
  7323  002F70  0012               	return		;funcret
  7324  002F72                     __end_of_D1_White:
  7325                           	opt stack 0
  7326                           tblptru	equ	0xFF8
  7327                           tblptrh	equ	0xFF7
  7328                           tblptrl	equ	0xFF6
  7329                           tablat	equ	0xFF5
  7330                           prodh	equ	0xFF4
  7331                           prodl	equ	0xFF3
  7332                           postinc0	equ	0xFEE
  7333                           wreg	equ	0xFE8
  7334                           postdec1	equ	0xFE5
  7335                           fsr1l	equ	0xFE1
  7336                           indf2	equ	0xFDF
  7337                           postinc2	equ	0xFDE
  7338                           postdec2	equ	0xFDD
  7339                           fsr2h	equ	0xFDA
  7340                           fsr2l	equ	0xFD9
  7341                           status	equ	0xFD8
  7342                           
  7343 ;; *************** function _D1_Red *****************
  7344 ;; Defined at:
  7345 ;;		line 203 in file "Lab5P1.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;		None
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;		None               void
  7352 ;; Registers used:
  7353 ;;		None
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7363 ;;Total ram usage:        0 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_Display_D1
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text43
  7373  002F72                     __ptext43:
  7374                           	opt stack 0
  7375  002F72                     _D1_Red:
  7376                           	opt stack 29
  7377                           
  7378                           ;Lab5P1.c: 205: PORTBbits.RB0 = 1;
  7379                           
  7380                           ;incstack = 0
  7381  002F72  8081               	bsf	3969,0,c	;volatile
  7382                           
  7383                           ;Lab5P1.c: 206: PORTBbits.RB1 = 0;
  7384  002F74  9281               	bcf	3969,1,c	;volatile
  7385                           
  7386                           ;Lab5P1.c: 207: PORTBbits.RB2 = 0;
  7387  002F76  9481               	bcf	3969,2,c	;volatile
  7388  002F78  0012               	return		;funcret
  7389  002F7A                     __end_of_D1_Red:
  7390                           	opt stack 0
  7391                           tblptru	equ	0xFF8
  7392                           tblptrh	equ	0xFF7
  7393                           tblptrl	equ	0xFF6
  7394                           tablat	equ	0xFF5
  7395                           prodh	equ	0xFF4
  7396                           prodl	equ	0xFF3
  7397                           postinc0	equ	0xFEE
  7398                           wreg	equ	0xFE8
  7399                           postdec1	equ	0xFE5
  7400                           fsr1l	equ	0xFE1
  7401                           indf2	equ	0xFDF
  7402                           postinc2	equ	0xFDE
  7403                           postdec2	equ	0xFDD
  7404                           fsr2h	equ	0xFDA
  7405                           fsr2l	equ	0xFD9
  7406                           status	equ	0xFD8
  7407                           
  7408 ;; *************** function _D1_None *****************
  7409 ;; Defined at:
  7410 ;;		line 196 in file "Lab5P1.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;		None
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;		None
  7415 ;; Return value:  Size  Location     Type
  7416 ;;		None               void
  7417 ;; Registers used:
  7418 ;;		None
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;Total ram usage:        0 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; This function calls:
  7431 ;;		Nothing
  7432 ;; This function is called by:
  7433 ;;		_Display_D1
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text44
  7438  002F7A                     __ptext44:
  7439                           	opt stack 0
  7440  002F7A                     _D1_None:
  7441                           	opt stack 29
  7442                           
  7443                           ;Lab5P1.c: 198: PORTBbits.RB0 = 0;
  7444                           
  7445                           ;incstack = 0
  7446  002F7A  9081               	bcf	3969,0,c	;volatile
  7447                           
  7448                           ;Lab5P1.c: 199: PORTBbits.RB1 = 0;
  7449  002F7C  9281               	bcf	3969,1,c	;volatile
  7450                           
  7451                           ;Lab5P1.c: 200: PORTBbits.RB2 = 0;
  7452  002F7E  9481               	bcf	3969,2,c	;volatile
  7453  002F80  0012               	return		;funcret
  7454  002F82                     __end_of_D1_None:
  7455                           	opt stack 0
  7456                           tblptru	equ	0xFF8
  7457                           tblptrh	equ	0xFF7
  7458                           tblptrl	equ	0xFF6
  7459                           tablat	equ	0xFF5
  7460                           prodh	equ	0xFF4
  7461                           prodl	equ	0xFF3
  7462                           postinc0	equ	0xFEE
  7463                           wreg	equ	0xFE8
  7464                           postdec1	equ	0xFE5
  7465                           fsr1l	equ	0xFE1
  7466                           indf2	equ	0xFDF
  7467                           postinc2	equ	0xFDE
  7468                           postdec2	equ	0xFDD
  7469                           fsr2h	equ	0xFDA
  7470                           fsr2l	equ	0xFD9
  7471                           status	equ	0xFD8
  7472                           
  7473 ;; *************** function _D1_Green *****************
  7474 ;; Defined at:
  7475 ;;		line 210 in file "Lab5P1.c"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;		None
  7478 ;; Auto vars:     Size  Location     Type
  7479 ;;		None
  7480 ;; Return value:  Size  Location     Type
  7481 ;;		None               void
  7482 ;; Registers used:
  7483 ;;		None
  7484 ;; Tracked objects:
  7485 ;;		On entry : 0/0
  7486 ;;		On exit  : 0/0
  7487 ;;		Unchanged: 0/0
  7488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7493 ;;Total ram usage:        0 bytes
  7494 ;; Hardware stack levels used:    1
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_Display_D1
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text45
  7503  002F82                     __ptext45:
  7504                           	opt stack 0
  7505  002F82                     _D1_Green:
  7506                           	opt stack 29
  7507                           
  7508                           ;Lab5P1.c: 212: PORTBbits.RB0 = 0;
  7509                           
  7510                           ;incstack = 0
  7511  002F82  9081               	bcf	3969,0,c	;volatile
  7512                           
  7513                           ;Lab5P1.c: 213: PORTBbits.RB1 = 1;
  7514  002F84  8281               	bsf	3969,1,c	;volatile
  7515                           
  7516                           ;Lab5P1.c: 214: PORTBbits.RB2 = 0;
  7517  002F86  9481               	bcf	3969,2,c	;volatile
  7518  002F88  0012               	return		;funcret
  7519  002F8A                     __end_of_D1_Green:
  7520                           	opt stack 0
  7521                           tblptru	equ	0xFF8
  7522                           tblptrh	equ	0xFF7
  7523                           tblptrl	equ	0xFF6
  7524                           tablat	equ	0xFF5
  7525                           prodh	equ	0xFF4
  7526                           prodl	equ	0xFF3
  7527                           postinc0	equ	0xFEE
  7528                           wreg	equ	0xFE8
  7529                           postdec1	equ	0xFE5
  7530                           fsr1l	equ	0xFE1
  7531                           indf2	equ	0xFDF
  7532                           postinc2	equ	0xFDE
  7533                           postdec2	equ	0xFDD
  7534                           fsr2h	equ	0xFDA
  7535                           fsr2l	equ	0xFD9
  7536                           status	equ	0xFD8
  7537                           
  7538 ;; *************** function _D1_Blue *****************
  7539 ;; Defined at:
  7540 ;;		line 217 in file "Lab5P1.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;		None
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;		None
  7545 ;; Return value:  Size  Location     Type
  7546 ;;		None               void
  7547 ;; Registers used:
  7548 ;;		None
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;Total ram usage:        0 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; This function calls:
  7561 ;;		Nothing
  7562 ;; This function is called by:
  7563 ;;		_Display_D1
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           	psect	text46
  7568  002F8A                     __ptext46:
  7569                           	opt stack 0
  7570  002F8A                     _D1_Blue:
  7571                           	opt stack 29
  7572                           
  7573                           ;Lab5P1.c: 219: PORTBbits.RB0 = 0;
  7574                           
  7575                           ;incstack = 0
  7576  002F8A  9081               	bcf	3969,0,c	;volatile
  7577                           
  7578                           ;Lab5P1.c: 220: PORTBbits.RB1 = 0;
  7579  002F8C  9281               	bcf	3969,1,c	;volatile
  7580                           
  7581                           ;Lab5P1.c: 221: PORTBbits.RB2 = 1;
  7582  002F8E  8481               	bsf	3969,2,c	;volatile
  7583  002F90  0012               	return		;funcret
  7584  002F92                     __end_of_D1_Blue:
  7585                           	opt stack 0
  7586                           tblptru	equ	0xFF8
  7587                           tblptrh	equ	0xFF7
  7588                           tblptrl	equ	0xFF6
  7589                           tablat	equ	0xFF5
  7590                           prodh	equ	0xFF4
  7591                           prodl	equ	0xFF3
  7592                           postinc0	equ	0xFEE
  7593                           wreg	equ	0xFE8
  7594                           postdec1	equ	0xFE5
  7595                           fsr1l	equ	0xFE1
  7596                           indf2	equ	0xFDF
  7597                           postinc2	equ	0xFDE
  7598                           postdec2	equ	0xFDD
  7599                           fsr2h	equ	0xFDA
  7600                           fsr2l	equ	0xFD9
  7601                           status	equ	0xFD8
  7602                           tblptru	equ	0xFF8
  7603                           tblptrh	equ	0xFF7
  7604                           tblptrl	equ	0xFF6
  7605                           tablat	equ	0xFF5
  7606                           prodh	equ	0xFF4
  7607                           prodl	equ	0xFF3
  7608                           postinc0	equ	0xFEE
  7609                           wreg	equ	0xFE8
  7610                           postdec1	equ	0xFE5
  7611                           fsr1l	equ	0xFE1
  7612                           indf2	equ	0xFDF
  7613                           postinc2	equ	0xFDE
  7614                           postdec2	equ	0xFDD
  7615                           fsr2h	equ	0xFDA
  7616                           fsr2l	equ	0xFD9
  7617                           status	equ	0xFD8
  7618                           
  7619                           	psect	rparam
  7620  0000                     tblptru	equ	0xFF8
  7621                           tblptrh	equ	0xFF7
  7622                           tblptrl	equ	0xFF6
  7623                           tablat	equ	0xFF5
  7624                           prodh	equ	0xFF4
  7625                           prodl	equ	0xFF3
  7626                           postinc0	equ	0xFEE
  7627                           wreg	equ	0xFE8
  7628                           postdec1	equ	0xFE5
  7629                           fsr1l	equ	0xFE1
  7630                           indf2	equ	0xFDF
  7631                           postinc2	equ	0xFDE
  7632                           postdec2	equ	0xFDD
  7633                           fsr2h	equ	0xFDA
  7634                           fsr2l	equ	0xFD9
  7635                           status	equ	0xFD8


Data Sizes:
    Strings     77
    Constant    118
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    120     120
    BANK0           128      0      10
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_4(CODE[23]), STR_3(CODE[24]), STR_2(CODE[16]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _init_UART->_OpenUSART
    ___ftdiv->___ftadd
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   54869
                                             97 COMRAM    23    23      0
                         _Display_D1
                         _Display_D2
                         _Display_D3
                _Display_Lower_Digit
                _Display_Upper_Digit
                           _Init_ADC
                          _Init_Tris
                 _Select_ADC_Channel
                         _WAIT_1_SEC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                       _get_full_ADC
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   38657
                                             63 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    9120
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8922
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3954
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1466
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     583
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     480
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     517
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3343
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3090
                                             45 COMRAM    12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2212
                                             57 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1943
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _WAIT_1_SEC                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Tris                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_Upper_Digit                                  1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Display_Lower_Digit                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Display_D3                                           2     0      2     119
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Display_D2                                           2     0      2     361
                                              0 COMRAM     2     0      2
                            _D2_Blue
                            _D2_Cyan
                           _D2_Green
                            _D2_None
                          _D2_Purple
                             _D2_Red
                           _D2_White
                          _D2_Yellow
 ---------------------------------------------------------------------------------
 (2) _D2_Yellow                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D2_White                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D2_Red                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D2_Purple                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D2_None                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D2_Green                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D2_Cyan                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D2_Blue                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_D1                                           2     0      2     229
                                              0 COMRAM     2     0      2
                            _D1_Blue
                           _D1_Green
                            _D1_None
                             _D1_Red
                           _D1_White
 ---------------------------------------------------------------------------------
 (2) _D1_White                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D1_Red                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D1_None                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D1_Green                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D1_Blue                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_D1
     _D1_Blue
     _D1_Green
     _D1_None
     _D1_Red
     _D1_White
   _Display_D2
     _D2_Blue
     _D2_Cyan
     _D2_Green
     _D2_None
     _D2_Purple
     _D2_Red
     _D2_White
     _D2_Yellow
   _Display_D3
   _Display_Lower_Digit
   _Display_Upper_Digit
   _Init_ADC
   _Init_Tris
   _Select_ADC_Channel
   _WAIT_1_SEC
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftneg
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _get_full_ADC
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       A       5        7.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     78      78       1       94.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      82      34        0.0%
DATA                 0      0      82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Mar 10 18:56:45 2022

                ___awdiv@sign 000C           ___wmul@multiplicand 0011                  ___ftadd@exp1 0039  
                ___ftadd@exp2 0038            __size_of_D2_Yellow 0008            __size_of_D2_Purple 0008  
                ___ftadd@sign 0037                           l121 2F00                           l115 2E50  
                         l134 2DF8                           l118 2E70                           l240 1BF2  
                         l129 2EB8                           l233 1E36                           l305 1812  
                         l149 2984                           l333 2C76                           l341 2E4A  
                         l174 2D82                           l334 2C78                           l167 2344  
                         l335 2C82                           l336 2C84                           l329 2C5C  
                         l338 2C9E                           l710 20DE                           l534 2A1A  
                         l287 1550                           l721 21A0                           l625 255E  
                         l730 21BC                           l706 20B4                           l634 254E  
                         l707 2232                           l547 2BBE                           l741 27EA  
                         l830 2B2C                           l559 2DBE                           l840 2C1E  
                         l666 28E4                           l738 281E                           l746 2454  
                         l770 2656                           l755 2444                           l764 2AB0  
                         l780 2E88                           l860 2CFE                           l748 23BC  
                         l677 28BC                           l749 23E4                           l791 273C  
                         l787 2D42               __end_of_D1_Blue 2F92               __end_of_D2_Blue 2F6A  
             __end_of_D2_Cyan 2F62                  ___awmod@sign 0006               __end_of_D1_None 2F82  
             __end_of_D2_None 2F52                           prod 000FF3                           wreg 000FE8  
                __CFG_LVP$OFF 000000                  ___ftdiv@cntr 0043                  ___ftdiv@sign 0048  
                __CFG_WDT$OFF 000000                          l2020 2830                          l2100 2164  
                        l2032 2884                          l2024 2840                          l2200 29D6  
                        l2042 28C4                          l2034 28A4                          l2026 284C  
                        l2114 21DA                          l2106 2188                          l2036 28B0  
                        l2028 286C                          l2124 220C                          l2108 2194  
                        l2212 2A00                          l2140 25A6                          l2134 257E  
                        l2048 28D6                          l2072 20EC                          l2216 2A10  
                        l2208 29F4                          l2240 2B82                          l2232 2B62  
                        l2136 2598                          l2320 1D32                          l2066 20C2  
                        l2162 2602                          l2154 25DA                          l2412 2406  
                        l2404 23F2                          l2252 2BB4                          l2244 2B98  
                        l2236 2B70                          l2228 2B54                          l2172 2630  
                        l2164 2608                          l2270 2C54                          l2262 2C42  
                        l2502 2A80                          l2094 2144                          l2078 20F8  
                        l2422 2430                          l2190 29AE                          l2238 2B7A  
                        l2158 25EC                          l2342 1940                          l2096 2150  
                        l2088 2120                          l2432 2466                          l2424 243E  
                        l2416 2416                          l2184 299C                          l2248 2BA4  
                        l2168 261A                          l2328 1DF6                          l2360 1B1C  
                        l2352 19F8                          l2282 2C6E                          l2274 2C60  
                        l2266 2C4C                          l2098 215C                          l2522 2676  
                        l2602 2CA6                          l2418 241C                          l2508 2AAC  
                        l2540 26D0                          l2604 2CB4                          l2460 24EC  
                        l2452 24BA                          l2196 29C4                          l2348 19E8  
                        l2710 2D7C                          l2702 2D54                          l2550 26FA  
                        l2438 2476                          l2382 2382                          l2198 29CE  
                        l2366 1BCE                          l2640 2922                          l2632 28F6  
                        l2704 2D58                          l2552 2708                          l2544 26E0  
                        l2472 2510                          l2464 24FC                          l2376 2364  
                        l2800 142C                          l2720 10EC                          l2650 2968  
                        l2634 28FC                          l2626 2DF2                          l2490 2D18  
                        l2546 26E6                          l2554 2712                          l2570 2AE2  
                        l2482 253A                          l2714 10D0                          l2652 296E  
                        l2644 2942                          l2660 224A                          l2708 2D78  
                        l2580 2B1C                          l2572 2AEA                          l2484 2548  
                        l2476 2520                          l2812 146C                          l2804 1438  
                        l2740 1172                          l2724 10F4                          l2646 2948  
                        l2638 291C                          l2670 2290                          l2902 275C  
                        l2558 272A                          l2590 2BE0                          l2478 2526  
                        l2830 153A                          l2822 1512                          l2726 1120  
                        l2718 10E0                          l2672 2296                          l2664 226A  
                        l2904 2776                          l2568 2AD4                          l2592 2BE8  
                        l2840 1570                          l2824 151E                          l2816 1488  
                        l2808 1468                          l2690 2308                          l2682 22DC  
                        l2666 2270                          l2658 2244                          l2498 2A4E  
                        l2850 1696                          l2834 1556                          l2770 129E  
                        l2684 22E2                          l2676 22B6                          l1892 2E9E  
                        l2908 2784                          l2596 2C0E                          l2588 2BD2  
                        l2852 16A2                          l2844 15C0                          l2828 152C  
                        l2780 1316                          l2772 12CE                          l2764 1268  
                        l2756 1204                          l2694 2328                          l2678 22BC  
                        l2950 2D9A                          l2870 16FC                          l2790 1386  
                        l2774 12DE                          l2696 232E                          l2688 2302  
                        l1896 2EB2                          l2928 27C4                          l2856 16B0  
                        l2792 13B4                          l2784 133A                          l2768 128E  
                        l2938 27F8                          l2882 173C                          l2874 1708  
                        l2786 1344                          l2794 13C2                          l2858 16BC  
                        l2962 1E4E                          l2892 17E2                          l2868 16F8  
                        l2886 1758                          l2878 1738                          l2798 1428  
                        l2894 17F6                          l2888 1764                          STR_1 10B6  
                        STR_2 10A6                          STR_3 1077                          STR_4 108F  
                        u3000 11AA                          u3005 11A0                          u2331 2356  
                        u2351 2374                          u3160 154A                          u2541 2668  
                        u3271 274E                          u2720 290C                          u2800 225A  
                        u2560 2694                          u1761 2080                          u3291 276C  
                        u1771 2094                  printf@tmpval 005A                          u2740 2932  
                        u2900 2318                          u2820 2280                          u2565 268C  
                        u2760 2958                          u2920 233E                          u2840 22A6  
                        u1971 2570                          u2780 297E                          u2860 22CC  
                        u1991 258E                          u2880 22F2                   main@intTmpF 0077  
                        _TRMT 007D61                          _main 1E38                  ___ftpack@arg 0001  
                main@Pvoltage 0068                  ___ftpack@exp 0004                ??_get_full_ADC 0003  
                        fsr2h 000FDA                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9              __end_of_D1_Green 2F8A              __end_of_D2_Green 2F5A  
                        prodh 000FF4                          prodl 000FF3              __end_of_D1_White 2F72  
                        start 0000              __end_of_D2_White 2F3A                  ___ftmul@cntr 0022  
                ___param_bank 000010                  ___ftmul@sign 0023                  ___fttol@exp1 0039  
                ___fttol@lval 0035                   ?_WAIT_1_SEC 0001                         ?_main 0001  
             __end_of___awdiv 2A1C               __end_of___ftadd 2234               __end_of___awmod 2BC0  
             __end_of___ftdiv 2820               __end_of___ftneg 2E96               __end_of___lldiv 2B3E  
             __end_of___ftmul 2658               ___awdiv@divisor 0009               __end_of___llmod 2C30  
             __end_of___ftsub 2D44               __end_of___fttol 273E               ___awdiv@counter 000B  
                       _RCSTA 000FAB                         _SPBRG 000FAF                         _PORTA 000F80  
                       _PORTB 000F81                         _PORTC 000F82                         _PORTD 000F83  
                       _PORTE 000F84                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TRISE 000F96  
                       _TXREG 000FAD                         _TXSTA 000FAC                  ___lltoft@exp 0011  
                  _Display_D1 28E6                    _Display_D2 2234                    _Display_D3 2D44  
               ___awtoft@sign 000C               __end_of_dpowers 1029                         _array 0080  
                       _scale 1814                 ___ftpack@sign 0005                         _putch 2EFC  
                main@num_step 0075                __CFG_BOREN$OFF 000000                         tablat 000FF5  
                       status 000FD8             __end_of_D2_Yellow 2F32             __end_of_D2_Purple 2F4A  
             __initialization 2DFA                  __end_of_main 2070      Display_Lower_Digit@digit 0001  
            __end_of_Init_ADC 2F2A                     ??_D1_Blue 0001                     ??_D2_Blue 0001  
                   ??_D2_Cyan 0001                     ??_D1_None 0001                     ??_D2_None 0001  
                      ??_main 0062                 ___fttol@sign1 0034                 __activetblptr 000002  
        __size_of__tdiv_to_l_ 0110   __end_of_Display_Lower_Digit 2ED2                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0              ___llmod@dividend 000E  
                      ?_scale 0024                        _ADRESH 000FC4                        _ADRESL 000FC3  
                      _D1_Red 2F72                        _D2_Red 2F3A              ___awdiv@dividend 0007  
            __end_of___awtoft 2DC0                        ?_putch 0001              __end_of___ftpack 28E6  
            __end_of___lltoft 2D00                        _OSCCON 000FD3                        _SPBRGH 000FB0  
         __size_of_WAIT_1_SEC 0024            __size_of_Init_Tris 0016              __end_of__powers_ 1077  
          __size_of_OpenUSART 0070                        ___ftge 2A1C                        ___wmul 2E24  
                   ??___awdiv 000B                     ??___ftadd 0034                     ??___awmod 0005  
                   ??___ftdiv 0040                     ??___ftneg 0004                     ??___lldiv 0009  
                   ??___ftmul 001B                     ??___llmod 0016                     ??___ftsub 0040  
                   ??___fttol 002F                        _fround 1BF4              ___awdiv@quotient 000D  
             ___awmod@divisor 0003               ___awmod@counter 0005                        _printf 10C6  
       ___ftmul@f3_as_product 001F          __end_of_get_full_ADC 2E72                     ?_D1_Green 0001  
                   ?_D2_Green 0001                  __mediumconst 0000                     ?_D1_White 0001  
                 ?_Display_D1 0001                   ?_Display_D2 0001                   ?_Display_D3 0001  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                   ?_D2_White 0001                        putch@c 0001                    __accesstop 0080  
     __end_of__initialization 2E1A                    ___ftadd@f1 002E                    ___ftadd@f2 0031  
                  ___ftge@ff1 0001                    ___ftge@ff2 0004                 ___rparam_used 000001  
                  ___ftdiv@f1 003A                    ___ftdiv@f2 003D                    ___ftdiv@f3 0044  
                  ___ftneg@f1 0001                    ___awtoft@c 0009                    ___ftmul@f1 0015  
                  ___ftmul@f2 0018                    ___ftsub@f1 003A                    ___ftsub@f2 003D  
                  ___fttol@f1 002B                __pcstackCOMRAM 0001                  __pidataBANK0 2F16  
                  ___lltoft@c 0009                 __end_of_scale 1BF4                 __end_of_putch 2F0A  
           __end_of_Init_Tris 2EE8                    __div_to_l_ 2456                    ??_D1_Green 0001  
                  ??_D2_Green 0001   __end_of_Display_Upper_Digit 2DFA         Display_D1@temperature 0001  
                  ??_D1_White 0001                    ??_D2_White 0001             __end_of_OpenUSART 2CA0  
             __div_to_l_@exp1 000C               __div_to_l_@cntr 000B                       ??_scale 0027  
                     ?_D1_Red 0001                       ?_D2_Red 0001               __div_to_l_@quot 0007  
                     ??_putch 0001                     ?_Init_ADC 0001            __size_of_init_UART 0014  
  __end_of_Select_ADC_Channel 2F16                 __div_to_l_@f1 0001                 __div_to_l_@f2 0004  
                     ?___ftge 0001           __size_of_Display_D1 00A0           __size_of_Display_D2 0112  
         __size_of_Display_D3 0040                       ?___wmul 000F                       _D1_Blue 2F8A  
                     ?_fround 0024                       _D2_Blue 2F62                  ??_WAIT_1_SEC 0001  
                     _D2_Cyan 2F5A                       _D1_None 2F7A                       _D2_None 2F4A  
                   ?___awtoft 0009                     ?___ftpack 0001                       ?_printf 0040  
   Select_ADC_Channel@channel 0001                     ?___lltoft 0009                   WAIT_1_SEC@j 0001  
       Display_D2@temperature 0001               __size_of_D1_Red 0008               __size_of_D2_Red 0008  
                  ??_Init_ADC 0001                main@intVoltage 0073            __end_of_WAIT_1_SEC 2EBA  
           __end_of__npowers_ 1050                       __Hparam 0000                    _scale$1215 0027  
                     __Lparam 0000                     _D2_Yellow 2F2A                     _D2_Purple 2F42  
             __size_of___ftge 0096                       ___awdiv 2986                       ___ftadd 2070  
                     ___awmod 2B3E                       ___ftdiv 273E                       ___ftneg 2E72  
                     ___lldiv 2AB2               __size_of___wmul 0028                       ___ftmul 2560  
                     ___llmod 2BC0                       ___ftsub 2D00                       ___fttol 2658  
       __size_of_get_full_ADC 0026                  __psmallconst 1000                       __pcinit 2DFA  
                  ??___awtoft 000C                    ??___ftpack 0006               __size_of_fround 0244  
                     __ramtop 1000                    ??___lltoft 000D                       __ptext0 1E38  
                     __ptext1 10C6                       __ptext2 1814                       __ptext3 2EFC  
                     __ptext4 1BF4                       __ptext5 2E24                       __ptext6 2560  
                     __ptext7 2B3E                       __ptext8 2986                       __ptext9 2346  
             __size_of_printf 074E             __end_of_init_UART 2EFC                   ?__div_to_l_ 0001  
                     _dpowers 1001              ___awmod@dividend 0001          end_of_initialization 2E1A  
               __Lmediumconst 0000                  _get_full_ADC 2E4C               ___lldiv@divisor 0005  
             ___lldiv@counter 000D                    ?_D2_Yellow 0001                    ?_D2_Purple 0001  
                   _RCSTAbits 000FAB                       printf@c 0061                       printf@f 0040  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE                __tdiv_to_l_@f1 0001                __tdiv_to_l_@f2 0004  
               ??__tdiv_to_l_ 0007                     _PORTBbits 000F81                  ??_Display_D1 0003  
                ??_Display_D2 0003                  ??_Display_D3 0003                     _TRISCbits 000F94  
              main@voltage_mv 0062             __size_of_D1_Green 0008             __size_of_D2_Green 0008  
           __size_of_D1_White 0008             __size_of_D2_White 0008                __end_of_D1_Red 2F7A  
              __end_of_D2_Red 2F42  __size_of_Display_Lower_Digit 0018                   ___ftdiv@exp 0047  
                   _TXSTAbits 000FAC                    main@temp_c 0065                    main@temp_f 006D  
          get_full_ADC@result 0005           __size_of__div_to_l_ 010A                   ___ftmul@exp 001E  
    Display_Upper_Digit@digit 0001            __end_of_Display_D1 2986            __end_of_Display_D2 2346  
          __end_of_Display_D3 2D84                __end_of___ftge 2AB2                __end_of___wmul 2E4C  
              __end_of_fround 1E38                __end_of_printf 1814           start_initialization 2DFA  
         __end_of__tdiv_to_l_ 2456                     _Init_Tris 2ED2                      ??_D1_Red 0001  
                    ??_D2_Red 0001                     _OpenUSART 2C30               ___llmod@divisor 0012  
            __CFG_OSC$INTIO67 000000             __size_of_Init_ADC 000A               ___llmod@counter 0016  
                 ??_D2_Yellow 0001                   ??_D2_Purple 0001                      ??___ftge 0007  
                    ??___wmul 0013                   __pdataBANK0 0080            _Select_ADC_Channel 2F0A  
                    ?_D1_Blue 0001                      ??_fround 0027                      ?_D2_Blue 0001  
                    ?_D2_Cyan 0001                      ?_D1_None 0001                      ?_D2_None 0001  
                    ??_printf 0045                    fround@prec 002D             __size_of___awtoft 003C  
           __size_of___ftpack 00C6           ?_Select_ADC_Channel 0001             __size_of___lltoft 0060  
                  ?_Init_Tris 0001  __size_of_Display_Upper_Digit 003A                    ?_OpenUSART 0001  
        ??_Select_ADC_Channel 0001                      ?___awdiv 0007                      ?___ftadd 002E  
                    ?___awmod 0001                      ?___ftdiv 003A                      ?___ftneg 0001  
                    ?___lldiv 0001                      ?___ftmul 0015                      ?___llmod 000E  
                    ?___ftsub 003A                     __npowers_ 1029                      ?___fttol 002B  
                 __tdiv_to_l_ 2346                  ??__div_to_l_ 0007                   __smallconst 1000  
                    _D1_Green 2F82                      _D2_Green 2F52                      _D1_White 2F6A  
                    _D2_White 2F32                     _init_UART 2EE8                __size_of_scale 03E0  
              __size_of_putch 000E                ___wmul@product 0013                      _PIE1bits 000F9D  
                    _PIR1bits 000F9E            __end_of__div_to_l_ 2560           _Display_Lower_Digit 2EBA  
            __size_of_D1_Blue 0008              __size_of_D2_Blue 0008                    _ADCON0bits 000FC2  
            __size_of_D2_Cyan 0008              __size_of_D1_None 0008              __size_of_D2_None 0008  
           ___wmul@multiplier 000F                    printf@flag 0050                    printf@fval 005E  
                  printf@prec 0052                     main@lower 006C                     main@upper 006B  
                  ?_init_UART 0001                   ??_Init_Tris 0001                     copy_data0 2E0E  
                    _Init_ADC 2F20          ?_Display_Lower_Digit 0001                   ??_OpenUSART 0003  
           Display_D3@voltage 0001               OpenUSART@config 0003                      __Hrparam 0000  
                    __Lrparam 0000              __size_of___awdiv 0096              __size_of___ftadd 01C4  
            __size_of___awmod 0082              __size_of___ftdiv 00E2              __size_of___ftneg 0024  
            __size_of___lldiv 008C              __size_of___ftmul 00F8              __size_of___llmod 0070  
            __size_of___ftsub 0044              __size_of___fttol 00E6                      ___awtoft 2D84  
                    ___ftpack 2820                   _fround$1213 002A                   _fround$1214 0027  
                    ___lltoft 2CA0                      __ptext10 2456                      __ptext11 2CA0  
                    __ptext20 2C30                      __ptext12 2BC0                      __ptext21 2E4C  
                    __ptext13 2AB2                      __ptext30 2EBA                      __ptext22 273E  
                    __ptext14 2658                      __ptext31 2D44                      __ptext23 2D84  
                    __ptext15 2D00                      __ptext40 2F62                      __ptext32 2234  
                    __ptext24 2820                      __ptext16 2070                      __ptext41 28E6  
                    __ptext33 2F2A                      __ptext25 2E96                      __ptext17 2E72  
                    __ptext42 2F6A                      __ptext34 2F32                      __ptext26 2F0A  
                    __ptext18 2A1C                      __ptext43 2F72                      __ptext35 2F3A  
                    __ptext27 2ED2                      __ptext19 2EE8                      __ptext44 2F7A  
                    __ptext36 2F42                      __ptext28 2F20                      __ptext45 2F82  
                    __ptext37 2F4A                      __ptext29 2DC0                      __ptext46 2F8A  
                    __ptext38 2F52                      __ptext39 2F5A                      __powers_ 1050  
       ??_Display_Lower_Digit 0001                 __size_of_main 0238                     printf@exp 0058  
                   printf@val 0054           _Display_Upper_Digit 2DC0                OpenUSART@spbrg 0001  
                 ??_init_UART 0004                      scale@scl 002A              __tdiv_to_l_@exp1 000F  
            __tdiv_to_l_@cntr 000E          ?_Display_Upper_Digit 0001              __tdiv_to_l_@quot 000A  
            ___lldiv@dividend 0001                      printf@ap 004E                    _WAIT_1_SEC 2E96  
                ?__tdiv_to_l_ 0001                   _printf$1216 004B              ___lldiv@quotient 0009  
             main@pvoltage_mv 0070         ??_Display_Upper_Digit 0001                 ?_get_full_ADC 0001  
 __size_of_Select_ADC_Channel 000C  
